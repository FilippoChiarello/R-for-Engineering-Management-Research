<document>

<filing_date>
2018-10-26
</filing_date>

<publication_date>
2020-03-26
</publication_date>

<priority_date>
2016-04-26
</priority_date>

<ipc_classes>
G06F17/16,G06F9/30,G06N3/04
</ipc_classes>

<assignee>
CAMBRICON TECHNOLOGIES COMPANY
</assignee>

<inventors>
LUO, TAO
LIU SHAOLI
CHEN, TIANSHI
CHEN, YUNJI
ZHI, TIAN
</inventors>

<docdb_family_id>
60161732
</docdb_family_id>

<title>
Apparatus and methods for vector operations
</title>

<abstract>
Aspects for vector operations in neural network are described herein. The aspects may include a vector caching unit configured to store a first vector and a second vector. The first vector may include one or more first elements and the second vector may include one or more second elements. The aspects may further include a computation module configured to calculate a cross product between the first vector and the second vector in response to an instruction.
</abstract>

<claims>
We claim:
1. An apparatus for vector operations in a neural network, comprising: a controller unit configured to receive a vector cross product instruction that indicates a first address of a first vector, a second address of a second vector, and an operation code that indicates an operation to calculate a cross product between the first vector and the second vector; and a computation module configured to receive the first vector and the second vector based on the first address and the second address in response to the vector cross product instruction, wherein the first vector includes one or more first elements, wherein the second vector includes one or more second elements, and wherein the computation module is configured to calculate a cross product between the first vector and the second vector in response to the vector cross product instruction.
2. The apparatus of claim 1, wherein the vector cross product instruction further includes a first length of the first vector, and wherein the computation module is configured to receive the first vector based on the first address and the first length.
3. The apparatus of claim 1, wherein the vector cross product instruction further includes a second length of the second vector, and wherein the computation module is configured to receive the second vector based on the second address and the second length.
4. The apparatus of claim 1, wherein the vector cross product instruction includes one or more register IDs that identify one or more registers configured to store the first address of the first vector, the second address of the second vector, a first length of the first vector, and a second length of the second vector.
5. The apparatus of claim 1, wherein the computation module comprises one or more norm calculator configured to calculate a first norm of the first vector and a second norm of the second vector.
6. The apparatus of claim 5, wherein the computation module comprises a sine calculator configured to calculate a sine vector for the first vector and the second vector.
7. The apparatus of claim 6, wherein the first norm of the first vector and the second norm of the second vector are directly transmitted to the sine calculator.
8. The apparatus of claim 6, wherein the computation module comprises one or more cross product multipliers configured to multiply the first norm, the second norm, and the sine vector to generate a cross product of the first vector and the second vector.
9. The apparatus of claim 8, wherein the first norm, the second norm, and the sine vector are directly transmitted from the norm calculator and the sine calculator to the cross product multipliers.
10. The apparatus of claim 5, wherein the one or more norm calculators comprise one or more multipliers configured to calculate one or more squares of the respective first elements and the respective second elements.
11. The apparatus of claim 5, wherein the one or more norm calculators further comprise: one or more adders configured to add the one or more squares of the first elements to generate an addition result; and a square root calculator configured to calculate a square root of the addition result as the norm of the first vector.
12. The apparatus of claim 5, wherein the one or more norm calculators further comprise: one or more adder configured to add the one or more squares of the second elements to generate an addition result; and a square root calculator configured to calculate a square root of the addition result as the norm of the second vector.
13. The apparatus of claim 1, further comprising one or more registers configured to store the first address of the first vector, a length of the first vector, the second address of the second vector, a length of the second vector, and an address for an output result.
14. The apparatus of claim 1, wherein the controller unit comprises an instruction obtaining module configured to obtain the vector cross product instruction from an instruction storage device.
15. The apparatus of claim 14, wherein the controller unit further comprises a decoding module configured to decode the vector cross product instruction into one or more micro-instructions.
16. The apparatus of claim 15, wherein the controller unit further comprises an instruction queue module configured to temporarily store the vector cross product instruction and one or more previously received instructions, and retrieve information corresponding to operation fields in the vector cross product instruction.
17. The apparatus of claim 16, wherein the controller unit further comprises an instruction register configured to store the information corresponding to the operation fields in the vector cross product instruction.
18. The apparatus of claim 17, wherein the controller unit further comprises a dependency processing unit configured to determine whether the vector cross product instruction has a dependency relationship with the one or more previously received instructions.
19. The apparatus of claim 18, wherein the controller unit further comprises a storage queue module configured to store the vector cross product instruction while the dependency processing unit is determining whether the vector cross product instruction has the dependency relationship with the one or more previously received instructions.
20. A method for vector operations in a neural network, comprising: receiving, by a controller unit, a vector cross product instruction that indicates a first address of a first vector, a second address of a second vector, and an operation code that indicates an operation to calculate a cross product between the first vector and the second vector; receiving, by a computation module, the first vector and the second vector based on the first address and the second address in response to the vector cross product instruction, wherein the first vector includes one or more first elements, and wherein the second vector includes one or more second elements; and calculating, by the computation module, a cross product between the first vector and the second vector in response to the vector cross product instruction.
21. The method of claim 20, wherein the vector cross product instruction further includes a first length of the first vector, and wherein the computation module is configured to receive the first vector based on the first address and the first length.
22. The method of claim 20, wherein the vector cross product instruction further includes a second length of the second vector, and wherein the computation module is configured to receive the second vector based on the second address and the second length.
23. The method of claim 20, wherein the vector cross product instruction includes one or more register IDs that identify one or more registers configured to store the first address of the first vector, the second address of the second vector, a first length of the first vector, and a second length of the second vector.
24. The method of claim 20, further comprising calculating, by one or more norm calculator of the computation module, a first norm of the first vector and a second norm of the second vector.
25. The method of claim 24, further comprising calculating, by a sine calculator of the computation module, a sine vector for the first vector and the second vector.
26. The method of claim 25, further comprising directly transmitting the first norm of the first vector and the second norm of the second vector to the sine calculator.
27. The method of claim 25, further comprising multiplying, by one or more cross product multipliers of the computation module, the first norm, the second norm, and the sine vector to generate a cross product of the first vector and the second vector.
28. The method of claim 27, further comprising directly transmitting the first norm, the second norm, and the sine vector from the norm calculator and the sine calculator to the cross product multipliers.
29. The method of claim 25, further comprising calculating, by one or more multipliers of the one or more norm calculators, one or more squares of the respective first elements and the respective second elements.
30. The method of claim 29, further comprising: adding, by one or more adders of the one or more norm calculators, the one or more squares of the first elements to generate an addition result; and calculating, by a square root calculator, a square root of the addition result as the norm of the first vector.
31. The method of claim 30, further comprising: adding, by one or more adders of the one or more norm calculators, the one or more squares of the second elements to generate an addition result; and calculating, by a square root calculator, a square root of the addition result as the norm of the second vector.
32. The method of claim 20, further comprising storing, by one or more registers, the first address of the first vector, a length of the first vector, the second address of the second vector, a length of the second vector, and an address for an output result.
33. The method of claim 20, further comprising retrieving, by a direct memory access unit, the first vector and the second vector from a storage device based on the starting address of the first vector, the length of the first vector, the starting address of the second vector, and the length of the second vector.
34. The method of claim 33, further comprising obtaining, by an instruction obtaining module of the controller unit, the vector cross product instruction from an instruction storage device.
35. The method of claim 34, further comprising decoding, by a decoding module of the controller unit, the vector cross product instruction into one or more micro-instructions.
36. The method of claim 35, further comprising temporarily storing, by an instruction queue module of the controller unit, the vector cross product instruction and one or more previously received instructions, and retrieve information corresponding to operation fields in the vector cross product instruction.
37. The method of claim 36, further comprising storing, by an instruction register of the controller unit, the information corresponding to the operation fields in the vector cross product instruction.
38. The method of claim 37, further comprising determining, by a dependency processing unit of the controller unit, whether the vector cross product instruction has a dependency relationship with the one or more previously received instructions.
39. The method of claim 38, further comprising storing, by a storage queue module of the controller unit, the vector cross product instruction while the dependency processing unit is determining whether the vector cross product instruction has the dependency relationship with the one or more previously received instructions.
</claims>
</document>
