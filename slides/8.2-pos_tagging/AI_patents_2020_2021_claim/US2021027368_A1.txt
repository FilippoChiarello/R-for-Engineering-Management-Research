<document>

<filing_date>
2020-07-17
</filing_date>

<publication_date>
2021-01-28
</publication_date>

<priority_date>
2019-07-22
</priority_date>

<ipc_classes>
G06F17/18,G06F40/205,G06F9/54,G06N20/00,G06Q40/04
</ipc_classes>

<assignee>
REFINITIV US ORGANIZATION
</assignee>

<inventors>
CORDES, Zachary
</inventors>

<docdb_family_id>
71784355
</docdb_family_id>

<title>
INTELLIGENT MULTI-LEG TRANSACTION SYSTEMS AND METHODS
</title>

<abstract>
Computer-readable media, systems and methods may improve performance efficiency of generating custom position data of multi-leg transactions. For example, a system may receive a request to generate a custom multi-leg transaction involving variable ratios that may be evaluated against historical data derived from electronically traded commodities. Responsive to the request, the system may execute a computational workflow that applies rules to parse encoded futures symbols of the multi-leg transaction, build timeseries for historical years based on the input and the historical data and generate a GUI portion that may be transmitted to the user device via the interface. In some examples, the system may use a classifier to identify time intervals that are similar to one another for purposes of a given multi-leg transaction. The classifier may include a rule-based classifier that applies decisioning rules or a machine-learning (ML) classifier that is trained using training datasets.
</abstract>

<claims>
1. A computer system to improve customization of spread contracts, the computer system comprising: a processor programmed to: receive, from a user device, a request specifying a plurality of futures symbols of a multi-leg transaction, a ratio indicating a long or short position for each of the plurality of futures symbols in the multi-leg transaction, and one or more input years to assess how the multi-leg transaction would have performed in the one or more input years, wherein each futures symbol from among the plurality of futures symbols encodes a respective futures contract; apply a symbol parsing rule that specifies an encoding of futures symbols; decode one or more asset identifiers, an expiration month, and an expiration year from the futures symbols based on the applied symbol parsing rule; build a set of historical futures symbols based on the decoded one or more asset identifiers, the expiration month, and the one or more input years, each historical futures symbol among the set of historical futures symbols encoding a respective expired futures contract; access historical data based on the set of historical futures symbols; for each input year, generate a timeseries for the set of historical futures symbols for each input year based on the historical data; generate a graphical user interface (GUI) portion based on the timeseries generated for each input year; and transmit the GUI portion to the user device.
2. The computer system of claim 1, wherein to generate the GUI portion, the processor is further programmed to: for each input year from among the one or more input years: multiply each timeseries with a respective ratio of the request; generate a position value for each day in the historical data for the input year; and generate a chart comprising data points based on the position value for each day in the historical data for the input year.
3. The computer system of claim 1, wherein to access the historical data, the processor is further programmed to: generate an Application Programming Interface (API) call based on each historical futures symbol; transmit the API call to a data service; and receive the historical data from the data service based on the API call.
4. The computer system of claim 1, wherein the processor is further programmed to: access one or templates each specifying a predefined transaction comprising one or more futures contracts and a ratio of each of the one or more futures contracts for the predefined transaction; provide the one or more templates to the user device; and wherein to receive the request, the processor is programmed to receive a selection of a first template that specifies the plurality of futures symbols and the ratio indicating a long or short position for each of the plurality of futures symbols.
5. The computer system of claim 4, wherein the one or more templates comprise general templates generated based on a predefined set of commonly used transactions.
6. The computer system of claim 4, wherein the one or more templates comprise user-specific templates generated based on a session log that stores previous input from a user and are specifically provided to the user when the user is logged on.
7. The computer system of claim 1, wherein to generate the GUI portion, the processor is further programmed to: generate a set of statistical analysis including high, low, and average daily trade close values based on the timeseries.
8. The computer system of claim 1, wherein to generate the GUI portion, the processor is further programmed to: provide formatted data corresponding to a position value for each day in the historical data for the one or more input years to an agent operating at the user device, the agent rendering the GUI based on the formatted data.
9. The computer system of claim 8, wherein the processor is further programmed to: receive a second request comprising an update to the request; identify new data to be analyzed based on the request and the second request; and provide only the new data to the user device.
10. The computer system of claim 1, wherein the processor is further programmed to: determine, based on a machine-learning (ML) classifier, a level of similarity of historical years to a current year with respect to the plurality of futures symbols.
11. The computer system of claim 1, wherein the processor is further programmed to: determine, based on a rules-based classifier, a level of similarity of historical years to a current year with respect to the plurality of futures symbols.
12. A method, comprising: receiving, by a processor, from a user device, a request specifying a plurality of futures symbols of a multi-leg transaction, a ratio indicating a long or short position for each of the plurality of futures symbols in the multi-leg transaction, and one or more input years to assess how the multi-leg transaction would have performed in the one or more input years, wherein each futures symbol from among the plurality of futures symbols encodes a respective futures contract; applying, by the processor, a symbol parsing rule that specifies an encoding of futures symbols; decoding, by the processor, one or more asset identifiers, an expiration month, and an expiration year from the futures symbols based on the applied symbol parsing rule; building, by the processor, a set of historical futures symbols based on the decoded one or more asset identifiers, the expiration month, and the one or more input years, each historical futures symbol among the set of historical futures symbols encoding a respective expired futures contract; accessing, by the processor, historical data based on the set of historical futures symbols; for each input year, generating, by the processor, a timeseries for the set of historical futures symbols for each input year based on the historical data; generating, by the processor, a graphical user interface (GUI) portion based on the timeseries generated for each input year; and transmitting, by the processor, the GUI portion to the user device.
13. The method of claim 12, wherein generating the GUI portion comprises: for each input year from among the one or more input years: multiplying each timeseries with a respective ratio of the request; generating a position value for each day in the historical data for the one or more input years; and generating a chart comprising data points based on the position value for each day in the historical data for the input year.
14. The method of claim 12, wherein accessing the historical data comprises: generating an Application Programming Interface (API) call based on each historical futures symbol; transmitting the API call to a data service; and receiving the historical data from the data service based on the API call.
15. The method of claim 12, further comprising: accessing one or templates each specifying a predefined transaction comprising one or more futures contracts and a ratio of each of the one or more futures contracts for the predefined transaction; providing the one or more templates to the user device; and wherein to receiving the request comprises receiving a selection of a first template that specifies the plurality of futures symbols and the ratio indicating a long or short position for each of the plurality of futures symbols.
16. The method of claim 12, wherein generating the GUI portion comprises: generating a set of statistical analysis including high, low, and average daily trade close values based on the timeseries.
17. The method of claim 12, wherein generating the GUI portion comprises: providing formatted data corresponding to the position value for each day in the historical data for the one or more input years to an agent operating at the user device, the agent rendering the GUI based on the formatted data.
18. The method of claim 17, further comprising: receiving a second request comprising an update to the input; identifying new data to be analyzed based on the request and the second request; and providing the new data to the user device.
19. The method of claim 12, further comprising: determining, based on a machine-learning (ML) classifier, a level of similarity of historical years to a current year with respect to the plurality of futures symbols.
20. The method of claim 12, further comprising: determining, based on a rules-based classifier, a level of similarity of historical years to a current year with respect to the plurality of futures symbols.
</claims>
</document>
