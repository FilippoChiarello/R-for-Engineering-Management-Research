<document>

<filing_date>
2020-01-14
</filing_date>

<publication_date>
2020-05-14
</publication_date>

<priority_date>
2017-10-30
</priority_date>

<ipc_classes>
G06F11/34,G06F9/54,G06N20/00
</ipc_classes>

<assignee>
SIGOPT
</assignee>

<inventors>
CLARK, SCOTT
JOHNSON, ALEXANDRA
HAYES, PATRICK
</inventors>

<docdb_family_id>
66243880
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR IMPLEMENTING AN INTELLIGENT APPLICATION PROGRAM INTERFACE FOR AN INTELLIGENT OPTIMIZATION PLATFORM
</title>

<abstract>
Systems and methods for implementing an application programming interface (API) that controls operations of a machine learning tuning service for tuning a machine learning model for improved accuracy and computational performance includes an API that is in control communication the tuning service that: executes a first API call function that includes an optimization work request that sets tuning parameters for tuning hyperparameters of a machine learning model; and initializes an operation of distinct tuning worker instances of the service that each execute distinct tuning tasks for tuning the hyperparameters; executes a second API call function that identifies raw values for the hyperparameters; and generates suggestions comprising proposed hyperparameter values selected from the plurality of raw values for each of the hyperparameters; and executes a third API call function that returns performance metrics relating to a real-world performance of the subscriber machine learning model executed with the proposed hyperparameter values.
</abstract>

<claims>
1. A system implementing an application programming interface for tuning one or more hyperparameters of a model, the system comprising: an intelligent application programming interface (API) of a model tuning service that: implements a tuning of hyperparameters of a model of a subscriber to the model tuning service based on identifying a tuning work request, the implementing including: executing the tuning work request comprising a plurality of tuning parameters for tuning the hyperparameters of the model, and controlling a plurality of distinct tuning worker instances that each perform distinct tuning tasks for tuning the hyperparameters of the model, wherein each of the plurality of distinct tuning worker instances selectively operates at least one API tuning source of a plurality of distinct API tuning sources of the model tuning service for tuning the hyperparameters of the model.
2. The system according to claim 1, wherein the tuning of the hyperparameters includes performing a plurality of distinct tuning trials for producing a plurality of potential hyperparameter values for the model.
3. The system according to claim 2, wherein a number of tuning trials performed by the model tuning service is set based on a tuning budget value set within the tuning work request.
4. The system according to claim 1, wherein the model of the subscriber relates to an external model having an algorithmic structure unknown to the model tuning service.
5. The system according to claim 1, wherein a subscriber to the model tuning service creates the tuning work request via the intelligent API.
6. The system according to claim 5, wherein the tuning work request, as defined by the subscriber, includes: (i) an identification of one or more hyperparameters of the model that the subscriber desires to tune with the model tuning service; (ii) tuning bounds that define a bounded range of values that each of a plurality of raw hyperparameter values can occupy during a tuning trial; and (iii) a tuning budget that defines a number of suggestions of proposed hyperparameter values the subscriber desires for the model.
7. The system according to claim 1, wherein the model tuning service builds a proxy model of the model of the subscriber when an algorithmic structure of the model of the subscriber is unknown.
8. The system according to claim 7, wherein the model tuning service tests a performance of each of a plurality of raw hyperparameter values generated for the model by using each of the plurality of raw hyperparameter values as input into a structure of the proxy model.
9. The system according to claim 8, wherein the model tuning service identifies a subset of the plurality of raw hyperparameter values based on the testing performance.
10. The system according to claim 7, wherein building the proxy model includes: (i) selecting one of the plurality of distinct API tuning sources; (ii) using the selected distinct API tuning source to generate the proxy model based at least on data associated with the hyperparameters of the model.
11. The system according to claim 1, wherein implementing the tuning further includes: identifying a plurality of raw hyperparameter values for the model generated by each of the plurality of distinct API tuning sources.
12. The system according to claim 11, wherein the intelligent API returns to the subscriber one or more distinct suggestions based on the plurality of raw hyperparameter values of the model, wherein the one or more distinct suggestions include proposed hyperparameter values for the model selected from the plurality of raw hyperparameter values of the model.
13. The system according to claim 1, wherein the hyperparameters of the model include one or more parameters of the model includes parameters (i) having values that are set before a training or a learning process applied to the model and (ii) having values that are not derived during the training or the learning process.
14. The system according to claim 1, wherein the model tuning service: builds the proxy model based on an API request from the subscriber.
15. The system according to claim 1, wherein the model tuning service: sets a mode of operation of the model tuning service that is selected from a plurality of distinct modes of operation, wherein the mode of operation of the model tuning service is automatically changed based on a tuning budget of the tuning work request.
16. A method implementing an application programming interface for tuning one or more hyperparameters of a model, the method comprising: implementing an intelligent application programming interface (API) of a model tuning service that: implements a tuning of hyperparameters of a model of a subscriber to the model tuning service based on identifying a tuning work request, the implementing including: executing the tuning work request comprising a plurality of tuning parameters for tuning the hyperparameters of the model, and controlling a plurality of distinct tuning worker instances that each perform distinct tuning tasks for tuning the hyperparameters of the model, wherein each of the plurality of distinct tuning worker instances selectively operates at least one API tuning source of a plurality of distinct API tuning sources of the model tuning service for tuning the hyperparameters of the model.
17. The method according to claim 16, wherein the model tuning service builds a proxy model of the model of the subscriber when an algorithmic structure of the model of the subscriber is unknown.
18. The method according to claim 17, wherein the model tuning service tests a performance of each of a plurality of raw hyperparameter values generated for the model by using each of the plurality of raw hyperparameter values as input into a structure of the proxy model.
19. The method according to claim 16, wherein identifying a plurality of raw hyperparameter values for the model generated by one or more of the plurality of distinct API tuning sources; selecting a subset of the plurality of raw hyperparameter values based on a testing of each of the plurality of raw hyperparameter values.
20. The method according to claim 16, wherein setting one or more switching conditions that, when satisfied, switches a mode of operation of the model tuning service from a first mode of a plurality of distinct modes of operation to a second mode of the plurality of distinct modes of operation, wherein the model tuning service tunes the hyperparameters of the model differently in the second mode of operation than in the first mode of operation.
</claims>
</document>
