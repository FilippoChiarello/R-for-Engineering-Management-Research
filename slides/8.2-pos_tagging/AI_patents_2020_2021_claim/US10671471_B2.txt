<document>

<filing_date>
2018-02-12
</filing_date>

<publication_date>
2020-06-02
</publication_date>

<priority_date>
2018-02-12
</priority_date>

<ipc_classes>
G06F11/00,G06F11/07
</ipc_classes>

<assignee>
CA
</assignee>

<inventors>
GIRAL, ERHAN
GUPTA, SMRATI
</inventors>

<docdb_family_id>
67542316
</docdb_family_id>

<title>
Topology-based feature selection for anomaly detection
</title>

<abstract>
Instead of attempting to scan all metric measurements of a distributed application, an anomaly detector intelligently selects instances of metrics from the universe of metric instances available for the distributed application to detect anomalies. Intelligent feature selection allows the anomaly detector to efficiently and reliably detect anomalies for a distributed application. The intelligent selection is guided by execution paths of transactions of the distributed application, and the execution paths are determined from a topology of the distributed application. The anomaly detector scans the incoming time-series data of the selected metric instances by transaction type and determines whether the scanned measurements across the selected metric instances form a pattern correlated with anomalous behavior.
</abstract>

<claims>
1. A method comprising: determining an execution path for a transaction type of a distributed application, wherein the execution path indicates a plurality of components of the distributed application; based on the execution path, determining that a first component of the plurality of components is of a first component type indicated in a first model for anomaly detection, wherein the first model indicates the first component type, a first plurality of metrics of the first component type, and a behavior of the first plurality of metrics that has been correlated to a named application anomaly; based on determining that the first component is of the first component type indicated in the first model, scanning first time-series measurements of the first plurality of metrics collected from the first component, wherein scanning the first time-series measurements comprises, temporally reading the first time-series measurements, wherein collection of the first the time-series measurements is ongoing; based on reading t of the first time-series measurements, analyzing the t first time-series measurements to determine whether the t first time series measurements exhibit the behavior correlated to the named application anomaly, wherein t is a number of observations of the first plurality of metrics that can form the behavior, by evaluating the t first time-series measurements against a set of conditions that represent the behavior, wherein the set of conditions relate to at least one of changes in direction of multiple of the t first time-series measurements with respect to each other, rate of change of multiple of the t first time-series measurements with respect to each other, frequency of directional changes in multiple of the t first time-series measurements with respect to each other, and changes in multiple of the t first time-series measurements with respect to a condition independent of the t first time-series measurements; and based on a determination that t of the first time-series measurements exhibit the behavior correlated to the named application anomaly, generating an event indicating detection of an anomaly for the distributed application.
2. The method of claim 1, further comprising setting a scanner to scan the first time-series measurements of the first plurality of metrics of the first component.
3. The method of claim 2, wherein setting the scanner comprises configuring the scanner with an identifier of the first component and indications of the first plurality of metrics.
4. The method of claim 3 further comprising determining the identifier of the first component of the execution path.
5. The method of claim 1, wherein temporally reading the first time-series measurements of the first plurality of metrics of the first component comprises accessing a repository that comprises measurements of a second plurality of metrics across the distributed application, wherein the first plurality of metrics is a subset of the second plurality of metrics.
6. The method of claim 1, wherein analyzing the t first time-series measurements to determine whether the t first time-series measurements exhibit the behavior correlated to the named application anomaly comprises determining whether the t first time-series measurements fit a set of one or more functions that represent the behavior.
7. The method of claim 1, wherein analyzing the t first time-series measurements to determine whether the t first time-series measurements exhibit the behavior correlated to the named application anomaly comprises: generating first multivariate analysis covariance values from the t first time-series measurements; and determining variance between the first multivariate analysis covariance values and second multivariate analysis covariance values indicated in the first anomaly model as representing the behavior.
8. One or more non-transitory machine-readable media having program code for topology-based feature selection to detect anomalies in a distributed application, the program code comprising instructions to: determine an execution path for a distributed application, wherein the execution path indicates a plurality of components of the distributed application; based on the execution path, determine which component or components of the plurality of components is of a component type indicated in an anomaly model, wherein the anomaly model indicates a component type, a plurality of blame metrics for the component type, and a behavior of the plurality of blame metrics; for each component determined to be of a component type indicated in the anomaly model, scan time-series measurements of the plurality of blame metrics indicated in the anomaly model that have been collected for the component, wherein the instructions to scan the time-series measurements comprise instructions to, read the time-series measurements, wherein collection of the time-series measurements is ongoing; based on reading t of the time-series measurements, analyze the t time-series measurements to determine whether the t time series measurements exhibit the behavior indicated in the anomaly model, wherein t is a number of observations of the plurality of blame metrics that can form the behavior, by evaluating the t first time-series measurements against a set of conditions that represent the behavior, wherein the set of conditions relate to at least one of changes in direction of multiple of the t first time-series measurements with respect to each other, rate of change of multiple of the t first time-series measurements with respect to each other, frequency of directional changes in multiple of the t first time-series measurements with respect to each other, and changes in multiple of the t first time-series measurements with respect to a condition independent of the t first time-series measurements; and based on a determination that t of the time-series measurements exhibit the behavior, generate an event indicating detection of an anomaly for the distributed application.
9. The non-transitory machine-readable media of claim 8, wherein the anomaly model indicates an anomaly name that has been correlated to the behavior indicated in the anomaly model, wherein the instructions to generate the event comprise instructions to generate the event with the anomaly name.
10. The non-transitory machine-readable media of claim 8, wherein the program code further comprises instructions to instantiate scanner code to scan the time-series measurements of the plurality of blame metrics of a component, wherein the scanner code comprises the instructions to scan.
11. The non-transitory machine-readable media of claim 10, wherein the instructions to instantiate the scanner code to scan the time-series measurements of the plurality of blame metrics of a component comprises instructions to instantiate the scanner code with arguments comprising an identifier of the component and indications of the plurality of blame metrics.
12. The non-transitory machine-readable media of claim 11, wherein the program code further comprises instructions to determine the identifier of the component of the execution path.
13. The non-transitory machine-readable media of claim 8, wherein the instructions to read the time-series measurements of the plurality of blame metrics of a component comprise instructions to access a repository that comprises measurements of a plurality of metrics across the distributed application, wherein the plurality of blame metrics is a subset of the plurality of metrics.
14. The non-transitory machine-readable media of claim 8, wherein the instructions to analyze the t time-series measurements to determine whether the t time-series measurements exhibit the behavior comprise instructions to determine whether the t time-series measurements fit a set of one or more functions that represent the behavior.
15. The non-transitory machine-readable media of claim 8, wherein the instructions to analyze the t time-series measurements to determine whether the t time-series measurements exhibit the behavior indicated in the anomaly model comprise instructions to: generate first multivariate analysis covariance values from the t time-series measurements; and determine variance between the first multivariate analysis covariance values and second multivariate analysis covariance values indicated in the anomaly model as representing the behavior.
16. An apparatus comprising: a processor; a network interface; and a machine-readable medium having program code stored thereon, the program code executable by the processor to cause the apparatus to: determine an execution path for a distributed application, wherein the execution path indicates a plurality of components of the distributed application; based on the execution path, determine which component or components of the plurality of components is of a component type indicated in each of a plurality of anomaly models, wherein each anomaly model indicates a component type, a plurality of blame metrics for the component type, and a behavior of the plurality of blame metrics; and for each component determined to be of a component type indicated in at least one of the plurality of anomaly models, scan time-series measurements of the plurality of blame metrics indicated in the anomaly model that have been collected for the component, wherein the instructions to scan the time-series measurements comprise instructions to: temporally read, via the network interface, the time-series measurements, wherein collection of the time-series measurements is ongoing, based on reading t of the time-series measurements, analyze the t time-series measurements to determine whether the t time series measurements exhibit the behavior indicated in the anomaly model, wherein t is a number of observations of the plurality of blame metrics that can form the behavior, by generating first multivariate analysis covariance values from the t time-series measurements and determining variance between the first multivariate analysis covariance values and second multivariate analysis covariance values indicated in the anomaly model as representing the behavior, and based on a determination that t of the time-series measurements exhibit the behavior, generate an event indicating detection of an anomaly for the distributed application.
17. The apparatus of claim 16, wherein each of the plurality of anomaly models indicates an anomaly name that has been correlated to the behavior indicated in the anomaly model, wherein the instructions to generate the event comprise instructions to generate the event with an anomaly name.
18. The apparatus of claim 16, wherein the instructions to analyze the t time-series measurements to determine whether the t time-series measurements exhibit the behavior comprise instructions to determine whether the t time-series measurements fit a set of one or more functions that represent the behavior.
</claims>
</document>
