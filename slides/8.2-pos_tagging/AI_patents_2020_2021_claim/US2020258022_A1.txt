<document>

<filing_date>
2020-04-28
</filing_date>

<publication_date>
2020-08-13
</publication_date>

<priority_date>
2015-02-23
</priority_date>

<ipc_classes>
G06N20/00,G06Q10/06,G06Q10/10
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
SINHA, SIDDHARTHA
</inventors>

<docdb_family_id>
55485340
</docdb_family_id>

<title>
SELECTIVE REMINDERS TO COMPLETE INTERRUPTED TASKS
</title>

<abstract>
Methods, apparatus, systems, and computer-readable media are provided for obtaining user interaction data indicative of interaction by a user with an application executing on a computing device, determining, based on the user interaction data, a likelihood that the user failed to complete a task the user started with the application executing on the computing device, and selectively causing, based on the likelihood, a task-completion reminder to be presented to the user in a manner selected based at least in part on historical reminder consumption.
</abstract>

<claims>
1. A method implemented using one or more processors, comprising: obtaining user interaction data indicative of interaction by a user with a computing device executing an application, wherein the user interaction data includes a sequence of screenshots captured by the computing device; detecting occurrence of an event that suggests the user has been interrupted while performing a task associated with the application, wherein the detecting includes applying a machine learning classifier to the sequence of screenshots, and the machine learning classifier is trained on past sequences of screenshots known to be associated with incomplete tasks; in response to the detecting, and some time interval after the detecting, causing the task reminder to be output to the user at the same computing device or a different computing device.
2. The method of claim 1, wherein the event comprises one or more of a transition between applications on the computing device, passage of at least an inactivity time interval without user interaction with the application, and transition of the computing device to a standby state.
3. The method of claim 1, wherein the detecting is based on historical application interaction data associated with the application.
4. The method of claim 1, further comprising modifying the machine learning classifier based on feedback from the user indicative of accuracy of the detecting.
5. The method of claim 1, wherein the detecting further comprises performing natural language processing on text input by the user to the application to identify one or more sentence fragments authored by the user using the application.
6. The method of claim 1, further comprising selecting the manner for outputting the reminder to the user using another trained machine learning classifier.
7. The method of claim 6, wherein the another machine learning classifier is trained on a plurality of instances of reminder consumption forming part of the historical task reminder consumption data.
8. The method of claim 6, further comprising further training the another machine learning classifier based on feedback indicative of consumption by the user of the reminder.
9. The method of claim 1, wherein the interaction occurs during a sliding window time interval associated with a sliding window of recent user interaction data that is maintained over a timeline of user interaction data.
10. A system comprising one or more processors and memory storing instructions that, in response to execution of the instructions by the one or more processors, cause the one or more processors to: obtain user interaction data indicative of interaction by a user with a computing device executing an application, wherein the user interaction data includes a sequence of screenshots captured by the computing device; detect occurrence of an event that suggests the user has been interrupted while performing a task associated with the application, wherein the detecting includes applying a machine learning classifier to the sequence of screenshots, and the machine learning classifier is trained on past sequences of screenshots known to be associated with incomplete tasks; in response to the detection, and some time interval after the occurrence, cause the task reminder to be output to the user at the same computing device or a different computing device.
11. The system of claim 10, wherein the event comprises one or more of a transition between applications on the computing device, passage of at least an inactivity time interval without user interaction with the application, and transition of the computing device to a standby state.
12. The system of claim 10, wherein the detection is based on historical application interaction data associated with the application.
13. The system of claim 10, further comprising instructions to modify the machine learning classifier based on feedback from the user indicative of accuracy of the detection.
14. The system of claim 10, further comprising instructions to perform natural language processing on text input by the user to the application to identify one or more sentence fragments authored by the user using the application.
15. The system of claim 10, further comprising instructions to select the manner for outputting the reminder to the user using another trained machine learning classifier.
16. The system of claim 15, wherein the another machine learning classifier is trained on a plurality of instances of reminder consumption forming part of the historical task reminder consumption data.
17. The system of claim 1, further comprising instructions to modify the another machine learning classifier based on feedback indicative of consumption by the user of the reminder.
18. The system of claim 10, wherein the interaction occurs during a sliding window time interval associated with a sliding window of recent user interaction data that is maintained over a timeline of user interaction data.
19. A non-transitory computer-readable medium comprising instructions that, in response to execution of the instructions by a processor, cause the processor to: obtain user interaction data indicative of interaction by a user with a computing device executing an application, wherein the user interaction data includes a sequence of screenshots captured by the computing device; detect occurrence of an event that suggests the user has been interrupted while performing a task associated with the application, wherein the detecting includes applying a machine learning classifier to the sequence of screenshots, and the machine learning classifier is trained on past sequences of screenshots known to be associated with incomplete tasks; in response to the detection, and some time interval after the occurrence, cause the task reminder to be output to the user at the same computing device or a different computing device.
20. The at least one non-transitory computer-readable medium of claim 19, wherein the event comprises one or more of a transition between applications on the computing device, passage of at least an inactivity time interval without user interaction with the application, and transition of the computing device to a standby state.
</claims>
</document>
