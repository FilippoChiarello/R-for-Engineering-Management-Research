<document>

<filing_date>
2017-04-10
</filing_date>

<publication_date>
2020-11-17
</publication_date>

<priority_date>
2017-04-10
</priority_date>

<ipc_classes>
G06F17/27,G06F40/16,G06F40/216,G06F40/284,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
GUO, YUFAN
</inventors>

<docdb_family_id>
63711605
</docdb_family_id>

<title>
Local abbreviation expansion through context correlation
</title>

<abstract>
Local abbreviation expansion is provided through context correlation. In various embodiments, an abbreviation within a phrase is identified. The abbreviation is surrounded by a plurality of words. The words surrounding the abbreviation are provided to a trained neural network. The neural network includes a projection layer adapted to map inputs of the neural network onto a continuous vector space. An expansion is received from the trained neural network. The expansion corresponds to the abbreviation based on the surrounding plurality of words.
</abstract>

<claims>
1. A method comprising: identifying an abbreviation within a phrase, the abbreviation being surrounded by a plurality of words; providing the plurality of words to a trained neural network, the neural network comprising a projection layer adapted to map inputs of the neural network onto a continuous vector space; and determining, at the trained neural network, an expansion corresponding to the abbreviation, the expansion based on the surrounding plurality of words.
2. The method of claim 1, wherein identifying the abbreviation comprises locating the abbreviation in a predetermined list of abbreviations.
3. The method of claim 1, wherein identifying the abbreviation comprises failing to locate the abbreviation in a predetermined list of terms.
4. The method of claim 1, wherein identifying the abbreviation comprises locating the abbreviation as a prefix of one of a predetermined list of terms.
5. The method of claim 1, further comprising training the neural network, wherein training comprises: providing a plurality of words to the neural network, the plurality of words surrounding an expansion within a phrase; receiving an output from the neural network; and adjusting synaptic weights of the neural network based on a comparison between the expansion and the output.
6. The method of claim 5, wherein the synaptic weights are adjusted by backpropagation.
7. A system comprising: a data store; a computing node comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor of the computing node to cause the processor to perform a method comprising: reading a phrase from the data store; identifying an abbreviation within the phrase, the abbreviation being surrounded by a plurality of words; providing the plurality of words to a trained neural network, the neural network comprising a projection layer adapted to map inputs of the neural network onto a continuous vector space; and determining, at the trained neural network an expansion corresponding to the abbreviation, the expansion based on the surrounding plurality of words.
8. The system of claim 7, wherein identifying the abbreviation comprises locating the abbreviation in a predetermined list of abbreviations.
9. The system of claim 7, wherein identifying the abbreviation comprises failing to locate the abbreviation in a predetermined list of terms.
10. The system of claim 7, wherein identifying the abbreviation comprises locating the abbreviation as a prefix of one of a predetermined list of terms.
11. The system of claim 7, the method further comprising training the neural network, wherein training comprises: providing a plurality of words to the neural network, the plurality of words surrounding an expansion within a phrase; receiving an output from the neural network; and adjusting synaptic weights of the neural network based on a comparison between the expansion and the output.
12. The system of claim 11, wherein the synaptic weights are adjusted by backpropagation.
13. A computer program product for abbreviation expansion, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor to cause the processor to perform a method comprising: identifying an abbreviation within a phrase, the abbreviation being surrounded by a plurality of words; providing the plurality of words to a trained neural network, the neural network comprising a projection layer adapted to map inputs of the neural network onto a continuous vector space; and determining, at the trained neural network an expansion corresponding to the abbreviation, the expansion based on the surrounding plurality of words.
14. The computer program product of claim 13, wherein identifying the abbreviation comprises locating the abbreviation in a predetermined list of abbreviations.
15. The computer program product of claim 13, wherein identifying the abbreviation comprises failing to locate the abbreviation in a predetermined list of terms.
16. The computer program product of claim 13, wherein identifying the abbreviation comprises locating the abbreviation as a prefix of one of a predetermined list of terms.
17. The computer program product of claim 13, the method further comprising training the neural network, wherein training comprises: providing a plurality of words to the neural network, the plurality of words surrounding an expansion within a phrase; receiving an output from the neural network; and adjusting synaptic weights of the neural network based on a comparison between the expansion and the output.
18. The computer program product of claim 17, wherein the synaptic weights are adjusted by backpropagation.
</claims>
</document>
