<document>

<filing_date>
2018-05-31
</filing_date>

<publication_date>
2020-11-26
</publication_date>

<priority_date>
2018-05-31
</priority_date>

<ipc_classes>
G06F8/33,G06F9/455,G06F9/50
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
EBSTYNE, MICHAEL JOHN
ESCOS, PEDRO URBINA
SHALEV, EMANUEL
ZARGAHI, KAMRAN
MICHELOTTI, Stephen
</inventors>

<docdb_family_id>
66821383
</docdb_family_id>

<title>
Distributed Computing System with a Synthetic Data as a Service Scene Assembly Engine
</title>

<abstract>
Various embodiments, methods and systems for implementing a distributed computing system scene assembly engine are provided. Initially, a selection of a first synthetic data asset and a selection of a second synthetic data asset are received from a distributed synthetic data as a service (SDaaS) integrated development environment (IDE). A synthetic data asset is associated with asset-variation parameters and scene-variation parameters, the asset-variation parameters and scene-variation parameters are programmable for machine-learning. Values for generating a synthetic data scene are received. The values correspond to asset-variation parameters or scene-variation parameters. Based on the values, the synthetic data scene is generated using the first synthetic data asset and the second synthetic data asset.
</abstract>

<claims>
1. A system for implementing a distributed computing system scene assembly engine, the system comprising: a scene assembly engine configured to: receive a selection of a first synthetic data asset and a selection of a second synthetic data asset from a distributed synthetic data as a service (SDaaS) integrated development environment (IDE), wherein a synthetic data asset is associated with asset-variation parameters and scene-variation parameters, wherein the asset-variation parameters and scene-variation parameters are programmable for machine-learning; receive values for generating a synthetic data scene, wherein the values correspond to asset-variation parameters or scene-variation parameters; and based on the values, generate the synthetic data scene using the first synthetic data asset and the second synthetic data asset.
2. The system of claim 1, wherein the SDaaS IDE supports a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
3. The system of claim 1, wherein the values are associated with generating training datasets based on intrinsic-parameter variation and extrinsic-parameter variation, wherein intrinsic-parameter variation and extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
4. The system of claim 1, further comprising a scene assembly engine client configured to: receive a query for a synthetic data asset, wherein the query is received via the SDaaS IDE; generate a query result synthetic data asset; and cause display of the synthetic data scene generated based on the query result synthetic data.
5. The system of claim 1, wherein the scene assembly engine is further configured to generate a synthetic data scene profile comprising the first synthetic data asset, the second synthetic data asset, and the values corresponding to the asset-variation parameters or scene-variation parameters.
6. The system of claim 1, wherein the scene assembly engine is further configured to generate the synthetic data scene based on values for scene generation received from at least two scene assembly engine clients.
7. The system of claim 1, wherein the scene assembly engine is further configured to store the synthetic data scene in association with a scene preview and metadata.
8. One or more computer-readable media storing instructions thereon for implementing a distributed computing system scene assembly engine, which, when executed by one or more processors of a computing device cause the computing device to perform actions comprising: receiving a first source asset from a first distributed Synthetic Data as a Service (SDaaS) upload interface; receiving a second source asset from a second a distributed SDaaS upload interface; receiving a query for a synthetic data asset, wherein the query is received via a first scene assembly engine client; accessing a query result synthetic data asset, wherein the query result synthetic data asset is associated with asset-variation parameters and scene-variation parameters, wherein the asset-variation parameters and scene-variation parameters are programmable for machine-learning; receiving a first set of values for generating a synthetic scene associated with the query result synthetic data asset, wherein the first set of values correspond to asset-variation parameters or scene-variation parameters; accessing a synthetic data scene generated based on the first set of values, wherein the synthetic data scene comprises the query result synthetic data; and causing display of the synthetic data scene.
9. The media of claim 8, wherein the SDaaS IDE supports a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
10. The media of claim 8, wherein the actions further comprise receiving a second set of values for generating the synthetic scene, wherein the second set of values are received from a second scene assembly engine client.
11. The media of claim 10, wherein the actions further comprise: receiving, at the first scene assembly engine client, additional values for generating the synthetic data scene substantially simultaneously via the first scene assembly engine client and the second scene assembly engine client; and causing display of the synthetic data scene generated based on the additional values.
12. The media of claim 8, wherein the first set of values are associated with generating training datasets based on intrinsic-parameter variation and extrinsic-parameter variation, wherein intrinsic-parameter variation and extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
13. The media of claim 8, wherein the synthetic data scene is associated with a synthetic data scene profile comprising the first synthetic data asset, the second synthetic data asset, and the values corresponding to the asset-variation parameters or scene-variation parameters.
14. The media of claim 8, wherein causing display of the synthetic data scene comprises causing display of a scene preview and metadata.
15. A computer-implemented method for implementing a distributed computing system scene assembly engine, the method comprising: receiving a selection of a synthetic data asset from a distributed synthetic data as a service (SDaaS) integrated development environment (IDE), wherein the synthetic data asset is associated with asset-variation parameters and scene-variation parameters, wherein the asset-variation parameters and scene-variation parameters are programmable for machine-learning; receiving values for generating a synthetic data scene, wherein the values correspond to asset-variation parameters or scene-variation parameters; and based on the values, generating the synthetic data scene using the synthetic data asset.
16. The method of claim 15, wherein the SDaaS IDE supports a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
17. The method of claim 15, wherein the values are associated with generating training datasets based on intrinsic-parameter variation and extrinsic-parameter variation, wherein intrinsic-parameter variation and extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
18. The method of claim 15, the method further comprising generating a synthetic data scene profile comprising the second synthetic data asset, and the values corresponding to the asset-variation parameters or scene-variation parameters.
19. The method of claim 15, wherein generating the synthetic data scene is based on values for scene generation received from at least two scene assembly engine clients.
20. The method of claim 15, the method further comprising storing the synthetic data scene in association with a scene preview and metadata.
</claims>
</document>
