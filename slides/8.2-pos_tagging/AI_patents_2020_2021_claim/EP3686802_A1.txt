<document>

<filing_date>
2020-01-14
</filing_date>

<publication_date>
2020-07-29
</publication_date>

<priority_date>
2019-01-28
</priority_date>

<ipc_classes>
G06F11/26,G06K9/62
</ipc_classes>

<assignee>
STRADVISION
</assignee>

<inventors>
JANG, TAEWOONG
KIM, KYE-HYEON
NAM, WOONHYUN
SUNG, MYUNGCHUL
KIM, INSU
KIM, HAK-KYOUNG
CHO, HOJIN
JE, HONGMO
KIM, YONGJOONG
RYU, WOOJU
BOO, SUKHOON
YEO, DONGHUN
JEONG, KYUNGJOONG
</inventors>

<docdb_family_id>
67477698
</docdb_family_id>

<title>
METHOD AND DEVICE FOR GENERATING TEST PATTERNS AND SELECTING OPTIMIZED TEST PATTERNS AMONG THE TEST PATTERNS IN ORDER TO VERIFY INTEGRITY OF CONVOLUTION OPERATIONS TO ENHANCE FAULT TOLERANCE AND FLUCTUATION ROBUSTNESS IN EXTREME SITUATIONS
</title>

<abstract>
A method for generating one or more test patterns and selecting optimized test patterns among the test patterns to verify an integrity of convolution operations is provided for fault tolerance, fluctuation robustness in extreme situations, functional safety of the convolution operations, and annotation cost reduction. The method includes steps of: a computing device (a) instructing a pattern generating unit to generate the test patterns by using a certain function such that saturation does not occur while at least one original CNN applies the convolution operations to the test patterns; (b) instructing a pattern evaluation unit to generate each of evaluation scores of each of the test patterns by referring to said each of the test patterns and one or more parameters of the original CNN; and (c) instructing a pattern selection unit to select the optimized test patterns among the test patterns by referring to the evaluation scores.
</abstract>

<claims>
1. A method for generating one or more test patterns and selecting one or more optimized test patterns among the test patterns in order to verify an integrity of one or more convolution operations, comprising steps of: (a) a computing device instructing at least one pattern generating unit to generate the test patterns by using a certain function such that saturation does not occur while at least one original Convolution Neural Network (CNN) applies the convolution operations to the test patterns inputted thereto; (b) the computing device instructing at least one pattern evaluation unit to generate each of evaluation scores of each of the test patterns by referring to said each of the test patterns and one or more parameters of the original CNN; and (c) the computing device instructing at least one pattern selection unit to select the optimized test patterns among the test patterns by referring to the evaluation scores.
2. The method of Claim 1, wherein the method further comprises a step of:
(d) the computing device instructing at least one integrity verification module to generate at least one extended input by integrating at least one original input and at least one specific optimized test pattern, among the optimized test patterns, and, if the original CNN generates at least one verification output by using the extended input, the computing device instructing the integrity verification module to verify an integrity of the original CNN by referring to the verification output.
3. The method of Claim 1, wherein, at the step of (a), the computing device instructs the pattern generating unit (i) to generate one or more preliminary test patterns by using the certain function, (ii) to input the preliminary test patterns to the original CNN and classify each of the preliminary test patterns into a first type and a second type, wherein the first type represents a first part of the preliminary test patterns which has undergone the saturation when the original CNN applies the convolution operations thereto, and wherein the second type represents a second part of the preliminary test patterns which has not undergone the saturation when the original CNN applies the convolution operations thereto, and (iii) to generate the test patterns including the preliminary test patterns of the second part and one or more adjusted preliminary test patterns, wherein the adjusted preliminary test patterns are generated by adjusting at least part of values included in the preliminary test patterns of the first part so that the saturation does not occur while the original CNN applies the convolution operations to the adjusted preliminary test patterns.
4. The method of Claim 3, wherein, while the original CNN applies the convolution operations to a specific preliminary test pattern among the preliminary test patterns, the computing device instructs the pattern generating unit to determine whether the specific preliminary test pattern belongs to the first type or the second type by referring to information on whether the saturation occurs or not at least one of (i) whenever at least one result value of one or more weight operations on specific values included in the specific preliminary test pattern is added to one or more previous result values of the weight operations on one or more values before the specific values and (ii) whenever one or more bias operations are applied to a total sum of all result values.
5. The method of Claim 1, wherein the step of (b) includes steps of: (b1) the computing device instructing the pattern evaluation unit to generate one or more specific changed test patterns, which are one or more results of changing each bit included in a specific test pattern among the test patterns; and (b2) the computing device, if the convolution operations are applied to the specific changed test patterns and the specific test pattern by the original CNN, instructing the pattern evaluation unit to generate at least one specific evaluation score of the specific test pattern by calculating a frequency of each of the results of the convolution operations on the specific changed test patterns being same as at least one result of the convolution operations on the specific test pattern.
6. The method of Claim 1, wherein, at the step of (b), the computing device instructs the pattern evaluation unit (i) to calculate difference values between a result of one or more weight operations, applied by the original CNN, on a specific test pattern among the test patterns and a result of the weight operations on a changed specific test pattern generated by changing each of bits of the specific test pattern, (ii) to determine whether each of the difference values is included in its corresponding specific range where a result of the convolution operations on the changed specific test pattern is not different from a result of the convolution operations on the specific test pattern, and (iii) to generate a specific evaluation score of the specific test pattern by calculating a frequency of each of the difference values being included in its corresponding specific range.
7. The method of Claim 6, wherein, at the step of (b), if a specific bit among the bits of the specific test pattern is changed, the computing device instructs the pattern evaluation unit to determine at least one specific detailed evaluation score, corresponding to the specific bit, included in the specific evaluation score by referring to a ratio of a subset to specific difference values, wherein the specific difference values correspond to the specific bit, outputted from each of output channels, and wherein the subset is selected among the specific difference values in case the subset is included in its corresponding specific range.
8. The method of Claim 1, wherein the step of (b) includes steps of: (b1) the computing device instructing the pattern evaluation unit to generate one or more changed CNNs, which are one or more results of changing each bit included in the parameters of the original CNN; and (b2) the computing device, if the changed CNNs apply one or more changed convolution operations to a specific test pattern among the test patterns, and if the original CNN applies the convolution operations to the specific test pattern, instructing the pattern evaluation unit to generate a specific evaluation score of the specific test pattern by calculating a frequency of each result of the changed convolution operations, applied by each of the changed CNNs, on the specific test pattern being same as a result of the convolution operations on the specific test pattern.
9. The method of Claim 1, wherein, at the step of (b), the computing device instructs the pattern evaluation unit (i) to calculate difference values, each of which corresponds to each bit included in the parameters of the original CNN, between a result of one or more weight operations applied to a specific test pattern, among the test patterns, by the original CNN and one or more results of one or more changed weight operations applied to the specific test pattern by one or more changed CNNs generated by changing each bit included in the parameters of the original CNN , (ii) to determine whether each of the difference values is included in its corresponding specific range where the results of the changed weight operations do not affect a result of the convolution operations on the specific test pattern, and (iii) to generate a specific evaluation score of the specific test pattern by calculating a frequency of each of the difference values being included in its corresponding specific range.
10. The method of Claim 9, wherein, at the step of (b), if the changed CNN is generated by changing at least one specific bit included in a specific convolution parameter among the parameters of the original CNN, the computing device instructs the pattern evaluation unit to determine a specific detailed evaluation score, corresponding to the specific bit, included in the specific evaluation score by referring to a ratio of a subset of specific difference values between the result of the weight operations applied to the specific test pattern by the original CNN and the results of the changed weight operations on the specific test pattern by the changed CNNs, wherein the specific difference values correspond to the specific bit, and wherein the subset is selected among the specific difference values in case the subset is included in its corresponding specific range.
11. The method of Claim 1, wherein, at the step of (a), the certain function is a function of at least one random number generator, and the computing device instructs the pattern generating unit to generate the test patterns by using one or more random numbers generated by the function of the random number generator.
12. The method of Claim 1, wherein, at the step of (a), the saturation is a case where absolute values of at least part among one or more detailed result values of one or more detailed operation processes included in the convolution operations on the test patterns are larger than their corresponding threshold numbers, wherein each of the threshold numbers corresponding to each of the detailed result values is a maximum absolute value that can be represented in the number of bits assigned to said each of the detailed result values.
13. The method of Claim 1, wherein, at the step of (b), the computing device instructs the pattern evaluation unit to generate a specific evaluation score of a specific test pattern among the test patterns by referring to a result of the convolution operations on at least one specific single bit which is changed, wherein the specific single bit is selected according to a uniform probability among bits included in the specific test pattern and bits included in the parameters of the original CNN.
14. A computing device for generating one or more test patterns and selecting one or more optimized test patterns among the test patterns in order to verify an integrity of one or more convolution operations, comprising: at least one memory that stores instructions; and at least one processor configured to execute the instructions to perform processes of: (I) instructing at least one pattern generating unit to generate the test patterns by using a certain function such that saturation does not occur while at least one original Convolution Neural Network (CNN) applies the convolution operations to the test patterns inputted thereto, (II) instructing at least one pattern evaluation unit to generate each of evaluation scores of each of the test patterns by referring to said each of the test patterns and one or more parameters of the original CNN, and (III) instructing at least one pattern selection unit to select the optimized test patterns among the test patterns by referring to the evaluation scores.
15. The computing device of Claim 14, wherein the processor further performs a process of: (IV) instructing at least one integrity verification module to generate at least one extended input by integrating at least one original input and at least one specific optimized test pattern, among the optimized test patterns, and, if the original CNN generates at least one verification output by using the extended input, the computing device instructing the integrity verification module to verify an integrity of the original CNN by referring to the verification output.
</claims>
</document>
