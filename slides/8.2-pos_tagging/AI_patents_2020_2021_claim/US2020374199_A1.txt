<document>

<filing_date>
2019-09-11
</filing_date>

<publication_date>
2020-11-26
</publication_date>

<priority_date>
2019-05-20
</priority_date>

<ipc_classes>
H04L12/24,H04L12/26,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
BATOUKOV, ROMAN
AGHAJANYAN, SUREN
ARRABOLU, SAI SANKALP
PRONSKA, Anastasiia
POTTHAST, III, Thomas William
MORMAN, John Anthony
</inventors>

<docdb_family_id>
73456413
</docdb_family_id>

<title>
TECHNIQUES FOR CORRELATING SERVICE EVENTS IN COMPUTER NETWORK DIAGNOSTICS
</title>

<abstract>
Examples described herein generally relate to receiving a query context for service events occurring on one or more networks, determining, based on the query context, a set of service events occurring on the one or more networks, querying multiple layers of a multiple-layer relational graph to determine one or more other service events having a defined relationship with the set of service events at one or more of the multiple layers, where the multiple layers include a configuration layer, an observation layer, and learned layer, defining relationships between services or service events, and indicating, via a user interface and in response to the query context, the one or more other service events.
</abstract>

<claims>
1. A computer-implemented method for detecting related service events in a network diagnostic application, comprising: receiving a query context for service events occurring on one or more networks; determining, based on the query context, a set of service events occurring on the one or more networks; querying multiple layers of a multiple-layer relational graph to determine one or more other service events having a defined relationship with the set of service events at one or more of the multiple layers, wherein the multiple layers include a configuration layer defining configured relationships between services or service events, an observation layer defining observed relationships between services or service events, and learned layer defining algorithmically-determined relationships between services or service events; and indicating, via a user interface and in response to the query context, the one or more other service events.
2. The computer-implemented method of claim 1, further comprising generating the configuration layer based on relationships between services as defined in a stored configuration.
3. The computer-implemented method of claim 1, further comprising generating the observation layer based on relationships between services determined based on monitoring network traffic to detect services communicating with one another.
4. The computer-implemented method of claim 1, further comprising generating the observation layer based on relationships between services determined based on monitoring user behavior to detect services observed in diagnosing another service.
5. The computer-implemented method of claim 1, further comprising generating the learned layer based on relationships between services determined based on performing anomaly detection on key services.
6. The computer-implemented method of claim 1, further comprising determining a metric based on results of querying the multiple layers, wherein indicating the other service events is based at least in part on the metric.
7. The computer-implemented method of claim 6, wherein determining the metric is based on applying one or more weights to a result metric for each layer.
8. A computing device for detecting related service events in a network diagnostic application, comprising: a memory storing one or more parameters or instructions for identifying related service events from a service event repository; and at least one processor coupled to the memory, wherein the at least one processor is configured to: receive a query context for service events occurring on one or more networks; determine, based on the query context, a set of service events occurring on the one or more networks; query multiple layers of a multiple-layer relational graph to determine one or more other service events having a defined relationship with the set of service events at one or more of the multiple layers, wherein the multiple layers include a configuration layer defining configured relationships between services or service events, an observation layer defining observed relationships between services or service events, and learned layer defining algorithmically-determined relationships between services or service events; and indicate, via a user interface and in response to the query context, the one or more other service events.
9. The computing device of claim 8, wherein the at least one processor is further configured to generate the configuration layer based on relationships between services as defined in a stored configuration.
10. The computing device of claim 8, wherein the at least one processor is further configured to generate the observation layer based on relationships between services determined based on monitoring network traffic to detect services communicating with one another.
11. The computing device of claim 8, wherein the at least one processor is further configured to generate the observation layer based on relationships between services determined based on monitoring user behavior to detect services observed in diagnosing another service.
12. The computing device of claim 8, wherein the at least one processor is further configured to generate the learned layer based on relationships between services determined based on performing anomaly detection on key services.
13. The computing device of claim 8, wherein the at least one processor is further configured to determine a metric based on results of querying the multiple layers, wherein the at least one processor is configured to indicate the other service events is based at least in part on the metric.
14. The computing device of claim 13, wherein the at least one processor is configured to determine the metric based on applying one or more weights to a result metric for each layer.
15. A non-transitory computer-readable medium, comprising code executable by one or more processors for detecting related service events in a network diagnostic application, the code comprising code for: receiving a query context for service events occurring on one or more networks; determining, based on the query context, a set of service events occurring on the one or more networks; querying multiple layers of a multiple-layer relational graph to determine one or more other service events having a defined relationship with the set of service events at one or more of the multiple layers, wherein the multiple layers include a configuration layer defining configured relationships between services or service events, an observation layer defining observed relationships between services or service events, and learned layer defining algorithmically-determined relationships between services or service events; and indicating, via a user interface and in response to the query context, the one or more other service events.
16. The non-transitory computer-readable medium of claim 15, further comprising code for generating the configuration layer based on relationships between services as defined in a stored configuration.
17. The non-transitory computer-readable medium of claim 15, further comprising code for generating the observation layer based on relationships between services determined based on monitoring network traffic to detect services communicating with one another.
18. The non-transitory computer-readable medium of claim 15, further comprising code for generating the observation layer based on relationships between services determined based on monitoring user behavior to detect services observed in diagnosing another service.
19. The non-transitory computer-readable medium of claim 15, further comprising code for generating the learned layer based on relationships between services determined based on performing anomaly detection on key services.
20. The non-transitory computer-readable medium of claim 15, further comprising code for determining a metric based on results of querying the multiple layers, wherein indicating the other service events is based at least in part on the metric.
</claims>
</document>
