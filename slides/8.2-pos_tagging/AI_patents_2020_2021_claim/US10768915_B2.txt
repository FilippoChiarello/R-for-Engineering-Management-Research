<document>

<filing_date>
2018-10-18
</filing_date>

<publication_date>
2020-09-08
</publication_date>

<priority_date>
2018-10-18
</priority_date>

<ipc_classes>
G06F11/30,G06F11/34,G06F11/36,G06F21/57,G06F8/41,G06F9/44,G06F9/46
</ipc_classes>

<assignee>
DENSO INTERNATIONAL AMERICA
</assignee>

<inventors>
KASHANI, AMEER
IYER, GOPALAKRISHNAN
</inventors>

<docdb_family_id>
68426778
</docdb_family_id>

<title>
Systems and methods for selectively instrumenting a program according to performance characteristics
</title>

<abstract>
System, methods, and other embodiments described herein relate to determining performance overhead for instrumentation within a program. In one embodiment, a method includes, in response to compiling the program from source code into machine code, analyzing the program to generate overhead scores associated with segments of instrumentation within separate functions of the program. The instrumentation is combined with the source code to provide functionality in addition to a base functionality of the program. The method includes selectively modifying the segments in the source code for the separate functions according to whether the overhead scores for respective ones of the segments satisfies an instrumentation threshold associated with respective ones of the separate functions.
</abstract>

<claims>
1. An overhead assessment system for selectively instrumenting a program, comprising: one or more processors; a memory communicably coupled to the one or more processors and storing: a performance module including instructions that when executed by the one or more processors cause the one or more processors to analyze the program to generate overhead scores associated with segments of instrumentation within separate functions of the program, wherein the instrumentation is combined with source code of the program to provide functionality in addition to a base functionality of the program; and an instrumentation module including instructions that when executed by the one or more processors cause the one or more processors to selectively modify the segments in the source code of the program for the separate functions according to whether the overhead scores for respective ones of the segments satisfies an instrumentation threshold associated with respective ones of the separate functions, wherein the performance module includes instructions to generate the overhead scores including instructions to calculate the overhead scores for the respective ones of the segments associated with the separate functions as a ratio of a program count and an instrumentation count relative to a runtime coverage for the separate functions.
2. The overhead assessment system of claim 1, wherein the instrumentation threshold for the respective ones of the separate functions is based, at least in part, on one or more characteristics associated with the separate functions including at least an importance level for instrumenting the separate functions as defined by an instrumentation policy.
3. The overhead assessment system of claim 1, wherein the instrumentation module includes instructions to selectively modify the segments of instrumentation including instructions to improve the overhead scores by altering the instrumentation for unsatisfactory functions of the separate functions that do not satisfy the instrumentation threshold.
4. The overhead assessment system of claim 3, wherein altering the instrumentation for the unsatisfactory functions includes one of: removing the instrumentation and replacing the instrumentation with optimized instrumentation that results in an improved overhead score for the unsatisfactory function.
5. The overhead assessment system of claim 1, wherein the instrumentation is security instrumentation that controls a flow of the program to prevent redirection of the flow from secondary interactions that are external to the program.
6. The overhead assessment system of claim 5, wherein the performance module includes instructions to analyze the program including instructions to generate the program count and the instrumentation count, wherein the program count indicates a number of instructions of the program associated with the separate functions, and wherein the instrumentation count indicates a number of instructions of the instrumentation for the respective segments.
7. The overhead assessment system of claim 5, wherein the performance module includes instructions to analyze the program including instructions to dynamically capture the runtime coverage for the separate functions of the program as the program is executed.
8. The overhead assessment system of claim 5, wherein the performance module includes instructions to analyze the program including instructions to statically determine the runtime coverage for the separate functions by calculating the runtime coverage according to an entry point into the program and a recursive analysis of the program according to a limited path depth.
9. A non-transitory computer-readable medium storing instructions for selectively instrumenting a program and that when executed by one or more processors cause the one or more processors to: analyze the program to generate overhead scores associated with segments of instrumentation within separate functions of the program, wherein the instrumentation is combined with source code to provide functionality in addition to a base functionality of the program; and selectively modify the segments in the source code of the program for the separate functions according to whether the overhead scores for respective ones of the segments satisfies an instrumentation threshold associated with respective ones of the separate functions, wherein the instructions to generate the overhead scores include instructions to calculate the overhead scores for the respective ones of the segments associated with the separate functions as a ratio of a program count and an instrumentation count relative to a runtime coverage for the separate functions.
10. The non-transitory computer-readable medium of claim 9, wherein the instrumentation threshold for the respective ones of the separate functions is based, at least in part, on one or more characteristics associated with the separate functions including at least an importance level for instrumenting the separate functions as defined by an instrumentation policy.
11. The non-transitory computer-readable medium of claim 9, wherein the instructions to selectively modify the instrumentation include instructions to improve the overhead scores by removing the instrumentation for unsatisfactory functions of the separate functions that do not satisfy the instrumentation threshold.
12. The non-transitory computer-readable medium of claim 9, wherein the instrumentation is security instrumentation that controls a flow of the program to prevent redirection of the flow from secondary interactions that are external to the program.
13. The non-transitory computer-readable medium of claim 9, wherein the instructions to analyze the program include instructions to dynamically capture the runtime coverage for the separate functions of the program as the program is executed.
14. A method of selectively instrumenting a program, comprising: in response to compiling the program from source code into machine code, analyzing the program to generate overhead scores associated with segments of instrumentation within separate functions of the program, wherein the instrumentation is combined with the source code to provide functionality in addition to a base functionality of the program; and selectively modifying the segments in the source code for the separate functions according to whether the overhead scores for respective ones of the segments satisfy an instrumentation threshold associated with respective ones of the separate functions, wherein generating the overhead scores includes calculating the overhead scores for the respective ones of the segments associated with the separate functions as a ratio of a program count and an instrumentation count relative to a runtime coverage for the respective ones of the segments.
15. The method of claim 14, wherein the instrumentation threshold for the respective ones of the separate functions is based, at least in part, on one or more characteristics associated with the separate functions including at least an importance level for instrumenting the separate functions as defined by an instrumentation policy.
16. The method of claim 14, wherein selectively modifying the segments of instrumentation includes improving the overhead scores by altering the instrumentation for unsatisfactory functions of the separate functions that do not satisfy the instrumentation threshold.
17. The method of claim 16, wherein altering the instrumentation for the unsatisfactory functions includes one of: removing the instrumentation and replacing the instrumentation with optimized instrumentation that results in an improved overhead score for the unsatisfactory function.
18. The method of claim 14, wherein analyzing the program includes generating the program count and the instrumentation count, wherein the program count indicates a number of instructions of the program associated with the separate functions, and wherein the instrumentation count indicates a number of instructions of the instrumentation for the respective segments.
19. The method of claim 18, wherein analyzing the program includes dynamically capturing the runtime coverage for the separate functions of the program, and wherein the instrumentation is security instrumentation that controls a flow of the program to prevent redirection of the flow from secondary interactions that are external to the program.
20. The method of claim 18, wherein analyzing the program includes statically determining the runtime coverage for the separate functions by calculating the runtime coverage according to an entry point into the program and a recursive analysis of the program according to a limited path depth.
</claims>
</document>
