<document>

<filing_date>
2018-12-29
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2018-12-29
</priority_date>

<ipc_classes>
H04L29/06,H04L9/32
</ipc_classes>

<assignee>
ALIBABA GROUP
</assignee>

<inventors>
XIE, GUILU
</inventors>

<docdb_family_id>
66100146
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR DETECTING REPLAY ATTACK
</title>

<abstract>
A computer-implemented method for detecting replay attack comprises: obtaining at least one candidate transaction for adding to a blockchain, the obtained candidate transaction comprising a timestamp; verifying if the timestamp is within a validation range and if an identification of the candidate transaction exists in an identification database; and in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, determining that the candidate transaction is not associated with a replay attack.
</abstract>

<claims>
1. A computer-implemented method for detecting replay attack, comprising: obtaining at least one candidate transaction for adding to a blockchain, the obtained candidate transaction comprising a timestamp; verifying if the timestamp is within a validation range and if an identification of the candidate transaction exists in an identification database; and in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, determining that the candidate transaction is not associated with a replay attack.
2. The method of claim 1, wherein: the candidate transaction comprises the timestamp and transaction information; and after obtaining the at least one candidate transaction and before verifying if the identification of the candidate transaction exists in the identification database, the method further comprises: determining a hash value based at least on the timestamp and the transaction information, the hash value serving as the identification.
3. The method of claim 1, wherein: the candidate transaction comprises the timestamp, transaction information, and a hash value determined based at least on the timestamp and the transaction information, the hash value serving as the identification; and after obtaining the at least one candidate transaction and before verifying if the identification of the candidate transaction exists in the identification database, the method further comprises: verifying the identification by verifying the hash value based at least on the timestamp and the transaction information.
4. The method of claim 1, wherein: the timestamp is configured by a user terminal that initiated the at least one candidate transaction; and obtaining the at least one candidate transaction for adding to the blockchain comprises receiving the candidate transaction from the user terminal.
5. The method of claim 1, wherein: the timestamp is configured by a blockchain node; and obtaining the at least one candidate transaction for adding to the blockchain comprises: receiving at least one initiated transaction from a user terminal; and adding the timestamp to the initiated transaction to obtain the at least one candidate transaction.
6. The method of claim 1, further comprising: in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, adding the identification to the identification database.
7. The method of claim 1, further comprising: in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, adding the candidate transaction to a cache for storing candidate transactions.
8. The method of claim 1, further comprising: in response to determining that the timestamp is not within the validation range, returning an error message to a computing device that submitted the candidate transaction.
9. The method of claim 1, further comprising: in response to determining that the identification exists in the identification database, determining that the candidate transaction is associated with the replay attack.
10. The method of claim 1, further comprising: performing consensus verification, wherein the candidate transaction is included in the consensus verification if the candidate transaction is determined not to be associated with the replay attack.
11. The method of claim 10, further comprising: synchronizing the identification database with one or more other blockchain nodes; verifying if the timestamp is within the validation range and if the identification of the candidate transaction exists in the synchronized identification database; in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, determining that the candidate transaction is not associated with the replay attack; and in response to determining that the identification exists in the synchronized identification database, determining that the candidate transaction is associated with the replay attack.
12. The method of claim 1, before obtaining the at least one candidate transaction, further comprising: synchronizing the identification database with one or more other blockchain nodes.
13. The method of claim 1, wherein: the identification database comprises information of transactions with timestamps within a most recent time period corresponding to the validation range.
14. The method of claim 1, wherein: the validation range is based on another timestamp of a latest block of the blockchain; and the validation range is included in a genesis block of the blockchain.
15. The method of claim 1, wherein: the validation range is based on an internal clock of a blockchain node that performs the verifying if the timestamp is within the validation range.
16. A system for detecting replay attack, comprising one or more processors and one or more non-transitory computer-readable memories coupled to the one or more processors and configured with instructions executable by the one or more processors to cause the system to perform operations comprising: obtaining at least one candidate transaction for adding to a blockchain, the obtained candidate transaction comprising a timestamp; verifying if the timestamp is within a validation range and if an identification of the candidate transaction exists in an identification database; and in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, determining that the candidate transaction is not associated with a replay attack.
17. The system of claim 16, wherein: the candidate transaction comprises the timestamp and transaction information; and after obtaining the at least one candidate transaction and before verifying if the identification of the candidate transaction exists in the identification database, the operations further comprise: determining a hash value based at least on the timestamp and the transaction information, the hash value serving as the identification.
18. The system of claim 16, wherein: the candidate transaction comprises the timestamp, transaction information, and a hash value determined based at least on the timestamp and the transaction information, the hash value serving as the identification; and after obtaining the at least one candidate transaction and before verifying if the identification of the candidate transaction exists in the identification database, the operations further comprise: verifying the identification by verifying the hash value based at least on the timestamp and the transaction information.
19. 19.-30. (canceled)
31. A non-transitory computer-readable storage medium configured with instructions executable by one or more processors to cause the one or more processors to perform operations comprising: obtaining at least one candidate transaction for adding to a blockchain, the obtained candidate transaction comprising a timestamp; verifying if the timestamp is within a validation range and if an identification of the candidate transaction exists in an identification database; and in response to determining that the timestamp is within the validation range and the identification does not exist in the identification database, determining that the candidate transaction is not associated with a replay attack.
32. (canceled)
33. The storage medium of claim 31, wherein: the candidate transaction comprises the timestamp, transaction information, and a hash value determined based at least on the timestamp and the transaction information, the hash value serving as the identification; and after obtaining the at least one candidate transaction and before verifying if the identification of the candidate transaction exists in the identification database, the operations further comprise: verifying the identification by verifying the hash value based at least on the timestamp and the transaction information.
34. 34.-45. (canceled)
</claims>
</document>
