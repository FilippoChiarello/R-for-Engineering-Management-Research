<document>

<filing_date>
2019-03-27
</filing_date>

<publication_date>
2020-10-01
</publication_date>

<priority_date>
2019-03-27
</priority_date>

<ipc_classes>
G06F9/455
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
LAURENCE, DOUGLAS STEWART
LIGUORI, ANTHONY NICHOLAS
</inventors>

<docdb_family_id>
72605661
</docdb_family_id>

<title>
REDUCING REQUEST LATENCY IN A MULTI-TENANT WEB SERVICE HOST
</title>

<abstract>
A set of virtual machine configurations is loaded in memory. A set of software instructions that, as a result of being executed, performs a data operation is received from a client device associated with a customer of a service provider. A request to execute the set of software instructions is received. The set of software instructions is executed in a virtual machine derived from a member of the set of virtual machine configurations, and results of the data operation are provided in response to the request.
</abstract>

<claims>
1. A computer-implemented method, comprising: deriving a virtual machine configuration from a base virtual machine; distributing a runtime state of the virtual machine configuration among a set of host machines provided by a computing resource service provider; receiving, from a client device associated with a customer of the computing resource service provider, a request to perform one or more data operations by executing customer-provided software code on a host machine of the set of host machines; causing a set of clone virtual machines based on the virtual machine configuration in memory to execute on the host machine; executing the customer-provided software code in the set of virtual machines; determining that a data operation of the one or more data operations has completed for a virtual machine of the set of virtual machines; and providing results of the data operation in response to the request.
2. The computer-implemented method of claim 1, further comprising selecting, based on whether the virtual machine configuration is capable of executing the customer-provided software code, the virtual machine configuration from a plurality of different virtual machine configurations.
3. The computer-implemented method of claim 1, wherein: the computer-implemented method further comprises: executing the base virtual machine to stable state; and storing the base virtual machine in a repository as a base virtual machine image; and the virtual machine configuration is derived from the base virtual machine image.
4. The computer-implemented method of claim 1, wherein the set of host machines load the virtual machine configuration in copy-on-write pages of the memory.
5. The computer-implemented method of claim 1, further comprising halting the virtual machine as a result of determining that the data operation has completed.
6. The computer-implemented method of claim 1, wherein the host machines are host machines of a distributed data object storage service provided by the computing resource service provider.
7. The computer-implemented method of claim 1, further comprising, prior to receiving the request to perform the one or more data operations, causing the set of host machines to load, based at least in part on the runtime state, the virtual machine configuration into the memory.
8. A system, comprising: one or more processors; and memory including executable instructions that, as a result of being executed by the one or more processors, cause the system to: load a set of virtual machine configurations in the memory, individual virtual machine configurations of the set of virtual machine configurations being runtime states of virtual machines at particular points in time; receive, from a client device associated with a customer of a service provider that hosts the system, a set of software instructions that, as a result of being executed, performs a data operation; receive a request to execute the set of software instructions using a selected virtual machine configuration of the set of virtual machine configurations; execute, in a virtual machine derived from the selected virtual machine configuration, the set of software instructions; and provide results of the data operation in response to the request.
9. The system of claim 8, wherein the executable instructions that cause the system to execute the set of software instructions include executable instructions that cause the system to execute copies of the set of software instructions concurrently in a plurality of virtual machines derived from the virtual machine configuration of the set of virtual machine configurations.
10. The system of claim 8, wherein the executable instructions further include instructions that cause the system to, as a result of completing execution of the set of software instructions, deprovision the virtual machine.
11. The system of claim 8, wherein execution of the set of software instructions in the virtual machine causes the virtual machine to: read a data object from a data store of the system; modify the data object to produce a modified data object; and write the modified data object to the data store.
12. The system of claim 8, wherein the virtual machine is derived, at least in part, as a result of selection of the virtual machine configuration via an interface of the client device.
13. The system of claim 8, wherein the executable instructions that cause the system to load the set of virtual machine configurations in memory further include instructions that cause the system to derive the virtual machine configuration based at least in part on: a base virtual machine image of a base virtual machine; and a difference between a state of the virtual machine configuration and the base virtual machine.
14. The system of claim 8, wherein the request is received from another virtual machine associated with the customer.
15. The system of claim 8, wherein the system is a host machine of a data storage service provided by a service provider to the customer as a service.
16. A non-transitory computer-readable storage medium having stored thereon executable instructions that, in response to execution by one or more processors of a computer system, cause the computer system to at least: receive, from a device associated with a customer of a service provider that hosts the computer system, a set of software instructions that, as a result of being executed by a virtual machine of a host machine, causes the host machine to perform a data operation; receive a request to execute the set of software instructions; provision the virtual machine on the host machine based at least in part on: a base virtual machine image of a base virtual machine; and a difference between a state the base virtual machine and a selected virtual machine configuration; cause the virtual machine to execute the set of software instructions to cause the host machine to perform the data operation; deprovision the virtual machine; and provide results of the data operation in response to the request.
17. The non-transitory computer-readable storage medium of claim 16, wherein the executable instructions further include instructions that cause the computer system to: create a set of virtual machine configurations derived from the base virtual machine, wherein the set of virtual machine configurations includes the selected virtual machine configuration; pause the set of virtual machine configurations; and distribute runtime states of the set of virtual machine configurations among a plurality of host machines of which the host machine is a member.
18. The non-transitory computer-readable storage medium of claim 16, wherein the executable instructions that deprovision the virtual machine include instructions that cause the computer system to: terminate execution of the virtual machine; erase memory allocated to the virtual machine; and deallocate resources, including the memory, from the virtual machine.
19. The non-transitory computer-readable storage medium of claim 16, wherein the host machine is hosted in a data storage service provided by the service provider to the customer.
20. The non-transitory computer-readable storage medium of claim 16, wherein the executable instructions that cause the computer system to deprovision the virtual machine cause the computer system to deprovision the virtual machine as a result of execution of the set of software instructions exceeding a time limit.
21. The non-transitory computer-readable storage medium of claim 16, wherein the set of software instructions that cause the host machine to perform the data operation cause the host machine to: read a first data object from a data store of a data storage service; determine that the first data object is a mismatch to specified criteria; and read a second data object from the data store.
22. The non-transitory computer-readable storage medium of claim 21, wherein the set of software instructions that cause the host machine to perform the data operation further cause the host machine to: determine that the second data object is a match to the specified criteria; and provide the second data object in response to the request.
</claims>
</document>
