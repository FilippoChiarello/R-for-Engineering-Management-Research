<document>

<filing_date>
2017-09-29
</filing_date>

<publication_date>
2020-10-13
</publication_date>

<priority_date>
2017-09-29
</priority_date>

<ipc_classes>
G06F9/30
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
VALENTINE, ROBERT
OULD-AHMED-VALL, ELMOUSTAPHA
CHARNEY, MARK
MADDURI, VENKATESWARA
CORBAL, JESUS
YANG, BINWEI
</inventors>

<docdb_family_id>
65816886
</docdb_family_id>

<title>
Apparatus and method for performing dual signed and unsigned multiplication of packed data elements
</title>

<abstract>
An apparatus and method for performing dual concurrent multiplications of packed data elements. For example one embodiment of a processor comprises: a decoder to decode a first instruction to generate a decoded instruction; a first source register to store a first plurality of packed byte data elements; a second source register to store a second plurality of packed byte data elements; execution circuitry to execute the decoded instruction, the execution circuitry comprising: multiplier circuitry to concurrently multiply each of the packed byte data elements of the first plurality with a corresponding packed byte data element of the second plurality to generate a plurality of products; adder circuitry to add specified sets of the products to generate temporary results for each set of products; zero-extension or sign-extension circuitry to zero-extend or sign-extend the temporary result for each set to generate an extended temporary result for each set; accumulation circuitry to combine each of the extended temporary results with a selected packed data value stored in a third source register to generate a plurality of final results; and a destination register to store the plurality of final results as a plurality of packed data elements in specified data element positions.
</abstract>

<claims>
1. A processor comprising: a decoder to decode a first instruction to generate a decoded instruction; a first source register to store a first plurality of packed byte data elements; a second source register to store a second plurality of packed byte data elements; execution circuitry to execute the decoded instruction, the execution circuitry comprising: multiplier circuitry to concurrently multiply each of the packed byte data elements of the first plurality with a corresponding packed byte data element of the second plurality to generate a plurality of products; adder circuitry to add specified sets of the products to generate temporary results for each set of products; zero-extension or sign-extension circuitry to zero-extend or sign-extend the temporary result for each set to generate an extended temporary result for each set; accumulation circuitry to combine each of the extended temporary results with a selected packed data value stored in a third source register to generate a plurality of final results; and a destination register to store the plurality of final results as a plurality of packed data elements in specified data element positions.
2. The processor of claim 1 wherein the zero-extension or sign-extension circuitry increases a bit width of each temporary result to equal a width of the selected backed data values stored in the third source register.
3. The processor of claim 2 wherein the third source register and the destination register are the same physical register.
4. The processor of claim 1 wherein the specified sets of products comprise four sets of four products, the adder circuitry to add each of the four products in each set to generate four temporary results.
5. The processor of claim 4 wherein each of the four temporary results have a width of 17 bits which the zero-extension or sign-extension circuitry increases to 32 bits to generate the extended temporary results.
6. The processor of claim 5 wherein the accumulation circuitry is to add four of the extended temporary results with four different packed doubleword data elements in the third source register.
7. The processor of claim 1 wherein the first, second, and third source registers are 128 bit packed data registers and wherein the first and second source registers store 16 packed byte data elements and the third source register stores 4 packed doubleword data elements.
8. The processor of claim 7 further comprising: a set of temporary registers or other temporary storage locations to store the temporary result for each set of products.
9. A method comprising: decoding a first instruction to generate a decoded instruction; storing a first plurality of packed byte data elements in a first source register; storing a second plurality of packed byte data elements in a second source register; concurrently multiplying each of the packed byte data elements of the first plurality with a corresponding packed byte data element of the second plurality to generate a plurality of products; adding specified sets of the products to generate temporary results for each set of products; zero-extending or sign-extending the temporary result for each set to generate an extended temporary result for each set; accumulating each of the extended temporary results with a selected packed data value stored in a third source register to generate a plurality of final results; and storing the plurality of final results as a plurality of packed data elements in specified data element positions.
10. The processor of claim 9 wherein the zero-extension or sign-extension circuitry increases a bit width of each temporary result to equal a width of the selected backed data values stored in the third source register.
11. The processor of claim 10 wherein the third source register and the destination register are the same physical register.
12. The processor of claim 9 wherein the specified sets of products comprise four sets of four products, the adder circuitry to add each of the four products in each set to generate four temporary results.
13. The processor of claim 12 wherein each of the four temporary results have a width of 17 bits which the zero-extension or sign-extension circuitry increases to 32 bits to generate the extended temporary results.
14. The processor of claim 13 wherein the accumulation circuitry is to add four of the extended temporary results with four different packed doubleword data elements in the third source register.
15. The processor of claim 9 wherein the first, second, and third source registers are 128 bit packed data registers and wherein the first and second source registers store 16 packed byte data elements and the third source register stores 4 packed doubleword data elements.
16. The processor of claim 15 further comprising: a set of temporary registers or other temporary storage locations to store the temporary result for each set of products.
17. A machine-readable medium having program code stored thereon which, when executed by a machine, causes the machine to perform the operations of: decoding a first instruction to generate a decoded instruction; storing a first plurality of packed byte data elements in a first source register; storing a second plurality of packed byte data elements in a second source register; concurrently multiplying each of the packed byte data elements of the first plurality with a corresponding packed byte data element of the second plurality to generate a plurality of products; adding specified sets of the products to generate temporary results for each set of products; zero-extending or sign-extending the temporary result for each set to generate an extended temporary result for each set; accumulating each of the extended temporary results with a selected packed data value stored in a third source register to generate a plurality of final results; and storing the plurality of final results as a plurality of packed data elements in specified data element positions.
18. The machine-readable medium of claim 17 wherein the zero-extension or sign-extension circuitry increases a bit width of each temporary result to equal a width of the selected backed data values stored in the third source register.
19. The machine-readable medium of claim 18 wherein the third source register and the destination register are the same physical register.
20. The machine-readable medium of claim 17 wherein the specified sets of products comprise four sets of four products, the adder circuitry to add each of the four products in each set to generate four temporary results.
21. The machine-readable medium of claim 20 wherein each of the four temporary results have a width of 17 bits which the zero-extension or sign-extension circuitry increases to 32 bits to generate the extended temporary results.
22. The machine-readable medium of claim 21 wherein the accumulation circuitry is to add four of the extended temporary results with four different packed doubleword data elements in the third source register.
23. The machine-readable medium of claim 17 wherein the first, second, and third source registers are 128 bit packed data registers and wherein the first and second source registers store 16 packed byte data elements and the third source register stores 4 packed doubleword data elements.
24. The machine-readable medium of claim 23 further comprising: a set of temporary registers or other temporary storage locations to store the temporary result for each set of products.
</claims>
</document>
