<document>

<filing_date>
2020-05-08
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-06-28
</priority_date>

<ipc_classes>
G06F11/36,G06F16/23,G06F16/2453,G06N20/00,G06N7/00
</ipc_classes>

<assignee>
ROBERT BOSCH
</assignee>

<inventors>
HEINZ, THOMAS
Sohns, Joachim
Gladisch, Christoph
</inventors>

<docdb_family_id>
70918339
</docdb_family_id>

<title>
METHOD AND APPARATUS FOR OPTIMAL DISTRIBUTION OF TEST CASES AMONG DIFFERENT TESTING PLATFORMS
</title>

<abstract>
A method for optimizing test cases. The method includes the following features. On the basis of simulation data obtained by way of the simulation, a simulation metamodel is created. On the basis of measurements performed in the test environment, a reality metamodel is created. Uncertainties inherent in the simulation data and measurements are combined by the fact that either the sum is calculated or the worst case of the two calculations is used or the worst case is respectively considered for each uncertainty being considered. On the basis of the combination of the uncertainties, a metamodel encompassing the simulation and the test environment is created. A search-based optimization of the test cases is performed by way of the metamodel.
</abstract>

<claims>
1. A method for optimal distribution of test cases among different test platforms for a simulation and test environment of a system embedded in an at least semi-autonomous robot or vehicle, the method comprising the following steps: creating a simulation metamodel based on simulation data obtained using the simulation; creating a reality metamodel based on measured data of measurements performed in the test environment; combining the simulation data, the measured data, and respective inherent uncertainties, by: (i) calculating averages, or minima, or maxima of predicted values and of uncertainties from the simulation metamodel and the reality metamodel, or (ii) establishing a Gaussian process from predicted data from the simulation metamodel and the reality metamodel; creating a combined metamodel encompassing the simulation and the test environment based on the combining; and performing a search-based optimization of the test cases using the combined metamodel.
2. The method as recited in claim 1, further comprising the following steps: deriving error patterns typical of the simulation from the simulation data and from the measured data; performing an evaluation of at least one of the test cases based on the error patterns; ascertaining, by way of the evaluation, a distribution of test results depending on a parameter that parameterizes the test cases with respect to a tested requirement; determining, based on the distribution, a probability, depending on the parameter, of a failure of the test case; and performing, using the parameter, a parameterization of the test cases.
3. The method as recited in claim 2, wherein signal patterns that are typical of an error are generated based on a performance index.
4. The method as recited in claim 3, wherein an amplitude or magnitude of the error is scaled for one of the signal patterns.
5. The method as recited in claim 2, wherein the error patterns include at least one of the following: a phase shift; and/or amplitude errors; and/or time-dependent additive signals; and/or shifts in a frequency domain; and/or convolutions having a kernel in a time domain; and/or other error patterns that are reproduced or detected by an established metric.
6. The method as recited in claim 1, wherein the simulation metamodel, the reality metamodel, and the combined metamodel are created using Bayesian statistics.
7. The method as recited in claim 1, wherein the simulation metamodel, the reality metamodel, and the combined metamodel are created using machine learning.
8. The method as recited in claim 1, wherein: the simulation and the measurements either are performed once at a beginning of the method or are repeated during the method for different parameterizations of the test case, such that the execution of further tests can be carried out both by simulation and using a real experiment; and data from the simulation or the measurements carried out again are used to adapt: (i) the simulation metamodel, the reality metamodel, or (ii) error models.
9. The method as recited in claim 1, wherein an automatic improvement of errors in the system which are recognized by the simulation is accomplished by the optimization.
10. A non-transitory machine-readable storage medium on which is stored a computer program for optimal distribution of test cases among different test platforms for a simulation and test environment of a system embedded in an at least semi-autonomous robot or vehicle, the computer program, when executed by a computer, causing the computer to perform the following steps: creating a simulation metamodel based on simulation data obtained using the simulation; creating a reality metamodel based on measured data of measurements performed in the test environment; combining the simulation data, the measured data, and respective inherent uncertainties, by: (i) calculating averages, or minima, or maxima of predicted values and of uncertainties from the simulation metamodel and the reality metamodel, or (ii) establishing a Gaussian process from predicted data from the simulation metamodel and the reality metamodel; creating a combined metamodel encompassing the simulation and the test environment based on the combining; and performing a search-based optimization of the test cases using the combined metamodel.
11. An apparatus for optimal distribution of test cases among different test platforms for a simulation and test environment of a system embedded in an at least semi-autonomous robot or vehicle, the apparatus configured to: create a simulation metamodel based on simulation data obtained using the simulation; create a reality metamodel based on measured data of measurements performed in the test environment; combine the simulation data, the measured data, and respective inherent uncertainties, by: (i) calculating averages, or minima, or maxima of predicted values and of uncertainties from the simulation metamodel and the reality metamodel, or (ii) establishing a Gaussian process from predicted data from the simulation metamodel and the reality metamodel; create a combined metamodel encompassing the simulation and the test environment based on the combining; and perform a search-based optimization of the test cases using the combined metamodel.
</claims>
</document>
