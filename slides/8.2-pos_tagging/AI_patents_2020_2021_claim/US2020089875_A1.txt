<document>

<filing_date>
2019-11-25
</filing_date>

<publication_date>
2020-03-19
</publication_date>

<priority_date>
2017-09-29
</priority_date>

<ipc_classes>
G06F21/55,G06F21/56,G06F9/54
</ipc_classes>

<assignee>
AVAST SOFTWARE
</assignee>

<inventors>
HAVLÍCEK, FILIP
LEW, HIRAM
POP, TOMÁS
SOLE, PABLO
</inventors>

<docdb_family_id>
65897330
</docdb_family_id>

<title>
OBSERVATION AND CLASSIFICATION OF DEVICE EVENTS
</title>

<abstract>
Systems and methods observe and classify device events. A model containing a set of features to be observed can be determined based on machine learning and training methods. A client application can issue a transaction request to an operating system service. A determination can be made whether the operating system service, a method associated with the transaction request, and the client application are currently being observed. In response to determining that the operating system service, a method associated with the transaction request, and the client application are being observed, a behavioral vector associated with the client application can be modified to indicate that the feature represented by the method is associated with the client application. The behavioral vector can be used to determine if the client application is malware.
</abstract>

<claims>
1. A method for observing device events, the method comprising: receiving a transaction request from a client application for an operating system service; determining whether the operating system service, a method associated with the transaction request, and the client application are being observed; in response to determining that the operating system service, the method associated with the transaction request, and the client application are being observed, modifying a behavioral vector associated with the client application and processing the transaction request; and in response to determining that at least one of the operating system service, the method associated with the transaction request, and the client application are not being observed, processing the transaction request without modifying the behavioral vector associated with the client application.
2. The method of claim 1, further comprising: receiving a set of features to be observed, the set of features to be observed associated with one or more methods of one or more services; wherein determining whether the operating system service, the method associated with the transaction request, and the client application are being observed includes determining whether the method associated with the transaction request comprises one of the one or more methods of the one or more services.
3. The method of claim 2, wherein the transaction request is associated with a feature in the set of features to be observed, and wherein modifying the behavioral vector associated with the client application comprises setting a value in the behavioral vector to indicate that the method associated with the transaction request has been invoked.
4. The method of claim 1, further comprising determining, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware.
5. The method of claim 4, wherein determining, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware comprises correlating the behavioral vector associated with the client application with previously observed behavioral vectors associated with malware.
6. The method of claim 1, wherein at least one of the operating system service and the method associated with the transaction request are implemented in Android as a component of binder.
7. The method of claim 1, wherein at least one of the operating system service and the method associated with the transaction request are implemented in iOS as a component of XPC.
8. A non-transitory machine-readable storage medium having stored thereon computer-executable instructions for observing device events, the computer-executable instructions to cause one or more processors to perform operations comprising: receive a transaction request from a client application for an operating system service; determine whether the operating system service, a method associated with the transaction request, and the client application are being observed; in response to a determination that the operating system service, the method associated with the transaction request, and the client application are being observed, modify a behavioral vector associated with the client application and process the transaction request; and in response to a determination that at least one of the operating system service, the method associated with the transaction request, and the client application are not being observed, process the transaction request without modification of the behavioral vector associated with the client application.
9. The non-transitory machine-readable storage medium of claim 8, wherein the computer-executable instructions further comprise instructions to: receive a set of features to be observed, the set of features to be observed associated with one or more methods of one or more services; wherein the computer-executable instructions to determine whether the operating system service, the method associated with the transaction request, and the client application are being observed include instructions to determine whether the method associated with the transaction request comprises one of the one or more methods of the one or more services.
10. The non-transitory machine-readable storage medium of claim 9, wherein the transaction request is associated with a feature in the set of features to be observed, and wherein modifying the behavioral vector associated with the client application comprises setting a value in the behavioral vector to indicate that the method associated with the transaction request has been invoked.
11. The non-transitory machine-readable storage medium of claim 8, wherein the computer-executable instructions further comprise instructions to determine, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware.
12. The non-transitory machine-readable storage medium of claim 11, wherein the computer-executable instructions to determine, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware comprise instructions to correlate the behavioral vector associated with the client application with previously observed behavioral vectors associated with malware.
13. The non-transitory machine-readable storage medium of claim 8, wherein at least one of the operating system service and the method associated with the transaction request are implemented in Android as a component of binder.
14. A system for observing device events, the system comprising: one or more processors; and a non-transitory machine-readable medium having stored thereon computer-executable instructions to cause the one or more processors to: receive a transaction request from a client application for an operating system service, determine whether the operating system service, a method associated with the transaction request, and the client application are being observed, in response to a determination that the operating system service, the method associated with the transaction request, and the client application are being observed, modify a behavioral vector associated with the client application and process the transaction request, and in response to a determination that at least one of the operating system service, the method associated with the transaction request, and the client application are not being observed, process the transaction request without modification of the behavioral vector associated with the client application.
15. The system of claim 14, wherein the computer-executable instructions further comprise instructions to: receive a set of features to be observed, the set of features to be observed associated with one or more methods of one or more services; wherein the computer-executable instructions to determine whether the operating system service, the method associated with the transaction request, and the client application are being observed include instructions to determine whether the method associated with the transaction request comprises one of the one or more methods of the one or more services.
16. The system of claim 15, wherein the transaction request is associated with a feature in the set of features to be observed, and wherein modifying the behavioral vector associated with the client application comprises setting a value in the behavioral vector to indicate that the method associated with the transaction request has been invoked.
17. The system of claim 14, wherein the computer-executable instructions further comprise instructions to determine, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware.
18. The system of claim 17, wherein the computer-executable instructions to determine, based at least in part on the behavioral vector associated with the client application, that the client application comprises malware comprise instructions to correlate the behavioral vector associated with the client application with previously observed behavioral vectors associated with malware.
19. The system of claim 14, wherein at least one of the operating system service and the method associated with the transaction request are implemented in Android as a component of binder.
20. The system of claim 14, wherein at least one of the operating system service and the method associated with the transaction request are implemented in iOS as a component of XPC.
</claims>
</document>
