<document>

<filing_date>
2020-01-04
</filing_date>

<publication_date>
2020-07-23
</publication_date>

<priority_date>
2019-01-14
</priority_date>

<ipc_classes>
G06F40/35,G06F8/38,G06F9/451,G06N20/00,G06N3/00,G06N5/02,G06N5/04,H04L12/58
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
MCCONNELL, CHRISTOPHER CLAYTON
</inventors>

<docdb_family_id>
69400655
</docdb_family_id>

<title>
UTILIZING RULE SPECIFICITY IN CONVERSATIONAL AI
</title>

<abstract>
Techniques are provided for building a dialog-state specific contextual language understanding system using subsumption logic. Information establishing conversational rules identifying the conversational dialog is received to present in respective dialog states. Each rule has a Boolean trigger expression of predicates for testing the conversational state together with logical connectives to identify when the rule is applicable. Subsumption logic is used to arrange the rules into a directed acyclic graph (DAG) where more specific rules are preferred to more general rules. During a conversation, the DAG is used to filter the triggered rules to only the most specific triggered rules from which a rule to run is selected. This structure makes it easier to build conversational systems because rules can be added or removed without having to change or reason over other rules. The rules also act as a constraint to help machine learned selection systems converge with less data.
</abstract>

<claims>
1. A method of building a dialog-state specific contextual language understanding system for an application, the method comprising:
receiving information establishing conversational rules identifying the
conversational dialog to present in respective dialog states;
using subsumption logic to arrange the conversational rules into a directed acyclic graph according to a hierarchy of specificity whereby more specific rules are preferred over less specific rules to support a many path conversational dialog;
establishing triggers that, when true in a dialog state, identify possible rules that are filtered to the most specific rules using the DAG; and
performing a conversational action for the application based on selecting one of the most specific triggered rules for the dialog state, the conversational action including at least one of presenting a message, presenting a conversational prompt requesting additional information, modifying memory, and calling an application program interface.
2. A method as in claim 1, further comprising implementing the dialog-state specific contextual language understanding system in the application and analyzing a received utterance from a user of the dialog-state specific contextual language understanding system to determine triggers for triggering conversational prompts for the application.
3. A method as in claim 2, further comprising identifying rules where a Boolean trigger expression is true by evaluating predicate expressions against the dialog state and combining the rules using Boolean logic.
4. A method as in claim 1, further comprising arranging objects identified in conversational data from a user into the directed acyclic graph whereby more specific rules are selected over more general rules for use in a conversational dialog.
5. A method as in claim 1, wherein the application is a machine learning application further comprising the machine learning application learning to select a conversational action limited to a set of most specific triggered conversational rules found in the directed acyclic graph that are true in the current dialog state rather than learning how to select from all possible rules and applying subsumption rules to the conversational action to limit a number of actions possible in a given dialog state.
6. A system with a platform for building a dialog-state specific contextual language understanding system for an application, the system comprising:
at least one processor; and
a memory for storing and encoding computer executable instructions that, when executed by the at least one processor, is operative to:
receive information establishing conversational rules identifying the conversational dialog to present in respective dialog states;
use subsumption logic to arrange the conversational rules into a directed acyclic graph according to a hierarchy of specificity whereby more specific rules are preferred over less specific rules to support a many path conversational dialog;
establish triggers that, when true in a dialog state, identify possible rules that are filtered to the most specific rules using the DAG; and
perform a conversational action for the application based selecting one of the most specific triggered rules for the dialog state, the conversational action including at least one of presenting a message, presenting a conversational prompt requesting additional information, modifying memory, and calling an application program interface.
7. A system as in claim 6, wherein the dialog-state specific contextual language understanding system is implemented by the application and the memory further includes instructions that when executed by the at least one processor analyze a received utterance from a user of the dialog-state specific contextual language understanding system to determine triggers for triggering conversational prompts for the application.
8. A system as in claim 7, wherein the memory further includes instructions that when executed by the at least one processor identifies rules where a Boolean trigger expression is true by evaluating predicate expressions against the dialog state and combining the rules using Boolean logic.
9. A system as in claim 6, wherein the memory further includes instructions that when executed by the at least one processor arranges objects identified in conversational data from a user into the directed acyclic graph whereby more specific rules and objects are selected over more general rules and objects for use in a conversational dialog.
10. A system as in claim 6, wherein the application is a machine learning application that learns to select a conversational action limited a set of most specific triggered conversational rules found in the directed acyclic graph that are true in the current dialog state rather than learning how to select from all possible rules and to apply subsumption rules to the conversational action to limit a number of actions possible in a given dialog state.
11. A machine-readable medium having instructions stored thereon that when executed by one or more processors cause the one or more processors to implement a method of building a dialog-state specific contextual language understanding system for an application, the method including:
receiving information establishing conversational rules identifying the
conversational dialog to present in respective dialog states;
using subsumption logic to arrange the conversational rules into a directed acyclic graph according to a hierarchy of specificity whereby more specific rules are preferred over less specific rules to support a many path conversational dialog;
establishing triggers that, when true in a dialog state, identify possible rules that are filtered to the most specific rules using the DAG; and
performing a conversational action for the application based on selecting one of the most specific triggered rules for the dialog state, the conversational action including at least one of presenting a message, presenting a conversational prompt requesting additional information, modifying memory, and calling an application program interface.
12. A medium as in claim 11, wherein the instructions include further instructions that when executed by the one or more processors enables a user of the dialog-state specific contextual language understanding system to add more specific conversational rules to the conversational dialog without modifying established conversational rules.
13. A medium as in claim 11, wherein the dialog-state specific contextual language understanding system is implemented by the application and the instructions further include instructions that when executed by the one or more processors analyze a received utterance from a user of the dialog-state specific contextual language understanding system to determine triggers for triggering conversational prompts for the application.
14. A medium as in claim 13, wherein the instructions further include instructions that when executed by the one or more processors identify rules where a Boolean trigger expression is true by evaluating predicate expressions against the dialog state and combining the rules using Boolean logic and arrange objects identified in conversational data from a user into the directed acyclic graph whereby more specific rules and objects are selected over more general rules and objects for use in a conversational dialog.
15. A medium as in claim 11, wherein the application is a machine learning application and the instructions further include instructions that when executed by the one or more processors select a conversational action limited to a set of most specific triggered conversational rules found in the directed acyclic graph that are true in the current dialog state rather than learning how to select from all possible rules in response to a request for a rule-based dialog from the machine learning application and apply subsumption rules to the conversational action to limit a number of actions possible in a given dialog state.
</claims>
</document>
