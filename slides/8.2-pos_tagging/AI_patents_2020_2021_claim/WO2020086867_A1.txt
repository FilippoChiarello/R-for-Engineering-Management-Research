<document>

<filing_date>
2019-10-24
</filing_date>

<publication_date>
2020-04-30
</publication_date>

<priority_date>
2018-10-24
</priority_date>

<ipc_classes>
B82Y10/00,G06N10/00
</ipc_classes>

<assignee>
ZAPATA COMPUTING
</assignee>

<inventors>
ANSCHUETZ, ERIC R.
CAO, YUDONG
</inventors>

<docdb_family_id>
70325252
</docdb_family_id>

<title>
HYBRID QUANTUM-CLASSICAL COMPUTER SYSTEM FOR IMPLEMENTING AND OPTIMIZING QUANTUM BOLTZMANN MACHINES
</title>

<abstract>
A hybrid quantum-classical (HQC) computer prepares a quantum Boltzmann machine (QBM) in a pure state. The state is evolved in time according to a chaotic, tunable quantum Hamiltonian. The pure state locally approximates a (potentially highly correlated) quantum thermal state at a known temperature. With the chaotic quantum Hamiltonian, a quantum quench can be performed to locally sample observables in quantum thermal states. With the samples, an inverse temperature of the QBM can be approximated, as needed for determining the correct sign and magnitude of the gradient of a loss function of the QBM.
</abstract>

<claims>
1. A hybrid quantum-classical computer, comprising:
a classical computing component;
a quantum computing component comprising:
a first plurality of m qubits and a second plurality of n qubits prepared in a first quantum state, wherein n is less than m;
the first plurality of qubits interacting with each other according to a Hamiltonian specified by the classical computing component; the second plurality of qubits interacting with each other according to the Hamiltonian; and
the second plurality of qubits weakly interacting with the first plurality of qubits according to the Hamiltonian; and a measurement unit that measures:
(1) a first set of expectation values of observables on the first plurality of qubits; and
(2) a second set of expectation values of observables on the second plurality of qubits; and
the classical computing component comprising a
processor that receives the first and second sets of expectation values from the measurement unit and prepares a second quantum state based on the first quantum state and the first and second sets of expectation values.
2. The hybrid quantum-classical computer of claim 1, wherein the first and
second plurality of qubits are quenched under the Hamiltonian. 3. The hybrid quantum-classical computer of claim 2, wherein the quenching of the first and second plurality of qubits comprises simulating time evolution of the first and second plurality of qubits by a quantum circuit in the quantum computing component.
4. The hybrid quantum-classical computer of claim 2, wherein the quenching of the first and second plurality of qubits comprises simulating time evolution of the first and second plurality of qubits by an analog quantum simulator in the quantum computing component. 5. The hybrid quantum-classical computer of claim 2, wherein the quenching of the first and second plurality of qubits comprises simulating time evolution of the first and second plurality of qubits by a quantum annealer in the quantum computing component.
6. The hybrid quantum-classical computer of claim 2, wherein the classical computing component further comprises computer program code tangibly stored on at least one non-transitory computer-readable medium, wherein the computer program code is executable by the processor to simulate the quantum computing component.
7. The hybrid quantum-classical computer of claim 2, wherein after the
quenching, the second set of expectation values identifies a value of a temperature parameter of an ideal quantum Boltzmann distribution associated with the first plurality of qubits.
8. The hybrid quantum-classical computer of claim 1, wherein the classical computing component uses the first and second sets of expectation values to estimate a gradient of a loss function.
9. The hybrid quantum-classical computer of claim 1, wherein the classical computing component uses the first and second sets of expectation values to update the parameters of the Hamiltonian.
10. The hybrid quantum-classical computer of claim 1, further comprising a computer system implementing an artificial neural network, wherein the artificial neural network controls the quantum computing component to measure the first and second set of expectation values and controls the classical computing component to receive the first and second sets of expectation values and to prepare the second quantum state.
11. The hybrid quantum-classical computer of claim 10, wherein the computer system includes the classical computing component.
12. A method for preparing, by a hybrid quantum-classical computer, a state of a quantum Boltzmann machine that follows a probability distribution which locally approximates a Boltzmann distribution at a known temperature, the hybrid quantum-classical computer comprising:
a classical computing component;
a quantum computing component comprising:
a measurement unit;
a first plurality of m qubits and a second plurality of n qubits prepared in a first quantum state, wherein n is less than m;
the first plurality of qubits interacting with each other according to a Hamiltonian specified by the classical computing component; the second plurality of qubits interacting with each other according to the Hamiltonian; and
the second plurality of qubits weakly interacting with the first plurality of qubits according to the Hamiltonian; and the classical computing component including a processor, a non-transitory computer-readable medium, and computer-program instructions stored in the non-transitory computer-readable medium;
the method comprising:
at the measurement unit of the quantum computing component:
(1) measuring a first set of expectation values of observables on the first plurality of qubits; and
(2) measuring a second set of expectation values of observables on the second plurality of qubits; and
at the classical computing component: (3) receiving the first and second sets of expectation values from the measurement unit; and
(4) preparing a second quantum state based on the first quantum state and the first and second sets of expectation values. 13. The method of claim 12, further comprising, at the quantum computing
component: quenching the first and second plurality of qubits under the Hamiltonian.
14. The method of claim 13, wherein the quenching of the first and second
plurality of qubits comprises, at a quantum circuit in the quantum computing component, simulating time evolution of the first and second plurality of qubits.
15. The method of claim 13, wherein the quenching of the first and second
plurality of qubits comprises, at an analog quantum simulator in the quantum computing component, simulating time evolution of the first and second plurality of qubits.
16. The method of claim 13, wherein the quenching of the first and second
plurality of qubits comprises, at a quantum annealer in the quantum computing component, simulating time evolution of the first and second plurality of qubits. 17. The method of claim 13, further comprising, at the classical computing
component, simulating the quantum computing component.
18. The method of claim 13, wherein after the quenching, the second set of
expectation values identifies a value of a temperature parameter of an ideal quantum Boltzmann distribution associated with the first plurality of qubits. 19. The method of claim 12, further comprising, at the classical computing
component, using the first and second sets of expectation values to estimate a gradient of a loss function.
20. The method of claim 12, further comprising, at the classical computing component, using the first and second sets of expectation values to update the parameters of the Hamiltonian.
21. The method of claim 12, further comprising:
at the classical computing component, executing an artificial neural network, wherein executing the artificial neural network comprises: controlling the quantum computing component to perform (1) and (2); and
controlling the classical computing component to perform (3) and (4).
22. The method of claim 12, further comprising:
at a computer system not including the classical computing component, executing an artificial neural network, wherein executing the artificial neural network comprises:
controlling the quantum computing component to perform (1) and (2); and
controlling the classical computing component to perform (3) and (4).
</claims>
</document>
