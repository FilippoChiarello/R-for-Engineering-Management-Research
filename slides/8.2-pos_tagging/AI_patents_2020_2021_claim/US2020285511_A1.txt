<document>

<filing_date>
2019-03-09
</filing_date>

<publication_date>
2020-09-10
</publication_date>

<priority_date>
2019-03-09
</priority_date>

<ipc_classes>
G06F9/46,G06F9/48
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
ELISSEEV, VADIM
JORDAN, KIRK
</inventors>

<docdb_family_id>
72334961
</docdb_family_id>

<title>
Tool for identifying sources of operating system jitter from power consumption measurements
</title>

<abstract>
A method and system of managing operating system (OS) jitter are provided. Power consumption information is received for a first time period of a compute node of the plurality of compute nodes of a large-scale computing system, wherein the compute node is running a subject program. A digital signature of a power spectrum of the compute node is determined based on the power consumption information. The digital signature of the power spectrum is compared to a baseline power spectrum. Upon determining that the digital signature of the power spectrum varies beyond a threshold from the baseline power spectrum, the subject program is identified as a source of incompatible OS jitter. An OS jitter mitigation measure is performed. Upon determining that the digital signature of the power spectrum does not vary beyond the threshold from the baseline power spectrum, the digital signature of the power spectrum is stored in a memory.
</abstract>

<claims>
1. A computing device comprising: a processor; a network interface coupled to the processor to enable communication over a network; a storage device coupled to the processor; a jitter management engine code stored in the storage device, wherein an execution of the code by the processor configures the computing device to perform acts comprising, in an active phase: receiving power consumption information for a first time period of a compute node of a plurality of compute nodes of a large-scale computing system, wherein the compute node is running a subject program; determining a digital signature of a power spectrum of the compute node based on the power consumption information; comparing the digital signature of the power spectrum to a baseline power spectrum of the compute node; upon determining that the digital signature of the power spectrum varies beyond a threshold from the baseline power spectrum: identifying the subject program as a source of incompatible operating system (OS) jitter; and performing an OS jitter mitigation measure; and upon determining that the digital signature of the power spectrum does not vary beyond the threshold from the baseline power spectrum, storing the digital signature of the power spectrum in a memory.
2. The computing device of claim 1, wherein the power consumption information for the first time period is a time series of power consumed at predetermined intervals at the compute node.
3. The computing device of claim 1, wherein performing the OS jitter mitigation measure comprises sending a notification to a system administrator of the large-scale computing system, indicating that an OS jitter of a compute node of the large-scale computing system has exceeded the predetermined threshold.
4. The computing device of claim 1, wherein the OS jitter mitigation measure comprises migrating a program running on the compute node that is adversely affected by the OS jitter to another compute node of the large-scale computing system.
5. The computing device of claim 1, wherein the OS jitter mitigation measure comprises migrating a program running on the compute node to another core of the compute node.
6. The computing device of claim 1, wherein the OS jitter mitigation measure comprises at least one of: (i) changing a daemon wake-up interval running on the compute node, or (ii) changing a synchronization interval of a program running on the compute node that is adversely affected by the OS jitter.
7. The computing device of claim 1: wherein execution of the code by the processor further configures the computing device to perform acts comprising: upon determining that the digital signature of the power spectrum varies beyond a threshold from the baseline power spectrum, determining which compute node of the plurality of compute nodes has a digital signature of a power spectrum that is compatible with the subject program; and wherein the OS jitter mitigation measure comprises migrating the subject program to another compute node of the large-scale computing system.
8. The computing device of claim 1, wherein the OS jitter mitigation measure comprises disabling the subject program.
9. The computing device of claim 1, wherein execution of the code by the processor further configures the computing device to perform acts comprising: in a preliminary phase, for each of the plurality of compute nodes of the large-scale computing system: receiving a baseline power consumption information when the compute node is operating under a low or nominal load condition and when not running the subject program; determining a baseline digital signature of a power spectrum of the compute node based on the baseline power consumption information; and storing the baseline digital signature of the power spectrum of the compute node in the memory.
10. The computing device of claim 1, wherein the active phase is initiated by the subject program being introduced in the compute node of the large-scale computing system.
11. The computing device of claim 1, wherein the subject program is a middleware daemon.
12. The computing device of claim 1, wherein the OS jitter mitigation measure is determined by artificial intelligence (AI).
13. The computing device of claim 1, wherein the threshold from the baseline power spectrum is based on a difference in amplitude of a power spike between the baseline power spectrum and the signature of the power spectrum, at a common frequency.
14. The computing device of claim 1, wherein the threshold from the baseline power spectrum is based on a frequency shift of a power spike between the baseline power spectrum and the signature of the power spectrum.
15. A non-transitory computer readable storage medium tangibly embodying a computer readable program code having computer readable instructions that, when executed, causes a computer device to carry out a method of managing operating system (OS) jitter of a large-scale computing system having a plurality of compute nodes, the method comprising, in an active phase: receiving power consumption information for a first time period of a compute node of the plurality of compute nodes of the large-scale computing system, wherein the compute node is running a subject program; determining a digital signature of a power spectrum of the compute node based on the power consumption information; comparing the digital signature of the power spectrum to a baseline power spectrum of the compute node; upon determining that the digital signature of the power spectrum varies beyond a threshold from the baseline power spectrum: identifying the subject program as a source of incompatible operating system (OS) jitter; and performing an OS jitter mitigation measure; and upon determining that the digital signature of the power spectrum does not vary beyond the threshold from the baseline power spectrum, storing the digital signature of the power spectrum in a memory.
16. The non-transitory computer readable storage medium of claim 15, wherein the power consumption information for the first time period is a time series of power consumed at predetermined intervals at the compute node.
17. The non-transitory computer readable storage medium of claim 15, wherein performing the OS jitter mitigation measure comprises sending a notification to a system administrator of the large-scale computing system, indicating that an OS jitter of a compute node of the large-scale computing system has exceeded the predetermined threshold.
18. The non-transitory computer readable storage medium of claim 15, wherein the OS jitter mitigation measure comprises migrating a program running on the compute node that is adversely affected by the OS jitter to another compute node of the large-scale computing system.
19. The non-transitory computer readable storage medium of claim 15, the method further comprising: upon determining that the digital signature of the power spectrum varies beyond a threshold from the baseline power spectrum, determining which compute node of the plurality of compute nodes has a digital signature of a power spectrum that is compatible with the subject program; and wherein the OS jitter mitigation measure comprises migrating the subject program to another compute node of the large-scale computing system.
20. The non-transitory computer readable storage medium of claim 15, the method further comprising: in a preliminary phase, for each of the plurality of compute nodes of the large-scale computing system: receiving a baseline power consumption information when the compute node is operating under a low or nominal load condition and when not running the subject program; determining a baseline digital signature of a power spectrum of the compute node based on the baseline power consumption information; and storing the baseline digital signature of the power spectrum of the compute node in the memory.
</claims>
</document>
