<document>

<filing_date>
2020-03-19
</filing_date>

<publication_date>
2020-10-01
</publication_date>

<priority_date>
2019-03-22
</priority_date>

<ipc_classes>
H04L29/04,H04L29/10,H04L29/14
</ipc_classes>

<assignee>
C3.AI
BARBARO, Giuseppe
KOLTER, Jeremy
</assignee>

<inventors>
OHLSSON, HENRIK
SANDILYA, UMASHANKAR
BARBARO, Giuseppe
KOLTER, Jeremy
HAGHIGHI, Mehdi Maasoumy
</inventors>

<docdb_family_id>
72611727
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR EVENT ASSIGNMENT OF DYNAMICALLY CHANGING ISLANDS
</title>

<abstract>
The present disclosure provides systems and methods that may advantageously apply machine learning to detect and ascribe network interruptions to specific components or nodes within the network. In an aspect, the present disclosure provides a computer-implemented method comprising: mapping a network comprising a plurality of islands that are capable of dynamically changing by splitting and/or merging of one or more islands, wherein the plurality of islands comprises a plurality of individual components; and detecting and localizing one or more local events at an individual component level as well as at an island level using a disaggregation model.
</abstract>

<claims>
1. A computer-implemented event assignment method, comprising:
mapping a network comprising a plurality of islands that are capable of dynamically changing by splitting and/or merging of one or more islands, wherein the plurality of islands comprises a plurality of individual components; and
predicting and/or detecting and localizing one or more local events at an individual component level as well as at an island level using a disaggregation model.
2. The method of claim 1, wherein the plurality of individual components comprises a plurality of nodes and branches.
3. The method of claim 1, wherein the disaggregation model is configured to detect the one or more local events at the individual component level, instead of at an island level.
4. The method of claim 1, wherein the disaggregation model is configured to localize or isolate the one or more local events at the individual component level.
5. The method of claim 1, wherein the disaggregation model is configured to detect the one or more local events at the individual component level as the one or more of the islands are dynamically changing.
6. The method of claim 1, wherein the dynamic changing of the islands comprises multiple instances of splitting, merging, and/or re-merging of the one or more islands.
7. The method of claim 2, wherein the dynamic changing of the islands comprises joining
and/or splitting two or more of the plurality of nodes and branches.
8. The method of claim 1, wherein the dynamic changing of the islands comprises splitting and/or merging of subsets of the individual components.
9. The method of claim 8, wherein the subsets of the individual components are of a same size.
10. The method of claim 8, wherein the subsets of the individual components are of variable sizes.
11. The method of claim 1, wherein the disaggregation model is a machine learning latent variable model.
12. The method of claim 11, wherein the machine learning latent variable model is implemented at a level of the individual components.
13. The method of claim 11, wherein the machine learning latent variable model comprises a plurality of latent variables corresponding to the one or more local events at each of said individual components.
14. The method of claim 13, wherein the one or more local events occurring at the individual component level are associated with one or more island events occurring at an island level.
15. The method of claim 14, wherein the machine learning latent variable model is configured to receive an observation of a selected island event occurring on a corresponding selected island, and process the observation based on an assumption that one of said plurality of latent variables had caused the selected island event to occur.
16. The method of claim 15, wherein the selected island event is caused by one of said individual components that is in or associated with the corresponding selected island.
17. The method of claim 15, wherein the machine learning latent variable model comprises a prior probability of each individual component causing each of the one or more local events.
18. The method of claim 17, wherein the machine learning latent variable model is configured to perform exact posterior inference, based on the prior probabilities, to assign the one or more local events to the individual components.
19. The method of claim 18, wherein the assignment of the one or more local events to the
individual components comprises determining a probability estimate of each local event occurring at each of said corresponding component.
20. The method of claim 19, wherein the machine learning latent variable model is configured to use the probability estimates to update the preceding or prior probabilities iteratively until convergence.
21. The method of claim 17, wherein the prior probability comprises an initially known, actual or estimated probability based on previous event data.
22. The method of claim 20, wherein the preceding or prior probabilities are updated iteratively using an Expectation Maximization (EM) algorithm.
23. The method of claim 1, further comprising:
performing predictive maintenance at the individual component level based on the one or more detected local events.
24. The method of claim 2, wherein the network comprises an electrical distribution network.
25. The method of claim 24, wherein the electrical distribution network comprises a plurality of distribution feeders.
26. The method of claim 25, wherein the plurality of nodes and branches are associated with the plurality of distribution feeders, and the connected nodes and branches within each feeder.
27. The method of claim 24, wherein the one or more events comprises opening or closing of one or more breaker switches within the electrical distribution network, wherein the one or more breaker switches are associated with one or more of the nodes and/or branches.
28. The method of claim 1, wherein the plurality of individual components in the network are arranged in a geometric configuration selected from the group consisting of a one
dimensional configuration, a two-dimensional configuration, and an irregular configuration.
29. The method of claim 1, wherein the plurality of individual components in the network are arranged in a two-dimensional configuration, and wherein the two-dimensional configuration is a rectangular configuration, a radial configuration, or a spoke-and-hub configuration.
30. The method of claim 24, wherein the one or more local events comprise non-technical loss associated with one or more of the plurality of individual components.
31. The method of claim 24, wherein mapping the network comprises identifying unexpected voltage levels in individual components of the network.
32. A system for event assignment, comprising:
a server in communication with a network comprising a plurality of islands; and a memory storing instructions that, when executed by the server, causes the server to perform operations comprising:
mapping the network, wherein the plurality of islands are capable of dynamically changing by splitting and/or merging of one or more islands, wherein the plurality of islands comprises a plurality of individual components; and
predicting and/or detecting and localizing one or more local events at an individual component level as well as at an island level using a disaggregation model.
33. A non-transitory computer readable medium storing instructions that, when executed by one or more processors, causes the one or more processors to perform an event assignment method, said method comprising:
mapping a network comprising a plurality of islands that are capable of dynamically changing by splitting and/or merging of one or more islands, wherein the plurality of islands comprises a plurality of individual components; and
predicting and/or detecting and localizing one or more local events at an individual component level as well as at an island level using a disaggregation model.
</claims>
</document>
