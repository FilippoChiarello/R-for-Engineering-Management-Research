<document>

<filing_date>
2018-10-30
</filing_date>

<publication_date>
2020-04-30
</publication_date>

<priority_date>
2018-10-30
</priority_date>

<ipc_classes>
G06F12/00,G06F3/06
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
AUVENSHINE, JOHN J.
CALLERO, LUIS IGNACIO
KODJO, DAVE AIME DESIRE
LUTZ, DAVID
PRYOR, TRON H.
RICHARDSON, LAURA
SCHUSTEK, DAVID
SIO, ROBERT ONG
</inventors>

<docdb_family_id>
70328663
</docdb_family_id>

<title>
Dynamic policy prioritization and translation of business rules into actions against storage volumes
</title>

<abstract>
A computer-implemented method of information lifecycle management is disclosed. The computer-implemented method includes reading, by a data processing system of a storage environment, business rules and policies for managing data in storage volumes of the storage environment, the policies being based on the predetermined business rules, and analyzing, by the data processing system, available storage and capacity in the storage environment. The computer-implemented method further includes dynamically prioritizing, by the data processing system, the policies based, at least in part, on results of the analyzing, resulting in prioritized policies, cognitively translating, by the data processing system, one or more of the predetermined business rules into action(s) against one or more of the storage volumes based, at least in part, on the prioritized policies, and executing, by the data processing system, the action(s).
</abstract>

<claims>
1. A computer-implemented method of information lifecycle management, the computer-implemented method comprising: reading, by a data processing system of a storage environment, a plurality of predetermined business rules and a plurality of policies for managing data in a plurality of storage volumes of the storage environment, the plurality of policies being based on the plurality of predetermined business rules, wherein the plurality of policies comprises at least one of migration of one or more of the plurality of storage volumes, transforming one or more of the plurality of storage volumes, the transforming comprising one of compression of one or more of the plurality of storage volumes and thinning of the one or more of the plurality of storage volumes, the thinning comprising altering an amount of reserved space for one or more of the plurality of storage volumes, and wherein the plurality of predetermined business rules comprises at least one operational goal for the information life cycle management; analyzing, by the data processing system, available storage and capacity in the storage environment; dynamically prioritizing, by the data processing system, the plurality of policies based, at least in part, on results of the analyzing, resulting in prioritized policies; cognitively translating, by the data processing system, one or more of the plurality of predetermined business rules into one or more actions against one or more of the plurality of storage volumes based, at least in part, on the prioritized policies; and executing, by the data processing system, the one or more actions.
2. The computer-implemented method of claim 1, wherein the plurality of storage volumes comprises at least one virtual storage volume.
3. The computer-implemented method of claim 2, wherein the at least one operational goal comprises manipulating one or more of the at least one virtual storage volume while avoiding physical data migration.
4. The computer-implemented method of claim 1, wherein the at least one operational goal comprises at least two of ensuring operational integrity of the storage environment, ensuring data availability and minimizing storage cost.
5. The computer-implemented method of claim 1, wherein the migration comprises tiering up for best performance and tiering down to free up faster storage.
6. The computer-implemented method of claim 1, wherein the plurality of policies comprises compression, and wherein the compression is performed as a result of determining that a given storage volume of the plurality of storage volumes is compressible to a predetermined compression ratio.
7. The computer-implemented method of claim 5, wherein the prioritized policies comprise first tiering up for best performance, second tiering down to free up faster storage, third transforming by thinning and fourth transforming by compressing.
8. The computer-implemented method of claim 1, further comprising cognitively adapting, by the data processing system, to changes in the storage environment by automatically changing to another business rule of the plurality of predetermined business rules upon a presence of one or more criterion.
9. The computer-implemented method of claim 5, wherein the tiering up and tiering down are performed on a given storage volume based on accesses of the given storage volume.
10. The computer-implemented method of claim 1, wherein the executing is performed according to a migration window, wherein the migration window comprises at least one of time and bandwidth.
11. A system, comprising: a memory; and at least one processor in communication with the memory to perform a method of information lifecycle management, the method comprising: reading, by a data processing system of a storage environment, a plurality of predetermined business rules and a plurality of policies for managing data in a plurality of storage volumes of the storage environment, the plurality of policies being based on the plurality of predetermined business rules, wherein the plurality of policies comprises at least one of migration of one or more of the plurality of storage volumes, transforming one or more of the plurality of storage volumes, the transforming comprising one of compression of one or more of the plurality of storage volumes and thinning of the one or more of the plurality of storage volumes, the thinning comprising altering an amount of reserved space for one or more of the plurality of storage volumes, and wherein the plurality of predetermined business rules comprises at least one operational goal for the information life cycle management; analyzing, by the data processing system, available storage and capacity in the storage environment; dynamically prioritizing, by the data processing system, the plurality of policies based, at least in part, on results of the analyzing, resulting in prioritized policies; cognitively translating, by the data processing system, one or more of the plurality of predetermined business rules into one or more actions against one or more of the plurality of storage volumes based, at least in part, on the prioritized policies; and executing, by the data processing system, the one or more actions.
12. The system of claim 11, wherein the plurality of storage volumes comprises at least one virtual storage volume, and wherein the at least one operational goal comprises manipulating one or more of the at least one virtual storage volume while avoiding physical data migration.
13. The system of claim 11, wherein the plurality of policies comprises tiering up for best performance, tiering down to free up faster storage, transforming by thinning and transforming by compressing.
14. The system of claim 11, further comprising cognitively adapting, by the data processing system, to changes in the storage environment by automatically changing to another business rule of the plurality of predetermined business rules upon a presence of one or more criterion.
15. The system of claim 11, wherein the migration comprises one of tiering up and tiering down a given storage volume based on accesses of the given storage volume.
16. A computer program product, comprising: a storage medium readable by a processor and storing instructions for performing a method of information lifecycle management, the method comprising: reading, by a data processing system of a storage environment, a plurality of predetermined business rules and a plurality of policies for managing data in a plurality of storage volumes of the storage environment, the plurality of policies being based on the plurality of predetermined business rules, wherein the plurality of policies comprises at least one of migration of one or more of the plurality of storage volumes, transforming one or more of the plurality of storage volumes, the transforming comprising one of compression of one or more of the plurality of storage volumes and thinning of the one or more of the plurality of storage volumes, the thinning comprising altering an amount of reserved space for one or more of the plurality of storage volumes, and wherein the plurality of predetermined business rules comprises at least one operational goal for the information life cycle management; analyzing, by the data processing system, available storage and capacity in the storage environment; dynamically prioritizing, by the data processing system, the plurality of policies based, at least in part, on results of the analyzing, resulting in prioritized policies; cognitively translating, by the data processing system, one or more of the plurality of predetermined business rules into one or more actions against one or more of the plurality of storage volumes based, at least in part, on the prioritized policies; and executing, by the data processing system, the one or more actions.
17. The computer program product of claim 16, wherein the plurality of storage volumes comprises at least one virtual storage volume, and wherein the at least one operational goal comprises manipulating one or more of the at least one virtual storage volume while avoiding physical data migration.
18. The computer program product of claim 16, wherein the migration comprises tiering up for best performance and tiering down to free up faster storage.
19. The computer program product of claim 16, further comprising cognitively adapting, by the data processing system, to changes in the storage environment by automatically changing to another business rule of the plurality of predetermined business rules upon a presence of one or more criterion.
20. The computer program product of claim 18, wherein the tiering up and tiering down are performed on a given storage volume based on accesses of the given storage volume.
</claims>
</document>
