<document>

<filing_date>
2018-02-06
</filing_date>

<publication_date>
2020-10-13
</publication_date>

<priority_date>
2018-02-06
</priority_date>

<ipc_classes>
G06N20/00,G06N99/00,H04L12/24,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
ANDERSON, BLAKE HARRELL
MCGREW, DAVID
</inventors>

<docdb_family_id>
65686923
</docdb_family_id>

<title>
Leveraging point inferences on HTTP transactions for HTTPS malware detection
</title>

<abstract>
In one embodiment, a traffic analysis service receives captured traffic data regarding a Transport Layer Security (TLS) connection between a client and a server. The traffic analysis service applies a first machine learning-based classifier to TLS records from the traffic data, to identify a set of the TLS records that include Hypertext Transfer Protocol (HTTP) header information. The traffic analysis service estimates one or more HTTP transaction labels for the connection by applying a second machine learning-based classifier to the identified set of TLS records that include HTTP header information. The traffic analysis service augments the captured traffic data with the one or more HTTP transaction labels. The traffic analysis service causes performance of a network security function based on the augmented traffic data.
</abstract>

<claims>
1. A method comprising: receiving, at a traffic analysis service, captured traffic data regarding a Transport Layer Security (TLS) connection between a client and a server; applying, by the traffic analysis service, a first machine learning-based classifier to TLS records from the traffic data to label each of the TLS records as either a TLS record that includes Hypertext Transfer Protocol (HTTP) header information comprising one or more HTTP header fields or a TLS record that does not include the HTTP header information; estimating, by the traffic analysis service, one or more HTTP transaction labels for the connection by applying a second machine learning-based classifier to the identified set of TLS records that include the HTTP header information; augmenting, by the traffic analysis service, the captured traffic data with the one or more HTTP transaction labels; and causing, by the traffic analysis service, performance of a network security function based on the augmented traffic data, wherein the TLS records remain encrypted during classification by the first and second machine learning-based classifiers.
2. The method as in claim 1, wherein causing performance of the network security function comprises: determining, by the traffic analysis service and based on the augmented traffic data, whether the TLS connection is malware-related, wherein the augmented traffic data comprises captured TLS metadata and data indicative of packet or record lengths from the connection.
3. The method as in claim 1, wherein the connection between the client and the server uses the Tor protocol.
4. The method as in claim 1, wherein the client executes a web browser to form the connection.
5. The method as in claim 1, wherein the one or more HTTP transaction labels is indicative of at least one of: an HTTP method, an HTTP content type, an HTTP status code, or a type associated with the server.
6. The method as in claim 1, wherein the one or more HTTP transaction labels is indicative of at least one of: a cookie, referer, upgrade-insecure-requests, via, set-cookie, origin, or etag header field.
7. The method as in claim 1, wherein estimating the one or more HTTP transaction labels for the connection comprises: iteratively classifying transactions of the connection by classifying a particular one of the transactions based in part on classification results from one or more previously classified transactions of the connection.
8. The method as in claim 1, wherein the second machine learning-based classifier is a multi-class classifier.
9. An apparatus, comprising: one or more network interfaces to communicate with a network; a processor coupled to the network interfaces and configured to execute one or more processes; and a memory configured to store a process executable by the processor, the process when executed configured to: receive captured traffic data regarding a Transport Layer Security (TLS) connection between a client and a server; apply a first machine learning-based classifier to TLS records from the traffic data to label each of the TLS records as either a TLS record that includes Hypertext Transfer Protocol (HTTP) header information comprising one or more HTTP header fields or a TLS record that does not include the HTTP header information; estimate one or more HTTP transaction labels for the connection by applying a second machine learning-based classifier to the identified set of TLS records that include the HTTP header information; augment the captured traffic data with the one or more HTTP transaction labels; and cause performance of a network security function based on the augmented traffic data, wherein the TLS records remain encrypted during classification by the first and second machine learning-based classifiers.
10. The apparatus as in claim 9, wherein the apparatus causes performance of the network security function by: determining, based on the augmented traffic data, whether the TLS connection is malware-related, wherein the augmented traffic data comprises captured TLS metadata and data indicative of packet or record lengths from the connection.
11. The apparatus as in claim 9, wherein the connection between the client and the server uses the Tor protocol.
12. The apparatus as in claim 9, wherein the client executes a web browser to form the connection.
13. The apparatus as in claim 9, wherein the one or more HTTP transaction labels is indicative of at least one of: an HTTP method, an HTTP content type, an HTTP status code, or a type associated with the server.
14. The apparatus as in claim 9, wherein the one or more HTTP transaction labels is indicative of at least one of: a cookie, referer, upgrade-insecure-requests, via, set-cookie, origin, or etag header field.
15. The apparatus as in claim 9, wherein the apparatus estimates the one or more HTTP transaction labels for the connection by: iteratively classifying transactions of the connection by classifying a particular one of the transactions based in part on classification results from one or more previously classified transactions of the connection.
16. The apparatus as in claim 9, wherein the second machine learning-based classifier is a multi-class classifier.
17. A tangible, non-transitory, computer-readable medium storing program instructions that cause a traffic analysis service to execute a process comprising: receiving, at the traffic analysis service, captured traffic data regarding a Transport Layer Security (TLS) connection between a client and a server; applying, by the traffic analysis service, a first machine learning-based classifier to TLS records from the traffic data to label each of the TLS records as either a TLS record that includes Hypertext Transfer Protocol (HTTP) header information comprising one or more HTTP header fields or a TLS record that does not include the HTTP header information; estimating, by the traffic analysis service, one or more HTTP transaction labels for the connection by applying a second machine learning-based classifier to the identified set of TLS records that include the HTTP header information; augmenting, by the traffic analysis service, the captured traffic data with the one or more HTTP transaction labels; and causing, by the traffic analysis service, performance of a network security function based on the augmented traffic data, wherein the TLS records remain encrypted during classification by the first and second machine learning-based classifiers.
18. The computer readable medium as in claim 17, wherein causing performance of the network security function comprises: determining, by the traffic analysis service and based on the augmented traffic data, whether the TLS connection is malware-related, wherein the augmented traffic data comprises captured TLS metadata and data indicative of packet or record lengths from the connection.
</claims>
</document>
