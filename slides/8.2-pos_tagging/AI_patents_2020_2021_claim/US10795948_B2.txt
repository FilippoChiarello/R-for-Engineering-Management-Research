<document>

<filing_date>
2016-11-29
</filing_date>

<publication_date>
2020-10-06
</publication_date>

<priority_date>
2016-11-29
</priority_date>

<ipc_classes>
G06F16/00,G06F16/21,G06F16/951,G06F17/30,G06F7/00,H04L29/06,H04L29/14
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
LEE, CHUL WON
YOON, MIN JI
</inventors>

<docdb_family_id>
62190627
</docdb_family_id>

<title>
Remote authentication in a database system
</title>

<abstract>
A computer system is configured to provide a database system. The computer system comprises one or more processors, a primary database system implemented by the one or more processors, and a secondary database system implemented by the one or more processors. The secondary database system is configured as a hot-standby system for the primary database system. The secondary database system is capable of providing at least a minimum amount of essential functionality of the primary database system during a disruption to the primary database system. The secondary database system is configured by programming instructions, executable on the computer system, to cause the one or more processors to accept an authentication request from the client application to allow user access to the secondary database to execute the query and delegate an authentication check to the primary database system using connection credentials received from the client application. Related apparatus, systems, techniques and articles are also described.
</abstract>

<claims>
1. A computer system comprising: a primary database system implemented by a first set of one or more processors; and a secondary database system implemented by a second set of one or more processors, the secondary database system configured as a hot-standby system for the primary database system, wherein the secondary database manages load balancing by providing at least a minimum amount of essential functionality of the primary database system during a disruption to the primary database system; wherein the secondary database system is configured by programming instructions, executable on the computer system, to cause the second set of one or more processors to: accept, by the secondary database system, an authentication request from a client application on a client device to allow user access to the secondary database to execute a query, and delegate, by the secondary database system, an authentication check to the primary database system using connection credentials received from the client application; and wherein the primary database system is configured by programming instructions, executable on the computer system, to cause the first set of one or more processors to: perform, by the primary database system, the authentication check, wherein authentication tokens are bi-directionally exchanged between the secondary database system and the client device; and provide, by the primary database system, an indication to the secondary database system that encrypted communication between the client device and the secondary database system is authorized for an open connection based on the authentication tokens.
2. The computer system according to claim 1, wherein the programming instructions to cause the one or more processors to accept an authentication request from a client application to allow user access to the secondary database to execute a query comprise programming instructions to cause the one or more processors to, responsive to receiving a query from a client application that has been routed to the secondary database system, accept an authentication request from the client application to allow user access to the secondary database to execute the query.
3. The computer system according to claim 1, wherein the programming instructions to cause the one or more processors to delegate an authentication check to the primary database system comprise programming instructions to cause the one or more processors to: transmit connection credentials for a particular user received from the client application to the primary database system; responsive to the primary database system authenticating the connection credentials, receive authorization from the primary database system to execute the query; and responsive to receiving authorization, executing the query from the client application.
4. The computer system according to claim 3, wherein the primary database system is configured by programming instructions, executable on the computer system, to cause the one or more processors to: retrieve connection credentials for a particular user from the secondary database system, verify the connection credentials; and responsive to verifying the connection credentials, transmit authorization to the secondary database system to execute the query.
5. The computer system according to claim 1, wherein the programming instructions to cause the one or more processors to receive authorization from the primary database system to allow the client application access to the secondary database system comprises programming instructions to cause the one or more processors to retrieve a security key associated with the user from the primary database system and use the security key to encrypt communication between the secondary database system and the client application.
6. The computer system according to claim 1, wherein the primary database system is configured by programming instructions, executable on the computer system, to cause the one or more processors to: retrieve connection credentials for a particular user from the secondary database system, verify the connection credentials; and responsive to verifying the connection credentials, transmit authorization to the secondary database system to execute the query.
7. The computer system according to claim 1, wherein the connection credentials comprise a session cookie or a user name and password.
8. The computer system according to claim 1, wherein the programming instructions to cause the one or more processors to delegate an authentication check to the primary database system using connection credentials received from the client application comprises programming instructions to cause the one or more processors to transmit session variables associated with the user from the primary database system to the secondary database system.
9. A computer-implemented method in a computer system comprising a primary database system and a secondary database system, the method comprising: responsive to receiving a query from a client application that has been routed to the secondary database system at the request of the primary database system, accepting, by the secondary database system, an authentication request from the client application on a client device to allow user access to the secondary database to execute the query, delegating, by the secondary database system, an authentication check to the primary database system using connection credentials received from the client application, performing, by the primary database system, the authentication check, wherein authentication tokens are bi-directionally exchanged between the secondary database system and the client device, and provide, by the primary database system, an indication to the secondary database system that encrypted communication between the client device and the secondary database system is authorized for an open connection based on the authentication tokens, wherein the primary database system comprises a first set of one or more processors and the secondary database system comprises a second set of one or more processors, the secondary database system configured as a backup system for the primary database system, wherein the secondary database manages load balancing by providing at least a minimum amount of essential functionality of the primary database system during a disruption to the primary database system.
10. The method according to claim 9, wherein delegating an authentication check to the primary database system comprises: transmitting connection credentials for a particular user received from the client application to the primary database system; responsive to the primary database system authenticating the connection credentials, receiving authorization from the primary database system to execute the query; and responsive to receiving authorization, executing the query from the client application.
11. The method according to claim 10, further comprising: retrieving, at the primary database system, connection credentials for a particular user from the secondary database system, verifying, at the primary database system, the connection credentials; and responsive to verifying the connection credentials, transmitting, from the primary database system, authorization to the secondary database system to execute the query.
12. The method according to claim 9, wherein receiving authorization from the primary database system to allow the client application access to the secondary database system comprises retrieving a security key associated with the user from the primary database system and using the security key to encrypt communication between the secondary database system and the client application.
13. The method according to claim 9, wherein the connection credentials comprise a session cookie.
14. The method according to claim 9, wherein the connection credentials comprise a user name and password.
15. The method according to claim 9, wherein delegating an authentication check to the primary database system using connection credentials received from the client application comprises transmitting session variables associated with the user from the primary database system to the secondary database system.
16. A non-transitory computer readable storage medium embodying programming instructions for performing a method, the method comprising: responsive to receiving a query from a client application on a client device that has been routed to a secondary database system at the request of a primary database system, accepting, at the secondary database system, an authentication request from the client application to allow user access to the secondary database to execute the query, delegating, by the secondary database system, an authentication check to the primary database system using connection credentials received from the client application, and performing, by the primary database system, the authentication check, wherein authentication tokens are bi-directionally exchanged between the secondary database system and the client device; and providing, by the primary database system, an indication to the secondary database system that encrypted communication between the client device and the secondary database system is authorized for an open connection based on the authentication tokens, wherein the primary database system comprises a first set of one or more processors and the secondary database system comprises a second set of one or more processors, the secondary database system configured as a backup system for the primary database system, wherein the secondary database manages load balancing by providing at least a minimum amount of essential functionality of the primary database system during a disruption to the primary database system.
17. The non-transitory computer readable storage medium according to claim 16, wherein delegating an authentication check to the primary database system comprises: transmitting, from the secondary database system, connection credentials for a particular user received from the client application to the primary database system; responsive to the primary database system authenticating the connection credentials, receiving, at the secondary database system, authorization from the primary database system to execute the query; and responsive to receiving authorization, executing, at the secondary database system, the query from the client application.
18. The non-transitory computer readable storage medium according to claim 17, wherein the method further comprises: retrieving, at the primary database system, connection credentials for a particular user from the secondary database system, verifying, at the primary database system, the connection credentials; and responsive to verifying the connection credentials, transmitting, from the primary database system, authorization to the secondary database system to execute the query.
19. The non-transitory computer readable storage medium according to claim 16, wherein receiving authorization from the primary database system to allow the client application access to the secondary database system comprises retrieving a security key associated with the user from the primary database system and using the security key to encrypt communication between the secondary database system and the client application.
20. The non-transitory computer readable storage medium according to claim 16, wherein delegating an authentication check to the primary database system using connection credentials received from the client application comprises transmitting session variables associated with the user from the primary database system to the secondary database system.
</claims>
</document>
