<document>

<filing_date>
2020-05-15
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-05-31
</priority_date>

<ipc_classes>
G06F8/10,G06F8/33,G06N20/00
</ipc_classes>

<assignee>
APPLE
</assignee>

<inventors>
SIRACUSA, MICHAEL R.
BRENNAN, Michael Ryan
KATTI, Anil Kumar
RACHWALSKI, Andrew Joseph
FARHADI, Mohammad Reza
WADHWA, Aseem
</inventors>

<docdb_family_id>
73551308
</docdb_family_id>

<title>
INTEGRATION OF LEARNING MODELS INTO A SOFTWARE DEVELOPMENT SYSTEM
</title>

<abstract>
The subject technology provides for determining that a machine learning model in a first format includes sufficient data to conform to a particular model specification in a second format, the second format corresponding to an object oriented programming language), wherein the machine learning model includes a model parameter of the machine learning model. The subject technology transforms the machine learning model into a transformed machine learning model that is compatible with the particular model specification. The subject technology generates a code interface and code for the transformed machine learning model, the code interface including code statements in the object oriented programming language, the code statements corresponding to an object representing the transformed machine learning model and the object includes an interface to update the model parameter. Further, the subject technology provides the generated code interface and the code for display in an integrated development environment (IDE), the IDE enabling modifying of the generated code interface and the code.
</abstract>

<claims>
1. A method comprising: determining that a machine learning model in a first format includes sufficient data to conform to a particular model specification in a second format, the second format corresponding to a second format that is compatible with an integrated development environment (IDE), wherein the machine learning model includes a model parameter of the machine learning model; transforming the machine learning model into a transformed machine learning model that is compatible with the particular model specification; generating a code interface and code for the transformed machine learning model, the code interface including code statements in an object oriented programming language, the code statements corresponding to an object representing the transformed machine learning model and the object includes an interface to update the model parameter; and providing the generated code interface and the generated code for display in the IDE, the IDE enabling modifying of the generated code interface and the code.
2. The method of claim 1, wherein a model parameter is selected from the group consisting of a learning rate, threshold, type of model, and weight.
3. The method of claim 1, wherein the machine learning model includes at least one of an input interface and an output interface.
4. The method of claim 1, wherein the update interface of the object is a description of a capability of the object without a specific implantation.
5. The method of claim 1, further comprising: receiving additional code corresponding to calling a function provided by the code for the transformed machine learning model.
6. The method of claim 5, further comprising: compiling the code interface, the code for the transformed machine learning model, and the additional code into a compiled machine learning model, wherein compiling includes generating object code for the object oriented programming language and the object includes an object function call for updating the model parameter; and sending the compiled machine learning model as part of a software package to a runtime environment of a target computing device for execution.
7. The method of claim 6, wherein the function call is one of a get model parameter value and set model parameter value.
8. The method of claim 1, wherein the machine learning model indicates that the model parameter is updateable.
9. The method of claim 1, wherein the machine learning model does not indicate that the model parameter is updateable and the model parameter is made updateable after the machine learning model is transformed.
10. A non-transitory machine-readable medium having executable instructions to cause one or more processing units to perform a method comprising: determining that a machine learning model in a first format includes sufficient data to conform to a particular model specification in a second format, the second format corresponding to a second format that is compatible with an integrated development environment (IDE), wherein the machine learning model includes a model parameter of the machine learning model; transforming the machine learning model into a transformed machine learning model that is compatible with the particular model specification; generating a code interface and code for the transformed machine learning model, the code interface including code statements in an object oriented programming language, the code statements corresponding to an object representing the transformed machine learning model and the object includes an interface to update the model parameter; and providing the generated code interface and the generated code for display in the IDE, the IDE enabling modifying of the generated code interface and the code.
11. The machine-readable medium of claim 10, wherein a model parameter is selected from the group consisting of a learning rate, threshold, type of model, and weight.
12. The machine-readable medium of claim 10, wherein the machine learning model includes at least one of an input interface and an output interface.
13. The machine-readable medium of claim 10, wherein the update interface of the object is a description of a capability of the object without a specific implantation.
14. The machine-readable medium of claim 10, further comprising: receiving additional code corresponding to calling a function provided by the code for the transformed machine learning model.
15. The machine-readable medium of claim 14, further comprising: compiling the code interface, the code for the transformed machine learning model, and the additional code into a compiled machine learning model, wherein compiling includes generating object code for the object oriented programming language and the object includes an object function call for updating the model parameter; and sending the compiled machine learning model as part of a software package to a runtime environment of a target computing device for execution.
16. The machine-readable medium of claim 15, wherein the function call is one of a get model parameter value and set model parameter value.
17. The machine-readable medium of claim 10, wherein the machine learning model indicates that the model parameter is updateable.
18. The machine-readable medium of claim 10, wherein the machine learning model does not indicate that the model parameter is updateable and the model parameter is made updateable after the machine learning model is transformed.
19. A device comprising: a processor; a memory coupled to the processor though a bus; and a process executed from the memory by the processor causes the processor to determine that a machine learning model in a first format includes sufficient data to conform to a particular model specification in a second format, the second format corresponding to a second format that is compatible with an integrated development environment (IDE), wherein the machine learning model includes a model parameter of the machine learning model, transform the machine learning model into a transformed machine learning model that is compatible with the particular model specification, generate a code interface and code for the transformed machine learning model, the code interface including code statements in an object oriented programming language, the code statements corresponding to an object representing the transformed machine learning model and the object includes an interface to update the model parameter, and provide the generated code interface and the generated code for display in the IDE, the IDE enabling modifying of the generated code interface and the code.
20. The device of claim 19, wherein the machine learning model includes at least one of an input interface and an output interface.
</claims>
</document>
