<document>

<filing_date>
2017-03-23
</filing_date>

<publication_date>
2020-02-18
</publication_date>

<priority_date>
2016-03-23
</priority_date>

<ipc_classes>
G06F11/36,G06F16/9535,G06F17/00,G06F17/30,G06F8/30,G06F8/34,G06F8/35,G06F8/40,G06F9/448,G06F9/48
</ipc_classes>

<assignee>
FOGHORN SYSTEMS
</assignee>

<inventors>
LUCAS, JASON
SHARMA, ABHISHEK
</inventors>

<docdb_family_id>
59897282
</docdb_family_id>

<title>
Composition of pattern-driven reactions in real-time dataflow programming
</title>

<abstract>
A technique implements a dataflow graph, taking a number of streams of data inputs and transforms these inputs into a number of streams of outputs. The dataflow graph can perform pattern matching. The technique implements reactions via the composition of pattern matching across joined streams of input data. A completeness of matching an input sequence to a particular input pattern can be characterized as having at least three different degrees, such as cold (not yet matched), warm (e.g., minimally matched), and hot (e.g., maximally matched). The input pattern to be matched can have a variable length, including zero length or unlimited or arbitrarily large length. Data flows can be on a push basis or pull basis, or a combination, and may change depending on the state.
</abstract>

<claims>
1. A system comprising: a plurality of agents, each coupled to a sensor, wherein each of the agents receives a data from the sensors; a data bus, coupled to the plurality of agents; and a data processor, coupled to the data bus, wherein the data processor transforms streams of input into streams of output by forming a series of interconnected transductions, each transduction comprises one or more inputs, each given as a reference to at least one of an external data source or a transducer, one or more outputs, each given as a reference either to at least one of an external data sink or a transducer, and for each input, a pattern to be applied to the input, to filter, collect, and organize the raw input into a more useful, partially processed form, and to remove erroneous input, wherein at least one agent comprises: an input queue comprising first memory locations in a computer memory, wherein an input queue stores in the first memory locations a first-in, first-out sequence of tokens to be processed and a time stamp associated with each token in the queue indicates a time when the associated token entered the input queue, and the tokens are received by the input queue over a network; a driver, coupled to the input queue, wherein the driver processes the tokens in the input queue without backtracking and identifies patterns in the sequence of tokens that match one or more predetermined input patterns, and upon identifying a matched predetermined input pattern, generates an outgoing event output; an output queue, coupled to the driver, comprising second memory locations in the computer memory, wherein the output queue stores in the second memory locations a first-in, first-out sequence of the outgoing events generated by the driver; a state table, coupled to the driver, wherein the state table stores the predetermined input patterns in a state table format; and a state stack, coupled to the driver, comprising third memory locations in the computer memory, wherein the state stack stores in the third memory locations a last-in, first-out sequential storage of frames, and a frame comprises a translation state number, a symbol, and a deadline, wherein a result of attempting to match an input pattern to an input sequence can have at least three different states, the at least three different states comprising until a minimum input of the input pattern has been matched, the attempt to match will be in a first state, after the minimum input has been matched and before a maximum input has been matched, the attempt to match will be in a second state, after the maximum input has been matched, the attempt to match will be in a third state, the first state is referred to as a "cold" state, the second state is referred to as a "warm" state, and the third state is referred to as a "hot" state, data flows on a push basis from a sensor to an agent, and the data flows on a pull basis by an agent from a sensor when all of the inputs of an agent are at least in the second state and when one or more of the inputs of the sensor are in the third state, and the result of a triggering expression is in the second state, and an agent may accelerate its sensors that are in the second state thus forcing each such sensors to consider its pattern fully matched and thus to become in the third state and to produce its output, thereby effectively allowing the agent to pull data from its sensors.
2. The system of claim 1 wherein each transduction comprises a triggering expression that is used to determine when to evaluate a filtering expression.
3. The system of claim 2 wherein each transduction comprises the filtering expression, where the filtering expression is specified in the domain of matched inputs and the filtering expression yields a Boolean result that determines when a transduction will produce outputs.
4. The system of claim 2 wherein the triggering expression is defined as a tree of nodes, and each node is at least one of a reference to one of the inputs, a time out, which is given as an interval of time in a unit of time, a binary conjunction operator, which comprises at least two children, each of which is represented by another triggering expression node, and a binary disjunction operator, which comprises at least two children, each of which is represented by another triggering expression node.
5. The system of claim 1 wherein the triggering expression is defined as a tree of nodes, and each node is at least one of a reference to one of the inputs, a time out, which is given as an interval of time in a unit of time, a binary conjunction operator, which comprises at least two children, each of which is represented by another triggering expression node, and a binary disjunction operator, which comprises at least two children, each of which is represented by another triggering expression node.
6. The system of claim 1 wherein an input pattern can match an input sequence of variable length, including zero length or unlimited length.
7. The system of claim 1 wherein a result of attempting to match an input pattern to an input sequence can have at least three different states.
8. The system of claim 1 wherein data flows on a push basis from a sensor to an agent.
9. The system of claim 1 wherein definitely long or open-ended patterns are allowed to be usefully employed in transductions.
10. The system of claim 1 wherein at least one of the sensors is a hardware device that transforms a physical property into a digital quantity, which is streamed.
11. The system of claim 1 wherein the sensors comprise hardware sensors.
12. The system of claim 1 wherein the sensors comprise virtual sensors.
13. The system of claim 1 wherein the sensors comprise hardware and virtual sensors.
14. The system of claim 1 wherein the at least one agent comprises a computer processor.
15. The system of claim 1 wherein the driver comprises a computer processor.
16. The system of claim 1 wherein a predetermined input pattern comprises an open ended length.
17. The system of claim 1 wherein a predetermined input pattern comprises a definite length.
18. The system of claim 1 wherein each transduction comprises a computation.
19. A method comprising: interconnecting a plurality of agents and sensors, wherein the agents are coupled to the sensors and receive streams of data from the sensors; converting the streams of input from the sensors into streams of output via a series of interconnected transductions, wherein each transduction comprises one or more inputs, each given as a reference either to an external data source or a transducer, one or more outputs, each given as a reference either to an external data sink or a transducer, for each input, a pattern to be applied to the input, to filter, collect, and organize the raw input into a more useful, partially processed or matched form, and to remove erroneous input, a triggering expression, used to determine when to evaluate a filtering expression, and defined as a tree of nodes, where each node is at least one of a reference to one of the inputs, a time out, given as an interval of time characterized in some convenient unit of time, a binary conjunction operator, which comprises two children, each of which is another triggering expression node, or a binary disjunction operator, which comprises two children, each of which is another triggering expression node, a filtering expression, defined in a domain of the matched inputs and yielding a Boolean result, which determines when the transduction will produce outputs, and one or more expressions defined in the domain of the matched inputs and yielding results of any combination of types which produce the outputs of the transduction, wherein at least one agent comprises: an input queue comprising first memory locations in a computer memory, wherein an input queue stores in the first memory locations a first-in, first-out sequence of tokens to be processed and a time stamp associated with each token in the queue indicates a time when the associated token entered the input queue, and the tokens are received by the input queue over a network; a driver, coupled to the input queue, wherein the driver processes the tokens in the input queue without backtracking and identifies patterns in the sequence of tokens that match one or more predetermined input patterns, and upon identifying a matched predetermined input pattern, generates an outgoing event output; an output queue, coupled to the driver, comprising second memory locations in the computer memory, wherein the output queue stores in the second memory locations a first-in, first-out sequence of the outgoing events generated by the driver; a state table, coupled to the driver, wherein the state table stores the predetermined input patterns in a state table format; and a state stack, coupled to the driver, comprising third memory locations in the computer memory, wherein the state stack stores in the third memory locations a last-in, first-out sequential storage of frames, and a frame comprises a translation state number, a symbol, and a deadline, wherein a result of attempting to match an input pattern to an input sequence can have at least three different states, the at least three different states comprising until a minimum input of the input pattern has been matched, the attempt to match will be in a first state, after the minimum input has been matched and before a maximum input has been matched, the attempt to match will be in a second state, after the maximum input has been matched, the attempt to match will be in a third state, the first state is referred to as a "cold" state, the second state is referred to as a "warm" state, and the third state is referred to as a "hot" state, data flows on a push basis from a sensor to an agent, and the data flows on a pull basis by an agent from a sensor when all of the inputs of an agent are at least in the second state and when one or more of the inputs of the sensor are in the third state, and the result of a triggering expression is in the second state, and an agent may accelerate its sensors that are in the second state thus forcing each such sensors to consider its pattern fully matched and thus to become in the third state and to produce its output, thereby effectively allowing the agent to pull data from its sensors.
20. The method of claim 19 wherein an input pattern can match an input sequence of variable length, including zero length or unlimited length.
21. The method of claim 19 wherein a completeness model of a transducer's readiness for matching is characterized by at least three different degrees, rather than two or fewer different degrees.
22. The method of claim 21 wherein the three-degree completeness model directly facilitates pattern-driven reactions to allow handling of variable-length patterns.
23. The method of claim 19 wherein data flows from producers to consumers are on a push basis, except when all of the inputs of an agent are at least in the warm state and when one or more of the inputs of the sensor are in the hot state, and the result of the triggering expression is in the warm state then the agent may accelerate its warm sensors, forcing each such sensor to consider its pattern fully matched and thus to become in the hot state and to produce its outputs thus effectively allowing the sensor to pull data other producers it is connected to, and thus allowing definitely long or open-ended patterns to be usefully employed in transductions.
24. The method of claim 19 wherein a predetermined input pattern comprises an open ended length.
25. The method of claim 19 wherein a predetermined input pattern comprises a definite length.
26. The method of claim 19 wherein each transduction comprises a computation.
</claims>
</document>
