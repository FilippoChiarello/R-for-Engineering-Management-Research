<document>

<filing_date>
2019-07-02
</filing_date>

<publication_date>
2021-01-07
</publication_date>

<priority_date>
2019-07-02
</priority_date>

<ipc_classes>
G06F16/901,G06F16/906,G06K9/00
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
EDGE, DARREN KEITH
LARSON, JONATHAN KARL
WHITE, CHRISTOPHER MILES
Evans, Nathan Roy
</inventors>

<docdb_family_id>
71094815
</docdb_family_id>

<title>
Revealing Content Reuse Using Fine Analysis
</title>

<abstract>
Systems and methods for managing content provenance are provided. A network system accesses a document of a plurality of documents to be analyzed. The network system extracts text fragments from the document including a first fragment and a second fragment. A determination is made whether each of the text fragments match an entry in a hash table. Based on a first fragment not matching any entries in the hash table, the network system creates a new entry in the hash table, whereby the first fragment is used to generate a key in the hash table. Based on a second fragment matching an entry of the hash table, the network system associates the document with a key of the matching entry in the hash table, whereby the associating comprising updating the hash table with an identifier of the document.
</abstract>

<claims>
1. A method comprising: accessing, by a networked system, a document of a plurality of documents to be analyzed; extracting, by a processor of the network system, text fragments from the document including a first fragment and a second fragment; determining, by the network system, whether each of the text fragments or derived hash keys from the text fragments matches an entry in a hash table; based on a first fragment not matching any entries in the hash table, creating, by the network system, a new entry in the hash table, the first fragment being used to generate a key for the new entry in the hash table; and based on a second fragment matching an entry of the hash table, associating the document with a key of the matching entry in the hash table, the associating comprising updating the hash table with an identifier of the document.
2. The method of claim 1, further comprising: determining the plurality of documents to be analyzed, the determining comprising using hashing and similarity scoring to identifier clusters of related documents, the plurality of documents being one of the clusters of related documents.
3. The method of claim 2, wherein the hashing comprises MinHash and the similarity scoring comprises Jaccard scoring.
4. The method of claim 1, wherein the text fragments comprise sentences.
5. The method of claim 1, wherein the key in the hash table represents a text fragment from a previously analyzed document.
6. The method of claim 1, wherein the match is a fuzzy match.
7. The method of claim 1, further comprising: receiving a selection of a document for analysis by a user; parsing the selected document into a plurality of fragments; performing a lookup in the hash table for each of the plurality of fragments to determine whether each of the plurality of fragments has a match; for matching fragments of the plurality of fragments, identifying a source document from the hash table that contributed a matching fragment; and causing presentation of an identification of the source document relative to a corresponding matching fragment of the selected document.
8. The method of claim 7, wherein the causing the presentation further comprises causing presentation of a bar chart for the source documents, the bar chart illustrating a breakdown of sources that a domain of the source document gets its content from.
9. The method of claim 7, wherein the causing the presentation further comprises causing presentation of statistics of the source document, the statistics including one or more of a publication date of the source document, a number of fragments contributed to the selected document by the source document, and a number of other documents having the matching segment of the source document.
10. The method of claim 1, further comprising: receiving a selection of a first document and a second document for comparison; parsing the first document and the second document into a plurality of content fragments; performing a Jaccard scoring process for the plurality of content fragments based on extracted words from the plurality of content fragments; identifying content fragments having a Jaccard score that exceeds a predetermine Jaccard threshold; and causing presentation of a graphical relationship between the matching fragments found in both the first document and the second document.
11. A system comprising: one or more hardware processors; and a storage device storing instructions that, when executed by the one or more hardware processors, causes the one or more hardware processors to perform operations comprising: accessing a document of a plurality of documents to be analyzed; extracting text fragments from the document including a first fragment and a second fragment; determining whether each of the text fragments or derived hash keys from the text fragments matches an entry in a hash table; based on a first fragment not matching any entries in the hash table, creating a new entry in the hash table, the first fragment being used to generate a key for the new entry in the hash table; and based on a second fragment matching an entry of the hash table, associating the document with a key of the matching entry in the hash table, the associating comprising updating the hash table with an identifier of the document.
12. The system of claim 11, wherein the operations further comprise: determining the plurality of documents to be analyzed, the determining comprising using hashing and similarity scoring to identifier clusters of related documents, the plurality of documents being one of the clusters of related documents.
13. The system of claim 12, wherein the hashing comprises MinHash and the similarity scoring comprises Jaccard scoring.
14. The system of claim 11, wherein the key in the hash table represents a text fragment from a previously analyzed document.
15. The system of claim 11, wherein the match is a fuzzy match.
16. The system of claim 11, wherein the operations further comprise: receiving a selection of a document for analysis by a user; parsing the selected document into a plurality of fragments; performing a lookup in the hash table for each of the plurality of fragments to determine whether each of the plurality of fragments has a match; for matching fragments of the plurality of fragments, identifying a source document from the hash table that contributed a matching fragment; and causing presentation of an identification of the source document relative to a corresponding matching fragment of the selected document.
17. The system of claim 16, wherein the causing the presentation further comprises causing presentation of a bar chart for the source documents, the bar chart illustrating a breakdown of sources that a domain of the source document gets its content from.
18. The system of claim 16, wherein the causing the presentation further comprises causing presentation of statistics of the source document, the statistics including one or more of a publication date of the source document, a number of fragments contributed to the selected document by the source document, and a number of other documents having the matching segment of the source document.
19. The system of claim 11, wherein the operations further comprise: receiving a selection of a first document and a second document for comparison; parsing the first document and the second document into a plurality of content fragments; performing a Jaccard scoring process for the plurality of content fragments based on extracted words from the plurality of content fragments; identifying content fragments having a Jaccard score that exceeds a predetermine Jaccard threshold; and causing presentation of a graphical relationship between the matching fragments found in both the first document and the second document.
20. A machine-readable storage medium storing instructions that, when executed by one or more processors of a machine, cause the one or more processors to perform operations comprising: accessing a document of a plurality of documents to be analyzed; extracting text fragments from the document including a first fragment and a second fragment; determining whether each of the text fragments or derived hash keys from the text fragments matches an entry in a hash table; based on a first fragment not matching any entries in the hash table, creating a new entry in the hash table, the first fragment being used to generate a key for the new entry in the hash table; and based on a second fragment matching an entry of the hash table, associating the document with a key of the matching entry in the hash table, the associating comprising updating the hash table with an identifier of the document.
</claims>
</document>
