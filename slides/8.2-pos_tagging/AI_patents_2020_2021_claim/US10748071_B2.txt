<document>

<filing_date>
2016-01-04
</filing_date>

<publication_date>
2020-08-18
</publication_date>

<priority_date>
2016-01-04
</priority_date>

<ipc_classes>
G06F11/34,G06N7/00,H04L12/26
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
FOURNIER, FABIANA
KOFMAN, ALEXANDER
NISENSON, MORDECHAI
SKARBOVSKY, INNA
</inventors>

<docdb_family_id>
59226941
</docdb_family_id>

<title>
Method and system for complex event processing with latency constraints
</title>

<abstract>
A computer-implemented method, computerized apparatus and computer program product, the method comprising: receiving a latency constraint on a Complex Event Processing (CEP) computation; monitoring progress of the CEP computation to determine a risk of violating the latency constraint; and, responsive to determining that a risk of violating the latency constraint exists, outputting at least one possible result of the CEP computation.
</abstract>

<claims>
1. A computer-implemented method comprising: receiving a latency constraint on a Complex Event Processing (CEP) computation; monitoring progress of the CEP computation to determine a risk of violating the latency constraint, wherein monitoring the progress of the CEP computation comprises redistributing a latency budget for a completed calculation by a first event processing agent (EPA) among latency budgets of one or more downstream EPAs along a computation path of the CEP computation; responsive to determining that a risk of violating the latency constraint exists, suspending the CEP computation and outputting at least one possible result of the CEP computation, the latency constraint corresponding to a combination of at least one timeout value and a join operation; and maintaining a state of a sub-network calculating the CEP computation following a timeout event.
2. The computer-implemented method of claim 1, further comprising maintaining a confidence level for each possible result of the CEP computation.
3. The computer-implemented method of claim 2, further comprising updating the confidence level dynamically based on the progress of the CEP computation.
4. The computer-implemented method of claim 2, further comprising outputting the confidence level for each of the at least one possible result.
5. The computer-implemented method of claim 2, wherein the at least one possible result consists of the result having the highest confidence level.
6. The computer-implemented method of claim 2, wherein said outputting is conditioned on the confidence level exceeding a predetermined threshold.
7. The computer-implemented method of claim 1, further comprising halting the CEP computation in addition to said outputting.
8. The computer-implemented method of claim 1, wherein the CEP system comprises a plurality of Event Processing Agents (EPAs) configured to receive one or more input events from either an event producer or another EPA and to provide an output event to an event consumer or another EPA, thereby forming the computation path of the CEP computation, wherein the method further comprises: obtaining the latency budget for each EPA along the path of the CEP computation; monitoring the latency of each EPA to determine whether the EPA is to complete computation within the latency budget; and, responsive to determining the EPA not completing computation within the latency budget, emitting at least one possible output of the EPA.
9. The computer-implemented method of claim 8, further comprising emitting confidence level associated with the at least one possible output.
10. The computer-implemented method of claim 8, further comprising halting the computation by the EPA in addition to said emitting.
11. The computer-implemented method of claim 8, wherein said obtaining comprises: estimating, for each EPA along the path of the CEP computation, a relative latency contributed by the EPA; and, computing the latency budget for each EPA, based on the latency constraint and relative latency.
12. The computer-implemented method of claim 8, further comprising: responsive to the EPA completing computation earlier than the latency budget thereof, updating the latency budget of the EPAs along the remainder of the path of the CEP computation.
13. The computer-implemented method of claim 12, wherein said updating is performed in accordance with the relative latencies.
14. The computer-implemented method of claim 8, wherein each EPA is associated with a set of functions having different performance characteristics and accuracy level, wherein a function from the set is dynamically selected for execution to optimize accuracy under the latency constraint.
15. The computer-implemented method of claim 1, comprising skipping at least one portion of the CEP computation in response to determining that the at least one portion of the CEP computation cannot be completed in time.
16. A computerized apparatus having a processor, the processor being adapted to perform the steps of: receiving a latency constraint on a Complex Event Processing (CEP) computation; monitoring progress of the CEP computation to determine a risk of violating the latency constraint, wherein monitoring the progress of the CEP computation comprises redistributing a latency budget for a completed calculation by a first event processing agent (EPA) among latency budgets of one or more downstream EPAs along a computation path of the CEP computation; responsive to determining that a risk of violating the latency constraint exists, suspending the CEP computation and outputting at least one possible result of the CEP computation, the latency constraint corresponding to a combination of at least one timeout value and a join operation; and maintaining a state of a sub-network calculating the CEP computation following a timeout event.
17. The computerized apparatus of claim 16, wherein the processor is further adapted for maintaining a confidence level for each possible result of the CEP computation.
18. The computerized apparatus of claim 17, wherein the processor is further adapted for outputting the confidence level for each of the at least one possible result.
19. The computerized apparatus of claim 16, wherein the CEP system comprises a plurality of Event Processing Agents (EPAs) configured to receive one or more input events from either an event producer or another EPA and to provide an output event to an event consumer or another EPA, thereby forming the computation path of the CEP computation, wherein the processor is further adapted for: obtaining the latency budget for each EPA along the path of the CEP computation; monitoring the latency of each EPA to determine whether the EPA is to complete computation within the latency budget; and, responsive to determining the EPA not completing computation within the latency budget, emitting at least one possible output of the EPA.
20. The computerized apparatus of claim 19, wherein said obtaining comprises: estimating, for each EPA along the path of the CEP computation, a relative latency contributed by the EPA; and, computing the latency budget for each EPA, based on the latency constraint and relative latency.
21. A non-transitory computer program product comprising a computer readable storage medium retaining program instructions, which program instructions when read by a processor, cause the processor to perform a method comprising: receiving a latency constraint on a Complex Event Processing (CEP) computation; monitoring progress of the CEP computation to determine a risk of violating the latency constraint, wherein monitoring the progress of the CEP computation comprises redistributing a latency budget for a completed calculation by a first event processing agent (EPA) among latency budgets of one or more downstream EPAs along a computation path of the CEP computation; responsive to determining that a risk of violating the latency constraint exists, suspending the CEP computation and outputting at least one possible result of the CEP computation, the latency constraint corresponding to a combination of at least one timeout value and a join operation; and maintaining a state of a sub-network calculating the CEP computation following a timeout event.
</claims>
</document>
