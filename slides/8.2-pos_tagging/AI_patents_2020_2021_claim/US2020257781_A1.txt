<document>

<filing_date>
2020-02-06
</filing_date>

<publication_date>
2020-08-13
</publication_date>

<priority_date>
2011-03-24
</priority_date>

<ipc_classes>
G06F16/2457,G06F21/31,G06F21/32,G06F21/36
</ipc_classes>

<assignee>
IMPERVA
</assignee>

<inventors>
PAXTON, TYLER JAMES
TATORIS, REID MICHAEL
BURKETT, STEVEN P.
TRENDA, BENJAMIN
JANOWER, ADAM MICHAEL
JAKUPOVIC, ELVIS
</inventors>

<docdb_family_id>
46878469
</docdb_family_id>

<title>
METHOD FOR GENERATING A HUMAN LIKENESS SCORE
</title>

<abstract>
One embodiment of the invention is a method utilizing a CAPTCHA to generate a human likeness score including blocks: a) receiving a user solution to the CAPTCHA; b) receiving a user interaction pattern descriptive of an interaction undertaken by the user, through a graphical interface of the CAPTCHA, to achieve the user solution; c) determining the accuracy of the user solution; d) comparing the user interaction pattern against an interaction model generated from interaction patterns of previous users; e) calculating the human likeness score based upon the determination of block c) and the comparison of block d), wherein the human likeness score lies within a continuum of human likeness scores.
</abstract>

<claims>
1. (canceled)
2. A method, comprising: receiving a request for a Completely Automated Public Turing test to tell Computers and Humans Apart (CAPTCHA) to be displayed in a graphical interface; generating a first object and a second object to be included in the CAPTCHA; pseudorandomly assigning a visual characteristic of the first object to differentiate the CAPTCHA from a previously-generated CAPTCHA such that a solution to the CAPTCHA is unique from a solution to the previously-generated CAPTCHA; generating the CAPTCHA including the first object having the visual characteristic and the second object; generating an instruction for solving the CAPTCHA based on the visual characteristic of the first object; and sending the CAPTCHA and the instruction to display the CAPTCHA in the graphical interface such that a human user is distinguished from automated software in response to a user interaction pattern associated with the CAPTCHA entered by a user via the graphical interface.
3. The method of claim 2, wherein: pseudorandomly assigning the visual characteristic of the first object includes pseudorandomly assigning at least one of an initial location, an initial orientation, an initial speed, an initial direction of motion, an initial color, an initial size, an initial orientation, an initial shape, or an initial context of the first object within the graphical interface.
4. The method of claim 2, wherein: pseudorandomly assigning the visual characteristic of the first object includes pseudorandomly assigning the visual characteristic by accessing a clock instance, stepping through the digits of pi, or pseudorandomly generating a number.
5. The method of claim 2, wherein: the first object moves within the graphical interface from a first location at a first time to a second location at a second time; and the instruction for solving the CAPTCHA at the first time is different from the instruction for solving the CAPTCHA at the second time.
6. The method of claim 2, wherein the user interaction pattern includes at least one of a mouse interaction, a touch interaction, a joystick interaction, an arrow interaction, a facial expression, an arrow interaction, or a voice command.
7. The method of claim 2, further comprising: determining the user interaction pattern associated with a user input entered by the user; calculating a human likeness score based on the user interaction pattern and a user interaction model generated from interaction patterns of previous human users to indicate if the user input is provided by the human user or the automated software.
8. The method of claim 2, further comprising: selecting a prompt action from a plurality of prompt actions associated with the visual characteristic of the first object; generating the CAPTCHA including the prompt action; the instruction includes instructions for solving the CAPTCHA based on the prompt action.
9. An apparatus, comprising: a database; and a server operatively coupled to the database, the server configured to: receive a request for a human likeness score of a user accessing a service provided by a host compute device; collect a cursor motion entered by the user associated with a Completely Automated Public Turing test to tell Computers and Humans Apart (CAPTCHA) when accessing a graphical user interface (GUI) associated with the service; identify a pattern in the cursor motion by the user; retrieve a motion model characterizing patterns in cursor motions previously entered into graphical user interfaces by known humans different from the user; compare the pattern in the cursor motion by the user with the motion model; calculate the human likeness score of the user based on the comparison of the pattern in the cursor motion with the motion model; compare the human likeness score of the user with a threshold likeness score; and send the comparison of the human likeness score with the threshold likeness score to the host compute device such that the host compute device can allow or restrict access to the service by the user.
10. The apparatus of claim 9, wherein: the server is configured to identify the pattern in the cursor motion is based on at least one of a geometry of a path of the cursor motion, an average noise in the path of the cursor motion, a length of the path of the cursor motion, an average speed of the cursor motion, or where along the path of the cursor motion a mouse click is generated.
11. The apparatus of claim 9, wherein: the server is configured to identify the pattern in the cursor motion is based on a geometry of a path of the cursor motion, the geometry of the path defined by one or more visible angles of direction change or one or more visible linearities of portions of the path of the cursor motion.
12. The apparatus of claim 9, wherein: the server is configured to extract a noise component from the cursor motion, the cursor motion including a cursor input path within the GUI having smooth input portions and oscillation input portions, the noise component being defined by at least some of the oscillation input portions of the cursor input path; the server is configured to access a noise model defining input noise characteristics of cursor inputs previously entered into graphical user interfaces by known humans different from the user; and the server is configured to calculate the human likeness score of the user is based on a comparison of the noise component to the noise model.
13. The apparatus of claim 9, wherein: the motion model includes a model signal-to-noise ratio pattern; the server is configured to determine a signal-to-noise ratio of the cursor motion; the server is configured to compare the signal-to-noise ratio of the cursor motion with the model signal-to-noise ratio pattern; the server is configured to calculate the human likeness score of the user based on the comparison of the signal-to-noise ratio of the cursor motion with the model signal-to-noise ratio pattern.
14. The apparatus of claim 9, wherein: the motion model includes a decision tree having a plurality of decision elements to select the human likeness score.
15. The apparatus of claim 9, wherein: the motion model includes a machine learning algorithm.
16. The apparatus of claim 9, further comprising: categorizing the user into a user group from a plurality of user groups based on the human likeness score, the plurality of user groups including at least one of automated software, human spammer, or human.
17. The apparatus of claim 16, wherein the plurality of user groups includes a plurality of subgroups including at least one of demographic subgroups for humans or location subgroups for human spammers.
18. The apparatus of claim 9, wherein: the cursor motion entered by the user includes a solution to the CAPTCHA and user interaction within the GUI; comparing the pattern in the cursor motion by the user with the motion model includes (1) comparing the solution to the CAPTCHA with a reference CAPTCHA solution and (2) comparing a pattern of the user interaction with a model user interaction pattern in the motion model; and calculating the human likeness score of the user by calculating a weighted average based on (1) the comparison of the solution to the CAPTCHA with the reference CAPTCHA solution and (2) the comparison of the pattern of the user interaction with the model user interaction pattern.
19. The apparatus of claim 18, further comprising: determining a first reliability value based on the comparison of the solution to the CAPTCHA with the reference CAPTCHA; determining a second reliability value based on the comparison of the pattern of the user interaction with the model user interaction pattern; and calculating the human likeness score of the user based on the first reliability value and the second reliability value.
20. The apparatus of claim 9, furthering comprising: collecting identification data of the user; and associating the identification data of the user with a human determination based on the comparison of the human likeness score of the user with the threshold likeness score.
21. A non-transitory processor-readable medium storing code representing instructions to be executed by a processor, the code comprising code to cause the processor to: collect a cursor motion entered by a user associated with a Completely Automated Public Turing test to tell Computers and Humans Apart (CAPTCHA) when accessing a graphical user interface (GUI) associated with a service provided by a host device; identify a user interaction pattern based on the cursor motion; retrieve an interaction model characterizing interaction patterns in cursor motions previously entered into graphical user interfaces by known humans different from the user; calculate a human likeness score of the user based on a comparison of the user interaction pattern with the interaction model; categorize the user into a user group from a plurality of user groups based on the human likeness score, the plurality of user groups including at least one of automated software, human spammer, or human; and send an indication of the user group to the host device such that the host device can allow or restrict access to the service by the user based on the user group.
</claims>
</document>
