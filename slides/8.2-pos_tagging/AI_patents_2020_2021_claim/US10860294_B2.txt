<document>

<filing_date>
2019-01-25
</filing_date>

<publication_date>
2020-12-08
</publication_date>

<priority_date>
2019-01-25
</priority_date>

<ipc_classes>
G06F11/36,G06F40/211,G06F8/10
</ipc_classes>

<assignee>
ROCKWELL COLLINS
</assignee>

<inventors>
KLOSE, RONALD E.
CHAN, MAY C.
WONG, JASON L.
</inventors>

<docdb_family_id>
68917366
</docdb_family_id>

<title>
Requirements tracing precision validation tool
</title>

<abstract>
A requirements tracing validation tool analyzes an input corresponding to a requirements tracing set to identify high-level requirements and artifacts, subsystem-level requirements and artifacts, current links tracing between the requirements and the artifacts, and linguistic and logical elements of each identified artifact or link. The tool evaluates each link and provides a confidence level as to the correctness of the link. The tool may recommend additional links not already within the set and evaluate the recommended links for correctness. Further, the tool may evaluate the correctness of a given requirement over time as the requirements tracing set and its environment develops, and offer suggestions for amending the wording of artifacts and links to enhance uniformity and clarity throughout the requirements tracing set and increase the likely correctness of all traces and links within the environment.
</abstract>

<claims>
We claim:
1. A requirements tracing validation tool, comprising: data storage capable of storing processor-executable instructions; at least one natural language processing (NLP) engine trained according to one or more machine learning (ML) techniques, the at least one NLP engine configured to receive at least one requirements input comprising a plurality of requirements associated with an avionics software environment, the NLP engine trained to: identify within the requirements input at least one of: 1) a high-level artifact; 2) a subsystem-level artifact; 3) a current link associated with at least one of the subsystem-level artifact and the high-level artifact; and 4) an orphan artifact not associated with an existing link by analyzing a textual content of the requirements input; at least one link correctness (LC) engine communicatively coupled to the NLP engine and trained according to the one or more ML techniques to determine at least one of: 1) a first correctness level corresponding to the current link; 2) a recommended link associated with at least one of the subsystem-level artifact, the high-level artifact, and the orphan artifact; and 3) a second correctness level corresponding to the recommended link; and at least one ML engine communicatively coupled to the NLP engine and the LC engine, the ML engine configured to train the NLP engine and the LC engine based on one or more of a requirements training set and a prior analysis of the requirements training set.
2. The requirements tracing validation tool of claim 1, wherein: the high-level artifact includes at least one of an applicant-level requirement and a system requirement; and the subsystem-level artifact includes at least one of a subsystem requirement, a subsystem-level verification, and subsystem-level source code.
3. The requirements tracing validation tool of claim 1, wherein the first correctness level includes an assessment of the current link as one of a good link, a suspicious link, and a poor link.
4. The requirements tracing validation tool of claim 3, wherein the assessment is based on at least one correctness threshold.
5. The requirements tracing validation tool of claim 1, wherein the second correctness level corresponds to a confidence level that the recommended link should be added to the plurality of requirements.
6. The requirements tracing validation tool of claim 1, wherein the current link traces the subsystem-level artifact to the high-level artifact.
7. The requirements tracing validation tool of claim 1, wherein the LC engine is configured to: a) determine at least one third correctness level corresponding to: 1) one of the subsystem-level artifact, the high-level artifact, and the orphan artifact; and 2) a predetermined time interval; and b) generate at least one output report including at least one of the subsystem-level artifact, the high-level artifact, the orphan artifact, the third correctness level, and the time interval.
8. The requirements tracing validation tool of claim 1, wherein the ML engine is configured to generate at least one amendment, the amendment corresponding to at least one of the subsystem-level artifact, the high-level artifact, and the orphan artifact.
9. The requirements tracing validation tool of claim 1, wherein the NLP engine is configured to identify, within at least one of the subsystem-level artifact, the high-level artifact, and the orphan artifact, at least one of an associated subsystem, an associated system, an associated action, an associated feature, and an associated indicator.
10. The requirements tracing validation tool of claim 1, wherein the LC engine is configured to: generate at least one output report, the output report including at least one of the current link, the recommended link, the first correctness level, and the second correctness level; and store the output report to the data storage.
11. The requirements tracing validation tool of claim 10, wherein the requirements input is a first requirements input, the output report corresponds to a first requirements analysis, and: the LC engine is configured to perform at least one second requirements analysis based on: a) one of the first requirements input and at least one second requirements input; and b) the at least one stored output report.
12. The requirements tracing validation tool of claim 1, wherein the high-level artifact is associated with a mobile platform and the subsystem requirement is associated with a subsystem of the mobile platform.
13. A method for requirements tracing validation, the method comprising: performing at least one first training of a natural language processing (NLP) engine to analyze a textual content according to one or more machine learning (ML) techniques; performing at least one second training of a link correctness (LC) engine to assess one or more of a avionics software requirement and a link connecting a pair of the avionics software requirements according to the one or more ML techniques; receiving, via the NLP engine, at least one requirements input associated with a requirements tracing set; identifying within the requirements input at least one of a high-level artifact, a subsystem-level artifact, a current link tracing the subsystem-level artifact to the high-level artifact, and an orphan artifact not associated with an existing link by analyzing a textual content of the requirements input via the NLP engine according to the at least one first training; and determining, via the LC engine, at least one correctness level corresponding to the current link according to the at least one second training.
14. The method of claim 13, wherein the at least one correctness level is a first correctness level and determining, via the LC engine, at least one correctness level corresponding to the current link according to the at least one second training includes: determining, via the LC engine, at least one recommended link associated with at least one of the high-level artifact, the subsystem-level artifact, and the orphan artifact; and determining, via the LC engine, at least one second correctness level corresponding to the recommended link.
15. The method of claim 13, wherein determining, via the LC engine, at least one correctness level corresponding to the current link according to the at least one second training includes: assessing, via the processor, the current link as one of a good link, a suspicious link, and a poor link based on at least one correctness threshold.
16. The method of claim 13, wherein the correctness level is a first correctness level, and determining, via the LC engine, at least one correctness level corresponding to the current link according to the at least one second training includes: determining, via the processor, at least one third correctness level corresponding to 1) one of the subsystem-level artifact, the high-level artifact, and the orphan artifact and 2) a predetermined time interval.
17. The method of claim 13, further comprising: generating, via the LC engine, at least one output report corresponding to the determining; and storing the output report to a memory communicatively coupled to the LC engine.
18. The method of claim 17, wherein determining, via the LC engine, at least one correctness level corresponding to the current link according to the at least one second training includes: determining the at least one correctness level based on the at least one stored output report.
19. The method of claim 13, further comprising: determining via the LC engine, based on the correctness level, at least one amendment corresponding to at least one of the high-level artifact, the subsystem-level artifact, and the orphan artifact.
</claims>
</document>
