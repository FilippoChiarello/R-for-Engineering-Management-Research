<document>

<filing_date>
2015-04-30
</filing_date>

<publication_date>
2020-02-12
</publication_date>

<priority_date>
2014-05-12
</priority_date>

<ipc_classes>
H04L29/06
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
CRUZ MOTA, JAVIER
DI PIETRO, ANDREA
VASSEUR, JEAN-PHILIPPE
</inventors>

<docdb_family_id>
53267583
</docdb_family_id>

<title>
VOTING STRATEGY OPTIMIZATION USING DISTRIBUTED CLASSIFIERS
</title>

<claims>
1. A method of selecting a set of classifiers from a plurality of classifiers distributed in a network at a plurality of network nodes, the classifiers being selected to optimise a voting strategy for detecting network attacks on the network, the method comprising: sending (1010), by a device (31), voting optimization requests (702) to a plurality of network nodes (21, 32, 41, 42), the voting optimization requests (702) identifying a validation data set comprising a set of known data; receiving (1015), at the device (31), voting optimization data (708) from the plurality of network nodes (21, 32, 41, 42), wherein the network nodes generate the voting optimization data (708) by executing classifiers using the validation data set; selecting (1020) a set of one or more voting classifiers from among the classifiers based on the voting optimization data; and notifying (1025), by the device (31), one or more network nodes of the selection of the set of one or more voting classifiers, wherein the network nodes that are notified comprise the network nodes that host a voting classifier in the set of one or more selected voting classifiers.
2. The method as in claim 1, wherein the voting optimization requests (702) are sent to the plurality of network nodes via a network management server (150).
3. The method as in claim 1, wherein the voting optimization requests (702) are sent to a multicast group that includes the plurality of network nodes.
4. The method as in claim 1, wherein the voting optimization data (708) received from the plurality of network nodes includes a classifier identifier for a particular classifier and an output of the particular classifier based on the validation data set.
5. The method as in claim 4, wherein the voting optimization data (708) received from the plurality of network nodes includes at least one of: a confidence measurement for the output of the particular classifier or a confidence measurement for the particular classifier.
6. The method as in claim 1, further comprising:
determining a vote count threshold for the voting classifiers.
7. The method as in claim 6, further comprising:
optimizing an objective function that includes a number of correct votes and a number of correct voters to select the set of voting classifiers and to determine the vote count threshold.
8. The method as in claim 1, further comprising:
receiving a notification (806) that a classifier executed by a particular network node has been updated.
9. The method as in claim 1, further comprising: receiving the voting classifiers at a local device; and performing a vote using the voting classifiers at the local device.
10. The method as in claim 1, further comprising:
initiating a distributed vote using the voting classifiers on the plurality of network nodes.
11. An apparatus, comprising: one or more network interfaces to communicate with a low power and lossy network (LLN); a processor coupled to the network interfaces and adapted to execute one or more processes; and a memory configured to store a process executable by the processor, the process when executed operable to perform a method according to any preceding claim.
12. A tangible, non-transitory, computer-readable medium having software encoded thereon, the software when executed by a processor operable to perform a method according to any of claims 1 to 10.
</claims>
</document>
