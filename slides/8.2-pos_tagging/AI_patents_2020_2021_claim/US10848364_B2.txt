<document>

<filing_date>
2020-01-06
</filing_date>

<publication_date>
2020-11-24
</publication_date>

<priority_date>
2019-03-06
</priority_date>

<ipc_classes>
H04L27/26,H04L27/34,H04L27/36
</ipc_classes>

<assignee>
ASTRAPI CORPORATION
</assignee>

<inventors>
PROTHERO, JERROLD
STERLING, JAMES J.
</inventors>

<docdb_family_id>
72335803
</docdb_family_id>

<title>
Devices, systems, and methods employing polynomial symbol waveforms
</title>

<abstract>
Systems, devices, and methods of the present invention enhance data transmission through the use of polynomial symbol waveforms (PSW) and sets of PSWs corresponding to a symbol alphabet is here termed a PSW alphabet. Methods introduced here are based on modifying polynomial alphabet by changing the polynomial coefficients or roots of PSWs and/or shaping of the polynomial alphabet to produce a designed PSW alphabet including waveforms with improved characteristics for data transmission. In various embodiments, transmitter and receivers utilizing symbol waveforms based on a PSW alphabet designed may be in wireless and/or wired data transmission systems that may or may not include transmitters and receivers employing traditional modulation formats.
</abstract>

<claims>
1. A method of data transmission, comprising: providing, to a transmitter, an input bit sequence; converting, by the transmitter, the input bit sequence into a sequence of polynomial symbol waveforms (PSWs) selected from a designed PSW alphabet, the designed PSW alphabet being formed by providing an initial PSW alphabet having polynomial coefficients and polynomial roots, modifying the initial PSW alphabet to produce the designed PSW alphabet; and transmitting, by the transmitter, the sequence of polynomial symbol waveforms.
2. The method of claim 1, where modifying the PSW alphabet includes at least one of: editing at least one of the polynomial coefficients or polynomial roots of the initial PSW alphabet to produce one of an edited PSW alphabet and the designed PSW alphabet, and shaping one of the edited PSW alphabet and initial PSW alphabet to produce the designed PSW alphabet.
3. The method of claim 2, where editing the initial PSW alphabet includes, translating at least one polynomial root from one or more PSWs of the initial PSW alphabet from a starting location to an end location in the complex plane; adjusting complex conjugates of translated roots that are complex to keep the polynomial real-valued; shaping at least one of the translated and adjusted PSWs using polynomial convolution to provide the designed PSW alphabet.
4. The method of claim 2, where the end location for the translated polynomial roots is at the symbol time boundaries with amplitude zero.
5. The method of claim 2, where the polynomial convolution is performed using one of raised cosine, root raised cosine, Gaussian, or other band-limiting or pulse-shaping filters.
6. The method of claim 1, where modifying includes applying random variation to either the polynomial coefficients or polynomial roots of an initial PSW alphabet to produce an edited PSW alphabet; and the method further comprises: calculating a goodness measure for the initial and edited PSW alphabets; comparing the goodness measure of the initial PSW alphabet to the goodness measure of the edited PSW alphabet; and setting the initial PSW alphabet equal to the edited PSW alphabet when the edited PSW alphabet has a higher goodness measure.
7. The method of claim 6, where the random variation is determined by at least one of Monte Carlo optimization and machine learning.
8. The method of claim 6, further comprising performing a power normalization of the edited PSW alphabet after applying the random variation.
9. The method of claim 6, further comprising setting the initial PSW alphabet to the edited PSW alphabet when the goodness measure of the edited PSW alphabet is higher than the goodness measure of the initial PSW alphabet.
10. The method of claim 9, further comprising repeating the steps of editing, calculating, performing, comparing, and setting.
11. The method of claim 10, where repeating is continued for at least one of a user determined number of iterations is performed and until the goodness measure of the edited PSW alphabet is not higher than the initial PSW alphabet goodness measure for at least one iteration.
12. The method of claim 6, where the goodness measure for a PSW alphabet is based on calculating the minimum Root Mean Square (RMS) separation between all pairs of PSWs with a higher minimum RMS separation being interpreted as a higher goodness measure.
13. The method of claim 1, where converting the PSW alphabet includes performing a table lookup of the input bit sequence to determine a corresponding PSW.
14. The method of claim 1, further comprising: receiving, from the transmitter, the sequence of PSWs; and converting the received sequence of PSWs to an output bit sequence.
15. The method of claim 14, where converting the received sequence of PSWs includes performing a table lookup of the received sequence of PSWs to determine a corresponding output bit sequence.
16. The method of claim 14, where converting includes selecting the output bit sequence that corresponds to PSW that corresponds most closely to the received sequence of PSWs.
17. The method of claim 14, further comprising: recognizing the received sequence of PSWs using minimum distance signal detection.
18. The method of claim 1, further comprising: performing Instantaneous Spectral Analysis (ISA) on the sequence of polynomial symbol waveforms.
19. The method of claim 1, where the initial PSW alphabet is based on Fractional Cycle Modulation.
20. The method of claim 2, where shaping is performed by convoluting the edited PSW with a polynomial representation of a filter.
21. A system comprising: a transmitter to receive an input bit sequence, convert the input bit sequence into a sequence of polynomial symbol waveforms (PSWs) selected from a designed PSW alphabet, the designed PSW alphabet being formed by providing an initial PSW alphabet having polynomial coefficients and polynomial roots, modifying the initial PSW alphabet to produce the designed PSW alphabet, and transmit the sequence of polynomial symbol waveforms; and a receiver to receive the sequence of polynomial symbol waveforms (PSWs), convert the sequence of PSWs into an output bit sequence, where the output bit sequence corresponds to PSWs in the designed PSW alphabet, and output the output bit sequence.
22. A non-transitory computer readable medium storing instructions, the instructions comprising: one or more instructions which, when executed by one or more processors, cause the one or more processors to: convert, by a transmitter, an input bit sequence into a sequence of polynomial symbol waveforms (PSWs) selected from a designed PSW alphabet, the designed PSW alphabet being formed by providing an initial PSW alphabet having polynomial coefficients and polynomial roots, modifying the initial PSW alphabet to produce the designed PSW alphabet; and transmit, by the transmitter, the sequence of polynomial symbol waveforms.
</claims>
</document>
