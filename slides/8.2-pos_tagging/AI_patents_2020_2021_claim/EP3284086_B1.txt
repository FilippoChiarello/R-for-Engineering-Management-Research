<document>

<filing_date>
2016-03-09
</filing_date>

<publication_date>
2020-05-27
</publication_date>

<priority_date>
2015-04-13
</priority_date>

<ipc_classes>
G10L15/28,G10L19/00,G10L21/04
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
HOFER, JOACHIM
</inventors>

<docdb_family_id>
57112776
</docdb_family_id>

<title>
METHOD AND SYSTEM OF RANDOM ACCESS COMPRESSION OF TRANSDUCER DATA FOR AUTOMATIC SPEECH RECOGNITION DECODING
</title>

<abstract>
A system, article, and method for decompressing transducer data for speech recognition comprise: determining a location of a compressed block in an array of compressed block of transducer-related data; determining the compression rate of individual compressed entries in the located compressed block; determining a key value to be applied to individual compressed entries of the located compressed block to obtain the uncompressed value of the entry; reading a compressed entry from the compressed block; and decompressing the compressed entry by applying the key value to the compressed entry.
</abstract>

<claims>
1. A computer-implemented method of decompressing transducer data for speech recognition, comprising: determining (202) a location of a compressed block in an array of compressed blocks of transducer-related data; determining (204) the compression rate of individual compressed entries in the located compressed block; determining (206) a key value to be applied to individual compressed entries of the located compressed block to obtain the uncompressed value of the entry;
determining the bit location of a compressed entry inside the compressed block by multiplying the index of the entry with the determined compression rate; reading (208) the compressed entry from the compressed block; and decompressing (210) the compressed entry by adding the key value to the compressed entry.
2. The method of claim 1 wherein the individual compressed entries are numerical differences each being a difference between the key value and a transducer entry associated with one of the numerical differences.
3. The method of claim 1 wherein the compressed entries associated with the block are associated with a list of transducer entries of the same parameter type, and
wherein the parameter type is at least one of an output label of an arc, an input label of an arc, arc destination state, arc source state, and a transition weight of an arc, and
wherein the method comprises storing a plurality of the blocks formed from the list of transducer entries, wherein individual blocks each have a key value.
4. The method of claim 3 comprising storing the numerical differences forming the blocks in an order corresponding to the order of the transducer entries on the list, and
comprising storing a zero numerical difference for the key value and in each block to maintain the order of the transducer entries from the list.
5. The method of claim 1 wherein the compression rate of compressed entries is the same for the compressed entries in the same block; and storing the key value and compression rate on a block-by-block basis in an array.
6. The method of claim 1 comprising arranging transducer entries associated with the compressed entries into adjacency lists each associated with data of a different parameter type, and wherein the blocks are formed by assigning the numerical differences of transducer entries from the same list to the block, and wherein the order of the transducer entries on the list corresponds to an index value associated with at least one adjacency list and corresponding to an arc or state location on the transducer.
7. The method of claim 1 comprising obtaining an index value corresponding to an arc or state location on a transducer associated with the compressed entries; and
determining the block location, compression rate, and key value depending, at least in part, on the index value.
8. The method of claim 1 wherein the uncompressed entry is obtained with four or less memory lookups.
9. The method of claim 1 wherein the individual compressed entries are numerical differences each being a difference between the key value and a transducer entry associated with one of the numerical differences;
wherein the compressed entries associated with the block are associated with a list of transducer entries of the same parameter type;
wherein the parameter type is at least one of an output label of an arc, an input label of an arc, arc destination state, arc source state, and a transition weight of an arc;
the method comprising: storing a plurality of the blocks formed from the list of transducer entries, wherein individual blocks each have a key value; storing the numerical differences forming the blocks in an order corresponding to the order of the transducer entries on the list; storing a zero numerical difference for the key value and in each block to maintain the order of the transducer entries from the list, wherein the compression rate of compressed entries is the same for the compressed entries in the same block; storing the key value and compression rate on a block-by-block basis in an array, wherein a plurality of the blocks are assigned the same number of compression entries; arranging transducer entries associated with the compressed entries into adjacency lists each associated with data of a different parameter type, and wherein the blocks are formed by assigning the numerical differences of transducer entries from the same list to the block, wherein the order of the transducer entries on the list corresponds to an index value associated with at least one adjacency list and corresponding to an arc or state location on the transducer; obtaining an index value corresponding to an arc or state location on a transducer associated with the compressed entries; and determining the block location, compression rate, and key value depending, at least in part, on the index value; wherein the key value is the minimum uncompressed entry associated with a block; and
wherein the uncompressed entry is obtained with four or less memory lookups.
10. A computer-implemented method of compressing transducer data for speech recognition, comprising: obtaining transducer entries to be used to populate a transducer of states as nodes and arcs connecting the nodes to propagate at least one token through the transducer, wherein the transducer entries are to be assigned to the states or arcs; forming adjacency lists depending on parameter type wherein each list has an array of the uncompressed transducer entries of the same parameter type that is different from the parameter type of at least one other adjacency list; and storing a compressed value related to the transducer entry so that the transducer entry can be computed by using the value, and storing the value depending, at least in part, on the position of the transducer entry on one of the lists, wherein the transducer parameter type is one of: arc destination state, arc source state, arc input label, arc output label, and arc transition weight; wherein the compressed data is stored in one of a group of arrays wherein each array is related to a different transducer parameter type; the method comprising: dividing the lists into blocks with the same number of transducer entries; and forming a key transducer entry of each block, a numerical difference between the key transducer entry and transducer entries of the block as the value, and a number of bits of the binarized numerical differences in each block; reconstructing a transducer entry by using the transmitted data, the number of entries held in each block, and an index value, a location on the transducer that is associated with the transducer entry being the product of said index value and said number of bits; and decompressing to obtain the transducer entry depending on, at least in part, the position of the transducer entry on one of the lists.
11. A computer-implemented system of speech recognition comprising: at least one acoustic signal receiving unit; at least one processor communicatively connected to the acoustic signal receiving unit; at least one temporary memory communicatively coupled to the at least one processor; and a transducer decoder operated by the at least one processor and arranged to: determine a location of a compressed block in an array of compressed blocks of transducer-related data; determine the compression rate of individual compressed entries in the located compressed block; determine a key value to be applied to individual compressed entries of the located compressed block to obtain the uncompressed value of the entry; determining the bit location of a compressed entry inside the compressed block by multiplying the index of the entry with the determined compression rate; read the compressed entry from the compressed block; and decompress the compressed entry by adding the key value to the compressed entry.
12. The system of claim 11 wherein the individual compressed entries are numerical differences each being a difference between the key value and a transducer entry associated with one of the numerical differences;
wherein the compressed entries associated with the block are associated with a list of transducer entries of the same parameter type;
wherein the parameter type is at least one of an output label of an arc, an input label of an arc, arc destination state, arc source state, and a transition weight of an arc;
the transducer decoder to: store a plurality of the blocks formed from the list of transducer entries, wherein individual blocks each have a key value; store the numerical differences forming the blocks in an order corresponding to the order of the transducer entries on the list; store a zero numerical difference for the key value and in each block to maintain the order of the transducer entries from the list, wherein the compression rate of compressed entries is the same for the compressed entries in the same block; store the key value and compression rate on a block-by-block basis in an array, wherein a plurality of the blocks are assigned the same number of compression entries; arrange transducer entries associated with the compressed entries into adjacency lists each associated with data of a different parameter type, and wherein the blocks are formed by assigning the numerical differences of transducer entries from the same list to the block, wherein the order of the transducer entries on the list corresponds to an index value associated with at least one adjacency list and corresponding to an arc or state location on the transducer; obtain an index value corresponding to an arc or state location on a transducer associated with the compressed entries; and determine the block location, compression rate, and key value depending, at least in part, on the index value; wherein the key value is the minimum uncompressed entry associated with a block; and
wherein the uncompressed entry is obtained with four or less memory lookups.
13. At least one machine readable medium comprising a plurality of instructions that in response to being executed on a computing device, causes the computing device to perform the method according to any one of claims 1- 10.
14. An apparatus comprising means for performing the method according to any one of claims 1- 10.
</claims>
</document>
