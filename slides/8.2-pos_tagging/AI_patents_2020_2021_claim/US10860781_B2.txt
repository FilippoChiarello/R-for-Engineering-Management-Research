<document>

<filing_date>
2018-08-22
</filing_date>

<publication_date>
2020-12-08
</publication_date>

<priority_date>
2018-06-21
</priority_date>

<ipc_classes>
G06F16/00,G06F16/31,G06F16/335,G06F16/35,G06F17/22,G06F40/149
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
WILSON, ALEXANDER JAMES
</inventors>

<docdb_family_id>
68981795
</docdb_family_id>

<title>
Event detection based on text streams
</title>

<abstract>
A text stream source is accessed that includes a plurality of text content items. Unique word groupings are determined for the plurality of text content items. A burst detection algorithm is executed to determine word groupings that are currently bursting and that started within a specified time period. Based on the word groupings, an issue is determined based on identifying a set of texts forming at least one clique.
</abstract>

<claims>
1. A device comprising: one or more processors; a memory in communication with the one or more processors, the memory having computer-readable instructions stored thereupon which, when executed by the one or more processors, cause the device to perform operations comprising: accessing a text stream source comprising a plurality of entries; determining, for the plurality of entries, unique k-skip-n-grams; executing a burst detection algorithm to determine a burst level, burst start time, and burst end time of the k-skip-n-grams; based on the burst level, burst start time, and burst end time, identifying k-skip-n-grams that are currently bursting and that started within a specified time period; performing constrained z-clique finding on a graph of the identified k-skip-n-grams; performing constrained clique percolation on the graph; identifying cliques where a set of texts have all words included therein; applying the burst detection algorithm over times at which feedback has occurred; and based on determined burst detections, identifying an issue where there is no overlap of cliques.
2. The device of claim 1, wherein the plurality of entries pertains to a computing product or service.
3. The device of claim 1, further comprising computer-readable instructions stored thereupon which, when executed by the one or more processors, cause the device to perform operations comprising: aggregating the determined unique k-skip-n-grams prior to executing the burst detection algorithm to determine the burst level, burst start time, burst end time of the k-skip-n-grams.
4. The device of claim 1, wherein the graph comprises pairs of vertices connected by an edge that represents one of the k-skip-n-grams.
5. The device of claim 2, wherein the issue comprises a potential service issue with the computing product or service.
6. The device of claim 1, wherein the specified time period comprises a dynamic monitoring period.
7. The device of claim 1, wherein n=2 for the k-skip-n-grams.
8. The device of claim 1, wherein the burst detection algorithm is Kleinberg's Burst Detection Algorithm.
9. The device of claim 1, wherein the constrained z-clique is performed with z=3.
10. The device of claim 1, wherein cliques are eliminated where edges on the graph have a range of burst start time more than a predetermined amount of time.
11. The device of claim 1, wherein the constrained clique percolation is performed with two z-cliques being considered adjacent if they share z−1 nodes and a range of the burst start time of a combined set of edges is less than a predetermined amount of time.
12. A computer-implemented method, comprising: accessing a text stream source comprising a plurality of entries; determining, for the plurality of entries, unique k-skip-n-grams; executing a burst detection algorithm to determine a burst level, burst start time, and burst end time of the k-skip-n-grams; based on the burst level, burst start time, and burst end time, identifying k-skip-n-grams that are currently bursting and that started within a specified time period; performing constrained z-clique finding on a graph of the identified k-skip-n-grams; performing constrained clique percolation on the graph; identifying cliques where a set of texts have all words included therein; applying the burst detection algorithm over times at which feedback has occurred; and based on determined burst detections, identifying an issue where there is no overlap of cliques.
13. The method of claim 12, wherein the plurality of entries pertains to a computing product or service and the issue comprises a potential service issue with the computing product or service.
14. The method of claim 12, further comprising aggregating the determined unique k-skip-n-grams prior to executing the burst detection algorithm to determine the burst level, burst start time, burst end time of the k-skip-n-grams.
15. The method of claim 12, wherein the graph comprises pairs of vertices connected by an edge that represents one of the k-skip-n-grams.
16. The method of claim 12, wherein n=2 for the k-skip-n-grams and the constrained z-clique is performed with z=3.
17. The method of claim 12, wherein the burst detection algorithm is Kleinberg's Burst Detection Algorithm.
18. The method of claim 12, wherein cliques are eliminated where edges on the graph have a range of burst start time more than a predetermined amount of time.
19. The method of claim 12, wherein the constrained clique percolation is performed with two z-cliques being considered adjacent if they share z−1 nodes and a range of the burst start time of a combined set of edges is less than a predetermined amount of time.
20. A computer-readable storage medium having computer-executable instructions stored thereupon which, when executed by one or more processors of a computing device, cause the computing device to perform operations comprising: accessing a text stream source comprising a plurality of entries; determining, for the plurality of entries, unique k-skip-n-grams; executing a burst detection algorithm to determine a burst level, burst start time, and burst end time of the k-skip-n-grams; based on the burst level, burst start time, and burst end time, identifying k-skip-n-grams that are currently bursting and that started within a specified time period; performing constrained z-clique finding on a graph of the identified k-skip-n-grams; performing constrained clique percolation on the graph; identifying cliques where a set of texts have all words included therein; applying the burst detection algorithm over times at which feedback has occurred; and based on determined burst detections, identifying an issue where there is no overlap of cliques.
</claims>
</document>
