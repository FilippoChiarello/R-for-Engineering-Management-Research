<document>

<filing_date>
2018-09-27
</filing_date>

<publication_date>
2021-01-12
</publication_date>

<priority_date>
2018-09-27
</priority_date>

<ipc_classes>
G06F9/445,G06F9/455
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
TSIDON, EREZ
MACHULSKY, GEORGY ZORIK
LEVIN, ALEX
Aharoni, Idan
Wasserstrom, Barak
</inventors>

<docdb_family_id>
74067038
</docdb_family_id>

<title>
Dynamic configuration management
</title>

<abstract>
Configuration snapshots can be obtained from various connected devices, such as network interface cards or hardware offload devices, to determine whether the configuration matches expected values. If discrepancies are determined then the appropriate values can be automatically applied to those devices. For each type and version of device, there can be a set of expected configuration values, or a golden model of configuration, that is determined and stored. The models can also be used to test updated configuration values, as the new values can be pushed to a subset of devices and the impact on performance determined. If acceptable performance improvement is detected, or another such target achieved, then the golden model can be updated with the new values and those values can be pushed out to the remainder of the devices.
</abstract>

<claims>
1. A computer-implemented method, comprising: sending, from a monitoring service to a host machine having a hardware offload card installed thereon, a request for configuration information for the hardware offload card; receiving, to the monitoring service, a configuration snapshot for the hardware offload card, the configuration snapshot including current configuration values for a processor and memory of the hardware offload card; determining, based upon a type of the hardware offload card and an intended function of the hardware offload card, a configuration model including a set of expected configuration values; determining a discrepancy between the set of expected configuration values of the configuration model and the current configuration values from the configuration snapshot; and causing the expected configuration values corresponding to the discrepancy to be automatically applied to the hardware offload card to eliminate the discrepancy.
2. The computer-implemented method of claim 1, further comprising: determining the configuration model based further on at least one of a version of the hardware offload card, a type of the host machine, an application executing on the hardware offload card, a current operational context, or a current network state.
3. The computer-implemented method of claim 1, further comprising: analyzing performance information received with the configuration snapshot; determining, based upon analyzing the performance information, an updated configuration value for the configuration model to improve performance of the hardware offload card; and causing the updated configuration value to be automatically applied to the hardware offload card.
4. The computer-implemented method of claim 1, wherein the configuration values correspond to metrics associated with at least one of a processor speed, number of processor cores, bus type, number of channels, memory frequency, error correction support, network connection speed, supported interface, bus configuration, or communication interface width attribute.
5. The computer-implemented method of claim 1, further comprising: determining a set of testing configuration values of a test configuration model; determining a subset of hardware offload cards corresponding to the test configuration model; causing the set of testing configuration values to be applied to the subset of hardware offload cards; determining an improvement in performance of the subset of hardware offload cards; and causing the set of testing configuration values to be applied to a remainder of the hardware offload cards corresponding to the test configuration model.
6. A computer-implemented method, comprising: sending a request for a current configuration value to a host machine on which a connected device is installed; obtaining, from the host machine, the current configuration value for the current configuration value collected by the connected device; determining intended functionality for the connected device; determining, based upon the intended functionality and a type of the connected device, an expected configuration value for the connected device; determining a discrepancy between the current configuration value and the expected configuration value; and causing the expected configuration value, corresponding to the discrepancy, to be automatically applied to the connected device.
7. The computer-implemented method of claim 6, further comprising: causing the expected configuration value to be automatically applied to the connected device by sending a configuration model, including a set of expected configuration values, to the host machine to be passed to the connected device for comparison.
8. The computer-implemented method of claim 6, further comprising: receiving the expected configuration value in a configuration snapshot generated by the connected device.
9. The computer-implemented method of claim 8, further comprising: receiving respective configuration snapshots from a plurality of connected devices; analyzing respective configuration values from the configuration snapshots and performance information for the plurality of connected devices; determining an updated set of expected parameters based upon the respective configuration values and the performance information; and causing the updated set to be applied to the plurality of connected devices.
10. The computer-implemented method of claim 9, further comprising: processing the respective configuration values and the performance information using a trained machine learning model to generate the updated set of expected parameters.
11. The computer-implemented method of claim 9, further comprising: scanning a set of host machines to identify the plurality of connected devices that support automatic configuration management.
12. The computer-implemented method of claim 6, wherein the connected device is a network interface card (NIC) having a set of components including at least one processor, memory, and a network communication interface, the current configuration value corresponding to the set of components.
13. The computer-implemented method of claim 6, further comprising: determining a set of testing configuration values of a test configuration model; determining a subset of connected devices corresponding to the test configuration model; causing the set of testing configuration values to be applied to the subset of connected devices; determining an improvement in performance of the subset of connected devices; and causing the set of testing configuration values to be applied to a remainder of the connected devices corresponding to the test configuration model.
14. The computer-implemented method of claim 6, further comprising: determining a respective virtual machine, of a plurality of virtual machines hosted on the host machine, associated with the connected device; and determining the set of expected configuration values for the connected device based further upon information for the respective virtual machine.
15. A system, comprising: at least one processor; and memory including instructions that, when executed by the at least one processor, cause the system to: send a request for a current configuration value to a host machine on which a connected device is installed; receive, from the host machine, the current configuration value collected by the connected device; determine intended functionality for the connected device; determine, based upon the intended functionality and a type of the connected device, an expected configuration value for the connected device; determine a discrepancy between the current configuration value and the expected configuration value; and cause the expected configuration value, corresponding to the discrepancy, to be automatically applied to the connected device.
16. The system of claim 15, wherein the instructions when executed further cause the system to: cause the expected configuration value to be automatically applied to the connected device by sending a configuration model, including a set of expected configuration values, to the host machine to be passed to the connected device for comparison.
17. The system of claim 16, wherein the instructions when executed further cause the system to: receive respective configuration snapshots from a plurality of connected devices; analyze respective configuration values from the configuration snapshots and performance information for the plurality of connected devices; and determine a new expected configuration value based upon the respective configuration values and the performance information.
18. The system of claim 15, wherein the instructions when executed further cause the system to: determine a set of testing configuration values of a test configuration model; determine a subset of connected devices corresponding to the test configuration model; cause the set of testing configuration values to be applied to the subset of connected devices; determine an improvement in performance of the subset of connected devices; and cause the set of testing configuration values to be applied to a remainder of the connected devices corresponding to the test configuration model.
19. A device, comprising: a processor; a communication interface; and memory including instructions that, when executed by the processor, cause the device to: receive, via a host machine on which the device is installed and from a computing system connected to the device via the communication interface, a request for a current configuration value; obtain the current configuration value collected by the device; generate a configuration snapshot including the current configuration value; provide the configuration snapshot in response to the request; receive, from the computing system, an updated configuration value based on a discrepancy between the current configuration value and an intended configuration value; and cause the updated configuration value to be automatically applied to the device in place of the current configuration value.
</claims>
</document>
