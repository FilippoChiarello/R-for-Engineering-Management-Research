<document>

<filing_date>
2018-11-19
</filing_date>

<publication_date>
2020-05-21
</publication_date>

<priority_date>
2018-11-19
</priority_date>

<ipc_classes>
G06F17/16,G06F9/30,G06F9/38,G06N3/04
</ipc_classes>

<assignee>
AMD (ADVANCED MICRO DEVICES)
</assignee>

<inventors>
GREATHOUSE, JOSEPH LEE
SEN, SANCHARI
AGUREN, DERRICK ALLEN
</inventors>

<docdb_family_id>
67297336
</docdb_family_id>

<title>
FAMILY OF LOSSY SPARSE LOAD SIMD INSTRUCTIONS
</title>

<abstract>
Systems, apparatuses, and methods for implementing a family of lossy sparse load single instruction, multiple data (SIMD) instructions are disclosed. A lossy sparse load unit (LSLU) loads a plurality of values from one or more input vector operands and determines how many non-zero values are included in one or more input vector operands of a given instruction. If the one or more input vector operands have less than a threshold number of non-zero values, then the LSLU causes an instruction for processing the one or more input vector operands to be skipped. In this case, the processing of the instruction of the one or more input vector operands is deemed to be redundant. If the one or more input vector operands have greater than or equal to the threshold number of non-zero values, then the LSLU causes an instruction for processing the input vector operand(s) to be executed.
</abstract>

<claims>
1. A system comprising: a plurality of processing elements; and control logic; wherein the control logic is configured to: determine how many non-zero values are included in one or more input vector operands; cause the one or more input vector operands to be processed by the plurality of processing elements responsive to determining that a number of non-zero values in the one or more input vector operands is greater than or equal to a first threshold; and cause processing of the one or more input vector operands to be skipped by the plurality of processing elements responsive to determining that the number of non-zero values is less than the first threshold; wherein the system is configured to execute a given application by processing one or more first input vector operands and skipping processing of one or more second input vector operands.
2. The system as recited in claim 1, wherein the given application is a neural network implementation to generate a classification of a first dataset, and wherein the system is configured to reduce at least one of power consumption and execution time when implementing a neural network by skipping the processing associated with the one or more second input vector operands for one or more layers of the neural network.
3. The system as recited in claim 1, wherein a non-zero value is an absolute value which is greater than a second threshold.
4. The system as recited in claim 3, wherein the first threshold and the second threshold are programmable based on an error tolerance of the neural network.
5. The system as recited in claim 3, wherein the system is configured to set the first threshold and the second threshold to values which are based on an error tolerance of the neural network.
6. The system as recited in claim 1, wherein the processing performed by the plurality of processing elements comprises a matrix multiplication operation to multiply a first set of input vector operands by a second set of input vector operands.
7. The system as recited in claim 1, wherein the control logic is further configured to store a program counter offset of an instruction processing a given input vector operand in a skip queue responsive to determining that the number of non-zero values in the given input vector operand is less than the first threshold.
8. A method comprising: determining, by control logic coupled to a plurality of processing elements, how many non-zero values are included in one or more input vector operands; causing the one or more input vector operands to be processed by the plurality of processing elements responsive to determining that a number of non-zero values in the one or more input vector operands is greater than or equal to a first threshold; causing processing of the one or more input vector operands to be skipped by the plurality of processing elements responsive to determining that the number of non-zero values is less than the first threshold; and executing a given application by processing one or more first input vector operands and skipping processing of one or more second input vector operands.
9. The method as recited in claim 8, wherein the given application is a neural network implementation to generate a classification of a first dataset, wherein the method further comprising reducing at least one of power consumption and execution time when implementing a neural network by skipping the processing associated with the one or more second input vector operands for one or more layers of the neural network.
10. The method as recited in claim 8, wherein a non-zero value is an absolute value which is greater than a second threshold.
11. The method as recited in claim 10, wherein the first threshold and the second threshold are programmable based on an error tolerance of the neural network.
12. The method as recited in claim 10, further comprising setting the first threshold and the second threshold to values which are based on an error tolerance of the neural network.
13. The method as recited in claim 8, wherein the processing performed by the plurality of processing elements comprises a matrix multiplication operation to multiply a first set of input vector operands by a second set of input vector operands.
14. The method as recited in claim 8, further comprising storing a program counter offset of an instruction processing a given input vector operand in a skip queue responsive to determining that the number of non-zero values in the given input vector operand is less than the first threshold.
15. An apparatus comprising: a plurality of processing elements; a scheduler; and a lossy sparse load unit; wherein the lossy sparse load unit is configured to: determine how many non-zero values are included in one or more input vector operands; cause the one or more input vector operands to be processed by the plurality of processing elements responsive to determining that a number of non-zero values in the one or more input vector operands is greater than or equal to a first threshold; and cause processing of the one or more input vector operands to be skipped by the plurality of processing elements responsive to determining that the number of non-zero values is less than the first threshold; wherein the apparatus is configured to execute a given application by processing one or more first input vector operands and skipping processing of one or more second input vector operands.
16. The apparatus as recited in claim 15, wherein the given application is a neural network implementation to generate a classification of a first dataset, and wherein the apparatus is configured to reduce at least one of power consumption and execution time when implementing a neural network by skipping the processing associated with the one or more second input vector operands for one or more layers of the neural network.
17. The apparatus as recited in claim 15, wherein a non-zero value is an absolute value which is greater than a second threshold.
18. The apparatus as recited in claim 17, wherein the first threshold and the second threshold are programmable based on an error tolerance of the neural network.
19. The apparatus as recited in claim 17, wherein the apparatus is configured to set the first threshold and the second threshold to values which are based on an error tolerance of the neural network.
20. The apparatus as recited in claim 15, wherein the processing performed by the plurality of processing elements comprises a matrix multiplication operation to multiply a first set of input vector operands by a second set of input vector operands.
</claims>
</document>
