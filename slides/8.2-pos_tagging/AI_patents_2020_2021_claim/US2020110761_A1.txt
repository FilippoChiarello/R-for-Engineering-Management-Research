<document>

<filing_date>
2019-10-04
</filing_date>

<publication_date>
2020-04-09
</publication_date>

<priority_date>
2018-10-04
</priority_date>

<ipc_classes>
G06F16/22,G06F16/2455,G06F16/28,G06N20/00,G06N5/04
</ipc_classes>

<assignee>
GRAPHEN
</assignee>

<inventors>
LIN, CHING-YUNG
YEH, DANNY LO-TIEN
COOPER, HAL J.
GAVAUDAN, MATTHIEU L.
</inventors>

<docdb_family_id>
70052115
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR PROVIDING AN ARTIFICIALLY-INTELLIGENT GRAPH DATABASE
</title>

<abstract>
A system for providing an artificially-intelligent graph database is disclosed. The graph database has significant graph computing capabilities, which are facilitated through the integration of artificial intelligence into the graph database. The capabilities are enabled through the use of unique artificially-intelligent agents that are each responsible for a subgraph of a graph of the graph database. Each artificially-intelligent agent performs computations on the graph-structured data in each subgraph that each agent is responsible for managing. The artificially-intelligent agents may work cohesively together to provide artificial intelligence capabilities to the entire graph database. The graph database may optimize itself through intelligent local management by using the agents. Notably, the graph database may optimize and manage itself with respect to previous interactions, such as requests for data, changes to data, and algorithm execution, as well with respect to future interactions associated with the graph database, while modifying management as time progresses.
</abstract>

<claims>
We claim:
1. A system, comprising: a memory that stores instructions; and a processor that executes the instructions to perform operations, the operations comprising: generating a plurality of artificially-intelligent agents for managing a graph database, wherein each artificially-intelligent agent of the plurality of artificially intelligent-agents is associated with a corresponding subgraph of a graph of the graph database; receiving a stream of requests intended for the graph database; assigning each request of the stream of requests to a corresponding artificially-intelligent agent of the plurality of artificially-intelligent agents, wherein the assigning of each request to the artificially-intelligent agent is based on a relevance of each request to the artificially-intelligent agent; routing each request to the corresponding artificially-intelligent agent to which each request is assigned; processing, by utilizing the corresponding artificially-intelligent agent, each request; and transmitting each output resulting from the processing of each request to a corresponding device, program, or a combination thereof, that made each request.
2. The system of claim 1, wherein the operations further comprise enabling a first artificially-intelligent agent of the plurality of artificially-intelligent agents to generate a local index based on pending requests of the stream of requests, based on a previous operation conducted by the first artificially-intelligent agent on a previous request received by the graph database, or a combination thereof.
3. The system of claim 1, wherein the operations further comprise determining if a first artificially-intelligent agent of the plurality of artificially-intelligent agents requests graph data from a second artificially-intelligent agent of the plurality of artificially-intelligent agents at a threshold frequency, and wherein the operations further comprise enabling the first artificially-intelligent agent to request ownership of the graph data of the second artificially-intelligent agent if the threshold frequency is satisfied.
4. The system of claim 1, wherein the operations further comprise enabling each artificially-intelligent agent of the plurality of artificially-intelligent agents to spawn a concurrent routine for processing one or more requests from the stream of requests.
5. The system of claim 1, wherein the operations further comprise determining whether processing of a first request of the stream of requests has been completed.
6. The system of claim 1, wherein the operations further comprise determining that in addition to a first artificially-intelligent agent of the plurality of artificially-intelligent agents that a second artificially-intelligent agent is needed to process a first request of the stream of requests, wherein the determining is based on an analysis conducted on the first request.
7. The system of claim 6, wherein the operations further comprise routing the first request of the stream of requests to the second artificially-intelligent agent so as to enable the second artificially-intelligent agent to cooperatively process with the first request with the first artificially-intelligent agent.
8. The system of claim 1, wherein the operations further comprise enabling each artificially-intelligent agent of the plurality of artificially-intelligent agents to concurrently process each request in the stream of requests.
9. The system of claim 1, wherein the operations further comprise executing, by utilizing the plurality of artificially-intelligent agents, an algorithm on the graph database in response to a learned trigger, a user-specified trigger, or a combination thereof.
10. The system of claim 1, wherein the operations further comprise facilitating the creation of multiple different representations of parts of graph-structured data within each artificially-intelligent agent of the plurality of artificially-intelligent agents.
11. The system of claim 1, wherein the operations further comprise enabling each of the plurality of artificially-intelligent agents to operate on themselves based on a preset condition, based on a learned condition, or a combination thereof.
12. The system of claim 1, wherein the operations further comprise anticipating future requests from future streams of requests based on an access pattern, usage pattern, or a combination thereof, wherein the operations further comprise processing the anticipated future requests prior to an arrival of the anticipated future requests at the graph database.
13. The system of claim 1, wherein the operations further comprise updating a first artificially-intelligent agent associated with a first subgraph of the graph database without locking other portions of the graph database.
14. A method, comprising: providing a plurality of artificially-intelligent agents for managing a graph database, wherein each artificially-intelligent agent of the plurality of artificially intelligent-agents is associated with a corresponding subgraph of a graph of the graph database; receiving a stream of requests intended for the graph database; assigning, by utilizing instructions from a memory that are executed by a processor, each request of the stream of requests to a corresponding artificially-intelligent agent of the plurality of artificially-intelligent agents, wherein the assigning of each request to the artificially-intelligent agent is based on a relevance of each request to the artificially-intelligent agent; providing each request to the corresponding artificially-intelligent agent to which each request is assigned; processing, by utilizing the corresponding artificially-intelligent agent, each request; and obtaining each output resulting from the processing of each request.
15. The method of claim 14, further comprising enabling each artificially-intelligent agent to perform self-optimization via creation of an index, reorganization of ownership of graph components, modification of representations of subgraphs of the graph of the graph database, or a combination thereof.
16. The method of claim 14, further comprising enabling each artificially-intelligent agent to select a storage format that matches a local connective structure, wherein the local connective structure corresponds to a relational structure of the corresponding subgraph associated with each artificially-intelligent agent.
17. The method of claim 14, further comprising splitting a first artificially-intelligent agent into multiple artificially-intelligent agents so as to allow for multiple representations of parts of graph structured data within the first artificially-intelligent agent.
18. The method of claim 14, further comprising enabling each artificially-intelligent agent of the plurality of artificially intelligent agents to analyze transactions as the transactions are added to the graph database, and further comprising scheduling and managing execution of an algorithm to be executed on at least one of the transactions in response to an event trigger.
19. The method of claim 18, further comprising generating an alert based on an output of the execution of the algorithm on the at least one of the transactions.
20. A non-transitory computer-readable device comprising instructions, which when loaded and executed by a processor, cause the processor to perform operations comprising: providing a plurality of artificially-intelligent agents for managing a graph database, wherein each artificially-intelligent agent of the plurality of artificially intelligent-agents is associated with a corresponding subgraph of a graph of the graph database; accessing a stream of requests intended for the graph database; assigning each request of the stream of requests to a corresponding artificially-intelligent agent of the plurality of artificially-intelligent agents, wherein the assigning of each request to the artificially-intelligent agent is based on a relevance of each request to the artificially-intelligent agent; sending each request to the corresponding artificially-intelligent agent to which each request is assigned; and processing, by utilizing the corresponding artificially-intelligent agent, each request to produce an output for each request.
</claims>
</document>
