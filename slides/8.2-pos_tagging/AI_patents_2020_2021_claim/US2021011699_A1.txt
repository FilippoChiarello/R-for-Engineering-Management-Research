<document>

<filing_date>
2020-09-30
</filing_date>

<publication_date>
2021-01-14
</publication_date>

<priority_date>
2018-07-05
</priority_date>

<ipc_classes>
G06F8/60,G06F9/50,H04L12/911,H04L29/08
</ipc_classes>

<assignee>
AT&T INTELLECTUAL PROPERTY I (AMERICAN TELEPHONE AND TELEGRAPH COMPANY INTELLECTUAL PROPERTY I)
</assignee>

<inventors>
NASSAUR, DOUGLAS
</inventors>

<docdb_family_id>
69102065
</docdb_family_id>

<title>
FACILITATING CLOUD NATIVE EDGE COMPUTING VIA BEHAVIORAL INTELLIGENCE
</title>

<abstract>
Behavioral intelligence can be used with cloud native computing to enhance software deployment for various infrastructures by analyzing and deploying software functions according to the various infrastructures. Because different providers can have their own systems and controls for managing their infrastructures, it is costly to deploy software functions that are coupled together. However, if the software functions are disaggregated and translated according to the systems and controls relative to the various infrastructures, then the software functions can be failed and scaled independently of one another, thereby generating efficiencies.
</abstract>

<claims>
1. A method, comprising: receiving, by network equipment comprising a processor, software function data representative of a software function of a software application; in response to receiving the software function data, translating, by the network equipment, the software function for usage for a service provider identity, resulting in a translated software function; deploying, by the network equipment, the translated software function to a first infrastructure device associated with the service provider identity, resulting in a first deployed translated software function; based on prediction data representative of a prediction associated with the first deployed translated software function, disaggregating, by the network equipment, the first deployed translated software function, resulting in a first translated software function and a second translated software function; in response to disaggregating the first deployed translated software function: deploying, by the network equipment, the first translated software function to the first infrastructure device, resulting in a second deployed translated software function, and deploying the second translated software function to a second infrastructure device, different than the first infrastructure device, resulting in a third deployed translated software function; in response to deploying the second translated software function and the third translated software function: determining, by the network equipment, a first difference between the first deployed translated software function and the second deployed translated software function at the first infrastructure device, and determining, by the network equipment, a second difference between the first deployed translated software function and the third deployed translated software function at the second infrastructure device; and based on the first difference and the second difference, adapting, by the network equipment, the second deployed translated software function to operate on the first infrastructure device and the third deployed translated software function to operate on the second infrastructure device.
2. The method of claim 1, wherein determining the first difference comprises comparing a first run parameter of the first deployed translated software function to a second run parameter of the second deployed translated software function.
3. The method of claim 1, further comprising: adjusting, by the network equipment, the translated software function to compensate for a failed run-time state of the first deployed translated software function.
4. The method of claim 1, wherein deploying the translated software function to the first infrastructure device comprises deploying the first translated software function via a software defined network device.
5. The method of claim 1, further comprising: aggregating, by the network equipment, the first translated software function and the second translated software function to accommodate the service provider identity.
6. The method of claim 1, wherein translating the software function comprises analyzing a previous deployment of the first translated software function to generate additional translation data.
7. The method of claim 1, further comprising: receiving, by the network equipment, translation data associated with a translation to be used for the deploying of the first translated software function.
8. A system, comprising: a processor; and a memory that stores executable instructions that, when executed by the processor, facilitate performance of operations, comprising: receiving software function data representative of a software function of a software application; in response to receiving the software function data, applying interface data to the software function data to facilitate deploying the software function at a first infrastructure device, resulting in an updated software function; deploying the updated software function at the first infrastructure device, resulting in a first deployed updated software function; and based on a prediction, disaggregating the interface data, resulting in a first disaggregated software function and a second disaggregated software function comprising the interface data; in response to disaggregating the interface data: deploying the first disaggregated software function to the first infrastructure device, resulting in a second deployed updated software function, and deploying the second disaggregated software function to a second infrastructure device, different than the first infrastructure device, resulting in a third deployed updated software function; in response to deploying the second deployed updated software function and the third deployed updated software function: determining a first difference between the first deployed updated software function and the second deployed updated software function at the first infrastructure device, and determining a second difference between the first deployed updated software function and the third deployed updated software function at the second infrastructure device; and in response to determining the first difference and the second difference, adapting the second deployed updated software function to operate on the first infrastructure device and the third deployed updated software function to operate on the second infrastructure device.
9. The system of claim 8, wherein the operations further comprise: receiving an indication of a deviation from an expected outcome, wherein the indication comprises runtime error data representative of a runtime error of the first deployed updated software function.
10. The system of claim 8, wherein the operations further comprise: in response to deploying, monitoring the first deployed updated software function for a deviation from an expected outcome.
11. The system of claim 8, wherein the operations further comprise: in response to receiving an indication of a deviation from an expected outcome, modifying the updated software function to mitigate the deviation, resulting in a modified software function.
12. The system of claim 8, wherein the operations further comprise: in response to modifying the updated software function, deploying a modified software function at the first infrastructure device.
13. The system of claim 8, wherein the first deployed updated software function is an augmented reality function.
14. The system of claim 8, wherein the first deployed updated software function is a virtual reality function.
15. A non-transitory machine-readable medium, comprising executable instructions that, when executed by a processor, facilitate performance of operations, comprising: receiving a software function associated with a software application of enabled via a network; in response to receiving the software function, applying a translation to the software function in accordance with a service provider identity associated with the network, resulting in a translated software function; deploying the translated software function to a first infrastructure device associated with the service provider identity, resulting in a first deployed translated software function; based on prediction data representative of a prediction associated with the first deployed translated software function, disaggregating the first deployed translated software function, resulting in a first translated software function and a second translated software function; in response to disaggregating the first deployed translated software function: deploying the first translated software function to the first infrastructure device, resulting in a second deployed translated software function, and deploying the second translated software function to a second infrastructure device, different than the first infrastructure device, resulting in a third deployed translated software function; in response to deploying the second translated software function and the third translated software function: determining a first difference between the first deployed translated software function and the second deployed translated software function at the first infrastructure device, and determining a second difference between the first deployed translated software function and the third deployed translated software function at the second infrastructure device; and in response to determining the first difference and the second difference, modifying the second deployed translated software function to operate on the first infrastructure device and the third deployed translated software function to operate on the second infrastructure device.
16. The non-transitory machine-readable medium of claim 15, wherein the operations further comprise: based on analyzing of the first deployed translated software function, determining that a deviation has occurred.
17. The non-transitory machine-readable medium of claim 15, wherein the operations further comprise: in response to determining that a deviation has occurred, modifying the first deployed translated software function to reduce the deviation.
18. The non-transitory machine-readable medium of claim 15, the operations further comprise: in response to determining that a deviation has occurred, aggregating the second deployed translated software function with the first deployed translated software function to mitigate the deviation, resulting in an aggregated software function.
19. The non-transitory machine-readable medium of claim 15, wherein the operations further comprise: deploying an aggregated software function to compensate for a deviation from a determined outcome.
20. The non-transitory machine-readable medium of claim 15, wherein the operations further comprise: in response to deploying of the translated software function, analyzing the first deployed translated software function for a deviation from a determined outcome.
</claims>
</document>
