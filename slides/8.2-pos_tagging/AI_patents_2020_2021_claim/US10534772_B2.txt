<document>

<filing_date>
2013-07-08
</filing_date>

<publication_date>
2020-01-14
</publication_date>

<priority_date>
2013-07-08
</priority_date>

<ipc_classes>
G06F16/2453,G06F16/2458,G06F17/00,G06F17/30
</ipc_classes>

<assignee>
TELEFONAKTIEBOLAGET LM ERICSSON (PUBL)
</assignee>

<inventors>
PRASANNA KUMAR, MANOJ
SHIVASHANKAR, SUBRAMANIAN
</inventors>

<docdb_family_id>
48874469
</docdb_family_id>

<title>
Control of a distributed data grid layer in a federated database system
</title>

<abstract>
The invention is directed towards a database access coordination arrangement (23) in a federated database system (10) comprising applications (Ai, A2, A3) that access databases (34-50) under the control of a number of query handlers (24-32), the database access coordinating arrangement providing a group of traffic distribution units (16-22), each having connections to corresponding query handlers, and a traffic control unit (TCU), which traffic control unit selects traffic distribution unit for a query (Qi) from an application (Ai) based on at least one connectivity map of the connections existing between traffic distribution units, query handlers and databases and connectivity states of connections between traffic distribution units and query handlers, and schedules the query to the selected traffic distribution unit for accessing a database.
</abstract>

<claims>
1. A database access coordination arrangement in a federated database system, the database system comprising applications configured to access databases under the control of a number of query handlers, each query handler being connected to a number of databases, the database access coordinating arrangement comprising a processor and a memory, said memory containing computer instructions executable by said processor whereby said database access coordination arrangement is operative to provide: a group of traffic distribution units, each having connections to corresponding query handlers; and a traffic control unit, said traffic control unit being configured to: select a traffic distribution unit for a query from an application based on at least one connectivity map of the connections existing between traffic distribution units, query handlers and databases and connectivity states of connections between traffic distribution units and query handlers; schedule the query to the selected traffic distribution unit for accessing at least a database, wherein at least a connectivity state of at least a connection depends on alive messages sent by at least a query handler to a corresponding traffic distribution unit, and wherein an alive message from the query handler comprises at least one load value of the query handler; determine whether the query is a write query; and as a result of determining that the query is the write query, determine at least one load factor for the query and schedule the query based on the load factor of the query and corresponding load values of the traffic distribution units.
2. The database access coordination arrangement according to claim 1, the traffic control unit being further configured to select at least a query handler for the query.
3. The database access coordination arrangement according to claim 1, wherein the connectivity state of the connection is connected if alive messages are timely received and is disconnected if the alive messages are not timely received.
4. The database access coordination arrangement according to claim 1, wherein the traffic distribution unit is selected for the query such that the load is balanced between the traffic distribution units.
5. The database access coordination arrangement according to claim 1, wherein the load factor of the query is determined as a weighted average of loads of similar queries.
6. The database access coordination arrangement according to claim 1, wherein one of the traffic distribution units acts as the traffic control unit, wherein each traffic distribution unit has an identity, wherein the identities are sequentially generated and assigned at instantiating, and at least one of the traffic distribution units is configured to, in a traffic selection scheme, send the own identity to the other traffic distribution units, receive the identities of the other traffic distribution units, compare the own identity with the received identities and seize the role of traffic control unit if the own identity precedes the others in a sequence.
7. The database access coordination arrangement according to claim 6, wherein the traffic control unit is configured to periodically send alive messages to the other traffic distribution units, and said at least one of the traffic distribution units is configured to enter the traffic selection scheme, if no alive message is received from the traffic control unit within an alive message time limit.
8. The database access coordination arrangement according to claim 1, wherein a connectivity map is provided for each traffic distribution unit.
9. A method for coordinating database access in a federated database system, the database system comprising applications configured to access databases under the control of a number of query handlers, each query handler being connected to a number of databases and to one or more traffic distribution units in a group of traffic distribution units, the method comprising: selecting a traffic distribution unit for a query from an application based on at least one connectivity map of the connections existing between traffic distribution units, query handlers and databases and connectivity states of connections between traffic distribution units and query handlers; scheduling the query to the selected traffic distribution unit for accessing a database, wherein a connectivity state of a connection depends on alive messages sent by at least a query handler to a corresponding traffic distribution unit, and wherein an alive message from the query handler comprises at least one load value of the query handler; determining whether the query is a write query; and as a result of determining that the query is the write query, determining at least one load factor for the query and schedule the query based on the load factor of the query and corresponding load values of the traffic distribution units.
10. The method according to claim 9, further comprising selecting the query handler for the query, wherein the scheduling comprises scheduling the query also to the query handler.
11. The method according to claim 9, wherein the connectivity state of the connection is connected if alive messages are timely received and disconnected if the alive messages are not timely received.
12. The method according to claim 9, wherein the selection of traffic distribution unit comprises selecting the traffic distribution unit for the query such that the load is balanced between the traffic distribution units.
13. The method according to claim 12, wherein the load factor of the query is determined as a weighted average of loads of similar queries.
14. The method according to claim 9, wherein one of the traffic distribution units acts as a traffic control unit performing said selection of traffic distribution unit, each traffic distribution unit has an identity, where the identities are sequentially generated and assigned at instantiating, the method further comprising, in each traffic distribution unit in a traffic selection scheme: sending the own identity to the other traffic distribution units; receiving the identity of the other traffic distribution units; comparing the own identity with the received identities; and seizing the role of traffic control unit if the own identity precedes the others in the sequence, where the role of traffic control unit comprises the selecting of the traffic distribution unit for the query and scheduling the query to the selected traffic distribution unit.
15. The method according to claim 14, wherein the traffic control unit is configured to periodically send alive messages and the method further comprises entering the traffic selection scheme if no alive message is received from the traffic control unit within an alive message time limit.
16. A computer program for coordinating database access in a federated database system, the database system comprising applications configured to access databases under the control of a number of query handlers, each query handler being connected to a number of databases and to one or more traffic distribution units in a group of traffic distribution units, the computer program comprising computer program code which when run in a database access coordination arrangement, causes the database access coordination arrangement to: select a traffic distribution unit for a query from an application based on at least one connectivity map of the connections existing between traffic distribution units, query handlers and databases and connectivity states of connections between traffic distribution units and query handlers; schedule the query to the selected traffic distribution unit for accessing a database, wherein a connectivity state of a connection depends on alive messages sent by a query handler to a corresponding traffic distribution unit, and wherein an alive message from the query handler comprises at least one load value of the query handler; determine whether the query is a write query; and as a result of determining that the query is the write query, determine at least one load factor for the query and schedule the query based on the load factor of the query and corresponding load values of the traffic distribution units.
17. A computer program product for coordinating database access in a federated database system, said computer program product being provided on a non-transitory computer readable storage medium comprising computer program code which when run in a database access coordination arrangement, causes the database access coordination arrangement to: select a traffic distribution unit for a query from an application based on at least one connectivity map of the connections existing between traffic distribution units, query handlers and databases and connectivity states of connections between traffic distribution units and query handlers; schedule the query to the selected traffic distribution unit for accessing a database, wherein a connectivity state of a connection depends on alive messages sent by a query handler to a corresponding traffic distribution unit, and wherein an alive message from the query handler comprises at least one load value of the query handler; determine whether the query is a write query; and as a result of determining that the query is the write query, determine at least one load factor for the query and schedule the query based on the load factor of the query and corresponding load values of the traffic distribution units.
</claims>
</document>
