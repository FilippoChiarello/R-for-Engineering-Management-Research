<document>

<filing_date>
2017-11-27
</filing_date>

<publication_date>
2020-01-02
</publication_date>

<priority_date>
2016-12-29
</priority_date>

<ipc_classes>
G06K9/62,H04L29/06
</ipc_classes>

<assignee>
NSFOCUS INFORMATION TECHNOLOGY COMPANY
NSFOCUS TECHNOLOGY COMPANY
</assignee>

<inventors>
WU, ZIJIAN
</inventors>

<docdb_family_id>
58334725
</docdb_family_id>

<title>
NETWORK TRAFFIC ANOMALY DETECTION METHOD AND APPARATUS
</title>

<abstract>
A network traffic anomaly detection method and apparatus is provided. The method includes: acquiring network flows generated by a network monitoring node within a set period of time; for any one of attributes in the network flows, aggregating the network flows at a set time interval according to the attribute to generate N time sequences with respect to the attribute; determining N samples to be detected corresponding to the network flows according to the N time sequence, calculating respective angular dissimilarity degrees between a first time sequence and N−1 second time sequences corresponding to a first attribute in the other N−1 samples to be detected, and determining a first detection result with respect to the first time sequence; and determining whether each of the samples to be detected is an abnormal data stream according to a detection result.
</abstract>

<claims>
1. A method for detecting traffic abnormality in a network, the method comprising: obtaining net flows generated by network monitoring nodes in a set period of time; aggregating, for any one of attributes of the net flows, the net flows at a set interval of time according to the any one of the attributes to generate N number of time sequences for the any one of the attributes; determining N number of samples to be detected, corresponding to the net flows according to the N number of time sequences corresponding respectively to each of the attributes, wherein each sample to be detected comprises time sequences corresponding to respective attributes in a same aggregation period of time; calculating, for a first time sequence corresponding to a first attribute of a first sample to be detected, dissimilarities in angle between the first time sequence, and (N−1) number of second time sequences corresponding to the first attribute of the other (N−1) number of samples to be detected, respectively, wherein the first sample to be detected is any one of the N number of samples to be detected, the first attribute is any one of the attributes of the net flows, and each of the dissimilarities in angle is a sine value of an angle between a vector of the first time sequence and a vector of a corresponding second time sequence; and determining a first detection result for the first time sequence according to (N−1) number of dissimilarities in angle corresponding to the first time sequence; and determining whether each sample to be detected is an abnormal data flow, according to a detection result for each time sequence in each sample to be detected.
2. The method according to claim 1, wherein determining the first detection result for the first time sequence according to the (N−1) number of dissimilarities in angle corresponding to the first time sequence comprises: determining whether a sum of the (N−1) number of dissimilarities in angle corresponding to the first time sequence is greater than a set threshold, and if so, then generating a first detection result that the first time sequence is an abnormal time sequence; otherwise, generating a first detection result that the first time sequence is a normal time sequence; and determining whether each sample to be detected is an abnormal data flow, according to the detection result for each time sequence in each sample to be detected comprises: determining whether a number of abnormal time sequences in each sample to be detected is greater than a number of normal time sequences in the sample to be detected, and if so, then determining that the sample to be detected is an abnormal data flow; otherwise, determining that the sample to be detected is a normal data flow.
3. The method according to claim 1, wherein calculating the dissimilarities in angle between the first time sequence, and the (N−1) number of second time sequences corresponding to the first attribute of the other (N−1) number of samples to be detected, respectively, comprises: calculating (N−1) number of dissimilarities in angle between the first time sequence, and the (N−1) number of second time sequences corresponding to the first attribute of the other (N−1) number of samples to be detected, respectively in an equation of: wherein x is the vector of the first time sequence, y is the vector of the second time sequence, θxy is the angle between the vector of the first time sequence and the vector of the second time sequence, and sin θxy is the dissimilarity in angle between the vector of the first time sequence and the vector of the second time sequence.
4. The method according to claim 1, wherein the method further comprises: classifying the first time sequence corresponding to the first attribute in the first sample to be detected by using a preset one-class Support Vector Machine, SVM, classifier corresponding to the first attribute; determining a second detection result for the first time sequence according to a classification result, wherein if the classification result shows a same class, then the second detection result is that the first time sequence is a normal time sequence; otherwise, the second detection result is that the first time sequence is an abnormal time sequence; and weighting and summing up the first detection result and the second detection result to obtain a target detection result for the first time sequence; and determining whether each sample to be detected is an abnormal data flow, according to the detection result for each time sequence in each sample to be detected comprises: determining whether a number of abnormal time sequences is greater than a number of normal time sequences in target detection results corresponding to respective time sequences in each sample to be detected, and if so, then determining that the sample to be detected is an abnormal data flow; otherwise, determining that the sample to be detected is a normal data flow.
5. The method according to claim 4, wherein the preset one-class SVM classifier corresponding to the first attribute is generated by: obtaining historical net flows before the set period of time; and aggregating, for the first attribute of the historical net flows, the historical net flows at a set interval of time according to the first attribute to generate N number of time sequences for the first attribute, wherein the first attribute is any one of the attributes of the net flows; and generating the one-class SVM classifier for the first attribute by using the N number of time sequences corresponding to the first attribute as training data.
6. 6-10. (canceled)
11. An electronic device, comprising: a communication interface, a processor, and a memory, wherein: the processor is configured to invoke instructions stored in the memory, and to execute the instructions to: obtain net flows generated by network monitoring nodes in a set period of time via the communication interface; aggregate, for any one of attributes of the net flows, the net flows at a set interval of time according to the any one of the attributes to generate N number of time sequences for the any one of the attributes; determine N number of samples to be detected, corresponding to the net flows according to the N number of time sequences corresponding respectively to each of the attributes, wherein each sample to be detected comprises time sequences corresponding to respective attributes in a same aggregation period of time; calculate, for a first time sequence corresponding to a first attribute of a first sample to be detected, dissimilarities in angle between the first time sequence, and (N−1) number of second time sequences corresponding to the first attribute of the other (N−1) number of samples to be detected, respectively, wherein the first sample to be detected is any one of the N number of samples to be detected, the first attribute is any one of the attributes of the net flows, and each of the dissimilarities in angle is a sine value of an angle between a vector of the first time sequence and a vector of a corresponding second time sequence; and determine a first detection result for the first time sequence according to (N−1) number of dissimilarities in angle corresponding to the first time sequence; and determine whether each sample to be detected is an abnormal data flow, according to a detection result for each time sequence in each sample to be detected.
12. The electronic device according to claim 11, wherein the processor is configured to: determine whether a sum of the (N−1) number of dissimilarities in angle corresponding to the first time sequence is greater than a set threshold, and if so, generate a first detection result that the first time sequence is an abnormal time sequence; otherwise, generate a first detection result that the first time sequence is a normal time sequence; and determine whether a number of abnormal time sequences in each sample to be detected is greater than a number of normal time sequences in the sample to be detected, and if so, determine that the sample to be detected is an abnormal data flow; otherwise, determine that the sample to be detected is a normal data flow.
13. The electronic device according to claim 11, wherein the processor is configured to calculate (N−1) number of dissimilarities in angle between the first time sequence, and the (N−1) number of second time sequences corresponding to the first attribute of the other (N−1) number of samples to be detected, respectively in an equation of: wherein x is the vector of the first time sequence, y is the vector of the second time sequence, θxy is the angle between the vector of the first time sequence and the vector of the second time sequence, and sin θxy is the dissimilarity in angle between the vector of the first time sequence and the vector of the second time sequence.
14. The electronic device according to claim 11, wherein the processor is configured to: classify the first time sequence corresponding to the first attribute in the first sample to be detected by using a preset one-class Support Vector Machine (SVM) classifier corresponding to the first attribute; determine a second detection result for the first time sequence according to a classification result, wherein if the classification result shows a same class, then the second detection result is that the first time sequence is a normal time sequence; otherwise, the second detection result is that the first time sequence is an abnormal time sequence; weight and sum up the first detection result and the second detection result to obtain a target detection result for the first time sequence; and determine whether a number of abnormal time sequences is greater than a number of normal time sequences in target detection results corresponding to respective time sequences in each sample to be detected, and if so, determine that the sample to be detected is an abnormal data flow; otherwise, determine that the sample to be detected is a normal data flow.
15. The electronic device according to claim 14, wherein the processor is configured to generate the preset one-class SVM classifier corresponding to the first attribute by: obtaining historical net flows before the set period of time; and aggregating, for the first attribute of the historical net flows, the historical net flows at a set interval of time according to the first attribute to generate N number of time sequences for the first attribute, wherein the first attribute is any one of the attributes of the net flows; and generating the one-class SVM classifier for the first attribute by using the N number of time sequences corresponding to the first attribute as training data.
16. A non-transitory computer readable storage medium on which computer instructions are stored, wherein the computer instructions are configured to enable a computer to perform the method according to claim 1.
17. A computer program product, comprising a computer program stored on a non-transitory computer readable storage medium, wherein the computer program comprises program instructions configured, upon being executed by a computer, to enable the computer to perform the method according to claim 1.
</claims>
</document>
