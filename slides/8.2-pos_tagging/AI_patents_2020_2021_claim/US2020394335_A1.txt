<document>

<filing_date>
2019-06-11
</filing_date>

<publication_date>
2020-12-17
</publication_date>

<priority_date>
2019-06-11
</priority_date>

<ipc_classes>
G06F21/72,H04L9/00,H04L9/16
</ipc_classes>

<assignee>
AT&T INTELLECTUAL PROPERTY I (AMERICAN TELEPHONE AND TELEGRAPH COMPANY INTELLECTUAL PROPERTY I)
</assignee>

<inventors>
COTTRILL, WILLIAM C.
HARDIE, PETER
MEREDITH, SHELDON KENT
</inventors>

<docdb_family_id>
73745052
</docdb_family_id>

<title>
SECURE CPU ARCHITECTURE USING ENCRYPTION OF RETURN ADDRESSES
</title>

<abstract>
Aspects of the subject disclosure may include, for example, identifying, during a CPU's execution of a first program, a branching instruction of the first program that redirects execution to a second program. Responsive to the identifying of the branching instruction, a return address of a next instruction of the first program is encrypted. The encrypted return address is transferred to the second program without the CPU retaining a record of the return address. The encrypted return address is received from the second program responsive to its completion of execution. The received encrypted return address is decrypted to obtain the return address enabling a resumption of execution of the first program from the next instruction. Other embodiments are disclosed.
</abstract>

<claims>
1. A method, comprising: receiving, by a processing system including a processor during execution of a first function by the processing system, a function-call instruction of a first plurality of instructions of the first function, wherein execution of the function-call instruction redirects execution by the processing system to a second plurality of instructions of a second function identified by the function-call instruction; encrypting, by the processing system responsive to the receiving of the function-call instruction, a return address of a next instruction of the first plurality of instructions to obtain an encrypted return address, wherein an instruction of the first plurality of instructions of the first function is stored at the return address; providing, by the processing system, the encrypted return address to the second function; receiving, by the processing system from the second function, the encrypted return address responsive to completion of execution of the second function by the processing system; and decrypting, by the processing system, the encrypted return address received from the second function to obtain a decrypted return address, wherein execution of the first function by the processing system commences from the next instruction of the first plurality of instructions stored at the decrypted return address.
2. The method of claim 1, wherein the providing of the encrypted return address to the second function further comprises pushing, by the processing system, the encrypted return address onto a runtime stack adapted to pass information comprising the encrypted return address between the first function and the second function.
3. The method of claim 2, wherein the receiving of the encrypted return address from the second function further comprises popping, by the processing system, the encrypted return address from a runtime stack adapted to pass information comprising the encrypted return address between the first function and the second function.
4. The method of claim 1, wherein the encrypting of the return address further comprises using a private symmetric encryption key only accessible to the processing system.
5. The method of claim 4, wherein the first function is associated with a first process of a plurality of processes executed by the processing system, the private symmetric encryption key being unique to the first process.
6. The method of claim 4, wherein the private symmetric encryption key is changed periodically.
7. The method of claim 6, wherein the private symmetric encryption key is changed responsive to each occurrence of function-call instruction.
8. The method of claim 1, further comprising appending, by the processing system responsive to the receiving of the function-call instruction, an extra sequence of digits to the return address, resulting in an adjusted return address, wherein the encrypting of the return address comprises encrypting the adjusted return address.
9. The method of claim 8, wherein the extra sequence of digits further comprises a predetermined string of binary digits.
10. The method of claim 9, wherein the decrypted return address further comprises the adjusted return address, the method further comprising: extracting, by the processing system, the extra sequence of digits of the adjusted return address to obtain an extracted extra sequence of digits; comparing, by the processing system, the extracted extra sequence of digits to the predetermined string of binary digits to obtain a comparison; and terminating, by the processing system, execution of the first function responsive to the comparison indicating a disagreement between the extracted extra sequence of digits and the predetermined string of binary digits.
11. The method of claim 8, wherein the extra sequence of digits further comprises a predetermined string of binary digits comprises a checksum value of the return address.
12. The method of claim 1, wherein the providing of the encrypted return address to the second function occurs without the processing system retaining a record of the return address.
13. A device, comprising: a processing system including a processor; and a memory that stores executable instructions that, when executed by the processing system, facilitate performance of operations, the operations comprising: identifying, during execution of a program by the processing system, a function-call instruction of a first plurality of instructions of the program, wherein execution of the function-call instruction redirects execution by the processing system to a second plurality of instructions of a function identified by the function-call instruction; encrypting, responsive to the identifying of the function-call instruction, a return address of a next instruction of the first plurality of instructions to obtain an encrypted return address; forwarding the encrypted return address to the function; receiving, from the function, the encrypted return address responsive to completion of execution of the function by the processing system; and decrypting the encrypted return address received from the function to obtain a decrypted return address, wherein execution of the program by the processing system commences from an instruction location of the first plurality of instructions identified by the decrypted return address.
14. The device of claim 13, wherein the forwarding of the encrypted return address to the function further comprises pushing the encrypted return address onto a stack adapted to pass information comprising the encrypted return address to between the program and the function.
15. The device of claim 13, wherein the receiving of the encrypted return address from the function further comprises popping the encrypted return address from a stack adapted to pass information comprising the encrypted return address between the function and the program.
16. The device of claim 13, wherein the encrypting of the return address further comprises using a private symmetric key only available to the processing system.
17. A machine-readable medium, comprising executable instructions that, when executed by a processing system including a processor, facilitate performance of operations, the operations comprising: identifying, during execution of a first program by the processing system, a branching instruction of a first plurality of instructions of the first program, wherein execution of the branching instruction redirects execution by the processing system to a second plurality of instructions of a second program identified by the branching instruction; encrypting, responsive to the identifying of the branching instruction, a return address of a next instruction of the first plurality of instructions to obtain an encrypted return address; transferring the encrypted return address to the second program without retaining a record of the return address; receiving, from the second program, the encrypted return address responsive to completion of execution of the second program by the processing system; and decrypting the encrypted return address received from the second program to obtain a decrypted return address, wherein execution of the first program by the processing system continues from an instruction location of the first plurality of instructions identified by the decrypted return address.
18. The machine-readable medium of claim 17, wherein the transferring of the encrypted return address to the second program further comprises pushing the encrypted return address onto a stack adapted to pass information comprising the encrypted return address between the first program and the second program.
19. The machine-readable medium of claim 17, wherein the receiving of the encrypted return address from the second program further comprises popping the encrypted return address from a stack adapted to pass information comprising the encrypted return address between the first program and the second program.
20. The machine-readable medium of claim 17, wherein the encrypting of the return address further comprises applying a private symmetric key known only to the processing system.
</claims>
</document>
