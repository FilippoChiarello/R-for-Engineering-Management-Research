<document>

<filing_date>
2018-12-12
</filing_date>

<publication_date>
2020-05-14
</publication_date>

<priority_date>
2018-11-13
</priority_date>

<ipc_classes>
G06N3/04,G06N3/08,H04L12/58,H04L29/08
</ipc_classes>

<assignee>
CHA UNIVERSITY INDUSTRY-ACADEMIC COOPERATION FOUNDATION
</assignee>

<inventors>
JEONG, TAIKYEONG
</inventors>

<docdb_family_id>
70550895
</docdb_family_id>

<title>
DEEP LEARNING-BASED SOCIAL MASHUP LOGIC IMPLEMENTATION SYSTEM AND METHOD FOR REDUCING ADVERSE EFFECTS OF SOCIAL NETWORKING SERVICE
</title>

<abstract>
A deep learning-based social mashup logic implementation system, includes a user interface server configured to store data about a user's personal information, login information, activity information, and the like of web- and mobile-based interfaces, an external link server configured to store data about activities, a situation recognition server configured to sense mental and environmental changes of the user and store data related to the mental and environmental changes of the user, an analysis server configured to generate and store a relationship index obtained by numerically calculating a relationship between the user and the other user with an artificial neural network, and a management server configured to adjust a level of the other user's access to the user's posts and a level of exposing content uploaded by the user.
</abstract>

<claims>
1. A deep learning-based mashup logic implementation system for reducing adverse effects of a social networking service (SNS), the system comprising: a user interface server configured to store data about a user's personal information, login information, activity information, and the like of weband mobile-based interfaces; an external link server configured to store data about activities done within a mutual relationship between the user and another user related to the user in a social medium, a school community, a local community, and the like; a situation recognition server configured to sense mental and environmental changes of the user based on the information stored in the user interface server and the external link server and store data related to the mental and environmental changes of the user; an analysis server configured to generate and store a relationship index obtained by numerically calculating a relationship between the user and the other user with an artificial neural network based on basic values stored in the user interface server, the external link server, and the situation recognition server and additional values which are added or changed by the user's activities and the like and stored in the user interface server, the external link server, and the situation recognition server; and a management server configured to adjust a level of the other user's access to the user's posts and a level of exposing content uploaded by the user according to the relationship index calculated by the analysis server.
2. The deep learning-based mashup logic implementation system of claim 1, wherein the analysis server analyzes the relationship index using: a first level analysis operation of analyzing the relationship index using data stored in the user interface server, the external link server, and the situation recognition server as the basic values; a second level analysis operation of applying the additional values including information on subjects related to comments on the user's activities and posts to an analysis result of the first level analysis operation and analyzing a preference using a convolutional neural network (CNN); a third level analysis operation of re-analyzing the preference using a recurrent neural network (RNN) in consideration of a change made by an analysis result of the second level analysis operation; an operation of storing an analysis result of the third level analysis operation as a basic value; and an operation of repeatedly performing the first to third level analysis operations using data to which the analysis result of the third level analysis operation is applied.
3. The deep learning-based mashup logic implementation system of claim 1, wherein the relationship index is classified into sections of the relationship index displayed to be 0 when the relationship is completely negative and displayed to be 100 when the relationship is completely positive, and the relationship index sections include: a first section in which the relationship index is greater than or equal to 0 and smaller than 10; a second section in which the relationship index is greater than or equal to 10 and smaller than 25; a third section in which the relationship index is greater than or equal to 25 and smaller than 45; a fourth section in which the relationship index is greater than or equal to 45 and smaller than 65; a fifth section in which the relationship index is greater than or equal to 65 and smaller than 80; a sixth section in which the relationship index is greater than or equal to 80 and smaller than 90; and a seventh section in which the relationship index is greater than or equal to 90 and smaller than or equal to 100.
4. The deep learning-based mashup logic implementation system of claim 3, wherein when the relationship index corresponds to the second to sixth sections, a threshold value of each section serves as a threshold, and the level of the other user's access to the user's posts and the level of exposing the content uploaded by the user are changed at a threshold value of each section, when the relationship index corresponds to the first section, that is, when the relationship index is smaller than 10, the other user's access to the user's posts is immediately and completely blocked, and when the relationship index corresponds to the seventh section, that is, when the relationship index is greater than or equal to 90, the user's posts are immediately and entirely exposed.
5. The deep learning-based mashup logic implementation system of claim 1, further comprising an encryption section configured to generate a converted relationship index by converting the relationship index and store the converted relationship index, wherein the relationship index is calculated from every relationship between the user and another user.
6. The deep learning-based mashup logic implementation system of claim 5, wherein the converted relationship index includes: a coded index encoded to distinguish the relationship between the user and the other user; and an encrypted index obtained by encrypting the coded index.
7. The deep learning-based mashup logic implementation system of claim 2, wherein the relationship index is calculated in consideration of initial attraction indicating a degree of positive or negative reaction to the user's initial post, reactive attraction indicating a degree of positive or negative reaction to the user's post after comments are added to the post, surrounding element attraction indicating a degree of positive or negative reaction to surrounding elements related to a subject of the post, a tangible access level indicating variations in numbers of comments, conversations, and logins of the other user for the post, and an intangible access level indicating a type of the subject of the post.
8. The deep learning-based mashup logic implementation system of claim 7, wherein the initial attraction is calculated in consideration of a first element related to the user's age, a second element related to the user's residential area, a third element related to the user's sex, a fourth element related to the user's job, and a fifth element related to the user's time preference denoting whether the user frequently does activities in daytime or at night, and the initial attraction is defined by an equation below: where C is the initial attraction, FCn is a number of posts having the same subject as the user's post among posts which satisfy the same conditions as the first to fifth elements, and Fn is a total number of posts which satisfy the same conditions as the first to fifth elements.
9. The deep learning-based mashup logic implementation system of claim 8, wherein the surrounding element attraction is calculated by applying additional values to the initial attraction through the second and third level analysis operations.
10. The deep learning-based mashup logic implementation system of claim 7, wherein the reactive attraction is defined by an equation below: where R is the reactive attraction.
11. The deep learning-based mashup logic implementation system of claim 7, wherein the tangible access level is determined in consideration of a first type indicating amounts of comments and conversation about the subject of the post, a second type indicating proceeding speeds of comments and conversation about the subject of the post, a third type indicating a ratio of an increase in speed at which comments are added to an increase in an amount of comments since comments are added to the post, a fourth type indicating a total number of logins to the post, a fifth type indicating a number of repeated logins to the post, a sixth type indicating a ratio of the number of repeated logins to the total number of logins, and a seventh type indicating a ratio of a number of times that other posts are viewed to a number of times that the post is accessed and viewed, and the tangible access level is determined by an equation below:
description="In-line Formulae" end="lead"?DA=ω1×i1+ω2×i2+ω3×i3+ω4×i4+ω5×i5+ω6×i6+ω7×i7 description="In-line Formulae" end="tail"? where DA is the tangible access level, ω1 to ω7 are weights of the first to seventh types, and i1 to i7 are values of the first to seventh types.
12. The deep learning-based mashup logic implementation system of claim 7, wherein when the post has no comments, the intangible access level is calculated through the second level analysis operation and the third level analysis operation by applying a subject classified according to a purpose of the post to the initial attraction, and when the post has comments, the intangible access level is calculated through the second level analysis operation and the third level analysis operation by applying a detailed type of a subject classified according to an overall purpose of the post including the comments to the reactive attraction.
13. The deep learning-based mashup logic implementation system of claim 7, wherein the relationship index is determined to be a value obtained by combining the initial attraction, the reactive attraction, the surrounding element attraction, and the tangible access level, and the relationship index is defined by an equation below:
description="In-line Formulae" end="lead"?RC=ωc×C+ωr×R+ωe×E+ωd×DA description="In-line Formulae" end="tail"? where RC is the relationship index, ωc is a weight of the initial attraction, ωr is a weight of the reactive attraction, ωe is a weight of the surrounding element attraction, ωd is a weight of the tangible access level, C is the initial attraction, R is the reactive attraction, E is the surrounding element attraction, and DA is the tangible access level.
14. A deep learning-based mashup logic implementation method for reducing adverse effects of a social networking service (SNS), the method comprising: storing, by a user interface server, data about a user's personal information, login information, activity information, and the like of weband mobile-based interfaces; storing, by an external link server, data about activities done within a mutual relationship between the user and another user related to the user in a social medium, a school community, a local community, and the like; sensing, by a situation recognition server, mental and environmental changes of the user based on the information stored in the user interface server and the external link server and storing data related to the mental and environmental changes of the user; generating and storing, by an analysis server, a relationship index obtained by numerically calculating a relationship between the user and the other user with an artificial neural network based on basic values stored in the user interface server, the external link server, and the situation recognition server and additional values which are added or changed by the user's activities and the like and stored in the user interface server, the external link server, and the situation recognition server; and adjusting, by a management server, a level of the other user's access to the user's posts and a level of exposing content uploaded by the user according to the relationship index calculated by the analysis server.
15. The deep learning-based mashup logic implementation method of claim 14, wherein the generating and storing of the relationship index obtained by numerically calculating the relationship with the artificial neural network comprises: a first level analysis operation of analyzing the relationship index using data stored in the user interface server, the external link server, and the situation recognition server as the basic values; a second level analysis operation of applying the additional values including information on subjects related to comments on the user's activities and posts to an analysis result of the first level analysis operation and analyzing a preference using a convolutional neural network (CNN); a third level analysis operation of re-analyzing the preference using a recurrent neural network (RNN) in consideration of a change made by an analysis result of the second level analysis operation; an operation of storing an analysis result of the third level analysis operation as a basic value; and an operation of repeatedly performing the first to third level analysis operations using data to which the analysis result of the third level analysis operation is applied.
16. The deep learning-based mashup logic implementation method of claim 14, wherein the relationship index is classified into sections of the relationship index displayed to be 0 when the relationship is completely negative and displayed to be 100 when the relationship is completely positive, and the relationship index sections include: a first section in which the relationship index is greater than or equal to 0 and smaller than 10; a second section in which the relationship index is greater than or equal to 10 and smaller than 25; a third section in which the relationship index is greater than or equal to 25 and smaller than 45; a fourth section in which the relationship index is greater than or equal to 45 and smaller than 65; a fifth section in which the relationship index is greater than or equal to 65 and smaller than 80; a sixth section in which the relationship index is greater than or equal to 80 and smaller than 90; and a seventh section in which the relationship index is greater than or equal to 90 and smaller than or equal to 100.
17. The deep learning-based mashup logic implementation method of claim 16, wherein when the relationship index corresponds to the second to sixth sections, a threshold value of each section serves as a threshold, and the level of the other user's access to the user's posts and the level of exposing the content uploaded by the user are changed at a threshold value of each section, when the relationship index corresponds to the first section, that is, when the relationship index is smaller than 10, the other user's access to the user's posts is immediately and completely blocked, and when the relationship index corresponds to the seventh section, that is, when the relationship index is greater than or equal to 90, the user's posts are immediately and entirely exposed.
18. The deep learning-based mashup logic implementation method of claim 14, further comprising generating, by an encryption section, a converted relationship index obtained by converting the relationship index and storing the converted relationship index, wherein the relationship index is calculated from every relationship between the user and another user.
19. The deep learning-based mashup logic implementation method of claim 18, wherein the generating of the converted relationship index comprises: generating, by the encryption section, a coded index encoded to distinguish the relationship between the user and the other user; and generating, by the encryption section, an encrypted index obtained by encrypting the coded index.
20. The deep learning-based mashup logic implementation method of claim 15, wherein the relationship index is calculated in consideration of initial attraction indicating a degree of positive or negative reaction to the user's initial post, reactive attraction indicating a degree of positive or negative reaction to the user's post after comments are added to the post, surrounding element attraction indicating a degree of positive or negative reaction to surrounding elements related to a subject of the post, a tangible access level indicating variations in numbers of comments, conversations, and logins of the other user for the post, and an intangible access level indicating a type of the subject of the post.
21. The deep learning-based mashup logic implementation method of claim 20, wherein the initial attraction is calculated in consideration of a first element related to the user's age, a second element related to the user's residential area, a third element related to the user's sex, a fourth element related to the user's job, and a fifth element related to the user's time preference denoting whether the user frequently does activities in daytime or at night, and the initial attraction is defined by an equation below: where C is the initial attraction, FCn is a number of posts having the same subject as the user's post among posts which satisfy the same conditions as the first to fifth elements, and Fn is a total number of posts which satisfy the same conditions as the first to fifth elements.
22. The deep learning-based mashup logic implementation method of claim 21, wherein the surrounding element attraction is calculated by applying additional values to the initial attraction through the second and third level analysis operations.
23. The deep learning-based mashup logic implementation method of claim 20, wherein the reactive attraction is defined by an equation below: where R is the reactive attraction.
24. The deep learning-based mashup logic implementation method of claim 20, wherein the tangible access level is determined in consideration of a first type indicating amounts of comments and conversation about the subject of the post, a second type indicating proceeding speeds of comments and conversation about the subject of the post, a third type indicating a ratio of an increase in speed at which comments are added to an increase in an amount of comments since comments are added to the post, a fourth type indicating a total number of logins to the post, a fifth type indicating a number of repeated logins to the post, a sixth type indicating a ratio of the number of repeated logins to the total number of logins, and a seventh type indicating a ratio of a number of times that other posts are viewed to a number of times that the post is accessed and viewed, and the tangible access level is determined by an equation below:
description="In-line Formulae" end="lead"?DA=ω1×i1+ω2×i2+ω3×i3+ω4×i4+ω5×i5+ω6×i6+ω7×i7 description="In-line Formulae" end="tail"? where DA is the tangible access level, ω1 to ω7 are weights of the first to seventh types, and i1 to i7 are values of the first to seventh types.
25. The deep learning-based mashup logic implementation method of claim 20, wherein when the post has no comments, the intangible access level is calculated through the second level analysis operation and the third level analysis operation by applying a subject classified according to a purpose of the post to the initial attraction, and when the post has comments, the intangible access level is calculated through the second level analysis operation and the third level analysis operation by applying a detailed type of a subject classified according to an overall purpose of the post including the comments to the reactive attraction.
26. The deep learning-based mashup logic implementation method of claim 20, wherein the relationship index is determined to be a value obtained by combining the initial attraction, the reactive attraction, the surrounding element attraction, and the tangible access level, and the relationship index is defined by an equation below:
description="In-line Formulae" end="lead"?RC=ωc×C+ωr×R+ωe×E+ωd×DA description="In-line Formulae" end="tail"? where RC is the relationship index, ωc is a weight of the initial attraction, ωr is a weight of the reactive attraction, ωc is a weight of the surrounding element attraction, ωd is a weight of the tangible access level, C is the initial attraction, R is the reactive attraction, E is the surrounding element attraction, and DA is the tangible access level.
</claims>
</document>
