<document>

<filing_date>
2019-05-02
</filing_date>

<publication_date>
2020-09-22
</publication_date>

<priority_date>
2017-11-09
</priority_date>

<ipc_classes>
G06F8/60,G06F8/61,G06F8/71,G06F9/445,G06F9/455,G06F9/50
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
DE CAPOA, GABRIELE
DE GAETANO, ROSSELLA
RIBECHINI, FAUSTO
RIVA, VALERIO
VILLANI, MASSIMO
</inventors>

<docdb_family_id>
66327235
</docdb_family_id>

<title>
Dynamic selection of deployment configurations of software applications
</title>

<abstract>
A method and system are for deploying a software application. The software application is deployed in a default deployment configuration onto a computing system. The default deployment configuration includes interacting software components of the software application. It is ascertained, from one or more operating indicators of an execution environment of the software application, that a critical condition of the execution environment exists. In response to having ascertained that the critical condition of the execution environment exists, an alternative deployment configuration is selected from one or more alternative deployment configurations of the software application, each alternative deployment configuration having one or more groups of the software components aggregated into corresponding aggregated software components. The software application is re-deployed in the selected alternative deployment configuration onto the computing system.
</abstract>

<claims>
1. A method for deploying a software application, said method comprising: deploying the software application in a default deployment configuration onto a computing system, said default deployment configuration comprising a plurality of interacting software components of the software application; ascertaining, from one or more operating indicators of an execution environment of the software application, that a critical condition of the execution environment exists; in response to said ascertaining, selecting an alternative deployment configuration from one or more alternative deployment configurations of the software application, each alternative deployment configuration having one or more groups of the software components aggregated into corresponding aggregated software components; and re-deploying the software application in the selected alternative deployment configuration onto the computing system, wherein the software components of each group comprise one or more remote invocations of services implemented by the software components of said each group, and wherein the corresponding aggregated software components replace the remote invocations with corresponding native invocations.
2. The method of claim 1, wherein the method comprises: re-deploying the software application in the default deployment configuration onto the computing system in response to a return to a default condition of the execution environment from the critical condition according to the operating indicators.
3. The method of claim 1, wherein the software application is deployed in a plurality of instances, each instance comprising one or more instances of the corresponding aggregated software components.
4. The method of claim 3, wherein one or more software components of the software components are stateful, and wherein for each first instance of the instances of each stateful software component, the method comprises: maintaining corresponding session data of any sessions implemented by the first instance of the stateful software component onto a first computing machine of the computing system at which the first instance of the stateful software component is deployed; mirroring the session data onto one or more mirroring computing machines of the computing system different from the first computing machine; copying the session data from one of the mirroring computing machines to a second computing machine of the computing system, wherein a second instance of the instances of the stateful software component is deployed in response to a movement of the sessions from the first instance of the software component to the second instance of the software component; and copying the session data from one of the mirroring computing machines to a third computing machine of the computing system, wherein an instance of one aggregated software component of the aggregated software components comprising a first instance of the software component is deployed in response to a movement of the sessions from the first instance of the software component to the instance of the one aggregated software component.
5. The method of claim 1, wherein each software component of the aggregated software components incorporates a code of the corresponding aggregated software components.
6. The method of claim 1, wherein the software application is a cloud software application.
7. The method of claim 1, wherein the method comprises: monitoring one or more performance indicators, configuration indicators, and/or availability indicators of the execution environment.
8. The method of claim 1, wherein the method comprises: deploying the software application in a plurality of training deployment configurations comprising the default deployment configuration and the alternative deployment configurations each onto a plurality of training environments having different values of the operating indicators; measuring one or more performance indicators of the software application in each training deployment configuration on each training environment; and determining a selection policy for selecting the alternative deployment configurations according to the operating indicators of the training environments and the corresponding performance indicators of the software application in the training deployment configurations.
9. The method of claim 8, wherein the method comprises: deploying the software application in the training deployment configurations comprising a plurality of candidate deployment configurations for the alternative deployment configurations, and selecting the alternative deployment configurations among the candidate deployment configurations according to the operating indicators of the training environments and the corresponding performance indicators of the software application in the training deployment configurations.
10. The method of claim 1, wherein one or more software components of the software components are stateless.
11. A computer program product, comprising one or more computer readable hardware storage devices having computer readable program code stored therein, said program code containing instructions executable by one or more processors of a computer system to implement a method for deploying a software application, said method comprising: deploying the software application in a default deployment configuration onto a computing system, said default deployment configuration comprising a plurality of interacting software components of the software application; ascertaining, from one or more operating indicators of an execution environment of the software application, that a critical condition of the execution environment exists; in response to said ascertaining, selecting an alternative deployment configuration from one or more alternative deployment configurations of the software application, each alternative deployment configuration having one or more groups of the software components aggregated into corresponding aggregated software components; and re-deploying the software application in the selected alternative deployment configuration onto the computing system, wherein the software components of each group comprise one or more remote invocations of services implemented by the software components of said each group, and wherein the corresponding aggregated software components replace the remote invocations with corresponding native invocations.
12. The computer program product of claim 11, wherein the method comprises: re-deploying the software application in the default deployment configuration onto the computing system in response to a return to a default condition of the execution environment from the critical condition according to the operating indicators.
13. The computer program product of claim 11, wherein the software application is deployed in a plurality of instances, each instance comprising one or more instances of the corresponding aggregated software components.
14. A computer system, comprising one or more processors, one or more memories, and one or more computer readable hardware storage devices, said one or more hardware storage device containing program code executable by the one or more processors via the one or more memories to implement a method for deploying a software application, said method comprising: deploying the software application in a default deployment configuration onto a computing system, said default deployment configuration comprising a plurality of interacting software components of the software application; ascertaining, from one or more operating indicators of an execution environment of the software application, that a critical condition of the execution environment exists; in response to said ascertaining, selecting an alternative deployment configuration from one or more alternative deployment configurations of the software application, each alternative deployment configuration having one or more groups of the software components aggregated into corresponding aggregated software components; and re-deploying the software application in the selected alternative deployment configuration onto the computing system, wherein the software components of each group comprise one or more remote invocations of services implemented by the software components of said each group, and wherein the corresponding aggregated software components replace the remote invocations with corresponding native invocations.
15. The computer system of claim 14, wherein the method comprises: re-deploying the software application in the default deployment configuration onto the computing system in response to a return to a default condition of the execution environment from the critical condition according to the operating indicators.
16. The computer system of claim 14, wherein the software application is deployed in a plurality of instances, each instance comprising one or more instances of the corresponding aggregated software components.
</claims>
</document>
