<document>

<filing_date>
2018-02-02
</filing_date>

<publication_date>
2020-01-30
</publication_date>

<priority_date>
2017-02-28
</priority_date>

<ipc_classes>
G06N3/00,G06N3/12
</ipc_classes>

<assignee>
DONGGUAN UNIVERSITY OF TECHNOLOGY
LI LIN
LI YUN
</assignee>

<inventors>
LI LIN
LI YUN
</inventors>

<docdb_family_id>
59453958
</docdb_family_id>

<title>
GLOBAL OPTIMAL PARTICLE FILTERING METHOD AND GLOBAL OPTIMAL PARTICLE FILTER
</title>

<abstract>
The invention relates to a global optimal particle filtering method and a global optimal particle filter. The problem of particle filter processing nonlinear and non-Gaussian signals is effectively solved. The main technical means is to use the Lamarck genetic natural law to construct a global optimal particle filter comprising: generating an initial particle set; using Unscented Kalman Filter to perform importance sampling on the initial particle set to obtain sampled particles; performing floating-point number encoding for each of the sampled particles to obtain an encoded particle set; setting an initial population; using the initial population as an original trial population to sequentially perform a Lamarck overwriting operation, a real number decoding operation, and an elite retention operation; using the real-number optimal candidate particle as a prediction sample for a next moment, and obtaining a state estimation value of a system. The invention is applicable to machine learning.
</abstract>

<claims>
1. A global optimal particle filtering method, the method comprises steps of: step 1: generating an initial particle set; step 2: using an Unscented Kalman Filter to perform an importance sampling on the initial particle set to obtain sampled particles; step 3: performing a floating-point number encoding for each of the sampled particles to obtain an encoded particle set; step 4: setting an initial population according to the encoded particle set; step 5: using the initial population as an original trial population to sequentially perform a Lamarck overwriting operation, a real number decoding operation, and an elite retention operation; wherein the Lamarck overwriting operation refers to, according to a ratio between fitnesses of two parent candidate particles, passing a code of the parent with a higher fitness directly to an offspring of the parent with a lower fitness, replacing corresponding bits of its floating-point number, and retaining a parent particle with the higher fitness as its offspring particle; and finally obtaining a overwritten particle set; the real number decoding operation is to convert the particle set obtained by the Lamarck overwriting operation into a real-number particle set; the elite retention operation is to compare a weight of the particle having a largest weight in a candidate particle set which is selected from each iteration with a weight of the particle having a largest weight in the previous generation, to select the particle having a larger weight, and to replace both the particle having a smallest weight and its floating-point number format into the particle having the largest weight and its floating-point number format, generating a new generation of population and using the new generation of population as the original trial population; step 6: repeatedly performing step 5 until an iteration termination condition is reached; obtaining an optimal real-number particle set when terminated; step 7: using the optimal real-number particle set as a prediction sample for a next moment, and proceeding to step 2 until a system termination condition is reached, obtaining a state estimation value of a system.
2. The method according to claim 1, the initial particle set in the step 1 is {x0i, i=1, 2, . . . , N}, wherein step 2 is specifically as follows: step 2.1: calculating a mean {tilde over (x)}ki and a variance Pki of the initial particle set {x0i, i=1, 2, . . . , N}, and obtaining a proposal distribution q(xki|x0:k−1i, z1;k)=N({tilde over (x)}ki, Pki) of the Unscented Kalman Filter; wherein the particle xki satisfies xki˜N({tilde over (x)}ki, Pki); step 2.2: calculating a weight {tilde over (w)}ki of the sampled particle xki and normalizing it to obtain a normalized weight wki, i.e., wki={tilde over (w)}ki/Σi=1N{tilde over (w)}ki step 2.3: obtaining the sampled particles {xki, wki}i=1N according to the particle xki and its weight wki.
3. The method according to claim 1, wherein step 3 is specifically as follows: representing the particle xki as xki=(ni1ni2 . . . nil)k by the floating-point number format using a fixed number l of significant bits, and obtaining the encoded particle set {(ni1ni2 . . . nil)k}i=1N={(n11n12 . . . n11)k, (n21n22 . . . n2l)k, . . . , (nN1nN2 . . . nNl)k}, wherein nNl represents a value of a number of significant bits of an Nth particle.
4. The method according to claim 3, wherein step 4 is specifically as follows: using the encoded particle set {(ni1ni2 . . . nil)k}i=1N in the floating-point number format at a time k as a first generation of initial population of an entire optimization operation; a population size NP of the initial population being equal to a number N of particles; using the floating-point number format (ni1ni2 . . . nil)k of each particle as one individual, each bit of a floating-point number value representing one decimal gene, and the weight wki of each particle representing a fitness function value of each chromosome.
5. The method according to claim 4, wherein step 5 comprises steps of: step 5A: the Lamarck overwriting operation; step 5B: the real number decoding operation; and step 5C: the elite retention operation; wherein step 5A specifically comprises steps of: step 5A.1: for each particle, determining whether to select the particle as a overwriting particle according to a generated overwriting probability h, wherein h∈(0,1]; randomly generating a random number r between (0,1], if r<h, selecting the overwriting particle, otherwise not selecting the overwriting particle; letting a i1th particle and its floating-point number format (ni11ni12 . . . ni1l)k and a i2th particle and its floating-point number format (ni21ni22 . . . ni2l)k to be selected as overwriting particles, and satisfying wki1>wki2; step 5A.2: calculating a proportion pt of delivered genes, pt satisfying and calculating a number nt of the delivered genes according to the following formula:
description="In-line Formulae" end="lead"?nt=l×pt description="In-line Formulae" end="tail"? step 5A.3: if not all the weights of the selected overwriting particles being 0, then using the floating-point number format of the i1th particle having the larger weight to overwriting the floating-point number format of the i2th particle having a smaller weight, wherein an overwriting position is random, and a number of the overwriting position is nt; step 5A.4: repeatedly performing steps 5A.1 to 5A.3 until a predetermined number NP of times is reached to obtain a final overwritten particle set in the floating-point format:
description="In-line Formulae" end="lead"?{((ni1)′(ni2)′ . . . (nil)′)k}i=1N={((n11)′(n12)′ . . . (n1l)′)k, . . . , ((nN1)′(nN2)′ . . . (nNl)′)k}.description="In-line Formulae" end="tail"?
6. The method according to claim 5, wherein step 5B specifically comprises steps of: performing the real number decoding on the particle set in the floating-point format obtained in step 5A to obtain a written real-number particle set {x′ki}i=1N, wherein
description="In-line Formulae" end="lead"?x′ki=(−1)(ni1)′×(10(l−6)×(ni1)′+10(l−7)×(ni2)′+10(l−8)×(ni3)′+ . . . +10−4×(nil)′),description="In-line Formulae" end="tail"? and obtaining the normalized weight w′ki of corresponding particle according to the real-number particle.
7. The method according to claim 6, wherein step 5C specifically comprises: selecting the real-number particle having the largest weight in the current iteration, and then comparing its weight with the weight of the particle having the largest weight in the previous iteration, selecting the particle having the larger weight, replacing both the particle having the smallest weight and its floating-point number format into the particle having the largest weight and its floating-point number format, generating the new generation of population and using the new generation of population as the original trial population.
8. The method according to claim 7, wherein in step 5C, a gth generation of population is denoted as S(g)={s1(g), s2(g), . . . , sNs(g)}, wherein si(g) represents an optimal individual in the gth generation of population; 1≤i≤Ns; and Ns is the population size; a new generation of population being S(g+1)={s1(g+1), . . . , sNs(g+1)}, wherein the optimal individual in the new generation of population is sj(g+1); a worst individual in the new generation of population is sm(g+1), 1≤j≤Ns, and 1≤m≤Ns, wherein if si(g) is superior to sj(g+1), then the optimal individual si(g) in the gth generation of population is added into the new population S(g+1) as a (Ns+1)th individual of the new population S(g+1) , and the individual having a smallest fitness is removed from the new population S(g+1) ; at this time, the new population S(g+1) is represented as:
description="In-line Formulae" end="lead"?S(g+1)={s1(g+1), . . . , sm−1(g+1), si(g), sm+1(g+1) . . . , sNs(g+1)}description="In-line Formulae" end="tail"? wherein if si(g) is not superior to sj(g+1), then the new population S(g+1) remain the same, a new generation of particle set {x″ki, w″ki}i=1N is obtained, the particle set in floating-point format is {((ni1)″(ni2)″ . . . (nil)″)k}i=1N.
9. A global optimal particle filterer, the global optimal particle filterer comprises: an initial particle set generating module, used for generating an initial particle set; a sampling module, used for performing importance sampling on the initial particle set by using Unscented Kalman Filter to obtain sampled particles; a floating-point number encoding module, used for performing floating-point number encoding for each of the sampled particles to obtain an encoded particle set; an initial population setting module, used for setting an initial population according to the encoded particle set; a Lamarck overwriting module, used for using the initial population as an original trial population to sequentially perform a Lamarck overwriting operation, a real number decoding operation, and an elite retention operation, wherein the Lamarck overwriting operation refers to, according to a ratio between fitnesses of two parent candidate particles, passing a code of the parent with a higher fitness directly to an offspring of the parent with a lower fitness, replacing corresponding bits of its floating-point number, and retaining a parent particle with the higher fitness as its offspring particle; and finally obtaining a overwritten particle set; the real number decoding operation is to convert the particle set obtained by the Lamarck overwriting operation into a real-number particle set; the elite retention operation is to compare a weight of the particle having a largest weight in the candidate particle set which is selected from each iteration with a weight of the particle having a largest weight in the previous generation, to select the particle having a larger weight, and to replace both the particle having a smallest weight and its floating-point number format into the particle having the largest weight and its floating-point number format, generating a new generation of population and using the new generation of population as the original trial population; an iteration control module, used for controlling the Lamarck overwriting module to repeatedly performing iteration until an iteration termination condition is reached; obtaining an optimal real-number particle set when terminated; a state estimation value determining module, used for using the optimal real-number particle set as a prediction sample for a next moment, and proceeding to step 2 until a system termination condition is reached, obtaining a state estimation value.
10. The method according to claim 2, wherein step 3 is specifically as follows: representing the particle xki as xki=(ni1ni2 . . . nil)k by the floating-point number format using a fixed number l of significant bits, and obtaining the encoded particle set {(ni1ni2 . . . nil)k}i=1N={(n11n12 . . . n1l)k, (n21n22 . . . n2l)k, . . . , (nN1nN2 . . . nNl)k}, wherein nNl represents a value of a number of significant bits of an Nth particle.
11. The method according to claim 10, wherein step 4 is specifically as follows: using the encoded particle set {(ni1ni2 . . . nil)k}i=1N in the floating-point number format at a time k as a first generation of initial population of an entire optimization operation; a population size NP of the initial population being equal to a number N of particles; using the floating-point number format (ni1ni2 . . . nil)k of each particle as one individual, each bit of a floating-point number value representing one decimal gene, and the weight wki of each particle representing a fitness function value of each chromosome.
12. The method according to claim 11, wherein step 5 comprises steps of: step 5A: the Lamarck overwriting operation; step 5B: the real number decoding operation; and step 5C: the elite retention operation; wherein step 5A specifically comprises steps of: step 5A.1: for each particle, determining whether to select the particle as a overwriting particle according to a generated overwriting probability h, wherein h∈(0,1]; randomly generating a random number r between (0,1], if r<h, selecting the overwriting particle, otherwise not selecting the overwriting particle; letting a i1th particle and its floating-point number format (ni11ni12 . . . ni1l)k and a i2th particle and its floating-point number format (ni21ni22 . . . ni2l)k to be selected as overwriting particles, and satisfying wki1>wki2; step 5A.2: calculating a proportion pt of delivered genes, pt satisfying and calculating a number nt of the delivered genes according to the following formula:
description="In-line Formulae" end="lead"?nt=l×pt description="In-line Formulae" end="tail"? step 5A.3: if not all the weights of the selected overwriting particles being 0, then using the floating-point number format of the i1th particle having the larger weight to overwriting the floating-point number format of the i2th particle having a smaller weight, wherein an overwriting position is random, and a number of the overwriting position is nt; step 5A.4: repeatedly performing steps 5A.1 to 5A.3 until a predetermined number NP of times is reached to obtain a final overwritten particle set in the floating-point format:
description="In-line Formulae" end="lead"?{((ni1)′(ni2)′ . . . (nil)′)k}i=1N={((n11)′(n12)′ . . . (n1l)′)k, . . . , ((nN1)′(nN2)′ . . . (nNl)′)k}.description="In-line Formulae" end="tail"?
13. The method according to claim 12, wherein step 5B specifically comprises steps of: performing the real number decoding on the particle set in the floating-point format obtained in step 5A to obtain a written real-number particle set {x′ki}i−1N, wherein
description="In-line Formulae" end="lead"?x′ki=(−1)(ni1)′(10(l−6)×(ni1)′+10(l−7)×(ni2)′+10(l−8)×(ni3)′+ . . . +10−4×(nil)′),description="In-line Formulae" end="tail"? and obtaining the normalized weight w′ki of corresponding particle according to the real-number particle.
14. The method according to claim 13, wherein step 5C specifically comprises: selecting the real-number particle having the largest weight in the current iteration, and then comparing its weight with the weight of the particle having the largest weight in the previous iteration, selecting the particle having the larger weight, replacing both the particle having the smallest weight and its floating-point number format into the particle having the largest weight and its floating-point number format, generating the new generation of population and using the new generation of population as the original trial population.
15. The method according to claim 14, wherein in step 5C, a gth generation of population is denoted as, S(g)={s1(g), s2(g), . . . , sNs(g)}, wherein si(g) represents an optimal individual in the gth generation of population; 1≤i≤Ns; and Ns is the population size; a new generation of population being S(g+1)={s1(g+1), . . . , sNs(g+1)}, wherein the optimal individual in the new generation of population is sj(g+1); a worst individual in the new generation of population is sm(g+1), 1≤j≤Ns, and 1≤m≤Ns, wherein if si(g) is superior to sj(g+1), then the optimal individual si(g) in the gth generation of population is added into the new population S(g+1) as a (Ns+1)th individual of the new population S(g+1), and the individual having a smallest fitness is removed from the new population S(g+1); at this time, the new population S(g+1) is represented as: S(g+1)={s1(g+1), . . . , sm−1(g+1), si(g), sm+1(g+1) . . . , sNs(g+1)} wherein if si(g) is not superior to sj(g+1), then the new population S(g+1) remain the same, a new generation of particle set {x″ki, w″ki}i=1N is obtained, the particle set in floating-point format is {((ni1)″(ni2)″ . . . (nil)″)k}i=1N.
</claims>
</document>
