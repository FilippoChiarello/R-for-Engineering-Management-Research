<document>

<filing_date>
2019-09-27
</filing_date>

<publication_date>
2020-01-23
</publication_date>

<priority_date>
2017-03-29
</priority_date>

<ipc_classes>
G06F21/44,G06F21/52
</ipc_classes>

<assignee>
CHOI, SEUNG HWAN
</assignee>

<inventors>
CHOI, SEUNG HWAN
KIM, JEONG MIN
SONG, YEONG BIN
</inventors>

<docdb_family_id>
63676528
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR AUTHENTICATING SAFE SOFTWARE
</title>

<abstract>
A safety software authentication terminal and a method thereof are provided, and when a safety software authentication is performed, software executed among a plurality of types of installed software is detected as a white list verification target, and whether or not to register detected verification target software in a white list, and when the verification target software is not registered in the white list, a grade is determined for the verification target software based on the number of satisfying conditions among a plurality of preset conditions, and when the grade can be registered in the white list, the verification target software is added to the whitelist, and the plurality of conditions include at least one of technical conditions that an operating system of the terminal is checkable and social engineering conditions that are checkable based on a behavior of a user.
</abstract>

<claims>
1. A safety software authentication terminal comprising: a memory that stores a safety software authentication program; and a processor that executes the program stored in the memory, wherein the processor detects software executed among a plurality of types of software installed in the terminal as a whitelist verification target, according to execution of the safety software authentication program, determines whether or not to register a verification target software in a white list, normally executes the verification target software when the verification target software is registered in the white list, determines a grade for the verification target software based on the number of satisfying conditions among a plurality of preset conditions when the verification target software is not registered in the white list, and adds the verification target software to the whitelist when the grade is capable of being registered in the white list, and wherein the plurality of conditions include at least one of technical conditions that an operating system of the terminal is checkable and social engineering conditions that are checkable based on a behavior of a user.
2. The safety software authentication terminal according to claim 1, wherein the technical conditions include at least one of existence or nonexistence of a digital signature of a verification target software, existence or nonexistence of a file description, updating or non-updating of a file version, updating or non-updating of a product version, existence or nonexistence of a product name, existence or nonexistence of a copyright, existence or nonexistence of a previously recorded group name or user name, completion or non-completion of a program registration procedure on an operating system, a process Identifier (PID) range designated by the operating system, existence or nonexistence of an operating system registration of a parent PID, existence or nonexistence of a previously authorized software database, existence or nonexistence of an uninstalled file, possibility or impossibility of analysis using an artificial intelligence technology, and existence or nonexistence of a history analyzed by using the artificial intelligence technology, and wherein the social engineering conditions include at least one execution or non-execution of the verification target program by an input device, possibility or impossibility of interpretation of a file name, a product name, and copyright information, elapse or non-elapse of a reference period of execution time, magnitude of a reference value of a use rate, and existence or nonexistence of a user authentication greater than a reference percentage.
3. The safety software authentication terminal according to claim 1, wherein the processor determines that the verification target software has a high level grade as the number of conditions that the verification target software satisfies among the plurality of conditions increases, and wherein, when the verification target software corresponds to one or more preset levels among levels at which the white list is registrable, the processor registers the verification target software as a monitoring target and performs a preset software inspection for the verification target software even after the white list registration to determine whether or not the verification target software is malicious software.
4. The safety software authentication terminal according to claim 3, wherein, when a specific file stored in the terminal is modified by the verification target software which is the monitoring target, the processor compares attributes of an original file of the specific file with attributes of the modified file of the specific file, and when a changed attribute value exceeds a preset criterion, the processor determines the verification target software as the malicious software and removes the verification target software from the white list.
5. The safety software authentication terminal according to claim 1, wherein the processor performs data backup for a file executed by the verification target software in a certain storage region in the terminal.
6. The safety software authentication terminal according to claim 1, further comprising: a communication module for transmitting and receiving data to and from a software authentication server, wherein the processor downloads the safety software authentication program from the software authentication server through the communication module, reports software information including information of the verification target software added to the white list to the software authentication server, and updates the software information.
7. A safety software authentication method performed by a safety software authentication terminal, the method comprising: (a) detecting software executed among a plurality of types of installed software as a whitelist verification target; (b) determining whether or not to register a verification target software in a white list; (c) determining a grade for the verification target software based on the number of satisfying conditions among a plurality of preset conditions when the verification target software is not registered in the white list; and (d) adding the verification target software to the white list when the grade is capable of being registered in the white list, wherein the plurality of conditions include at least one of technical conditions that an operating system of the terminal is checkable and social engineering conditions that are checkable based on a behavior of a user.
8. The safety software authentication method according to claim 7, wherein the technical conditions include at least one of existence or nonexistence of a digital signature of a verification target software, existence or nonexistence of a file description, updating or non-updating of a file version, updating or non-updating of a product version, existence or nonexistence of a product name, existence or nonexistence of a copyright, existence or nonexistence of a previously recorded group name or user name, completion or non-completion of a program registration procedure on an operating system, a process Identifier (PID) range designated by the operating system, existence or nonexistence of an operating system registration of a parent PID, existence or nonexistence of a previously authorized software database, existence or nonexistence of an uninstalled file, possibility or impossibility of analysis using an artificial intelligence technology, and existence or nonexistence of a history analyzed by using the artificial intelligence technology, and wherein the social engineering conditions include at least one execution or non-execution of the verification target program by an input device, possibility or impossibility of interpretation of a file name, a product name, and copyright information, elapse or non-elapse of a reference period of execution time, magnitude of a reference value of a use rate, and existence or nonexistence of a user authentication greater than a reference percentage.
9. The safety software authentication method according to claim 7, further comprising: downloading a safety software authentication program from a software authentication server before the (a) step wherein the steps (a) to (d) are performed by executing the downloaded safety software authentication program, and wherein, after the step (d), software information including information of the verification target software added to the white list is reported to the software authentication server, and the whitelist and analysis information on each verification target software are received from the software authentication server, and thereafter, the white list stored in the terminal is updated.
10. A computer readable storage medium having a program recorded therein for performing the method according to claim 7, wherein
</claims>
</document>
