<document>

<filing_date>
2019-12-26
</filing_date>

<publication_date>
2020-04-30
</publication_date>

<priority_date>
2017-06-27
</priority_date>

<ipc_classes>
G06N20/00,G06N5/00,H04L29/06
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
CHEN LI
</inventors>

<docdb_family_id>
64567994
</docdb_family_id>

<title>
MALWARE DETECTION SYSTEM ATTACK PREVENTION
</title>

<abstract>
Systems and methods may be used to prevent attacks on a malware detection system. A method may include modeling a time series of directed graphs using incoming binary files during training of a machine learning system and detecting, during a time-window of the time series, an anomaly based on a directed graph of the time series of directed graphs. The method may include providing an alert that the anomaly has corrupted the machine learning system. The method may include preventing or remedying corruption of the machine learning system.
</abstract>

<claims>
1. A malware detection system, the malware detection system comprising: a processor; and memory, the memory including instructions, which when executed by the processor, cause the processor to: construct a time series of directed graphs using incoming files, during training of a machine learning system used to detect malware attacks, wherein a structure of the time series of directed graphs is based on relationships between entities recorded in the incoming files; detect, during a time window of the time series, an anomaly based on the time series of directed graphs; and provide an indication that the anomaly was detected.
2. The malware detection system of claim 1, wherein the incoming files describe activity of malware.
3. The malware detection system of claim 1, wherein to detect malware attacks, the instructions cause the processor to recognize statistical relationships of activities of malware.
4. The malware detection system of claim 1, wherein vertices in the structure of the directed graph represent an executable component.
5. A method for implementing a malware detection system, the method comprising: constructing a time series of directed graphs using incoming files, during training of a machine learning system used to detect malware attacks, wherein a structure of the time series of directed graphs is based on relationships between entities recorded in the incoming files; detecting, during a time window of the time series, an anomaly based on the time series of directed graphs; and providing an indication that the anomaly was detected.
6. The method of claim 5, wherein the incoming files describe activity of malware.
7. The method of claim 5, wherein detecting malware attacks comprises recognizing statistical relationships of activities of malware.
8. The method of claim 5, wherein vertices in the structure of the directed graph represent an executable component.
9. At least one non-transitory machine-readable medium including instructions for preventing attacks on a malware detection system, which when executed by a machine, cause the machine to: construct a time series of directed graphs using incoming files, during training of a machine learning system used to detect malware attacks, wherein a structure of the time series of directed graphs is based on relationships between entities recorded in the incoming files; detect, during a time window of the time series, an anomaly based on the time series of directed graphs; and provide an indication that the anomaly was detected.
10. The at least one non-transitory machine-readable medium of claim 9, wherein the incoming files describe activity of malware.
11. The at least one non-transitory machine-readable medium of claim 9, wherein the instructions to detect malware attacks comprise instructions to recognize statistical relationships of activities of malware.
12. The at least one non-transitory machine-readable medium of claim 9, wherein vertices in the structure of the directed graph represent an executable component.
</claims>
</document>
