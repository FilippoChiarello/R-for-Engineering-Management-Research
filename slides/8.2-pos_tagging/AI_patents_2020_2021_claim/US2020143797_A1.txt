<document>

<filing_date>
2018-11-06
</filing_date>

<publication_date>
2020-05-07
</publication_date>

<priority_date>
2018-11-06
</priority_date>

<ipc_classes>
G06F9/451,G10L15/16,G10L15/22
</ipc_classes>

<assignee>
VISA INTERNATIONAL SERVICE ASSOCIATION
</assignee>

<inventors>
MANOHARAN, HEMANTH KUMAR
TELLIS, MELROY BENEDICT
</inventors>

<docdb_family_id>
70457803
</docdb_family_id>

<title>
Automated chat bot processing
</title>

<abstract>
Methods and computing systems are disclosed for a digital assistant platform that includes a cross-platform bot that can be used to bridge existing chat-bot platforms. The cross-platform bot would have its own single set of protocols and standards, such that a developer of a task-specific bot would only need to integrate with the cross-platform bot to enable its use across all the different chat-bot platforms. The cross-platform bot would enable the task-specific bots to coordinate to combine their functionality, while end users may continue using an existing chat-bot platform of their choice.
</abstract>

<claims>
1. A computer-implemented method, comprising: obtaining, from a chat-bot platform, a conversational command provided by a user, wherein the conversational command instructs performance of a task; determining whether the conversational command has a context specifying a task specific bot for performance of the task; upon determining that the conversational command does not have the context, analyzing an intent of the conversational command; determining one or more task specific bots for performance of the task based on the intent of the conversational command and a bot registry, wherein the bot registry lists the one or more task specific bots and functionality associated with each of the one or more task specific bots; and providing the conversational command to the determined one or more task specific bots for performance of the task.
2. The method of claim 1, wherein the one or more task specific bots are added to the bot registry by a developer of each respective task specific bot.
3. The method of claim 1, wherein analyzing the intent of the conversational command includes sending the conversational commend to a Neuro-Linguistic Programming (NLP) platform to determine the intent of the conversational command.
4. The method of claim 1, wherein analyzing the intent of the conversational command includes referencing the intent of the conversational command in an intent-action map store.
5. The method of claim 1, wherein the bot registry further lists the one or more task specific bots based on interactions conducted in a bot exchange.
6. The method of claim 1, wherein the bot registry further includes interaction results associated with the one or more task specific bots, wherein the interaction results are conducted in a bot exchange.
7. The method of claim 1, wherein the determined one or more task specific bots perform bot chaining for performance of the task.
8. The method of claim 7, wherein bot chaining is managed by a bot policy server.
9. The method of claim 1, wherein at least one of the determined one or more task specific bots is a value processing bot.
10. The method of claim 1, wherein the conversational command is provided by the user as a voice command.
11. A computing system, comprising: one or more processors; non-transitory computer-readable memory storing instructions that, when executed by the one or more processors, cause the one or more processors to: obtain, from a chat-bot platform, a conversational command provided by a user, wherein the conversational command instructs performance of a task; determine whether the conversational command has a context specifying a task specific bot for performance of the task; upon determining that the conversational command does not have the context, analyze an intent of the conversational command; determine one or more task specific bots for performance of the task based on the intent of the conversational command and a bot registry, wherein the bot registry lists the one or more task specific bots and functionality associated with each of the one or more task specific bots; and provide the conversational command to the determined one or more task specific bots for performance of the task.
12. The computing system of claim 11, wherein the one or more task specific bots are added to the bot registry by a developer of each respective task specific bot in the one or more task specific bots.
13. The computing system of claim 11, wherein analyzing the intent of the conversational command includes sending the conversational commend to a Neuro-Linguistic Programming (NLP) platform to determine the intent of the conversational command.
14. The computing system of claim 11, wherein analyzing the intent of the conversational command includes referencing the intent of the conversational command in an intent-action map store.
15. The computing system of claim 11, wherein the bot registry further lists the one or more task specific bots based on interactions conducted in a bot exchange.
16. The computing system of claim 11, wherein the bot registry further includes interaction results associated with the one or more task specific bots, wherein the interaction results are conducted in a bot exchange.
17. The computing system of claim 11, wherein the determined one or more task specific bots perform bot chaining for performance of the task.
18. The computing system of claim 17, wherein a bot policy server manages bot chaining.
19. The computing system of claim 11, wherein at least one of the determined one or more task specific bots is a value processing bot.
20. The computing system of claim 11, wherein the conversational command is provided by the user as a voice command.
</claims>
</document>
