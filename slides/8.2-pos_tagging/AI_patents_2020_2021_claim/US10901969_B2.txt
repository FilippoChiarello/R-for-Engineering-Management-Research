<document>

<filing_date>
2018-08-14
</filing_date>

<publication_date>
2021-01-26
</publication_date>

<priority_date>
2018-08-14
</priority_date>

<ipc_classes>
G06F16/00,G06F16/22,G06F16/23,G06N3/08
</ipc_classes>

<assignee>
DEVELOPMENT GUILD DDI
</assignee>

<inventors>
WEBER, MATTHEW
</inventors>

<docdb_family_id>
69524134
</docdb_family_id>

<title>
System and method for facilitating an objective-oriented data structure and an objective via the data structure
</title>

<abstract>
In some embodiments, a hierarchical tree may include nodes that each indicates an objective, and each non-root node of the nodes indicates an objective supporting an objective of at least one node with which the non-root node has a direct relationship. Based on a modification to an objective of a given node of the tree, a determination of whether at least one child node of the given node indicates an unsatisfiable objective (e.g., no longer suitably supporting the given node's objective). For a child node of the given node determined to indicate an unsatisfiable objective, a corresponding subset of the tree may be replaced with replacement nodes that each indicates a satisfiable objective (e.g., suitably supporting the given node's objective), where the corresponding subset includes (i) the child node and (ii) descendant nodes of the child node.
</abstract>

<claims>
1. A system for facilitating data structure modification of an objective-oriented hierarchical tree, comprising: a computer system that comprises one or more processors programmed with computer program instructions that, when executed, cause the computer system to: store tree nodes of a hierarchical tree and relationships between the tree nodes, each of the tree nodes indicating an objective, each non-root node of the tree nodes indicating an objective supporting an objective of at least one node with which the non-root node has a direct relationship; detect a modification to an objective of a given node of the tree nodes; determine, based on the detected modification, child nodes of the given node and whether at least one of the child nodes of the given node indicates an objective that no longer suitably supports the objective of the given node; and for a child node of the child nodes determined to indicate an objective that no longer suitably supports the objective of the given node, replace a corresponding subset of the hierarchical tree with replacement nodes that each indicates an objective suitably supporting the objective of the given node, the corresponding subset of the hierarchical tree comprising (i) the child node and (ii) one or more descendant nodes of the child node, wherein the replacement of the corresponding subset of the hierarchical tree comprises: generating a task requesting user input related to one or more objectives to support the objective of the given node; obtaining, based on the task, sets of user inputs indicating crowd-sourced objectives; selecting, from the sets of user inputs, one or more crowd-sourced objectives to be one or more reference objectives; and selecting a given tree subset over one or more other tree subsets to replace the corresponding subset of the hierarchical tree based on a root node of the given tree subset indicating an objective similar to at least one crowd-sourced objective of the one or more crowd-sourced objectives.
2. The system of claim 1, wherein the replacement of the corresponding subset of the hierarchical tree is not based on any determination of whether grandchild nodes of the given node indicate an objective that suitably supports the objective of the given node.
3. The system of claim 1, wherein the computer system is caused to: provide a collection of hierarchical trees as input to a neural network to cause the neural network to be trained to predict a candidate tree subset for a given objective such that a root node of the candidate tree subset indicates an objective that supports the given objective; and prior to the selection of the given tree subset, provide the modified objective to the neural network to cause the neural network to predict (i) the given tree subset comprising the replacement nodes and (ii) the one or more other tree subsets.
4. The system of claim 3, wherein the given tree subset is at least a subset of a previously-generated hierarchical tree stored in one or more databases.
5. The system of claim 3, wherein the neural network outputs a prediction of the given tree subset and the one or more other tree subsets based on the modified objective.
6. The system of claim 1, wherein the corresponding subset of the hierarchical tree comprises (i) the child node of the given node, (ii) the one or more descendant nodes of the child node, and (iii) other child nodes of the given node.
7. The system of claim 6, wherein the replacement of the corresponding subset of the hierarchical tree comprises causing the replacement of the corresponding subset without regard to whether all of the other child nodes of the given node indicate an objective that no longer suitably supports the objective of the given node.
8. A method implemented by a computer system that comprises one or more processors executing computer program instructions for facilitating data structure modification of an objective-oriented hierarchical tree that, the method comprising: storing tree nodes of a hierarchical tree and relationships between the tree nodes, each of the tree nodes indicating an objective, each non-root node of the tree nodes indicating an objective supporting an objective of at least one node with which the non-root node has a direct relationship; detecting a modification to an objective of a given node of the tree nodes; determining, based on the detected modification, child nodes of the given node and whether at least one of the child nodes of the given node indicates an objective that no longer suitably supports the objective of the given node; and for a child node of the child nodes determined to indicate an objective that no longer suitably supports the objective of the given node, replace a corresponding subset of the hierarchical tree with replacement nodes that each indicates an objective suitably supporting the objective of the given node, the corresponding subset of the hierarchical tree comprising (i) the child node and (ii) one or more descendant nodes of the child node, wherein the replacement of the corresponding subset of the hierarchical tree comprises: generating a task requesting user input related to one or more objectives to support the objective of the given node; obtaining, based on the task, sets of user inputs indicating crowd-sourced objectives; selecting, from the sets of user inputs, one or more crowd-sourced objectives to be one or more reference objectives; and selecting a given tree subset over one or more other tree subsets to replace the corresponding subset of the hierarchical tree based on a root node of the given tree subset indicating an objective similar to at least one crowd-sourced objective of the one or more crowd-sourced objectives.
9. The method of claim 8, wherein the replacement of the corresponding subset of the hierarchical tree is not based on any determination of whether grandchild nodes of the given node indicate an objective that suitably supports the objective of the given node.
10. The method of claim 8, further comprising: providing a collection of hierarchical trees as input to a prediction model to cause the prediction model to be trained to predict a candidate tree subset for a given objective such that a root node of the candidate tree subset indicates an objective that supports the given objective; and prior to the selection of the given tree subset, providing the modified objective to the prediction model to cause the prediction model to predict (i) the given tree subset comprising the replacement nodes and (ii) the one or more other tree subsets.
11. The method of claim 10, wherein the given tree subset is at least a subset of a previously-generated hierarchical tree stored in one or more databases.
12. The method of claim 10, wherein the prediction model outputs a prediction of the given tree subset and the one or more other tree subsets based on the modified objective.
13. The method of claim 8, wherein the corresponding subset of the hierarchical tree comprises (i) the child node of the given node, (ii) the one or more descendant nodes of the child node, and (iii) other child nodes of the given node.
14. The method of claim 13, wherein the replacement of the corresponding subset of the hierarchical tree comprises causing the replacement of the corresponding subset without regard to whether all of the other child nodes of the given node indicate an objective that no longer suitably supports the objective of the given node.
15. One or more non-transitory computer-readable media storing instructions that, when executed by one or more processors, cause operations for facilitating data structure modification of an objective-oriented hierarchical tree, comprising: storing tree nodes of a hierarchical tree and relationships between the tree nodes, each of the tree nodes indicating an objective, each non-root node of the tree nodes indicating an objective supporting an objective of at least one node with which the non-root node has a direct relationship; detecting a modification to an objective of a given node of the tree nodes; determining, based on the detected modification, child nodes of the given node and whether at least one of the child nodes of the given node indicates an objective that no longer suitably supports the objective of the given node; and for a child node of the child nodes determined to indicate an objective that no longer suitably supports the objective of the given node, replace a corresponding subset of the hierarchical tree with replacement nodes that each indicates an objective suitably supporting the objective of the given node, the corresponding subset of the hierarchical tree comprising (i) the child node and (ii) one or more descendant nodes of the child node, wherein the replacement of the corresponding subset of the hierarchical tree comprises: generating a task requesting user input related to one or more objectives to support the objective of the given node; obtaining, based on the task, sets of user inputs indicating crowd-sourced objectives; selecting, from the sets of user inputs, one or more crowd-sourced objectives to be one or more reference objectives; and selecting a given tree subset over one or more other tree subsets to replace the corresponding subset of the hierarchical tree based on a root node of the given tree subset indicating an objective similar to at least one crowd-sourced objective of the one or more crowd-sourced objectives.
16. The media of claim 15, wherein the replacement of the corresponding subset of the hierarchical tree is not based on any determination of whether grandchild nodes of the given node indicate an objective that suitably supports the objective of the given node.
17. The media of claim 15, the operations further comprising: providing a collection of hierarchical trees as input to a prediction model to cause the prediction model to be trained to predict a candidate tree subset for a given objective such that a root node of the candidate tree subset indicates an objective that supports the given objective; and prior to the selection of the given tree subset, providing the modified objective to the prediction model to cause the prediction model to predict the given tree subset comprising the replacement nodes and (ii) the one or more other tree subsets.
18. The media of claim 17, wherein the given tree subset is at least a subset of a previously-generated hierarchical tree stored in one or more databases.
19. The media of claim 17, wherein the prediction model outputs a prediction of the given tree subset and the one or more other tree subsets based on the modified objective.
20. The media of claim 15, wherein the corresponding subset of the hierarchical tree comprises (i) the child node of the given node, (ii) the one or more descendant nodes of the child node, and (iii) other child nodes of the given node.
</claims>
</document>
