<document>

<filing_date>
2019-03-13
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-13
</priority_date>

<ipc_classes>
G06N20/00,G06N5/04
</ipc_classes>

<assignee>
AUTODESK
</assignee>

<inventors>
VADELLA, KENNETH ALEXANDER
</inventors>

<docdb_family_id>
72422676
</docdb_family_id>

<title>
APPLICATION FUNCTIONALITY OPTIMIZATION
</title>

<abstract>
A method, apparatus, and system provide the ability to optimize execution of an application. An application is acquired. The application includes functions, and each function has a corresponding feature flag that determines whether the corresponding function is executed. Execution conditions of execution of the application are monitored at run-time (in a machine learning module). The machine learning module recognizes a pattern relating to the execution conditions to determine a stress relating to the execution of the application. During execution of the application, the machine learning module toggles the feature flags based on the pattern and the stress such that the corresponding functions do not execute.
</abstract>

<claims>
1. A computer-implemented method for optimizing execution of an application, comprising: (a) acquiring, via a processor in a computer, the application, wherein: (1) the application comprises two or more functions; (2) each of the two or more functions has a corresponding feature flag; (3) each feature flag determines whether the corresponding function is executed; (b) monitoring, in a machine learning module executed by the processor in the computer, execution conditions of execution of the application at run-time; (c) recognizing, in the machine learning module, a pattern relating to the execution conditions to determine a stress relating to the execution of the application; (d) during execution of the application, toggling, via the machine learning module, one or more of the feature flags based on the pattern and the stress such that the corresponding functions do not execute.
2. The computer-implemented method 1, wherein values utilized to toggle the one or more feature flags are managed from a web portal.
3. The computer-implemented method of claim 1, wherein the corresponding functions that do not execute comprise non-essential cloud services.
4. The computer-implemented method of claim 1, wherein: the toggling provides that the corresponding functions do not execute when a level of the stress exceeds a threshold; the method further comprising: monitoring, via the machine learning module, to determine when the level of the stress is below the threshold; and toggling, via the machine learning module, the one or more feature flags based on the determining, such that the corresponding functions execute.
5. The computer-implemented method of claim 1, wherein: the machine learning module toggles the one or more feature flags further based on a user profile.
6. The computer-implemented method of claim 5, wherein: the user profile comprises an attribute that identifies whether a user is a premium user or another type of user.
7. The computer-implemented method of claim 5, wherein: the user profile determines a type of work that a user performs using the application.
8. The computer-implemented method of claim 1, wherein: the machine learning module toggles the one or more feature flags further based on a time of day.
9. The computer-implemented method of claim 1, wherein: the machine learning module toggles the one or more feature flags further based on a prediction of when the execution of the application will undergo the stress.
10. A computer-implemented system for optimizing execution of an application, comprising: (a) a computer having a memory; (b) a processor executing on the computer; (c) the memory storing an application that is executed by the processor, wherein: (1) the application comprises two or more functions; (2) each of the two or more functions has a corresponding feature flag; and (3) each feature flag determines whether the corresponding function is executed by the processor; and (d) a machine learning module executed by the processor, wherein the machine learning module: (1) monitors execution conditions of execution of the application at run-time; (2) recognizes a pattern relating to the execution conditions to determine a stress relating to the execution of the application; and (3) during execution of the application, toggles one or more of the feature flags based on the pattern and the stress such that the corresponding functions do not execute.
11. The computer-implemented system 10, wherein values utilized to toggle the one or more feature flags are managed from a web portal.
12. The computer-implemented system of claim 10, wherein the corresponding functions that do not execute comprise non-essential cloud services.
13. The computer-implemented system of claim 10, wherein the machine learning module: determines that the corresponding functions do not execute when a level of the stress exceeds a threshold; monitors to determine when the level of the stress is below the threshold; and toggles the one or more feature flags based on the determination of the level of stress, such that the corresponding functions execute.
14. The computer-implemented system of claim 10, wherein: the machine learning module toggles the one or more feature flags further based on a user profile.
15. The computer-implemented system of claim 14, wherein: the user profile comprises an attribute that identifies whether a user is a premium user or another type of user.
16. The computer-implemented system of claim 14, wherein: the user profile determines a type of work that a user performs using the application.
17. The computer-implemented system of claim 10, wherein: the machine learning module toggles the one or more feature flags further based on a time of day.
18. The computer-implemented system of claim 10, wherein: the machine learning module toggles the one or more feature flags further based on a prediction of when the execution of the application will undergo the stress.
</claims>
</document>
