<document>

<filing_date>
2020-03-26
</filing_date>

<publication_date>
2020-09-30
</publication_date>

<priority_date>
2019-03-26
</priority_date>

<ipc_classes>
G06F21/56,H04L29/06
</ipc_classes>

<assignee>
PROOFPOINT
</assignee>

<inventors>
Abzug, Zachary Mitchell
Kvernadze, Giorgi
Quass, Dallan
Jordan, Jeremy Thomas
Jones, Brian Sanford
</inventors>

<docdb_family_id>
70049995
</docdb_family_id>

<title>
VISUAL COMPARISON PLATFORM FOR MALICIOUS SITE DETECTION
</title>

<abstract>
Aspects of the disclosure relate to detecting and identifying malicious sites using machine learning. A computing platform may receive (605) image data of a graphical rendering of a resource available at a uniform resource locator (URL). The computing platform may compute (610) a computer vision vector representation of the image data. The computing platform may compare (615) the computer vision vector representation of the image data to stored numeric vectors representing page elements, resulting in a feature indicating whether the computer vision vector representation of the image data is visually similar to a known page element, and may input (620) the feature to a classifier. The computing platform may receive (625), from the classifier, a phish classification score indicating a likelihood that the URL is malicious. In response to determining (640) that the phish classification score exceeds a first phish classification threshold, the computing platform may cause a cybersecurity server to perform (645) a first action.
</abstract>

<claims>
1. A computer-implemented method, comprising: receiving (212, 605) image data of a graphical rendering of a resource available at a uniform resource locator, URL; computing (213, 610) a computer vision vector representation of the image data; comparing (214, 615) the computer vision vector representation of the image data to a plurality of stored numeric vectors representing page elements, resulting in a feature indicating whether the computer vision vector representation of the image data is visually similar to a known page element; inputting (215, 620) the feature indicating whether the computer vision vector representation of the image data is visually similar to the known page element to a classifier; receiving (216, 625), from the classifier, a phish classification score indicating a likelihood that the URL is malicious; and in response to determining (640) that the phish classification score exceeds a first phish classification threshold, causing a cybersecurity server (160) to perform a first action.
2. The method of claim 1, further comprising generating a screenshot database, wherein the screenshot database includes images of a plurality of URLs and their corresponding image data, and wherein: the plurality of URLs are selected based on one or more of: previous attacks corresponding to the URLs, anticipated attacks corresponding to the URLs, or URL popularity, and the plurality of URLs correspond to one or more of: internal websites or external websites.
3. The method of claim 2, further comprising updating the screenshot database, wherein updating the screenshot database comprises: identifying that a page image corresponding to a URL of the plurality of URLs has changed, wherein a previous page image corresponding to the URL of the plurality of URLs is stored in the screenshot database; and in response to determining that the page image corresponding to a URL of the plurality of URLs has changed: capturing the page image corresponding to the URL of the plurality of URLs, resulting in a captured page image corresponding to the URL of the plurality of URLs; and adding the captured page image corresponding to the URL of the plurality of URLs to the screenshot database.
4. The method of claim 2 or 3, wherein generating the screenshot database comprises computing, for each URL of the plurality of URLs, a computer vision vector representation of image data corresponding to the URL
5. The method of any of the preceding claims, wherein comparing (214, 615) the computer vision vector representation of the image data to the plurality of stored numeric vectors representing page elements comprises: identifying, using a hash table lookup function, an exact match between the image data and a specific page element of the page elements, or identifying, using a nearest neighbor search or radius search, an inexact match between the computer vision vector representation of the image data and the specific page element vector of the page elements vectors.
6. The method of any of the preceding claims, further comprising: comparing (630) the image data of the URL to image data captured from one or more ancestor pages, wherein the comparison results in an ancestor similarity score; and identifying page elements of the one or more ancestor pages; and wherein comparing (630) the image data of the URL to the image data captured from the one or more ancestor pages preferably comprises comparing page elements of the URL to the identified page elements of the one or more ancestor pages.
7. The method of claim 6, wherein comparing (630) the image data of the URL to the image data captured from the one or more ancestor pages comprises: generating, for the one or more ancestor pages, an object list that includes the corresponding identified page elements; applying object detection to the image data of the URL to identify included objects, wherein the identified included objects comprise one or more of: a logo, a brand graphic, a login pane, a logo aspect ratio, or a background image; and comparing the identified included objects to the object list.
8. The method of claim 6 or 7, wherein comparing (630) the image data of the URL to the image data captured from the one or more ancestor pages comprises performing: a visual comparison, wherein the visual comparison comprises one or more of: a color analysis, a deep learning vector comparison, logo comparison, or optical character comparison between the graphical rendering of the URL and the one or more ancestor pages, or a non-visual comparison, wherein the non-visual comparison comprises a comparison of markup, code, or text corresponding to the URL and markup, code, or text corresponding to the one or more ancestor pages.
9. The method of any of the preceding claims, wherein the computer vision vector representation of the image data is computed (615) using a convolutional neural network, and wherein the convolution neural network is trained using metric learning.
10. The method of any of the preceding claims, wherein: the known page element is one of: a rendered page screenshot, a logo, login form, or other visual page element; and the classifier is a machine learning classifier or a rule-based classifier.
11. The method of any of the preceding claims, further comprising: in response to determining that the phish classification score exceeds a second phish classification threshold, causing the cybersecurity server (160) to perform a second action different from the first action; wherein causing the cybersecurity server (160) to perform the first action comprises setting (645) a first flag, and causing the cybersecurity server (160) to perform the second action comprises setting a second flag; and wherein: the first flag and the second flag are set in a cybersecurity database hosted by one of: a computing platform (150) performing the method or a central repository, the cybersecurity database is accessible by the cybersecurity server (160), and the cybersecurity server (160) is configured to monitor the cybersecurity database at a predetermined interval to detect flags.
12. The method of claim 11, wherein performing the first action comprises, in response to detecting the first flag, generating one or more commands directing another classification platform to analyze the URL; and
wherein performing the second action comprises, in response to detecting the second flag, one or more of: generating one or more commands directing another computing device (130, 140) to display (223) a graphical user interface (300, 400) indicating that the URL is malicious, or adding the URL to a list of blocked URLs; and
wherein the other classification platform preferably uses a holistic classifier to analyze content of the URL
13. The method of claim 12, further comprising: based on a failure to detect a flag, determining that the phish classification score does not exceed the first phish classification threshold; and determining, based on the determination that the phish classification score does not exceed the first phish classification threshold, that the URL is legitimate.
14. A computing platform comprising a processor (114) configured to perform the method of any of claims 1-13.
15. One or more non-transitory computer-readable media storing instructions that, when executed by a computing platform (150), cause the computing platform (150) to carry out the method of any of claims 1-13.
</claims>
</document>
