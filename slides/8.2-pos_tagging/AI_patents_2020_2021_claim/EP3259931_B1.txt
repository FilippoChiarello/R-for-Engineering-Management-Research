<document>

<filing_date>
2016-06-13
</filing_date>

<publication_date>
2020-11-04
</publication_date>

<priority_date>
2015-06-15
</priority_date>

<ipc_classes>
G06F21/31,G06F21/36,H04L29/06,H04W12/06,H04W12/08,H04W12/10,H04W12/12,H04W4/029
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
PETROU, DAVID
SHARIFI, MATTHEW
WANG, KAI
</inventors>

<docdb_family_id>
56297104
</docdb_family_id>

<title>
SCREEN-ANALYSIS BASED DEVICE SECURITY
</title>

<abstract>
Systems and methods are provided for a content-based security for computing devices. An example method includes identifying content rendered by a mobile application, the content being rendered during a session, generating feature vectors from the content and determining that the feature vectors do not match a classification model. The method also includes providing, in response to the determination that the feature vectors do not match the classification model, a challenge configured to authenticate a user of the mobile device. Another example method includes determining a computing device is located at a trusted location, capturing information from a session, the information coming from content rendered by a mobile application during the session, generating feature vectors for the session, and repeating this until a training criteria is met. The method also includes training a classification model using the feature vectors and authenticating a user of the device using the trained classification model.
</abstract>

<claims>
1. A mobile device (110) comprising: at least one processor; and memory storing instructions that, when executed by the at least one processor, cause the mobile device to: identify content rendered by a mobile application (120) during a current session of screen capture events, generate feature vectors from the content, determine that the generated feature vectors do not match a classification model (134), and provide, in response to the determination that the generated feature vectors do not match the classification model (134), a challenge based on content captured during a previous session of screen capture events distinct from the current session, the previous session including feature vectors that matched the classification model or that were verified using a trusted location, wherein the challenge is configured to authenticate a user of the mobile device.
2. The mobile device (110) of claim 1, wherein the challenge is configured to prompt the user to complete information missing from a screen displayed by the mobile device in the previous session of screen capture events that included feature vectors that matched the classification model (134).
3. The mobile device (110) of claim 1, wherein providing the challenge includes: extracting information from a screen displayed by the mobile device in the previous session of screen capture events that included feature vectors matching the classification model (134); and generating a multiple choice question based on the extracted information.
4. The mobile device (110) of any preceding claim, wherein the memory further stores instructions that, when executed by the at least one processor, cause the mobile device to: receive a response to the challenge; and lock the mobile device when the response fails the challenge.
5. The mobile device (110) of any preceding claim, wherein the challenge includes a series of sub-challenges.
6. A mobile device (110) as claimed in claim 1,
wherein the memory further stores instructions that, when executed by the at least one processor cause the mobile device to: apply the classification model (134) to the generated feature vectors, determine whether the generated feature vectors match a first user profile based on application of the classification model (134), the first user profile differing from a second user profile, the mobile device being currently associated with the second user profile, and initiate a profile switch responsive to determining that the generated feature vectors match the first user profile.
7. The mobile device of claim 6, wherein the memory further stores instructions that, when executed by the at least one processor, cause the mobile device to: determine that the generated feature vectors match no user profiles; and provide the challenge configured to authenticate a user of the mobile device; and wherein optionally the challenge is based on second content rendered during a previous session associated with the second user profile, the second content being associated with feature vectors consistent with the second user profile according to the classification model.
8. The mobile device of claim 7, wherein the challenge is based on second content rendered during a previous session associated with the first user profile when the classification model determines the first user profile has a higher confidence score than the second user profile with regard to the generated feature vectors.
9. The mobile device (110) of claim 6, 7 or 8, wherein the memory further stores instructions that, when executed by the at least one processor, cause the mobile device to train the classification model (134) by: determining that the mobile device is located in a trusted environment associated with the second user profile; recognizing content (120) rendered by a mobile application running on the mobile device, the content being rendered during a session of screen capture events; generating feature vectors for the content; repeating the recognizing and generating for at least a minimum quantity of sessions; and training the classification model (134) using the feature vectors as positive examples, the positive examples being associated with the second user profile, wherein optionally positive examples associated with the first user profile are used as negative examples for the second user profile in training the classification model.
10. A method comprising: determining that a mobile device is located at a trusted location; capturing information from a session of screen capture events occurring at the trusted location, the information coming from content rendered by a mobile application (120) running on the mobile device during the session; generating feature vectors for the session based on the information captured from the session; training a classification model (134) using at least some of the feature vectors; repeating the determining, capturing, generating and training until training criteria are met; and authenticating a user of the mobile device using the trained classification model (134).
11. The method of claim 10, wherein authenticating the user using the trained classification model (134) includes: determining a current session of screen capture events based on content rendered by a mobile application (120) during the session; generating feature vectors for the current session; and providing, in response to determining that the feature vectors do not match the classification model (134), a challenge configured to authenticate a user of the mobile device.
12. The method of claim 10, wherein determining the mobile device is located at a trusted location includes: accessing a user profile associated with the mobile device to determine a trusted location; and determining that the mobile device is currently located at the trusted location.
13. The method of claim 12, wherein the trusted location is represented by global positioning system (GPS) coordinates and the mobile device uses current GPS coordinates to determine whether the mobile device is current at the trusted location.
14. The method of claim 12, wherein the trusted location is represented by a wireless network identifier and the mobile device determines whether a wireless network the mobile device is connected to matches the wireless network identifier.
</claims>
</document>
