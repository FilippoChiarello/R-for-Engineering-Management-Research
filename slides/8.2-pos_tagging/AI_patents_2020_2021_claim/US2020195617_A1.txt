<document>

<filing_date>
2018-12-18
</filing_date>

<publication_date>
2020-06-18
</publication_date>

<priority_date>
2018-12-18
</priority_date>

<ipc_classes>
H04L29/06,H04L9/06,H04L9/32
</ipc_classes>

<assignee>
BAE SYSTEMS INFORMATION AND ELECTRONIC SYSTEMS INTEGRATION
</assignee>

<inventors>
ABRAHAM, JIBU
KAPP, BENJAMIN
VANHOFF, KEVAN O.
</inventors>

<docdb_family_id>
71073122
</docdb_family_id>

<title>
SECURING DATA IN MOTION
</title>

<abstract>
Techniques are disclosed for transmitting a secure message over a public or untrusted network. The techniques include receiving a message and creating multiple hash values of the message. A sending device signs and encrypts the message and hash values, then encapsulates and transmits to the message and hash values a security server. The security server receives and de-encapsulates the message and hash values, decrypts the message and hash values, and verifies the signature. The security server verifies the hash values and determines whether any changes were made to the message during transmission. If verified, the security server processes the message for transmission to the recipient. The security server creates multiple hash values of the original message, signs and encrypts the message and the hash values, encapsulates the message and hash values and transmits to a recipient device for further verification and presentation to the recipient.
</abstract>

<claims>
1. A computer program product including one or more non-transitory machine-readable mediums encoding instructions that when executed by one or more processors cause a process to be carried out securing a message to be transmitted, the process comprising: receiving an initial message; generating a plurality of hash values for the initial message; digitally signing the initial message and the plurality of hash values using one or more certificates to generate a signed message and a set of signed hash values; encrypting the signed message and the set of signed hash values using at least one encryption technique to generate an encrypted message and a set of encrypted hash values; encapsulating the encrypted message and the set of encrypted hash values using at least one encapsulation protocol to create an encapsulated message and an encapsulated set of hash values; and causing transmission of the encapsulated message and the encapsulated set of hash values over an untrusted network.
2. The computer program product of claim 1, wherein a first hash value of the plurality of hash values is generated using a first hash protocol, and a second hash value of the plurality of hash values is generated using a second hash protocol different from the first hash protocol.
3. The computer program product of claim 1, wherein the one or more certificates comprise one or more of a user certificate, a computer hardware certificate, a network certificate, and a location certificate.
4. The computer program product of claim 3, wherein the location certificate is generated using one of passive geolocation and active geolocation.
5. The computer program product of claim 4, wherein active geolocation comprises trilateration of a geographic location based upon timing information determined based upon messages sent by the one or more processors to a plurality of trusted hosts.
6. The computer program product of claim 1, wherein the at least one encryption technique comprises a one-time pad encryption scheme that uses a one-time shared key.
7. The computer program product of claim 1, wherein the at least one encapsulation protocol comprises a tunneling protocol.
8. The computer program product of claim 1, wherein causing transmission of the encapsulated message and the encapsulated set of hash values comprises causing transmission of the encapsulated message and the encapsulated set of hash values using a zero knowledge communication protocol.
9. The computer program product of claim 8, wherein the zero knowledge communication protocol comprises both: causing constant transmission of data before and after transmitting the encapsulated message and the encapsulated set of hash values; and use of an unconditional anonymity protocol.
10. A communication system comprising: one or more non-transitory machine-readable mediums configured to store instructions; and one or more processors configured to execute the instructions stored on the one or more non-transitory machine-readable mediums, wherein execution of the instructions causes the one or more processors to receive an initial message, generate a plurality of hash values for the initial message, digitally sign the initial message and the plurality of hash values using one or more certificates to generate a signed message and a set of signed hash values, encrypt the signed message and the set of signed hash values using at least one encryption technique to generate an encrypted message and a set of encrypted hash values, encapsulate the encrypted message and the set of encrypted hash values using at least one encapsulation protocol to create an encapsulated message and an encapsulated set of hash values, and cause transmission of the encapsulated message and the encapsulated set of hash values over an untrusted network.
11. The system of claim 10, wherein a first hash value of the plurality of hash values is generated using a first hash protocol, and a second hash value of the plurality of hash values is generated using a second hash protocol different from the first hash protocol.
12. The system of claim 10, wherein the one or more certificates comprise one or more of a user certificate, a computer hardware certificate, a network certificate, and a location certificate.
13. The system of claim 10, wherein the at least one encryption technique comprises a one-time pad encryption scheme that uses a one-time shared key.
14. The system of claim 10, wherein causing transmission of the encapsulated message and the encapsulated set of hash values comprises causing transmission of the encapsulated message and the encapsulated set of hash values using a zero knowledge communication protocol.
15. A computer program product including one or more non-transitory machine-readable mediums encoding instructions that when executed by one or more processors cause a process to be carried out for securely receiving and processing data, the process comprising: receiving an encrypted message to be sent to a recipient device; de-encapsulating the encrypted message and a plurality of hash values associated with the encrypted message; decrypting the encrypted message and the plurality of hash values using a secret key associated with a sender of the encrypted message to generate a decrypted message; verifying at least one digital signature for the decrypted message and the plurality of hash values; verifying the plurality of hash values; processing the decrypted message to produce a processed message for transmission to the recipient device; and causing transmission of the processed message to the recipient device over an untrusted network.
16. The computer program product of claim 15, wherein processing the decrypted message to produce a processed message for transmission to the recipient device comprises: generating a second plurality of hash values for the decrypted message; digitally signing the decrypted message and the second plurality of hash values using one or more certificates to generate a signed message and a set of signed hash values; encrypting the signed message and the set of signed hash values using a secret key associated with the recipient device to produce an encrypted message and a set of encrypted hash values; encapsulating the encrypted message and the set of encrypted hash values using at least one encapsulation protocol to create an encapsulated message and an encapsulated set of hash values; and causing transmission of the encapsulated message and the encapsulated set of hash values to the recipient device over the untrusted network.
17. The computer program product of claim 15, wherein causing transmission of the processed message comprises causing transmission of the processed message using a zero knowledge communication protocol.
18. The computer program product of claim 17, wherein the zero knowledge communication protocol comprises both: causing constant transmission of data before and after transmitting the processed message; and use of an unconditional anonymity protocol.
19. The computer program product of claim 15, wherein processing the message to produce a processed message for transmission to the recipient device comprises performing a cross-domain translation to ensure that only the subset of the message which is of an appropriate classification may be transmitted to the recipient device.
20. The computer program product of claim 15, wherein the process for securely receiving and processing data further comprises: monitoring data traffic on the untrusted network; and performing anomaly detection on the data traffic to detect one or more network threats.
</claims>
</document>
