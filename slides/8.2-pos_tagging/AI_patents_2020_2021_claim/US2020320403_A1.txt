<document>

<filing_date>
2019-04-08
</filing_date>

<publication_date>
2020-10-08
</publication_date>

<priority_date>
2019-04-08
</priority_date>

<ipc_classes>
G06N3/10
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
DAGA, BHARAT
JANEDULA, PRADEEP
PAZHANIMALA, BIJOY
NAIR, KRISHNAKUMAR
VENGALLUR, AMBILI
SRINIVASAN, ARAVIND BABU
</inventors>

<docdb_family_id>
72613153
</docdb_family_id>

<title>
MECHANISM TO PERFORM NON-LINEAR FUNCTIONS IN A MACHINE LEARNING ACCELERATOR
</title>

<abstract>
An apparatus to facilitate execution of non-linear functions operations is disclosed. The apparatus comprises accelerator circuitry including a compute grid having a plurality of processing elements to execute neural network computations, store values resulting from the neural network computations, and perform piecewise linear (PWL) approximations of one or more non-linear functions using the stored values as input data.
</abstract>

<claims>
1. An apparatus to facilitate execution of non-linear functions operations comprising accelerator circuitry, including: a compute grid having a plurality of processing elements to execute neural network computations, store values resulting from the neural network computations, and perform piecewise linear (PWL) approximations of one or more non-linear functions using the stored values as input data.
2. The apparatus of claim 1, further comprising one or more lookup tables (LUTs) to store a plurality of non-linear parameter values for the PWL approximations.
3. The apparatus of claim 2, wherein each of the plurality of processing elements comprises: a first stage including a multiplier to perform a multiplication operation of an input data value and a first interval version of a first parameter value during a first processing cycle of a PWL approximation; and a second stage including an accumulator to perform a subtraction operation of a first interval version of a second parameter from a result of the multiplication operation.
4. The apparatus of claim 3, wherein the accumulator sets an enable bit indicating a sign of the result of the subtraction operation.
5. The apparatus of claim 4, wherein the accumulator performs an addition operation of a first interval version of a third parameter and the result of the subtraction operation during a second processing cycle of the PWL approximation.
6. The apparatus of claim 5, wherein a determination is made as to whether the enable bit indicates that the sign of the result of the subtraction operation has a first value.
7. The apparatus of claim 6, wherein the multiplier performs a second multiplication operation of the input data value and a second interval version of the first parameter value during a third processing cycle of a PWL approximation upon a determination that the enable bit indicates that the has the first value, and the accumulator performs a second subtraction operation of a second interval version of the second parameter from a result of the second multiplication operation.
8. The apparatus of claim 6, wherein a result of the addition operation is saved as the PWL approximation upon a determination that the sign has a second value.
9. A method to facilitate execution of non-linear functions operations, comprising: accelerator circuitry, including: executing neural network computations at a compute grid having a plurality of processing element; storing values resulting from the neural network computations; and performing piecewise linear (PWL) approximations of one or more non-linear functions using the stored values as input data.
10. The method of claim 9, wherein performing the PWL approximations comprises performing a first processing cycle, including: performing a multiplication operation to multiply an input data value and a first interval version of a first parameter value; performing a subtraction operation of a first interval version of a second parameter from the result of the multiplication operation; and setting an enable bit indicating a sign of the result of the subtraction operation.
11. The method of claim 10, further comprising performing a second processing cycle, including: performing an addition operation of a first interval version of a third parameter and the result of the subtraction operation during a second processing cycle of the PWL approximation.
12. The method of claim 11, further comprising determining whether the enable bit indicates that the sign of the result of the subtraction operation has a first value.
13. The method of claim 12, further comprising performing a third processing cycle, including: performing a second multiplication operation of the input data value and a second interval version of the first parameter value upon a determination that the enable bit indicates that the has the first value; and performing a second subtraction operation of a second interval version of the second parameter from the result of the second multiplication operation.
14. The method of claim 12, further comprising saving a result of the addition operation upon a determination that the sign has a second value.
15. An accelerator comprising: one or more memory devices to store one or more one or more lookup tables (LUTs); and a compute grid having a plurality of a plurality of tiles, each including a plurality of processing elements to execute neural network computations, store values resulting from the neural network computations, and perform piecewise linear (PWL) approximations of one or more non-linear functions using the stored values as input data and non-linear parameter values stored in the one or more LUTs.
16. The accelerator of claim 15, wherein each of the plurality of processing elements comprises: a first stage including a multiplier to perform a multiplication operation of an input data value and a first interval version of a first parameter value during a first processing cycle of a PWL approximation; and a second stage including an accumulator to perform a subtraction operation of a first interval version of a second parameter from a result of the multiplication operation.
17. The accelerator of claim 16, wherein the accumulator sets an enable bit indicating a sign of the result of the subtraction operation.
18. The accelerator of claim 17, wherein the accumulator performs an addition operation of a first interval version of a third parameter and the result of the subtraction operation during a second processing cycle of the PWL approximation.
19. The accelerator of claim 18, wherein a determination is made as to whether the enable bit indicates that the sign of the result of the subtraction operation has a first value.
20. The accelerator of claim 19, wherein the multiplier performs a second multiplication operation of the input data value and a second interval version of the first parameter value during a third processing cycle of a PWL approximation upon a determination that the enable bit indicates that the has the first value, and the accumulator performs a second subtraction operation of a second interval version of the second parameter from a result of the second multiplication operation.
21. The accelerator of claim 19, wherein a result of the addition operation is saved as the PWL approximation upon a determination that the sign has a second value.
</claims>
</document>
