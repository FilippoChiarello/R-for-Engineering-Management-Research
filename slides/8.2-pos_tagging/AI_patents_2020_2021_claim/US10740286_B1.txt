<document>

<filing_date>
2017-08-28
</filing_date>

<publication_date>
2020-08-11
</publication_date>

<priority_date>
2017-08-28
</priority_date>

<ipc_classes>
G06F16/11,G06F16/16,G06F16/21,G06F9/50
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
GILDERMAN, ILIA
HERTL, NICOLAS ANTON MEDHURST
LEVONAI, GAL ELIRAZ
MURRAY, EDWARD PAUL
RUSSO, MICHAEL, J.
WINFORD, JOHN MACDONALD
</inventors>

<docdb_family_id>
71994067
</docdb_family_id>

<title>
Migration task validation before data migration
</title>

<abstract>
Validation of a migration task to migrate data from one data store to another may be performed prior to the migration of the data. Parameters associated with the migration may be evaluated according to one or more types of validations for the migration task. In some embodiments, users may specify the validations to perform for the migration task. A determination as to whether the migration task is valid may be performed for the migration task based on the parameter evaluations. A result indicating whether the migration task is valid may be provided to a user.
</abstract>

<claims>
1. A system, comprising: a memory to store program instructions which, if performed by at least one processor, cause the at least one processor to perform a method to at least: receive, via an interface, a request to create a migration task to be validated, wherein the migration task is to migrate data from a first data store to a second data store; identify one or more validations to perform with respect to the migration task; evaluate one or more parameter values that are configurable to direct migration of the data as part of the migration task according to the identified validations; responsive to a determination that the migration task is invalid from the evaluation of the one or more parameter values, determine whether a modification to at least one of the one or more parameter values will result in validity of the migration task; generate a result for the validations that includes whether the modification to the at least one of the one or more parameter values will result in the validity of the migration task before the data is migrated from the first data store to the second data store; and provide the result via the interface.
2. The system of claim 1, wherein the request further identifies one or more different types of validations to perform for the migration task, wherein the identified one or more validations are identified according to the different types of validations identified in the request.
3. The system of claim 1, wherein the modification is: a corrective action to modify an invalid parameter of the migration task indicated in the result; or a recommended alternative target data store to cure an invalid parameter of the migration task indicated in the result.
4. The system of claim 1, wherein the at least one processor is implemented as part of a data migration service of a provider network, wherein the second data store is hosted as part of another service of the provider network, and wherein the interface is an interface for the data migration service.
5. A method, comprising: identifying a migration task to be validated, wherein the migration task is to migrate data from a first data store to a second data store; evaluating one or more parameter values that are configurable to direct migration of the data as part of the migration task; determining whether the migration task is valid based, at least in part, on the evaluation of the one or more parameter values before the data is migrated from the first data store to the second data store; responsive to determining that the migration task is invalid from the evaluation of the one or more parameter values, determining whether a modification to at least one of the one or more parameters will result in validity of the migration task; and indicating to a user a result of whether the migration task is valid that includes whether the modification to the at least one of the one or more parameter values will result in the validity of the migration task.
6. The method of claim 5, further comprising: receiving a request to create the migration task via an interface, wherein the request identifies the migration task for validation.
7. The method of claim 6, wherein the request further identifies one or more different types of validations to perform for the migration task, wherein the identifying the migration task to be validated is based on the different types of validations identified in the request, and wherein the evaluation of the parameter values is performed according to the identified one or more validations.
8. The method of claim 5, wherein the result comprises a corrective action to modify an invalid parameter of the migration task indicated in the result.
9. The method of claim 8, further comprising: performing the corrective action to modify the invalid parameter of the migration task in response to a permission received via an interface.
10. The method of claim 5, wherein the result comprises a recommended alternative target data store to cure an invalid parameter of the migration task indicated in the result.
11. The method of claim 10, further comprising: modifying the migration task to replace the second data store with the alternative target data store in response to a permission received via an interface.
12. The method of claim 5, wherein the identifying, the evaluating, the determining, and the providing are performed in response to an input of the one or more parameter values in a task creation in a user interface.
13. The method of claim 5, wherein the first data store is a first type of database, wherein the second data store is a second type of database, wherein the second data store is hosted within a provider network and wherein the first data store is hosted external to the provider network.
14. A non-transitory, computer-readable storage medium, storing program instructions that when executed by one or more computing devices cause the one or more computing devices to implement: receiving, via an interface, a request to create a migration task, wherein the migration task is to migrate data from a first data store to a second data store; identifying the migration task for validation; evaluating one or more parameter values that are configurable to direct migration of the data as part of the migration task; determining whether the migration task is valid based, at least in part, on the evaluation of the one or more parameters before the data is migrated from the first data store to the second data store; responsive to determining that the migration task is invalid from the evaluation of the one or more parameter values, determining whether a modification to at least one of the one or more of the parameters will result in validity of the migration task; and providing, via the interface, a result of whether the migration task is valid to a user that includes whether the modification to the at least one of the one or more parameter values will result in the validity of the migration task.
15. The non-transitory, computer-readable storage medium of claim 14, wherein the request further identifies one or more different types of validations to perform for the migration task, wherein identifying the migration task for validation identifies one or more validations to perform with respect to the migration task based on the different types of validations identified in the request, and wherein the evaluation of the parameter values is performed according to the identified one or more validations.
16. The non-transitory, computer-readable storage medium of claim 15, wherein another request to create a second migration task is received, wherein the second migration task is to migrate other data from a third data store to a fourth data store, wherein the identifying, the evaluating, the determining, and the providing are performed for the second migration task, wherein the other request further identifies another one or more types of validations to perform for the second migration task, wherein at least one of the other one or more types of validations is different than the one or more types of validations for the migration task.
17. The non-transitory, computer-readable storage medium of claim 14, wherein the result comprises a recommended alternative target data store to cure an invalid parameter of the migration task indicated in the result.
18. The non-transitory, computer-readable storage medium of claim 17, wherein the program instructions cause the one or more computing devices to further implement: in response to receiving a permission via the interface: provisioning a third data store according to the recommended alternative target data store; and modifying the migration task to replace the second data store with the third data store.
19. The non-transitory, computer-readable storage medium of claim 14, wherein the result classifies different invalid parameters of the migration task according to different severities.
20. The non-transitory, computer-readable storage medium of claim 14, wherein the one or more computing devices are implemented as part of a data migration service of a provider network, wherein the second data store is hosted as part of another service of the provider network, and wherein the first data store is hosted external to the provider network.
</claims>
</document>
