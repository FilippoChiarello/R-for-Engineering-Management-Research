<document>

<filing_date>
2018-12-28
</filing_date>

<publication_date>
2020-07-02
</publication_date>

<priority_date>
2018-12-28
</priority_date>

<ipc_classes>
G06T15/00,G06T15/06,G06T17/00
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
SURTI, PRASOONKUMAR
BENTHIN, CARSTEN
JANUS, SCOTT
VAIDYANATHAN, KARTHIK
LAWS, PHILIP
</inventors>

<docdb_family_id>
68242436
</docdb_family_id>

<title>
APPARATUS AND METHOD FOR RAY TRACING WITH GRID PRIMITIVES
</title>

<abstract>
Apparatus and method for ray tracing acceleration using a grid primitive. For example, one embodiment of an apparatus comprises: a grid primitive generator to generate a grid primitive comprising a plurality of adjacent interconnected primitives; a bitmask generator to generate a bitmask associated with the grid primitive, the bitmask comprising a plurality of bitmask values, each mask value associated with a primitive of the grid primitive; a ray tracing engine comprising traversal and intersection hardware logic to perform traversal and intersection operations in which rays are traversed through a hierarchical acceleration data structure and intersections between the rays and one or more of the adjacent interconnected primitives identified, wherein the ray tracing engine is to read the bitmask to determine a first set of primitives from the grid primitive on which to perform the traversal and intersection operations and a second set of primitives from the grid primitive on which the traversal and intersection operations will not be performed.
</abstract>

<claims>
1. An apparatus comprising: a grid primitive generator to generate a grid primitive comprising a plurality of adjacent interconnected primitives; a bitmask generator to generate a bitmask associated with the grid primitive, the bitmask comprising a plurality of bitmask values, each mask value associated with a primitive of the grid primitive; a ray tracing engine comprising traversal and intersection hardware logic to perform traversal and intersection operations in which rays are traversed through a hierarchical acceleration data structure and intersections between the rays and one or more of the adjacent interconnected primitives identified, wherein the ray tracing engine is to read the bitmask to determine a first set of primitives from the grid primitive on which to perform the traversal and intersection operations and a second set of primitives from the grid primitive on which the traversal and intersection operations will not be performed.
2. The apparatus of claim 1 wherein a first bit value in the bitmask indicates that the traversal and intersection operations are to be performed on a corresponding primitive and a second bit value in the bitmask indicates that the traversal and intersection operations are not to be performed on the corresponding primitive.
3. The apparatus of claim 1 wherein the grid primitive generator is to identify primitives to be included in the grid primitive based on measured density and/or periodic repetition of the primitives being above one or more threshold values.
4. The apparatus of claim 3 wherein the grid primitive generator is to store at least a portion of the primitives in memory without indices, and wherein memory locations of the primitives are to be determined implicitly based on spatial relationships between the primitives within the grid primitive.
5. The apparatus of claim 1 wherein the traversal and intersection hardware logic is to perform a plurality of ray-primitive intersection tests in parallel on a plurality of the first set of primitives.
6. The apparatus of claim 1 wherein the hierarchical acceleration data structure comprises a bounding volume hierarchy (BVH).
7. The apparatus of claim 6 further comprising: BVH processing hardware logic to generate a BVH over the primitives in each grid primitive based on the bitmask.
8. The apparatus of claim 7 wherein the BVH processing hardware logic is to generate the BVH using primitives associated with bits in the bitmask set to a first value and to ignore triangles associated with bits in the bitmask set to a second value.
9. A method comprising: generating a grid primitive comprising a plurality of adjacent interconnected primitives; generating a bitmask associated with the grid primitive, the bitmask comprising a plurality of bitmask values, each mask value associated with a primitive of the grid primitive; perform traversal and intersection operations in which rays are traversed through a hierarchical acceleration data structure and intersections between the rays and one or more of the adjacent interconnected primitives identified, wherein the bitmask is read to determine a first set of primitives from the grid primitive on which to perform the traversal and intersection operations and a second set of primitives from the grid primitive on which the traversal and intersection operations will not be performed.
10. The method of claim 9 wherein a first bit value in the bitmask indicates that the traversal and intersection operations are to be performed on a corresponding primitive and a second bit value in the bitmask indicates that the traversal and intersection operations are not to be performed on the corresponding primitive.
11. The method of claim 9 wherein primitives to be included in the grid primitive are identified based on measured density and/or periodic repetition of the primitives being above one or more threshold values.
12. The method of claim 11 at least a portion of the primitives are stored in memory without indices, and wherein memory locations of the primitives are to be determined implicitly based on spatial relationships between the primitives within the grid primitive.
13. The method of claim 9 further comprising: performing a plurality of ray-primitive intersection tests in parallel on a plurality of the first set of primitives.
14. The method of claim 9 wherein the hierarchical acceleration data structure comprises a bounding volume hierarchy (BVH).
15. The method of claim 14 further comprising: generating a BVH over the primitives in each grid primitive based on the bitmask.
16. The method of claim 15 wherein the BVH processing hardware logic is to generate the BVH using primitives associated with bits in the bitmask set to a first value and to ignore triangles associated with bits in the bitmask set to a second value.
17. A machine-readable medium having program code stored thereon which, when executed by a machine, causes the machine to perform the operations of: generating a grid primitive comprising a plurality of adjacent interconnected primitives; generating a bitmask associated with the grid primitive, the bitmask comprising a plurality of bitmask values, each mask value associated with a primitive of the grid primitive; perform traversal and intersection operations in which rays are traversed through a hierarchical acceleration data structure and intersections between the rays and one or more of the adjacent interconnected primitives identified, wherein the bitmask is read to determine a first set of primitives from the grid primitive on which to perform the traversal and intersection operations and a second set of primitives from the grid primitive on which the traversal and intersection operations will not be performed.
18. The machine-readable medium of claim 17 wherein a first bit value in the bitmask indicates that the traversal and intersection operations are to be performed on a corresponding primitive and a second bit value in the bitmask indicates that the traversal and intersection operations are not to be performed on the corresponding primitive.
19. The machine-readable medium of claim 17 wherein primitives to be included in the grid primitive are identified based on measured density and/or periodic repetition of the primitives being above one or more threshold values.
20. The machine-readable medium of claim 19 at least a portion of the primitives are stored in memory without indices, and wherein memory locations of the primitives are to be determined implicitly based on spatial relationships between the primitives within the grid primitive.
21. The machine-readable medium of claim 17 further comprising: performing a plurality of ray-primitive intersection tests in parallel on a plurality of the first set of primitives.
22. The machine-readable medium of claim 17 wherein the hierarchical acceleration data structure comprises a bounding volume hierarchy (BVH).
23. The machine-readable medium of claim 22 further comprising: generating a BVH over the primitives in each grid primitive based on the bitmask.
24. The machine-readable medium of claim 23 wherein the BVH processing hardware logic is to generate the BVH using primitives associated with bits in the bitmask set to a first value and to ignore triangles associated with bits in the bitmask set to a second value.
</claims>
</document>
