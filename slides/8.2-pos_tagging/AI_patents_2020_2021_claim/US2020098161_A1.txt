<document>

<filing_date>
2019-09-24
</filing_date>

<publication_date>
2020-03-26
</publication_date>

<priority_date>
2018-09-24
</priority_date>

<ipc_classes>
G06F17/16,G06K9/00,G06K9/62,G06Q50/00,G06T15/00,G06T15/04
</ipc_classes>

<assignee>
ZIGNAL LABS
</assignee>

<inventors>
BEAUGH, ADAM
BENKE, ANDRAS
DODSON, JONATHAN R.
KRAMER, MICHAEL
SMITH, ALEX
VIVES, FABIEN
</inventors>

<docdb_family_id>
69884542
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR EXECUTING NON-GRAPHICAL ALGORITHMS ON A GPU (GRAPHICS PROCESSING UNIT)
</title>

<abstract>
A system and method for performing non-graphical algorithm calculations on a GPU (graphics processing unit), by adapting the non-graphical algorithm to be executed according to the texture mapping calculation functions of the GPU, for example within the Web Browser environment. The non-graphical algorithm preferably relates to comparison of a plurality of data points. Each data point may relate to any unit of information, including but not limited to a document (for a document comparison algorithm), information about movements of a unit (for a collision detection algorithm), determination of interactions between two more nodes on a graph, such as for example and without limitation, determining such interactions in a social media channel.
</abstract>

<claims>
1. A system for executing a non-graphical algorithm by performing non-graphical algorithm calculations on a GPU (graphics processing unit), the system comprising a computational device, comprising a display, a mark-up language software for displaying mark-up language documents on said display and a GPU capable of rendering data for display on said display through executing texture mapping; wherein the non-graphical algorithm is adapted to be executed according to the texture mapping calculation functions of the GPU; wherein a result of execution of the non-graphical algorithm is displayed on said display through said mark-up language software.
2. The system of claim 1, wherein the mark-up language software comprises a web browser.
3. The system of claim 2, wherein said non-graphical algorithm comprises a matrix calculation, wherein said execution of said non-graphical algorithm comprises execution of said matrix calculation through said web browser by said GPU; and wherein a result of said execution of said matrix calculation is displayed through said web browser.
4. The system of claim 3, further comprising a compute shader software, wherein said compute shader software is executed through said web browser and wherein said compute shader software performs said matrix calculation by execution by said GPU.
5. The system of claim 4, wherein the non-graphical algorithm relates to comparison of a plurality of data points, wherein each data point relates to a unit of information.
6. The system of claim 5, wherein said plurality of data points is arranged in a matrix, wherein each location in said matrix relates to a comparison of two data points, wherein said compute shader software performs said matrix calculation to compare said two data points.
7. The system of claim 6, further comprising performing said matrix calculation for a triangular arrangement of said data points, such that each pair of data points is compared only once.
8. The system of claim 7, wherein said unit of information is a document and the non-graphical algorithm is a document comparison algorithm.
9. The system of claim 8, further comprising a document tokenization software for decomposing said document to a plurality of tokens and creating a vector of said tokens; wherein said performing said matrix calculation comprises comparing two vectors for comparing two documents.
10. The system of claim 9, wherein said comparing said two vectors comprises a geometric comparison method.
11. The system of claim 10, wherein said geometric comparison method is selected from the group consisting of Euclidean distance, LSI (Latent Semantic Indexing), t-SNE (T-distributed Stochastic Neighbor Embedding) and TS*SS.
12. The system of claim 10, wherein said geometric comparison method is selected from the group consisting of edit distance comparison methods, token based comparison methods and sequence based comparison methods.
13. The system of claim 12, wherein said edit distance comparison method is selected from the group consisting of Hamming Distance, Levenshtein Distance and Jaro-Winkler.
14. The system of claim 12, wherein said token based comparison method is selected from the group consisting of Jaccard index and Sorensen-Dice.
15. The system of claim 12, wherein said sequence based comparison method comprises Ratcliff-Obershelp.
16. The system of claim 1, wherein said non-graphical algorithm is selected from the group consisting of Jaccard Similarity (Jaccard index), K-means, Cosine Similarity, Word2Vec and Smooth Inverse Frequency with Cosine Similarity, LSI (Latent Semantic Indexing) with Cosine Similarity, LDA with Jensen-Shannon distance, Word Mover Distance, Variational Auto Encoder (VAE), Universal sentence encoder, Siamese Manhattan LSTM, Latent Dirichlet Allocation (LDA), Kullback-Leibler, Universal Sentence Encoder, word2vec, GloVe, InferSent (Facebook Research), Google Sentence Encoder (a Deep Averaging Network (DAN)), Siamese Manhattan LSTM (MaLSTM), MaLSTM (Manhattan LSTM), WordNet, TransE, Wu and Palmer, and Resnek.
17. The system of claim 7, wherein said unit of information relates to data measuring movements of a unit and the non-graphical algorithm is a collision detection algorithm.
18. The system of claim 7, wherein said unit of information relates to determination of interactions between two or more nodes on a graph.
19. The system of claim 18, wherein said nodes on said graph comprise a map of a plurality of interactions in a social media channel.
20. The system of claim 1, wherein said computational device further comprises a memory for storing a defined native instruction set of codes; wherein said GPU is configured to perform a defined set of basic operations in response to receiving a corresponding basic instruction selected from said defined native instruction set of codes; said computational device comprising a first set of machine codes selected from the native instruction set for receiving said data, a second set of machine codes selected from the native instruction set for executing texture mapping and a third set of machine codes selected from the native instruction set for executing said non-graphical algorithm according to said texture mapping.
21. A method for executing a non-graphical algorithm by performing non-graphical algorithm calculations on a GPU (graphics processing unit), the method being performed on a system comprising a computational device, the computational device comprising a GPU capable of analyzing data through executing texture mapping and a memory for storing a plurality of instructions; wherein said plurality of instructions comprise instructions for adapting the non-graphical algorithm to be executed according to the texture mapping calculation functions of the GPU; the method comprising receiving data by the computational device; arranging the data into a plurality of vectors; and executing the non-graphical algorithm through the texture mapping calculation functions of the GPU according to said instructions stored in the memory, wherein said executing comprises comparing the plurality of vectors according to a geometric comparison method.
22. The method of claim 21, wherein said computational device comprises a display; further comprising displaying a result of executing the non-graphical algorithm on the GPU on said display.
23. The method of claim 22, wherein said plurality of instructions further comprise instructions for executing functions of a mark-up language software, the method further comprising displaying said result of executing the non-graphical algorithm through said mark-up language software.
24. The method of claim 23, wherein the mark-up language software comprises a web browser, wherein said non-graphical algorithm comprises a matrix calculation, wherein said executing said non-graphical algorithm comprises executing said matrix calculation through said web browser by said GPU; the method further comprising displaying a result of said execution of said matrix calculation through said web browser.
25. The method of claim 24, wherein the computation device further comprises a compute shader software, the method further comprising executing said compute shader software through said web browser for performing said matrix calculation by execution by said GPU.
26. The method of claim 25, wherein the non-graphical algorithm relates to comparison of a plurality of data points, wherein each data point relates to a unit of information, and wherein said plurality of data points is arranged in said matrix, wherein each location in said matrix relates to a comparison of two data points, wherein said executing said compute shader software further comprises performing said matrix calculation to compare said two data points.
</claims>
</document>
