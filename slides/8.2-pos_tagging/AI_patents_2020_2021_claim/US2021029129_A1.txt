<document>

<filing_date>
2019-09-30
</filing_date>

<publication_date>
2021-01-28
</publication_date>

<priority_date>
2019-07-22
</priority_date>

<ipc_classes>
G06F16/28,G06N20/00,G06N5/04,H04L29/06
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
BISWAS, SHANTANU
Shinde, Tushar
Venkata Ramana, Gurram
Iyengar, Jagadish Berigai Rama
Gupta, Prashant
Krishnan, Ravishankar
NEVATIA, Dayapatra
Jain, Abhishek
Vedagiri Venkata Naga, Murali Krishna
Thanniru, Ramesh Naidu
Kumar, Nikhil G.
Nagarajan, Balaji
Pujari, Vikas
</inventors>

<docdb_family_id>
74187422
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR CONTROLLING SECURITY ACCESS
</title>

<abstract>
The disclosed system and method provide a way to easily review, audit, and modify multiple users' security access authority. The disclosed system and method may include using a trained bot that is trained using a machine learning algorithm to retrieve user profile information from a complex network of tables stored in a relational database and to analyze the user profile information to generate a recommendation to revoke or approve at least one user's security access authority for at least one transaction type. In some embodiments, the disclosed system and method allow for a human expert to revoke or approve at least one user's security access authority for at least one transaction type based on the recommendation. In some embodiments, the disclosed system and method determine whether to revoke or approve at least one user's security access authority for at least one transaction type and may also revoke or approve the at least one user's security access authority based on the decision.
</abstract>

<claims>
We claim:
1. A computer implemented method of controlling security access, comprising: obtaining input including one or more of a user identification, user list, user group, configuration file, and historical data; using a trained bot that is trained using a machine learning algorithm to use the one or more of a user identification, user list, user group, configuration file, and historical data to find a first field value of a first field in a first table stored in a relational database, wherein the first table contains one or more of the user identification, user list, user group, configuration file, and historical data; using the trained bot to use the first field value to find a second field value of a second field in a second table stored in the relational database, wherein the second table contains at least the first field value; and using the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and a third field to generate a recommendation to revoke or approve at least one user's security access authority.
2. The computer implemented method of claim 1, further comprising revoking or approving the at least one user's security access authority in response to a human expert accepting the recommendation.
3. The computer implemented method of claim 1, further comprising displaying the history of a human expert declining the recommendation.
4. The computer implemented method of claim 1, further comprising using the trained bot to use the second field value to find the third field value of a third field in a third table stored in the relational database, wherein the third table contains at least the second field value, wherein the third field value is related to at least one user's security access authority to perform a first transaction.
5. The computer implemented method of claim 4, wherein using the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and third field to generate a recommendation to revoke or approve at least one user's security access authority includes analyzing one or more of user identification, user list, user group, configuration file, historical data, first field, second field, and the third field.
6. The computer implemented method of claim 1, wherein the trained bot is trained using a sequence of steps including at least one of decision trees and random forest.
7. The computer implemented method of claim 1, wherein the trained bot is trained using a data set including at least one of a value for an access field and a transaction code field.
8. The computer implemented method of claim 7, further comprising analyzing at least one of the access field and the transaction code field to generate a recommendation to revoke or approve at least one user's security access authority.
9. A non-transitory computer-readable medium storing software comprising instructions executable by one or more computers which, upon such execution, cause the one or more computers to: obtain input including one or more of a user identification, user list, user group, configuration file, and historical data; use a trained bot that is trained using a machine learning algorithm to use the one or more of a user identification, user list, user group, configuration file, and historical data to find a first field value of a first field in a first table stored in a relational database, wherein the first table contains one or more of the user identification, user list, user group, configuration file, and historical data; use the trained bot to use the first field value to find a second field value of a second field in a second table stored in the relational database, wherein the second table contains at least the first field value; and use the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and a third field to generate a recommendation to revoke or approve at least one user's security access authority.
10. The non-transitory computer-readable medium storing software of claim 9, wherein the instructions further cause the one or more computers to revoke or approve the at least one user's security access authority in response to a human expert accepting the recommendation.
11. The non-transitory computer-readable medium storing software of claim 9, wherein the instructions further cause the one or more computers to display the history of a human expert declining the recommendation.
12. The non-transitory computer-readable medium storing software of claim 9, wherein the instructions further cause the one or more computers to use the trained bot to use the second field value to find the third field value of a third field in a third table stored in the relational database, wherein the third table contains at least the second field value, wherein the third field value is related to at least one user's security access authority to perform a first transaction.
13. The non-transitory computer-readable medium storing software of claim 9, wherein using the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and third field to generate a recommendation to revoke or approve at least one user's security access authority includes analyzing one or more of user identification, user list, user group, configuration file, historical data, first field, second field, and the third field.
14. The non-transitory computer-readable medium storing software of claim 9, wherein the trained bot is trained using a sequence of steps including at least one of decision trees and random forest.
15. A system for controlling security access, comprising: one or more computers and one or more storage devices storing instructions that are operable, when executed by the one or more computers, to cause the one or more computers to: obtain input including one or more of a user identification, user list, user group, configuration file, and historical data; use a trained bot that is trained using a machine learning algorithm to use the one or more of a user identification, user list, user group, configuration file, and historical data to find a first field value of a first field in a first table stored in a relational database, wherein the first table contains one or more of the user identification, user list, user group, configuration file, and historical data; use the trained bot to use the first field value to find a second field value of a second field in a second table stored in the relational database, wherein the second table contains at least the first field value; and use the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and a third field to generate a recommendation to revoke or approve at least one user's security access authority.
16. The system of claim 15, wherein the instructions further cause the one or more computers to revoke or approve the at least one user's security access authority in response to a human expert accepting the recommendation.
17. The system of claim 15, wherein the instructions further cause the one or more computers to display the history of a human expert declining the recommendation.
18. The system of claim 15, wherein the instructions further cause the one or more computers to use the trained bot to use the second field value to find the third field value of a third field in a third table stored in the relational database, wherein the third table contains at least the second field value, wherein the third field value is related to at least one user's security access authority to perform a first transaction.
19. The system of claim 15, wherein using the trained bot to use one or more of the user identification, user list, user group, configuration file, historical data, first field, second field, and third field to generate a recommendation to revoke or approve at least one user's security access authority includes analyzing one or more of user identification, user list, user group, configuration file, historical data, first field, second field, and the third field.
20. The system of claim 15, wherein the instructions further cause the one or more computers to analyze at least one of the access field and the transaction code field to generate a recommendation to revoke or approve at least one user's security access authority.
</claims>
</document>
