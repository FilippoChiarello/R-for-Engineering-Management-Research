<document>

<filing_date>
2019-03-12
</filing_date>

<publication_date>
2020-02-06
</publication_date>

<priority_date>
2018-07-31
</priority_date>

<ipc_classes>
B25J9/00,B25J9/16
</ipc_classes>

<assignee>
TATA CONSULTANCY SERVICES
</assignee>

<inventors>
AGARWAL, MARICHI
DEY, SOUNAK
SARKAR, CHAYAN
</inventors>

<docdb_family_id>
65729177
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR SEMANTIC KNOWLEDGE BASED DYNAMIC UTILITY CALCULATION
</title>

<abstract>
Parameters specific to robot, environment, target objects and their inter-relations need to be considered by a robot to estimate cost of a task. As the existing task allocation methods assume a single utility value for a robot-task pair, combining heterogeneous parameters is a challenge. In applications like search and rescue, manual intervention may not be possible in real time. For such cases, utility calculation may be a hindrance towards automation. Also, manufacturers follow their own nomenclature and units for robotic specifications. Only domain experts can identify semantically similar terms and perform necessary conversions. Systems and methods of the present disclosure provide a structured semantic knowledge model to store and describe data in a uniform machine readable format such that semantics of those data can be interpreted by the robots and utility computation can be autonomous to make task allocation autonomous, semantic enabled and capable of self-decision without human intervention.
</abstract>

<claims>
1. A processor implemented method for dynamic utility calculation (200) comprising the steps of: obtaining, by one or more hardware processors, a set of parameters for each robot-task pair to perform a task, given there are n tasks to be performed by k robots (202), wherein the set of parameters are characterized by interdependencies therebetween, with a set of sub-parameters and with the n tasks, and wherein a one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks is defined in real time in a structured semantic knowledge model; and dynamically computing, by the one or more hardware processors, utility uij for a robot i to perform a task j based on the set of parameters including travel time tijmotion for the robot i and actuation time tijact for the task j by the robot i, wherein the travel time tijmotion is further based on free motion time tijfree and turning time tijturn, wherein the free motion time tijfree depends on travel distance dijfree and speed of the robot vi and the turning time tijturn depends on average turning time titurn and number of turns tijturn the robot's path (204).
2. The processor implemented method of claim 1, wherein the step of dynamically computing utility uij is based on restrictions or limitations that exist or need to be satisfied based on the structured semantic knowledge model.
3. The processor implemented method of claim 1 further comprising: identifying, by the one or more hardware processors, capability of each robot from the k robots to perform the task j based on at least one of the structured semantic knowledge model and the dynamically computed utility (206); storing, by the one or more hardware processors, values associated with the utility uij for each of the k robots along with the identified capability associated thereof in a matrix as the robot-task pair (208); inputting, by the one or more hardware processors, the matrix to a task allocation method (210); and updating, by the one or more hardware processors, the one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks based on an output of the task allocation method (212).
4. The processor implemented method of claim 1, wherein the turning time tijturn represents ascending or descending time to reach a desired flight level if the robot is an unmanned aerial vehicle (UAV).
5. The processor implemented method of claim 1, wherein the step of computing utility uij for a robot i is further based on a recharge time tijrec for the robot i.
6. The processor implemented method of claim 5, wherein the recharge time tijrec is an equivalent time to recharge battery of the robot that is spent to perform the task j and is based on an estimated amount of energy eij spent by the robot to perform sub-tasks that in combination completes the task j, total time required to recharge the battery fully from a completely drained out state ticap and total battery capacity of the robot eicap.
7. The processor implemented method of claim 6, wherein the amount of energy eij is based on at least some energy consuming activities including energy spent for movement activities eijmotion, energy spent on sensing activities eijsense energy spent for actuation activities eijact, energy spent on load carrying activities eijload, energy spent on computation activities eijcomp, energy spent on communication activities eijcomm, and energy spent on miscellaneous activities eijmisc, and wherein the estimated energy spent on the energy consuming activities is based on an energy consumption rate associated thereof and time taken for performing the corresponding energy consuming activities.
8. The processor implemented method of claim 1, wherein the structured semantic knowledge model is an ontology created in Web Ontology Language (OWL) with a semantic knowledge repository based on Resource Description Framework (RDF), wherein the semantic knowledge repository has a generic modular structure comprising (i) components and capabilities associated with each of the k robots represented as a robot ontology, (ii) description of objects comprised in an environment under consideration represented as an object ontology and (iii) an environment model corresponding to the environment under consideration represented as an environment ontology, wherein an instance of each of the ontologies is populated corresponding to the environment under consideration.
9. The processor implemented method of claim 1, wherein the step of dynamically computing utility uij comprises analyzing semantics of the set of parameters, wherein parameters thereof are heterogeneous.
10. A system (100) comprising: one or more data storage devices (102) operatively coupled to one or more hardware processors (104) and configured to store instructions configured for execution by the one or more hardware processors to: obtain a set of parameters for each robot-task pair to perform a task, given there are n tasks to be performed by k robots, wherein the set of parameters are characterized by interdependencies therebetween, with a set of sub-parameters and with the n tasks, and wherein a one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks is defined in real time in a structured semantic knowledge model; and dynamically compute utility uij for a robot i to perform a task j based on the set of parameters including travel time tijmotion for the robot i and actuation time tijact for the task j by the robot i, wherein the travel time tijmotion is further based on free motion time tijfree and turning time tijturn, wherein the free motion time tijfree depends on travel distance dijfree and speed of the robot vi and the turning time tijturn depends on average turning time titurn and number of turns nijturn on the robot's path.
11. The system of claim 10, wherein the one or more processors are further configured to dynamically compute the utility uij based on restrictions or limitations that exist or need to be satisfied based on the structured semantic knowledge model.
12. The system of claim 10, wherein the one or more processors are further configured to: identify capability of each robot from the k robots to perform the task j based on at least one of the structured semantic knowledge model and the dynamically computed utility; store values associated with the utility uij for each of the k robots along with the identified capability associated thereof in a matrix as the robot-task pair; input the matrix to a task allocation method; and update the one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks based on an output of the task allocation method.
13. The system of claim 10, wherein the turning time tijturn represents ascending or descending time to reach a desired flight level if the robot is an unmanned aerial vehicle (UAV).
14. The system of claim 10, wherein the one or more hardware processors are further configured to compute the utility uij for a robot i further based on a recharge time tijrec for the robot i.
15. The system of claim 14, wherein the recharge time tijrec is an equivalent time to recharge battery of the robot that is spent to perform the task j and is based on an estimated amount of energy eij spent by the robot to perform sub-tasks that in combination completes the task j, total time required to recharge the battery fully from a completely drained out state ticap and total battery capacity of the robot eicap.
16. The system of claim 15, wherein the estimated amount of energy eij is based on at least some energy consuming activities including energy spent for movement activities eijmotion, energy spent on sensing activities eijsense, energy spent for actuation activities eijact, energy spent on load carrying activities eijload, energy spent on computation activities eijcomp, energy spent on communication activities eijcomm, and energy spent on miscellaneous activities eijmusic, and wherein the energy spent on the energy consuming activities is based on an energy consumption rate associated thereof and time taken for performing the corresponding energy consuming activities.
17. The system of claim 10, wherein the structured semantic knowledge model is an ontology created in Web Ontology Language (OWL) with a semantic knowledge repository based on Resource Description Framework (RDF), wherein the semantic knowledge repository has a generic modular structure comprising (i) components and capabilities associated with each of the k robots represented as a robot ontology, (ii) description of objects comprised in an environment under consideration represented as an object ontology and (iii) an environment model corresponding to the environment under consideration represented as an environment ontology, wherein an instance of each of the ontologies are populated corresponding to the environment under consideration.
18. The system of claim 10, wherein the one or more hardware processors are further configured to compute the utility uij by analyzing semantics of the set of parameters, wherein parameters thereof are heterogeneous.
19. A computer program product comprising a non-transitory computer readable medium having a computer readable program embodied therein, wherein the computer readable program, when executed on a computing device, causes the computing device to: obtain a set of parameters for each robot-task pair to perform a task, given there are n tasks to be performed by k robots, wherein the set of parameters are characterized by interdependencies therebetween, with a set of sub-parameters and with the n tasks, and wherein a one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks is defined in real time in a structured semantic knowledge model; and dynamically compute utility uij for a robot i to perform a task j based on the set of parameters including travel time tijmotion for the robot i and actuation time tijact for the task j by the robot i, wherein the travel time tijmotion is further based on free motion time tijfree and turning time tijturn, wherein the free motion time tijfree depends on travel distance dijfree and speed of the robot vi and the turning time tijturn depends on average turning time tijturn and number of turns nijturn on the robot's path.
20. The computer program product of claim 19, wherein the computer readable program further causes the computing device to perform one or more of: identifying capability of each robot from the k robots to perform the task j based on at least one of the structured semantic knowledge model and the dynamically computed utility; storing values associated with the utility uij for each of the k robots along with the identified capability associated thereof in a matrix as the robot-task pair; inputting the matrix to a task allocation method; and updating the one-to-many mapping between the set of parameters, the set of sub-parameters and the n tasks based on an output of the task allocation method.
</claims>
</document>
