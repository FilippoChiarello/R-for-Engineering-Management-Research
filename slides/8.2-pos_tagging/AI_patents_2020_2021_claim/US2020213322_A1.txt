<document>

<filing_date>
2019-10-17
</filing_date>

<publication_date>
2020-07-02
</publication_date>

<priority_date>
2018-12-28
</priority_date>

<ipc_classes>
G06N20/00,H04L29/06
</ipc_classes>

<assignee>
IMPERVA
</assignee>

<inventors>
ROZNER, JOSEPH
ANAND, KUNAL
RYAN, MARTIN
MEESTER, II, RICHARD
</inventors>

<docdb_family_id>
71121906
</docdb_family_id>

<title>
MONITORING AND PREVENTING OUTBOUND NETWORK CONNECTIONS IN RUNTIME APPLICATIONS
</title>

<abstract>
A runtime application self protection (RASP) plug-in logic monitors for, and prevents, outbound network connections that are initiated by server application logic and that are not intended by the application logic. The RASP plug-in has access to information generally available only to the application logic and identifies specific vulnerabilities within the application logic that can be patched. The vulnerabilities are identified by (i) data identifying the portion(s) of the application logic that is the source of the vulnerability and (ii) data identifying the authenticated user, if any, that is the source of the attack. The RASP plug-in catches and identifies specific attacks on the application logic in real-world, production operation.
</abstract>

<claims>
1. A method for improving security of computer logic that is configured to provide a network service, the method comprising: receiving request data from the computer application logic at an agent wherein the request data represents a request to create a network connection in a session between the computer application logic and a remotely-located resource that is authenticated by the agent; determining that the requested network connection is not one of one or more predetermined authorized network connections associated with the computer application logic; in response to the determining, generating and recording exception report data by the agent, wherein the exception report data includes: request origination data that identifies a component of the computer logic from which the request data is received; and user identification data that identifies the user.
2. The method of claim 1 wherein the predetermined authorized network connections are specified by one or more selected from the group consisting essentially of: remote host identification data, port identification data, and network protocol identification data.
3. The method of claim 1 wherein the agent is within the application logic as a plugin capable of intercepting application telemetry and sensitive outbound data types, wherein the application telemetry and sensitive outbound data types are used in the determination.
4. The method of claim 1 wherein the request origination data identifies the component of the computer logic from which the request data is received by specifying one or more selected from the group consisting essentially of: a source code data file, a line number identifying the particular line of the source code data file from which the request data originated, and one or more source code data files and associated data lines whose execution caused the component to send the request data.
5. The method of claim 1 wherein the user identification data identifies the user by specifying one or more selected from the group consisting essentially of: a user name associated with the user within the computer logic, a role of the user, and data identifying the session.
6. The method of claim 1 wherein the remotely-located resource includes any of applications, APIs, rest services, micro services, databases and data stores.
7. The method of claim 1 wherein the one or more network connections are predetermined to be authorized or not by customer definition or IP reputation assessment.
8. The method of claim 1 wherein the IP reputation assessment is performed by machine learning algorithms, publically available information, specific flags, or a combination thereof.
9. The method of claim 1 further comprising: in response to the determining: denying the request by declining to create the network connection; and sending exception data to the computer logic to report the denial of the request.
10. A system for improving security of computer logic that is configured to provide a network service, the system comprising: a network monitor for receiving request data from the computer application logic at an agent wherein the request data represents a request to create a network connection in a session between the computer application logic and a remotely-located resource that is authenticated by the agent; an authorization determiner for determining that the requested network connection is not one of one or more predetermined authorized network connections associated with the computer application logic; a report generator that, in response to the determining, generates and records exception report data by the agent, wherein the exception report data includes: request origination data that identifies a component of the computer logic from which the request data is received; and user identification data that identifies the user.
11. The system of claim 10 wherein the predetermined authorized network connections are specified by one or more selected from the group consisting essentially of: remote host identification data, port identification data, and network protocol identification data.
12. The system of claim 10 wherein the agent is within the application logic as a plugin capable of intercepting application telemetry and sensitive outbound data types, wherein the application telemetry and sensitive outbound data types are used in the determination.
13. The system of claim 10 wherein the request origination data identifies the component of the computer logic from which the request data is received by specifying one or more selected from the group consisting essentially of: a source code data file, a line number identifying the particular line of the source code data file from which the request data originated, and one or more source code data files and associated data lines whose execution caused the component to send the request data.
14. The system of claim 10 wherein the user identification data identifies the user by specifying one or more selected from the group consisting essentially of: a user name associated with the user within the computer logic, a role of the user, and data identifying the session.
15. The system of claim 10 wherein the remotely-located resource includes any of applications, APIs, rest services, micro services, databases and data stores.
16. The system of claim 10 wherein the one or more network connections are predetermined to be authorized or not by customer definition or IP reputation assessment.
17. The system of claim 10 wherein the IP reputation assessment is performed by machine learning algorithms, publically available information, specific flags, or a combination thereof.
18. The method of claim 10 further comprising a connection denier which, in response to the determining: denies the request by declining to create the network connection; and sends exception data to the computer logic to report the denial of the request.
</claims>
</document>
