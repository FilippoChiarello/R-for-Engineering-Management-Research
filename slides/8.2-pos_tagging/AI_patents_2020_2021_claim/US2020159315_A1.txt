<document>

<filing_date>
2018-11-20
</filing_date>

<publication_date>
2020-05-21
</publication_date>

<priority_date>
2018-11-20
</priority_date>

<ipc_classes>
G06F11/34,G06F3/01,G06F9/451
</ipc_classes>

<assignee>
EXPRESS SCRIPTS STRATEGIC DEVELOPMENT
</assignee>

<inventors>
MYERS, CHRISTOPHER M.
</inventors>

<docdb_family_id>
70727575
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR ENHANCING A USER INTERFACE USING EYE TRACKING DATA
</title>

<abstract>
A computer system for improving a user interface (UI) is disclosed. The system includes a reinforcement module that obtains (i) a shortest path to a goal in the UI and (ii) user interaction experiments; a distance module that determines a reinforcement distance for each page of the UI based on the user interaction experiments; and a step analysis module that determines a count of times that user interaction experiments indicate a deviation from each step of the shortest path. The determination is based on the determined reinforcement distance for the page of the UI associated with the step. The reinforcement module is configured to, in response to determining that a step requires reinforcement, generate a reinforcement for the step. Generating the reinforcement includes at least one of generating a prompt for an action associated with the step and altering a UI element associated with the step.
</abstract>

<claims>
1. A computer system for improving a user interface (UI), the computer system comprising: a reinforcement module configured to obtain (i) path information indicating a shortest path to a goal in the UI and (ii) a set of user interaction experiments associated with seeking the goal, wherein: each experiment in the set of user interaction experiments includes user tracking data, the path information includes a plurality of steps, and each step of the plurality of steps is associated with a page of the UI; a distance module configured to, for each page of the UI, determine a reinforcement distance for the page based on the set of user interaction experiments; and a step analysis module configured to, for each step of the plurality of steps, determine a count of times that the user tracking data of the set of user interaction experiments indicates a deviation from the step, wherein the determination is based on the determined reinforcement distance for the page of the UI associated with the step, wherein the reinforcement module is configured to, for each step of the plurality of steps: determine whether the step requires reinforcement based on the count, and in response to determining that the step requires reinforcement, generate a reinforcement for the step, wherein generating the reinforcement includes at least one of generating a prompt for an action associated with the step and altering a UI element associated with the step.
2. The computer system of claim 1 wherein determining a reinforcement distance for a page includes determining at least one distance between user tracking data of the set of user interaction experiments and the shortest path.
3. The computer system of claim 1 wherein determining a reinforcement distance for a page includes determining (i) a median successful distance for the page based on the user tracking data of a first subset of user interaction experiments that successfully reached the goal and (ii) a median failure distance for the page based on the user tracking data of a second subset of user interaction experiments.
4. The computer system of claim 3 wherein: the distance module is configured to, for each page of the UI, generate at least one random distance that is less than the median successful distance for the page and greater than the median failure distance for the page; the computer system further comprises a prediction module configured to, for each sample in user tracking data of an experiment in the set of user interaction experiments: predict an outcome of the experiment based on (i) a generated random distance for the page associated with the sample, (ii) coordinates of the sample, and (iii) coordinates of a point along the shortest path, and compare the predicted outcome to a stored outcome of the experiment; and the prediction module is configured to output a result of the comparisons.
5. The computer system of claim 4 wherein: predicting an outcome of the experiment includes: calculating a distance between the coordinates of the sample and the coordinates of the point along the shortest path, and determining the predicted outcome based on a comparison of the determined distance and the random distance for the page associated with the sample; comparing the predicted outcome to the stored outcome includes, in response to the predicted outcome matching the stored outcome, incrementing a successful prediction count; and outputting the result of the comparisons includes outputting the successful prediction count.
6. The computer system of claim 5 wherein: the distance module is configured to, for each randomly generated distance, generate a fitness value based at least on the successful prediction count outputted by the prediction module; and the computer system further comprises an analysis module configured to perform a cluster analysis of the generated fitness values.
7. The computer system of claim 6 wherein the distance module is configured to, for each page of the UI, in response to the cluster analysis of the generated fitness values identifying a single cluster, set the randomly generated distance associated with the page with the highest fitness value as the reinforcement distance for the page.
8. A method for improving a user interface (UI), the method comprising: obtaining (i) path information indicating a shortest path to a goal in the UI and (ii) a set of user interaction experiments associated with seeking the goal, wherein: each experiment in the set of user interaction experiments includes user tracking data, the path information includes a plurality of steps, and each step of the plurality of steps is associated with a page of the UI; for each page of the UI, determining a reinforcement distance for the page based on the set of user interaction experiments; and for each step of the plurality of steps: determining a count of times that the user tracking data of the set of user interaction experiments indicates a deviation from the step, wherein the determination is based on the determined reinforcement distance for the page of the UI associated with the step, determining whether the step requires reinforcement based on the count, and in response to determining that the step requires reinforcement, generating a reinforcement for the step, wherein generating the reinforcement includes at least one of generating a prompt for an action associated with the step and altering a UI element associated with the step.
9. The method of claim 8 wherein determining the reinforcement distance for a page includes determining at least one distance between user tracking data of the set of user interaction experiments and the shortest path.
10. The method of claim 8 wherein determining the reinforcement distance for a page includes determining (i) a median successful distance for the page based on the user tracking data of a first subset of user interaction experiments that successfully reached the goal and (ii) a median failure distance for the page based on the user tracking data of a second subset of user interaction experiments.
11. The method of claim 10 wherein determining the reinforcement distance for a page includes: generating at least one random distance that is less than the median successful distance for the page and greater than the median failure distance for the page; and for each sample in user tracking data of an experiment in the set of user interaction experiments: predicting an outcome of the experiment based on (i) a generated random distance for the page associated with the sample, (ii) coordinates of the sample, and (iii) coordinates of a point along the shortest path, and comparing the predicted outcome to a stored outcome of the experiment.
12. The method of claim 11 wherein: predicting the outcome of the experiment includes: calculating a distance between the coordinates of the sample and the coordinates of the point along the shortest path, and determining the predicted outcome based on a comparison of the determined distance and the random distance for the page associated with the sample; and comparing the predicted outcome to the stored outcome includes, in response to the predicted outcome matching the stored outcome, incrementing a successful prediction count.
13. The method of claim 12 wherein determining the reinforcement distance for a page includes: for each randomly generated distance, generating a fitness value based on at least the successful prediction count associated with randomly generated distance; and performing a cluster analysis of the generated fitness values.
14. The method of claim 13 wherein determining the reinforcement distance for a page includes, in response to the cluster analysis of the generated fitness values identifying a single cluster, setting the randomly generated distance associated with the page with the highest fitness value as the reinforcement distance for the page.
15. A non-transitory computer-readable medium storing processor-executable instructions, the instructions comprising: obtaining (i) path information indicating a shortest path to a goal in a user interface (UI) and (ii) a set of user interaction experiments associated with seeking the goal, wherein: each experiment in the set of user interaction experiments includes user tracking data, the path information includes a plurality of steps, and each step of the plurality of steps is associated with a page of the UI; for each page of the UI, determining a reinforcement distance for the page based on the set of user interaction experiments; and for each step of the plurality of steps: determining a count of times that the user tracking data of the set of user interaction experiments indicates a deviation from the step, wherein the determination is based on the determined reinforcement distance for the page of the UI associated with the step, determining whether the step requires reinforcement based on the count, and in response to determining that the step requires reinforcement, generating a reinforcement for the step, wherein generating the reinforcement includes at least one of generating a prompt for an action associated with the step and altering a UI element associated with the step.
16. The non-transitory computer-readable medium of claim 15 wherein determining the reinforcement distance for a page includes determining (i) a median successful distance for the page based on the user tracking data of a first subset of user interaction experiments that successfully reached the goal and (ii) a median failure distance for the page based on the user tracking data of a second subset of user interaction experiments.
17. The non-transitory computer-readable medium of claim 16 wherein determining the reinforcement distance for a page includes: generating at least one random distance that is less than the median successful distance for the page and greater than the median failure distance for the page; and for each sample in user tracking data of an experiment in the set of user interaction experiments: predicting an outcome of the experiment based on (i) a generated random distance for the page associated with the sample, (ii) coordinates of the sample, and (iii) coordinates of a point along the shortest path, and comparing the predicted outcome to a stored outcome of the experiment.
18. The non-transitory computer-readable medium of claim 17 wherein: predicting the outcome of the experiment includes: calculating a distance between the coordinates of the sample and the coordinates of the point along the shortest path, and determining the predicted outcome based on a comparison of the determined distance and the random distance for the page associated with the sample; and comparing the predicted outcome to the stored outcome includes, in response to the predicted outcome matching the stored outcome, incrementing a successful prediction count.
19. The non-transitory computer-readable medium of claim 18 wherein determining the reinforcement distance for a page includes: for each randomly generated distance, generating a fitness value based on at least the successful prediction count associated with the randomly generated distance; and performing a cluster analysis of the generated fitness values.
20. The non-transitory computer-readable medium of claim 19 wherein determining the reinforcement distance for a page includes, in response to the cluster analysis of the generated fitness values identifying a single cluster, setting the randomly generated distance associated with the page with the highest fitness value as the reinforcement distance for the page.
</claims>
</document>
