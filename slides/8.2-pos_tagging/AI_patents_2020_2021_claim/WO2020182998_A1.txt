<document>

<filing_date>
2020-03-13
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-14
</priority_date>

<ipc_classes>
G06F30/392
</ipc_classes>

<assignee>
XENERGIC
</assignee>

<inventors>
MOHAMMADI, BABAK
PRABHU, Hemanth
</inventors>

<docdb_family_id>
65812194
</docdb_family_id>

<title>
METHOD FOR IMPLEMENTING AN INTEGRATED CIRCUIT COMPRISING A RANDOM-ACCESS MEMORY-IN-LOGIC
</title>

<abstract>
The present disclosure relates to a computer-implemented method for implementing an integrated circuit comprising at least one random-access memory, the method comprising the steps of: defining a plurality of memory portions of the random-access memory and obtaining sizes of the memory portions; for each memory portion, generating a memory cell array block, the memory cell array blocks corresponding to the sizes of the memory portions, wherein instances of the memory cell array blocks are inferred into a description of the integrated circuit in a hardware description language; for each memory cell array block, generating timing models and physical models; synthesizing the description of the integrated circuit in the hardware description language, including peripheral logic for the memory cell array blocks, to a schematic representation of circuit elements; placing the circuit elements, including the memory cell array blocks and the peripheral logic, on the integrated circuit and routing wires between the circuit elements taking into account the timing models and physical models of the memory cell array blocks. The disclosure further relates to an integrated circuit, comprising: a plurality of memory portions of a random-access memory, wherein each memory portion comprises a memory cell array block without, or partly without, peripheral logic; peripheral logic for each of the memory cell array block implemented as standard cells, wherein the memory cell array blocks and the peripheral logic are distributed over the circuit.
</abstract>

<claims>
1. A computer-implemented method for implementing or designing an integrated circuit comprising at least one random-access memory, the method comprising the steps of:
o defining a plurality of memory portions of the random-access memory and obtaining sizes of the memory portions;
o for each memory portion, generating a memory cell array block, the memory cell array blocks corresponding to the sizes of the memory portions, wherein instances of the memory cell array blocks are inferred into a description of the integrated circuit in a hardware description language, wherein the memory cell array blocks are generated without peripheral logic; o for each memory cell array block, generating timing models and physical models;
o synthesizing the description of the integrated circuit in the hardware
description language, including peripheral logic for the memory cell array blocks, to a schematic representation of circuit elements; and
o placing the circuit elements, including the memory cell array blocks and the peripheral logic, on the integrated circuit and routing wires between the circuit elements taking into account the timing models and physical models of the memory cell array blocks,
wherein all memory cell array blocks are synthesized and placed as separate blocks.
2. The computer-implemented method for implementing an integrated circuit according to claim 1 , wherein each memory cell array block is enclosed by end cells at all edges of the memory cell array block.
3. The computer-implemented method for implementing an integrated circuit according to claim 2, wherein the end cells are arranged in a lowest layer or two lowest layers of the integrated circuit.
4. The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein the memory cell array blocks comprise tightly packed bit cells compatible with any standard cells.
5. The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein the peripheral logic of the memory cell array blocks is generated or inferred in the description of the integrated circuit in said hardware description language.
6. The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein a first part of the peripheral logic is specific for each memory cell array block and a second part is common for a plurality or all of the memory cell array blocks.
7. The computer-implemented method for implementing an integrated circuit according to claim 6, wherein a global bit line is connected to a plurality or all of the memory cell array blocks. 8. The computer-implemented method for implementing an integrated circuit according to claim 7, comprising the step of constraining the global bit line with respect to a bit line length and/or a bit line width.
9. The computer-implemented method for implementing an integrated circuit according to any of claims 7-8, comprising the step of routing the global bit line in a predetermined layer, such as a metal layer.
10. The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein the step of placing the circuit elements further comprises the step of removing core rails under the memory cell array blocks and adding power routing around the memory cell array blocks, preferably wherein the steps of removing the core rails and adding power routing are performed automatically. 1 1 . The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein at least a part of the peripheral logic is implemented as standard cells from standard cell libraries.
12. The computer-implemented method for implementing an integrated circuit according to any of the preceding claims, wherein a first part of the peripheral logic is implemented as standard cells and a second part of the peripheral logic is implemented as custom cell(s).
13. The computer-implemented method for implementing an integrated circuit
according to any of the preceding claims, wherein the random-access memory is divided into at least 3 memory portions, preferably at least 4 memory portions, more preferably at least 6 memory portions, even more preferably at least 10 memory portions.
14. The computer-implemented method for implementing an integrated circuit
according to any of the preceding claims, wherein the memory portions of the random-access memory are distributed over the integrated circuit or over an area of the integrated circuit to optimize routing length and/or routing
congestion and/or timing.
15. The computer-implemented method for implementing an integrated circuit
according to any of the preceding claims, comprising the step of optimizing placement and routing of the peripheral logic in relation to the memory portions.
16. The computer-implemented method for implementing an integrated circuit
according to any of the preceding claims, wherein the memory portions comprise only the memory cells of the memory.
17. The computer-implemented method for implementing an integrated circuit
according to any of the preceding claims, wherein the memory portions of the random-access memory are automatically determined based on the description of the integrated circuit in a hardware description language.
18. Use of the computer-implemented method for implementing an integrated circuit according to any of the preceding claims in an electronic design automation tool for designing an integrated circuit.
19. An integrated circuit, comprising:
- a plurality of memory portions of a random-access memory, wherein each
memory portion comprises a memory cell array block without peripheral logic; - peripheral logic for each of the memory cell array block implemented as standard cells,
wherein the memory cell array blocks and the peripheral logic are distributed over the circuit.
20. The integrated circuit according to claim 19, wherein the memory cell array blocks are optimized in area and wherein placement and routing of the peripheral logic and the memory cell array blocks are optimized for any of routing length, routing congestion, timing, area or a combination.
21. The integrated circuit according to any of claims 19-20, implemented using the method according to any of claims 1 -17.
</claims>
</document>
