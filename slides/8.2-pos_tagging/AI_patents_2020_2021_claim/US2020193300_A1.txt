<document>

<filing_date>
2018-12-18
</filing_date>

<publication_date>
2020-06-18
</publication_date>

<priority_date>
2018-12-18
</priority_date>

<ipc_classes>
G06N3/06,G06N3/10,G11C13/00
</ipc_classes>

<assignee>
HPE (HEWLETT PACKARD ENTERPRISE)
</assignee>

<inventors>
KUMAR, SUHAS
STRACHAN, JOHN PAUL
VAN VAERENBERGH, THOMAS
</inventors>

<docdb_family_id>
71072194
</docdb_family_id>

<title>
SYSTEMS FOR INTRODUCING MEMRISTOR RANDOM TELEGRAPH NOISE IN HOPFIELD NEURAL NETWORKS
</title>

<abstract>
Systems are provided for implementing a hardware accelerator. The hardware accelerator emulate a stochastic neural network, and includes a first memristor crossbar array, and a second memristor crossbar array. The first memristor crossbar array can be programmed to calculate node values of the neural network. The nodes values can be calculated in accordance with rules to reduce an energy function associated with the neural network. The second memristor crossbar array is coupled to the first memristor crossbar array and programmed to introduce noise signals into the neural network. The noise signals can be introduced such that the energy function associated with the neural network converges towards a global minimum and modifies the calculated node values.
</abstract>

<claims>
1. A hardware accelerator, comprising: a first memristor crossbar array programmed to calculate node values of a neural network, wherein the nodes values are calculated in accordance with rules to reduce an energy function associated with the neural network; and a second memristor crossbar array coupled to the first memristor crossbar array and programmed to introduce noise signals into the neural network, wherein the noise signals are introduced such that the energy function associated with the neural network converges towards a global minimum and modifies the calculated node values.
2. The hardware accelerator of claim 1, wherein the first memristor crossbar array comprises: a plurality of weight row lines; a plurality of weight column lines; and a plurality of memory cells, wherein each of the plurality of memory cells are coupled across an intersection of one of the plurality of weight row lines and one of the plurality of weight column lines and programmed according to a weight matrix to output a calculated node value of the neural network across each of the plurality of weight column lines.
3. The hardware accelerator of claim 2, wherein the second crossbar array comprises: a noise row line; a plurality of noise column lines, wherein a number of the plurality of noise column lines is equal to a number of the plurality of weighted column lines for the first crossbar array such that the plurality of noise column lines and the plurality of weighted column lines for the first crossbar array are congruently aligned; and a plurality of noise memory cells, wherein each of the plurality of noise memory cells are coupled across an intersection of the noise row line and one of the plurality of noise column lines.
4. The hardware accelerator of claim 3, wherein each of the plurality of noise memory cells are tunable to output a noise signal having a fluctuating current across the noise column line.
5. The hardware accelerator of claim 4, wherein the noise row line receives a controlled input voltage that tunes a conductance value for each of the plurality of noise memory cells to output the noise signal.
6. The hardware accelerator of claim 5, wherein the noise signals are generated in accordance with random telegraph noise such that the calculated node values output by the first memristor crossbar array are modified.
7. The hardware accelerator of claim 5, wherein the second memristor crossbar array outputs the noise signals in parallel with the output of the calculated node values from the first memristor crossbar array.
8. The hardware accelerator of claim 3, wherein each of the noise memory cells comprise a memristor.
9. The hardware accelerator of claim 1, wherein the modified calculated node values correspond to a solution of a computational problem mapped to the neural network.
10. The hardware accelerator of claim 9, wherein the neural network is emulated by the hardware accelerator.
11. The hardware accelerator of claim 11, wherein the neural network comprises a Hopfield Neural Network (HNN).
12. A hardware accelerator, comprising: a first memristor crossbar array programmed to calculate node values of a neural network, wherein the nodes values are calculated in accordance with rules to reduce an energy function associated with the neural network, and wherein the first memristor crossbar array comprises: a plurality of weight row lines; a plurality of weight column lines; and a plurality of memory cells, wherein each of the plurality of memory cells are coupled across an intersection of one the plurality of weight row lines and one of the plurality of weight column lines and programmed according to a weight matrix to output a calculated node value of the neural network across each of the plurality of weight column lines; and a second memristor crossbar array coupled to the first memristor crossbar array and programmed to introduce noise signals into the neural network, wherein the noise signals are introduced such that the energy function associated with the neural network converges towards a global minimum and modifies the calculated node values, and wherein the second memristor crossbar array comprises: a plurality of noise row lines, wherein a number of the plurality of noise row lines is equal to a number of the plurality of weighted row lines for the first memristor crossbar array such that the plurality of noise row lines and the plurality of weighted row lines for the first memristor crossbar array are congruently aligned; a noise column line; and a plurality of noise memory cells, wherein each of the plurality of noise memory cells are coupled across an intersection of the noise row line and one of the plurality of noise column lines.
13. The hardware accelerator of claim 12, wherein the plurality of noise memory cells comprises memristors and the neural network comprises a Hopfield Neural Network (HNN).
14. The hardware accelerator of claim 13, wherein a conductance of each of the memristors is tunable to output a noise signal having a fluctuating current across the noise row lines.
15. The hardware accelerator of claim 14, wherein the noise signals are generated in accordance with random telegraph noise (RTN) such that the calculated node values output by the first memristor crossbar array are modified.
16. The hardware accelerator of claim 15, wherein the first memristor crossbar array outputs currents representing a dot-product computation based on the weight matrix to calculate the node value of the neural network.
17. The hardware accelerator of claim 16, wherein the modified node values are updated in accordance with an update rule to generate new inputs values into the neural network for a calculation of new node values.
18. The hardware accelerator of claim 17, comprising a controller is programmed to: determine whether the new node values are final node values of the neural network; and upon determining that the new node values are not final node values, mapping the new input values to input voltages to be received as input by the plurality of weighted row lines of the first memristor crossbar array.
19. The hardware accelerator of claim 18, where the controller is further programmed to: upon determining that the new node values are the final node values, the new node values correspond to a solution of a computational problem mapped to the neural network.
20. A hardware accelerator comprising: a first memristor crossbar array programmed to calculate node values of a neural network, wherein the nodes values are calculated in accordance with rules to reduce an energy function associated with the neural network, wherein the first memristor crossbar array comprises: a plurality of row lines; a plurality of column lines, wherein the plurality of row lines and the plurality of column lines intersect to form a matrix of memory cells; a plurality of memory cells, wherein each memory cell is coupled to each combination of a row line and a column line in the matrix and each memory cell comprises a 2×2 array of memristors, an input line coupled to each first row of memristors in the 2×2 array of memristors of the plurality of memory cells in the matrix; an inverter coupled to the input line; and an inverted input line coupled to a second row of memristors in the 2×2 array of memristors of the plurality of memory cells in the matrix; and a second memristor crossbar array coupled to the first memristor crossbar array and programmed to introduce noise signals into the neural network, wherein the noise signals are introduced such that the energy function associated with the neural network converges towards a global minimum and modifies the calculated node values
</claims>
</document>
