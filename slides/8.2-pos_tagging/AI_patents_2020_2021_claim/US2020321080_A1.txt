<document>

<filing_date>
2020-03-30
</filing_date>

<publication_date>
2020-10-08
</publication_date>

<priority_date>
2019-04-05
</priority_date>

<ipc_classes>
G06F30/20,G16C20/50,H01M10/056
</ipc_classes>

<assignee>
TATA CONSULTANCY SERVICES
</assignee>

<inventors>
RAI, BEENA
MYNAM, MAHESH
RAVIKUMAR, Bharath
KUMAR, Surbhikumari Ashutosh
REPAKA, Sravani
</inventors>

<docdb_family_id>
70058167
</docdb_family_id>

<title>
METHOD AND SYSTEM FOR IN-SILICO OPTIMIZATION AND DESIGN OF ELECTROLYTES
</title>

<abstract>
Owing to complexity of the algorithms and tools very few attempts have been seen for usage of simulation methods in the development of new electrolytes. Moreover, the existing simulation methods focus on only one aspect of the electrolyte at a time and this limits accuracy of simulation results, and affects performance of electrolyte in real world, where multiple factors come into play simultaneously. The method disclosed provides method and system for in-silico optimization and design of electrolytes, enabling prediction of various properties of an electrolytic mixture of salts, solvents and various additives and its suitability for a given battery technology. The in-silico method shapes itself into an overall battery electrolyte property or component composition analyzer based on the user input.
</abstract>

<claims>
1. A method for in-silico optimization and design of electrolytes, the method comprising: displaying, a User Interface (UI) implemented by one or more hardware processors, to receive at least one user input, wherein the UI provides: a user requirement module for specifying a first user input comprising 1) a battery from a list of battery types and 2) a user requirement from a list of requirements indicating a user objective related to an electrolyte to be designed for use in the battery, wherein performance of the battery is to be optimized for the user requirement specified for the electrolyte; a component selection module for specifying a second user input comprising components of the electrolyte to be used for the battery, wherein the components comprise 1) one or more salts, 2) one or more solvents, and 3) additives; an operating parameters module to select a third user input comprising one or more operating parameters; and a constraints module for specifying a fourth user input comprising constraints on values of one or more properties of the electrolyte; selecting, via an initiation module implemented by the one or more processors, a simulation module from a plurality of simulation modules providing molecular modeling simulations, wherein selection of the simulation module is based on the user requirement specified in the user requirement module; performing, using the selected simulation module, implemented by the one or more processors, simulation to create simulation files, in accordance with the battery, the one or more salts, the one or more solvents and the additives; executing, using a solver module implemented by the one or more hardware processors, the simulation files in accordance with the user requirement, the one or more operating parameters and the constraints on values of the one or more properties of the electrolyte, wherein the execution of simulation files provides a plurality of simulation output data files capturing variation of one or more properties of the electrolyte against the user requirement, and wherein the simulation files are re-executed, by an optimization module implemented by the one or more hardware processors, until the one or more properties of the electrolyte are satisfied when the user requirement specifies requirement of an optimal battery performance against the specified at least one user input; and displaying on the UI, by the one or more hardware processors, a set of simulation output data files from the plurality of simulation output data files that provide the optimal battery performance, wherein the simulation output datafiles are stored for future reference.
2. The method of claim 1, wherein the one or more operating parameters comprise temperature and pressure at which the battery is expected to operate.
3. The method of claim 1, wherein one or more properties of the electrolyte comprise bulk physical properties and dynamic properties of the electrolyte.
4. The method of claim 1, wherein generating the plurality of simulation output data files is in accordance with a set of predefined processes followed during the execution of the simulation files.
5. The method of claim 1, wherein sequence for triggering one or more modules among the component selection module, the operating parameters module, the constraints module, the initiation module, the simulation module, the solver module and the optimization module is determined in accordance with the user objective related to the electrolyte in the user requirement module.
6. A system for in-silico optimization and design of electrolytes, the system comprising: a memory storing instructions; one or more Input/Output (I/O) interfaces; and one or more processor(s) coupled to the memory via the one or more I/O interfaces, wherein the one or more processor (s) are configured by the instructions to: display a User Interface (UI), implemented by the one or more processors, to receive at least one user input, wherein the UI provides: a user requirement module for specifying a first user input comprising 1) a battery from a list of battery types and 2) a user requirement from a list of requirements indicating a user objective related to an electrolyte to be designed for use in the battery, wherein performance of the battery is to be optimized for the user requirement specified for the electrolyte; a component selection module for specifying a second user input comprising components of the electrolyte to be used for the battery, wherein the components comprise 1) one or more salts, 2) one or more solvents, and 3) additives; an operating parameters module to select a third user input comprising one or more operating parameters; and a constraints module for specifying a fourth user input comprising constraints on values of one or more properties of the electrolyte; select, via an initiation module implemented by the one or more processors, a simulation module from a plurality of simulation modules providing molecular modeling simulations, wherein selection of the simulation module is based on the user requirement specified in the user requirement module; performing, using the selected simulation module implemented by the one or more processors, simulation to create simulation files, in accordance with the battery, the salts, the one or more solvents and the additives; executing, using a solver module implemented by the one or more hardware processors, the simulation files in accordance with the user requirement, the one or more operating parameters and the constraints on values of the one or more properties of the electrolyte, wherein the execution of simulation files provides a plurality of simulation output data files capturing variation of one or more properties of the electrolyte against the user requirement, and wherein the simulation files are re-executed, by an optimization module implemented by the one or more hardware processors, until the one or more properties of the electrolyte are satisfied when the user requirement specifies requirement of an optimal battery performance against the specified at least one user inputs; and displaying on the UI a set of simulation output data files from the plurality of simulation output data files that provide the optimal battery performance, wherein the simulation output datafiles are stored for future reference.
7. The system of claim 6, wherein the one or more operating parameters comprise temperature and pressure at which the battery is expected to operate.
8. The system of claim 6, wherein one or more properties of the electrolyte comprise bulk physical properties and dynamic properties of the electrolyte.
9. The system of claim 6, wherein generating the plurality of simulation output data files is in accordance with a set of predefined processes followed during the execution of the simulation files.
10. The system of claim 6, wherein sequence for triggering one or more modules among the component selection module, the operating parameters module, the constraints module, the initiation module, the simulation module, the solver module and the optimization module is determined in accordance with the user objective related to the electrolyte in the user requirement module.
11. One or more non-transitory machine readable information storage mediums comprising one or more instructions, which when executed by one or more hardware processors causes a method for: displaying a User Interface (UI) to receive at least one user input, wherein the UI provides: a user requirement module for specifying a first user input comprising 1) a battery from a list of battery types and 2) a user requirement from a list of requirements indicating a user objective related to an electrolyte to be designed for use in the battery, wherein performance of the battery is to be optimized for the user requirement specified for the electrolyte; a component selection module for specifying a second user input comprising components of the electrolyte to be used for the battery, wherein the components comprise 1) one or more salts, 2) one or more solvents, and 3) additives; an operating parameters module to select a third user input comprising one or more operating parameters; and a constraints module for specifying a fourth user input comprising constraints on values of one or more properties of the electrolyte; selecting via an initiation module a simulation module from a plurality of simulation modules providing molecular modeling simulations, wherein selection of the simulation module is based on the user requirement specified in the user requirement module; performing using the selected simulation module simulation to create simulation files, in accordance with the battery, the one or more salts, the one or more solvents and the additives; executing using a solver module the simulation files in accordance with the user requirement, the one or more operating parameters and the constraints on values of the one or more properties of the electrolyte, wherein the execution of simulation files provides a plurality of simulation output data files capturing variation of one or more properties of the electrolyte against the user requirement, and wherein the simulation files are re-executed, by an optimization module implemented by the one or more hardware processors, until the one or more properties of the electrolyte are satisfied when the user requirement specifies requirement of an optimal battery performance against the specified at least one user input; and displaying on the UI a set of simulation output data files from the plurality of simulation output data files that provide the optimal battery performance, wherein the simulation output datafiles are stored for future reference.
12. The one or more non-transitory machine readable information storage mediums as claimed in claim 11, wherein the one or more operating parameters comprise temperature and pressure at which the battery is expected to operate.
13. The one or more non-transitory machine readable information storage mediums as claimed in claim 11, wherein one or more properties of the electrolyte comprise bulk physical properties and dynamic properties of the electrolyte.
14. The one or more non-transitory machine readable information storage mediums as claimed in claim 11, wherein generating the plurality of simulation output data files is in accordance with a set of predefined processes followed during the execution of the simulation files.
15. The one or more non-transitory machine readable information storage mediums as claimed in claim 11, wherein sequence for triggering one or more modules among the component selection module, the operating parameters module, the constraints module, the initiation module, the simulation module, the solver module and the optimization module is determined in accordance with the user objective related to the electrolyte in the user requirement module.
</claims>
</document>
