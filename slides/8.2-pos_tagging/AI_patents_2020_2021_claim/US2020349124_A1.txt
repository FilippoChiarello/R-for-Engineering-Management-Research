<document>

<filing_date>
2018-03-26
</filing_date>

<publication_date>
2020-11-05
</publication_date>

<priority_date>
2018-03-26
</priority_date>

<ipc_classes>
G06F16/13,G06F16/14,G06F16/16,G06F16/182,G06F16/22
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
ZHOU WEI
BHANDARU, MALINI K.
RADHAKRISHNAN POTTY, RAKESH
RAI, NIRAJ
GANGUMALLA, UMA MAHESWARA RAO
SHARMA, VINOD
CHEN, Yi
PARTHASARATHY, Varsha
GONG, Qiyuan
ZHENG, Kai
FAWAD, Nofil
</inventors>

<docdb_family_id>
68062401
</docdb_family_id>

<title>
METHOD OF EFFICIENT BACKUP OF DISTRIBUTED FILE SYSTEM FILES WITH TRANSPARENT DATA ACCESS
</title>

<abstract>
Examples include techniques for backing up a file to long term "cold" storage by using circuitry, and logic for execution by the circuitry, to receive a request to back up the file in a distributed file system to cold storage, to copy the file from at least one data node of the distributed file system to cold storage, to set a location of the file in cold storage in a name node of the distributed file system, and to set a length of the file to zero in the name node.
</abstract>

<claims>
1. An apparatus comprising: circuitry; and logic for execution by the circuitry to: receive a request to back up a file in a distributed file system to cold storage; copy the file from at least one data node of the distributed file system to cold storage; set a location of the file in cold storage in a name node of the distributed file system; and set a length of the file to zero in the name node.
2. The apparatus of claim 1, the logic for execution by the circuitry to cause deletion of the file in the at least one data node when the file length is set to zero.
3. The apparatus of claim 1, wherein the name node to store the location of the file in metadata in a file index table in the name node.
4. The apparatus of claim 3, wherein the metadata comprises one or more extended attributes of the file.
5. The apparatus of claim 1, wherein the data node to store the file in one or more of a hot storage and a warm storage in the data node.
6. The apparatus of claim 5, wherein the hot storage comprises one or more of a random-access memory (RAM) and a solid-state drive (SSD), the warm storage comprises a hard disk drive (HDD), and the cold storage comprises one or more of an optical disk drive and a tape drive.
7. The apparatus of claim 1, wherein the distributed file system comprises one of Apache Hadoop, Ceph, and OpenStack Swift.
8. A method comprising: receiving a request to back up a file in a distributed file system to cold storage; copying the file from at least one data node of the distributed file system to cold storage; setting a location of the file in cold storage in a name node of the distributed file system; and setting a length of the file to zero in the name node.
9. The method of claim 8, comprising causing deletion of the file in the at least one data node when the file length is set to zero.
10. The method of claim 8, comprising causing storing the location of the file in metadata in a file index table in the name node.
11. The method of claim 10, wherein the metadata comprises one or more extended attributes of the file.
12. The method of claim 8, wherein the distributed file system comprises hot storage, warm storage, and cold storage, and wherein the data node stores the file in one or more of a hot storage and a warm storage in the data node.
13. The method of claim 8, wherein the distributed file system comprises one of Apache Hadoop, Ceph, and OpenStack Swift.
14. At least one machine readable medium comprising a plurality of instructions that in response to being executed by a system at a computing platform, cause the system to: receive a request to back up a file in a distributed file system to cold storage; copy the file from at least one data node of the distributed file system to cold storage; set a location of the file in cold storage in a name node of the distributed file system; and set a length of the file to zero in the name node.
15. The at least one machine readable medium of claim 14, comprising instructions to cause deletion of the file in the at least one data node when the file length is set to zero.
16. The at least one machine readable medium of claim 14, comprising instructions to cause storing the location of the file in metadata in a file index table in the name node.
17. The at least one machine readable medium of claim 16, wherein the metadata comprises one or more extended attributes of the file.
18. The at least one machine readable medium of claim 14, wherein the distributed file system comprises hot storage, warm storage, and cold storage, and wherein the data node stores the file in one or more of a hot storage and a warm storage in the data node.
19. The at least one machine readable medium of claim 14, wherein the distributed file system comprises one of Apache Hadoop, Ceph, and OpenStack Swift.
20. An apparatus comprising: circuitry; and logic for execution by the circuitry to: receive a request to retrieve a file in a distributed file system from a requester; get a length of the file from a name node of the distributed file system; get the file from at least one data node of the distributed file system when the file length is not zero, get a location of the file in a cold storage of a cold storage node of the distributed file system from the name node and get the file from the cold storage when the file length is zero; and return the file to the requester.
21. The apparatus of claim 20, wherein the name node to store the location of the file in metadata in a file index table in the name node.
22. The apparatus of claim 21, wherein the metadata comprises one or more extended attributes of the file.
23. The apparatus of claim 21, wherein the at least one data node to store the file in one or more of a hot storage and a warm storage in the at least one data node.
24. The apparatus of claim 23, wherein the hot storage comprises one or more of a random-access memory (RAM) and a solid-state drive (SSD), the warm storage comprises a hard disk drive (HDD), and the cold storage comprises an optical disk drive.
25. The apparatus of claim 20, wherein the distributed file system comprises one of Apache Hadoop, Ceph, and OpenStack Swift.
</claims>
</document>
