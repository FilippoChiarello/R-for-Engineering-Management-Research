<document>

<filing_date>
2019-11-27
</filing_date>

<publication_date>
2020-06-04
</publication_date>

<priority_date>
2018-11-28
</priority_date>

<ipc_classes>
H01L21/64,H01L21/67,H01L21/70
</ipc_classes>

<assignee>
SIFIVE
</assignee>

<inventors>
CAVE, MICHAEL
LEE, YUNSUP
</inventors>

<docdb_family_id>
70852339
</docdb_family_id>

<title>
INTEGRATED CIRCUITS AS A SERVICE
</title>

<abstract>
Systems and methods are disclosed for automated generation of integrated circuit designs and associated data. These allow the design of processors and SoCs by a single, non-expert who understands high-level requirements; allow the en masse exploration of the design-space through the generation processors across the design-space via simulation, or emulation; allow the easy integration of IP cores from multiple third parties into an SoC; allow for delivery of a multi-tenant service for producing processors and SoCs that are customized while also being pre-verified and delivered with a complete set of developer tools, documentation and related outputs. Some embodiments, provide direct delivery, or delivery into a cloud hosting environment, of finished integrated circuits embodying the processors and SoCs.
</abstract>

<claims>
1. A method comprising:
receiving a design parameters file, wherein the design parameters file includes values of design parameters of an integrated circuit design;
automatically generating a register-transfer level file, a software development kit, and a physical design file for a first integrated circuit based on the design parameters file;
automatically invoking tests for the first integrated circuit based on the registertransfer level file, the software development kit, and the physical design file to obtain a first set of test results;
identifying a design criterion based on the design parameters file;
checking whether the design criterion is satisfied by the first set of test results;
responsive to a failure to meet the design criterion, determining a feedback signal based on the design criterion and the first set of test results, and inputting the feedback signal and values of design parameters of design parameters file to a machine learning module to obtain a modified design parameters file;
automatically generating a register-transfer level file, a software development kit, and a physical design file for a second integrated circuit based on the modified design parameters file; and
automatically invoking tests for the second integrated circuit based on the registertransfer level file, the software development kit, and the physical design file to obtain a second set of test results.
2. The method of claim 1, wherein the machine learning module has been trained using training data that includes prior inputs to the machine learning module that included a respective feedback signal based on test results for an integrated circuit design.
3. A system comprising:
a web application server configured to generate a design parameters data structure based on input received, wherein the design parameters data structure includes values of design parameters of an integrated circuit design, configured to display an auto-updating block diagram of a template design reflecting changes to values of the design parameters of the integrated circuit design, and configured to issue a command to build the integrated circuit design; and a controller configured to, responsive to the command to build the integrated circuit design, access the design parameters data structure, invoke a register-transfer level service module with the design parameters data structure to obtain a register-transfer level data structure, invoke a software development kit service module with the register-transfer level data structure to obtain a software development kit, invoke a physical design service module with the register-transfer level data structure to obtain a physical design data structure, invoke a verification service module to obtain a test plan, and invoke tests for the integrated circuit design based on the test plan, the register-transfer level data structure, the software development kit, and the physical design data structure to obtain a set of test results; and a machine learning based design iterator configured to take as input both, values of design parameters of the design parameters data structure, and a feedback signal based on a design criterion of the design parameters data structure and the set of test results, to obtain a modified design parameters data structure, and configured to issue a command to the controller to cause the controller to build a second integrated circuit design based on the modified design parameters data structure.
4. The system of claim 3, wherein the machine learning based design iterator has been trained using training data that includes prior inputs to the machine learning based design iterator that included a respective feedback signal based on test results obtained by the controller.
5. A system comprising:
a secure design store configured to receive a design data structure from a remote device, generate a provenance stamp for the design data structure, encrypt the design data structure, and store the encrypted design data structure with the provenance stamp in a library of the secure design store, wherein the provenance stamp includes metadata indicating circumstances of the reception of the design data structure;
a web application server configured to generate a design parameters data structure based on input received, wherein the design parameters data structure includes values of design parameters of an integrated circuit design that identify the design data structure, configured to display an auto-updating block diagram of a template design reflecting changes to values of the design parameters of the integrated circuit design, and configured to issue a command to build the integrated circuit design; and
a controller configured to, responsive to the command to build the integrated circuit design, access the design parameters data structure, invoke a register-transfer level service module with the design parameters data structure to obtain a register-transfer level data structure that is based in part on the design data structure, invoke a software development kit service module with the register-transfer level data structure to obtain a software
development kit, invoke a physical design service module with the register-transfer level data structure to obtain a physical design data structure, invoke a verification service module to obtain a test plan, and invoke tests for the integrated circuit design based on the test plan, the register-transfer level data structure, the software development kit, and the physical design data structure to obtain a set of test results.
6. A method comprising:
receiving a design parameters file, wherein the design parameters file includes values of design parameters of an integrated system design;
automatically generating a netlist, system model, simulation reports, a software development kit, and a physical design file for a first integrated system based on the design parameters file;
automatically invoking tests for the first integrated system based on the netlist, system model, the software development kit, and the physical design file to obtain a first set of test results;
identifying a design criterion based on the design parameters file;
checking whether the design criterion is satisfied by the first set of test results;
responsive to a failure to meet the design criterion, determining a feedback signal based on the design criterion and the first set of test results, and inputting the feedback signal and values of design parameters of design parameters file to a machine learning module to obtain a modified design parameters file;
automatically generating a netlist, system model, simulation reports, a software development kit, and a physical design file for a second integrated system based on the modified design parameters file; and
automatically invoking tests for the second integrated system based on the netlist, system model, simulation reports, the software development kit, and the physical design file to obtain a second set of test results.
7. The method of claim 6, wherein the machine learning module has been trained using training data that includes prior inputs to the machine learning module that included a respective feedback signal based on test results for an integrated system design.
8. A system comprising:
a web application server configured to generate a design parameters data structure based on input received, wherein the design parameters data structure includes values of design parameters of an integrated system design, configured to display an auto-updating block diagram of a template design reflecting changes to values of the design parameters of the integrated system design, and configured to issue a command to build the integrated system design; and
a controller configured to, responsive to the command to build the integrated system design, access the design parameters data structure, invoke a netlist service module with the design parameters data structure to obtain a netlist data structure, a system model, simulation reports, invoke a software development kit service module with the netlist data structure to obtain a software development kit, invoke a physical design service module with the netlist data structure to obtain a physical design data structure, invoke a verification service module to obtain a test plan, and invoke tests for the integrated system design based on the test plan, the netlist data structure, the software development kit, and the physical design data structure to obtain a set of test results; and
a machine learning based design iterator configured to take as input both, values of design parameters of the design parameters data structure, and a feedback signal based on a design criterion of the design parameters data structure and the set of test results, to obtain a modified design parameters data structure, and configured to issue a command to the controller to cause the controller to build a second integrated system design based on the modified design parameters data structure.
9. The system of claim 8, wherein the machine learning based design iterator has been trained using training data that includes prior inputs to the machine learning based design iterator that included a respective feedback signal based on test results obtained by the controller.
10. A method comprising:
receiving a design parameters file, wherein the design parameters file includes values of design parameters of a multi-chip system design;
automatically generating a netlist, multi-chip system model, simulation reports, a software development kit, and a physical design file for a first multi-chip system based on the design parameters file;
automatically invoking tests for the first multi -chip system based on the netlist, multi chip system model, the software development kit, and the physical design file to obtain a first set of test results;
identifying a design criterion based on the design parameters file;
checking whether the design criterion is satisfied by the first set of test results;
responsive to a failure to meet the design criterion, determining a feedback signal based on the design criterion and the first set of test results, and inputting the feedback signal and values of design parameters of design parameters file to a machine learning module to obtain a modified design parameters file;
automatically generating a netlist, multi-chip system model, simulation reports, a software development kit, and a physical design file for a second multi-chip system based on the modified design parameters file; and
automatically invoking tests for the second multi-chip system based on the netlist, multi-chip system model, simulation reports, the software development kit, and the physical design file to obtain a second set of test results.
11. The method of claim 10, wherein the machine learning module has been trained using training data that includes prior inputs to the machine learning module that included a respective feedback signal based on test results for a multi-chip system design.
12. A system comprising:
a web application server configured to generate a design parameters data structure based on input received, wherein the design parameters data structure includes values of design parameters of a multi-chip system design, configured to display an auto-updating block diagram of a template design reflecting changes to values of the design parameters of the multi -chip system design, and configured to issue a command to build the multi-chip system design; and
a controller configured to, responsive to the command to build the multi -chip system design, access the design parameters data structure, invoke a netlist service module with the design parameters data structure to obtain a netlist data structure, a multi -chip system model, simulation reports, invoke a software development kit service module with the netlist data structure to obtain a software development kit, invoke a physical design service module with the netlist data structure to obtain a physical design data structure, invoke a verification service module to obtain a test plan, and invoke tests for the multi-chip system design based on the test plan, the netlist data structure, the software development kit, and the physical design data structure to obtain a set of test results; and
a machine learning based design iterator configured to take as input both, values of design parameters of the design parameters data structure, and a feedback signal based on a design criterion of the design parameters data structure and the set of test results, to obtain a modified design parameters data structure, and configured to issue a command to the controller to cause the controller to build a second multi-chip system design based on the modified design parameters data structure.
13. The system of claim 12, wherein the machine learning based design iterator has been trained using training data that includes prior inputs to the machine learning based design iterator that included a respective feedback signal based on test results obtained by the controller.
</claims>
</document>
