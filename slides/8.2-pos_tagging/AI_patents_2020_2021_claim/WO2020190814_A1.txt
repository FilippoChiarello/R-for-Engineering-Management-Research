<document>

<filing_date>
2020-03-14
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2019-03-15
</priority_date>

<ipc_classes>
G06F9/30
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
GARG, ASHUTOSH
LUEH, GUEI-YUAN
MAIYURAN, SUBRAMANIAM
GEORGE VARGHESE
PAL, SUPRATIM
MARWAHA, SHUBRA
GURRAM, Chandu
PARRA, Jorge
STARKEY, Darin
</inventors>

<docdb_family_id>
70277485
</docdb_family_id>

<title>
GRAPHICS PROCESSORS AND GRAPHICS PROCESSING UNITS HAVING DOT PRODUCT ACCUMULATE INSTRUCTION FOR HYBRID FLOATING POINT FORMAT
</title>

<abstract>
Graphics processors and graphics processing units having dot product accumulate instructions for a hybrid floating point format are disclosed. In one embodiment, a graphics multiprocessor comprises an instruction unit to dispatch instructions and a processing resource coupled to the instruction unit. The processing resource is configured to receive a dot product accumulate instruction from the instruction unit and to process the dot product accumulate instruction using a bfloat16 number (BF16) format.
</abstract>

<claims>
What is claimed is:
1. A graphics multiprocessor, comprising:
an instruction unit to dispatch instructions; and
a processing resource coupled to the instruction unit, the processing resource is configured to receive a dot product accumulate instruction from the instruction unit and to process the dot product accumulate instruction using a bfloat 16 number (BF16) format.
2. The graphics multiprocessor of claim 1, wherein the dot product accumulate instruction causes first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds a first source operand with output from each of the first and second BF16 multipliers.
3. The graphics multiprocessor of claim 1, wherein the accumulator generates an output for a destination.
4. The graphics multiprocessor of claim 2, wherein the first source operand comprises a single-precision floating point format while the second and third source operands comprise BF16 format.
5. The graphics multiprocessor of claim 2 wherein the first source operand and the
destination are half-precision floating point format, single-precision floating point format, or BF16 formats. 6. The graphics multiprocessor of claim 1 wherein the processing resource comprises a floating point unit (FPU) to execute the dot product accumulate instruction using the BF16 format.
7. The graphics multiprocessor of claim 1, wherein the instruction unit to dispatch
instructions comprising single instruction multiple data (SIMD) instructions. 8. A general-purpose graphics processing unit (GPGPU) core comprising:
a single precision floating-point unit for single precision floating point operations; and a half-precision floating point unit for half-precision floating point operations, the halfprecision floating point unit is configured to execute a dot product accumulate instruction using a bfloat 16 (BF16) format. 9. The GPGPU core of claim 8, wherein the dot product accumulate instruction causes first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds a first source operand with output from each of the first and second BF16 multipliers.
10. The GPGPU core of claim 9, wherein the accumulator generates an output for a
destination.
11. The GPGPU core of claim 9, wherein the first source operand comprises a singleprecision floating point format while the second and third source operands comprise BF16 format.
12. The GPGPU core of claim 9 wherein the first source operand and the destination are halfprecision floating point format, single-precision floating point format, or BF16 formats. 13. The GPGPU core of claim 8 wherein the dot product accumulate instruction causes a first stage of first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds a first source operand with output from each of the first and second BF16 multipliers to generate an output of the first stage.
14. The GPGPU core of claim 13, wherein the dot product accumulate instruction for a
cascaded arrangement with N stages of multipliers and accumulators causes a second stage of first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds the output from the first stage with output from each of the first and second BF16 multipliers of the second stage.
15. A parallel processing unit comprising:
a first processing cluster to perform parallel processing operations; and
a second processing cluster coupled to the first processing cluster, wherein the first processing cluster includes a floating-point unit to perform floating point operations, the floating-point unit is configured to process a dot product accumulate instruction using a bfloat 16 (BF16) format.
16. The parallel processing unit of claim 15, wherein the dot product accumulate instruction causes first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds a first source operand with output from each of the first and second BF16 multipliers.
17. The parallel processing unit of claim 16, wherein the accumulator generates an output for a destination.
18. The parallel processing unit of claim 16, wherein the first source operand comprises a single-precision floating point format while the second and third source operands comprise BF16 format.
19. The parallel processing unit of claim 16, wherein the first source operand and the destination are half-precision floating point format, single-precision floating point format, or BF16 formats.
20. The parallel processing unit of claim 15, wherein the dot product accumulate instruction causes a first stage of first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds a first source operand with output from each of the first and second BF16 multipliers, wherein the dot product accumulate instruction for a cascaded arrangement with N stages of multipliers and accumulators causes a second stage of first and second BF16 multipliers to each multiply second and third source operands while an accumulator adds the output from the first stage with output from each of the first and second BF16 multipliers of the second stage.
21. The parallel processing unit of claim 15, wherein the floating-point unit comprises a cascaded arrangement with N stages of BF16 multipliers and accumulators.
22. The parallel processing unit of claim 21, wherein the N stages comprise:
a first stage of first and second BF16 multipliers to each multiply second and third source operands and an accumulator to add a first source operand with output from each of the first and second BF16 multipliers to generate output of the first stage; and a second stage of first and second BF16 multipliers to each multiply second and third source operands and an accumulator to add the output from the first stage with output from each of the first and second BF16 multipliers of the second stage.
</claims>
</document>
