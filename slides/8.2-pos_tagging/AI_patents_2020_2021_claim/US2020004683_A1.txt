<document>

<filing_date>
2018-06-29
</filing_date>

<publication_date>
2020-01-02
</publication_date>

<priority_date>
2018-06-29
</priority_date>

<ipc_classes>
G06F12/0837,G06F12/084,G06F12/0842,G06F12/0846,G06F12/0864,G06F12/0895,G06F12/1027,G06F12/1036
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
COORAY, NIRANJAN
DAMANI, PARTH
SHAH, PRITAV
KACEVAS, NICHOLAS
</inventors>

<docdb_family_id>
69055253
</docdb_family_id>

<title>
Cache partitioning mechanism
</title>

<abstract>
An apparatus to facilitate cache partitioning is disclosed. The apparatus includes a set associative cache to receive access requests from a plurality of agents and partitioning logic to partition the set associative cache by assigning sub-components of a set address to each of the plurality of agents.
</abstract>

<claims>
1. An apparatus to facilitate cache partitioning, comprising: a set associative cache to receive access requests from a plurality of agents; and partitioning logic to partition the set associative cache by assigning sub-components of a set address to each of the plurality of agents.
2. The apparatus of claim 1, wherein the partitioning logic comprises target conversion logic to assign the sub-components of the set address by separating address bits of a received memory request.
3. The apparatus of claim 2, wherein the partitioning logic separates the address bits of a received memory request into original tag bits, fixed set bits, and variable set bits.
4. The apparatus of claim 3, wherein the target conversion logic calculates updated set bits based on the variable set bits.
5. The apparatus of claim 4, wherein the partitioning logic further comprises a partition assignment table having entries associated with each of the plurality of agents.
6. The apparatus of claim 5, wherein the target conversion logic calculates the updated set bits based on a received client ID associated with an agent and an entry in the partition assignment table associated with the client ID.
7. The apparatus of claim 4, wherein the target conversion logic further calculates updated tag bits.
8. The apparatus of claim 7, wherein the target conversion logic calculates the updated tag bits by adding the variable set bits to the original tag bits.
9. The apparatus of claim 8, wherein the partitioning logic accesses the set associative cache using the updated tag bits and the update set bits.
10. The apparatus of claim 3, wherein the set associative cache is a translation lookaside buffer.
11. A method to facilitate cache partitioning, comprising: receiving request from one a plurality of agents to access a set associative cache; and partitioning the set associative cache by assigning sub-components of a set address to each of the plurality of agents.
12. The method of claim 11, wherein assigning the sub-components of the set address comprises separating address bits of a received memory request.
13. The method of claim 12, wherein the address bits of a received memory request are separated into original tag bits, fixed set bits, and variable set bits.
14. The method of claim 13, further comprising calculating updated set bits.
15. The method of claim 14, wherein calculating the updated set bits comprises: receiving a client ID associated with an agent; accessing an entry in a partition assignment table associated with the client ID; and calculating the updated set bits based on the client ID and the entry.
16. The method of claim 14, further comprising calculating updated tag bits.
17. The method of claim 16, further comprising calculating the updated tag bits by adding the variable set bits to the original tag bits.
18. The method of claim 17, further comprising accessing the set associative cache using the updated tag bits and the update set bits.
19. A system to facilitate cache partitioning, comprising: a memory; a memory management unit (MMU) coupled to the memory including a set associative cache translation lookaside buffer (TLB); and partitioning logic to partition the TLB by assigning sub-components of a set address to each of plurality of agents requesting access to the memory.
20. The system of claim 19, wherein the partitioning logic comprises target conversion logic to assign the sub-components of the set address by separating address bits of a received memory into original tag bits, fixed set bits, and variable set bits.
21. The system of claim 20, wherein the target conversion logic calculates updated set bits based on the variable set bits.
22. The system of claim 21, wherein the partitioning logic further comprises a partition assignment table having entries associated with each of the plurality of agents, and wherein the target conversion logic calculates the updated set bits based on a received client ID associated with an agent and an entry in the partition assignment table associated with the client ID.
23. The system of claim 22, wherein the target conversion logic further calculates updated tag bits by adding the variable set bits to the original tag bits.
24. The system of claim 23, wherein the partitioning logic accesses the TLB using the updated tag bits and the update set bits.
25. The system of claim 23, wherein the partition assignment table is programmable.
</claims>
</document>
