<document>

<filing_date>
2018-11-21
</filing_date>

<publication_date>
2020-05-21
</publication_date>

<priority_date>
2018-11-21
</priority_date>

<ipc_classes>
G06F16/23,G06N20/00,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
A.P, LOHIT KUMAR
KUMAR, RAJENDRA
R, VENKATESH
WOLF, HEINZ
</inventors>

<docdb_family_id>
68503003
</docdb_family_id>

<title>
MACHINE LEARNING BASED DATABASE ANOMALY PREDICTION
</title>

<abstract>
A method for machine learning based database management is provided. The method may include training a machine learning model to detect an anomaly that is present and/or developing in a database system. The anomaly in the database system may be detected by at least processing, with a trained machine learning model, one or more performance metrics for the database system. In response to detecting the presence of the anomaly at the database system, one or more remedial actions may be determined for correcting and/or preventing the anomaly at the database system. The one or more remedial actions may further be sent to a database management system associated with the database system. Related systems and articles of manufacture are also provided.
</abstract>

<claims>
1. A system, comprising: at least one data processor; and at least one memory storing instructions which, when executed by the at least one data processor, result in operations comprising: training a machine learning model to predict an occurrence of an anomaly at a database system during an upcoming time interval; collecting and/or receiving, from the database system, a series of performance metrics, the series of performance metrics including values for at least one performance metric measured at two or more successive time intervals; and processing, with the trained machine learning model, the series of performance metrics to predict the occurrence of the anomaly at the database system during the upcoming time interval.
2. The system of claim 1, wherein the anomaly comprises a memory outage at a random access memory of the database system.
3. The system of claim 1, wherein the at least one performance metric include an average quantity of host resident memory, an average quantity of host memory used, a quantity of column store unloads, an average ping length, a count of out of memory events in index server trace file, and/or an average size of host swap.
4. The system of claim 1, wherein the training of the machine learning model comprises processing, with the machine learning model, training data, and wherein the training data includes a plurality of performance metrics that are known to correspond to the anomaly occurring at the database system during the upcoming time interval.
5. The system of claim 4, wherein the training data includes a first set of values for a first time interval, and wherein the training data further includes a second set of values for a second time interval.
6. The system of claim 1, wherein the machine learning model comprises a long short-term memory neural network.
7. The system of claim 6, wherein the long short-term memory neural network predicts the occurrence of the anomaly at the database system during the upcoming time interval by at least detecting a sequence of values for the at least one performance metric that correspond to the anomaly occurring at the database system during the upcoming time interval.
8. The system of claim 6, wherein the long short-term memory neural network is trained by at least adjusting one or more weights applied by the long short-term memory neural network, and wherein the one or more weights are adjusted to at least minimize an error in an output of the long short-term memory neural network.
9. The system of claim 6, wherein the long short-term memory neural network includes at least one long short-term memory layer comprising a memory cell, and wherein the processing of the series of performance metrics updates a hidden state of memory cell.
10. The system of claim 6, wherein the long short-term memory neural network includes a first long short-term memory layer and a second long short-term memory layer, and wherein the second long short-term memory layer further processes an output from the first long short-term memory layer.
11. A computer-implemented method, comprising: training a machine learning model to predict an occurrence of an anomaly at a database system during an upcoming time interval; collecting and/or receiving, from the database system, a series of performance metrics, the series of performance metrics including values for at least one performance metric measured at two or more successive time intervals; and processing, with the trained machine learning model, the series of performance metrics to predict the occurrence of the anomaly at the database system during the upcoming time interval.
12. The method of claim 11, wherein the anomaly comprises a memory outage at a random access memory of the database system.
13. The method of claim 11, wherein the at least one performance metric include an average quantity of host resident memory, an average quantity of host memory used, a quantity of column store unloads, an average ping length, a count of out of memory events in index server trace file, and/or an average size of host swap.
14. The method of claim 11, wherein the training of the machine learning model comprises processing, with the machine learning model, training data, and wherein the training data includes a plurality of performance metrics that are known to correspond to the anomaly occurring at the database system during the upcoming time interval.
15. The method of claim 14, wherein the training data includes a first set of values for a first time interval, and wherein the training data further includes a second set of values for a second time interval.
16. The method of claim 11, wherein the machine learning model comprises a long short-term memory neural network, and wherein the long short-term memory neural network predicts the occurrence of the anomaly at the database system during the upcoming time interval by at least detecting a sequence of values for the at least one performance metric that correspond to the anomaly occurring at the database system during the upcoming time interval.
17. The method of claim 16, wherein the long short-term memory neural network is trained by at least adjusting one or more weights applied by the long short-term memory neural network, and wherein the one or more weights are adjusted to at least minimize an error in an output of the long short-term memory neural network
18. The method of claim 16, wherein the long short-term memory neural network includes at least one long short-term memory layer comprising a memory cell, and wherein the processing of the series of performance metrics updates a hidden state of memory cell.
19. The method of claim 16, wherein the long short-term memory neural network includes a first long short-term memory layer and a second long short-term memory layer, and wherein the second long short-term memory layer further processes an output from the first long short-term memory layer.
20. A non-transitory computer readable medium storing instructions, which when executed by at least one data processor, result in operations comprising: training a machine learning model to predict an occurrence of an anomaly at a database system during an upcoming time interval; collecting and/or receiving, from the database system, a series of performance metrics, the series of performance metrics including values for at least one performance metric measured at two or more successive time intervals; and processing, with the trained machine learning model, the series of performance metrics to predict the occurrence of the anomaly at the database system during the upcoming time interval.
</claims>
</document>
