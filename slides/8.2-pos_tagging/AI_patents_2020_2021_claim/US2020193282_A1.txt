<document>

<filing_date>
2018-12-17
</filing_date>

<publication_date>
2020-06-18
</publication_date>

<priority_date>
2018-12-17
</priority_date>

<ipc_classes>
G06N3/04,G06N3/08,G06N3/10,G11C11/00,G11C11/16
</ipc_classes>

<assignee>
SPIN TRANSFER TECHNOLOGIES
</assignee>

<inventors>
GAJEK, MARCIN
TZOUFRAS, MICHAIL
</inventors>

<docdb_family_id>
71072759
</docdb_family_id>

<title>
System and Method for Training Artificial Neural Networks
</title>

<abstract>
A computing device includes one or more processors, a first random access memory (RAM) comprising magnetic random access memory (MRAM), a second random access memory of a type distinct from MRAM, and a non-transitory computer-readable storage medium storing instructions for execution by the one or more processors. The computing device receives first data on which to train an artificial neural network (ANN) and trains the ANN by, using the first RAM comprising the MRAM, performing a first set of training iterations to train the ANN using the first data, and, after performing the first set of training iterations, using the second RAM of the type distinct from MRAM, performing a second set of training iterations to train the ANN using the first data. The computing device stores values for the trained ANN. The trained ANN is configured to classify second data based on the stored values.
</abstract>

<claims>
1. A method, comprising: performing, at a computing device that includes one or more processors, a first random access memory (RAM) comprising magnetic random access memory (MRAM), a second random access memory of a type distinct from MRAM, and a non-transitory computer-readable storage medium storing instructions for execution by the one or more processors, a set of operations that includes: receiving first data on which to train an artificial neural network (ANN); training the ANN by: using the first RAM comprising the MRAM, performing a first set of training iterations to train the ANN using the first data; and after performing the first set of training iterations, using the second RAM of the type distinct from MRAM, performing a second set of training iterations to train the ANN using the first data; and storing values for the trained ANN, wherein the trained ANN is configured to classify second data based on the stored values.
2. The method of claim 1, wherein: each of the first set of training iterations includes: reading values for a set of weights of the ANN from the first RAM comprising the MRAM; using the one or more processors, performing a set of arithmetic operations to update the values for the set of weights of the ANN; and writing the updated set of weights of the ANN to the first RAM comprising the MRAM.
3. The method of claim 2, wherein: each of the first set of training iterations includes: reading values for a set of biases of the ANN from the first RAM comprising the MRAM; using the one or more processors, performing a set of arithmetic operations to update the values for the set of biases of the ANN; and writing the updated set of biases of the ANN to the first RAM comprising the MRAM.
4. The method of claim 3, wherein: each of the second set of training iterations includes: reading values for the set of weights and/or biases of the ANN from the second RAM of the type distinct from MRAM; using the one or more processors, performing the set of arithmetic operations to update the values for the set of weights and/or biases of the ANN; and writing the updated set of weights and/or biases of the ANN to the second RAM of the type distinct from the MRAM.
5. The method of claim 3, wherein: each of the second set of training iterations includes: reading values for the set of activations of the ANN from the second RAM of the type distinct from MRAM; using the one or more processors, performing the set of arithmetic operations to update the values for the set of activations of the ANN; and writing the updated set of activations of the ANN to the second RAM of the type distinct from the MRAM.
6. The method of claim 1, wherein the first RAM comprising the MRAM is on the same chip as the one or more processors.
7. The method of claim 1, wherein the first RAM is operated, during the first set of training iterations, as error-prone memory.
8. The method of claim 7, wherein: the stored values of the trained ANN comprise stored weights; the method further comprises: during the first set of training iterations, performing error detection that includes detecting an error in a respective weight stored in the first RAM; replacing a value stored in the respective weight with a zero value prior to using the respective weight.
9. The method of claim 7, wherein the first RAM has a bit error-rate below a threshold for convergence of the first set of training iterations.
10. The method of claim 9, wherein the threshold for convergence is greater than: 10−3, 10−5, or 10−7.
11. The method of claim 9, wherein the bit error rate is greater than: 10−4, 10−6, or 10−8.
12. The method of claim 1, wherein the second RAM comprises static RAM (SRAM).
13. The method of claim 1, wherein the first set of training iterations includes more than 20%, 40%, 60%, 80%, or 95% of a total number of training iterations used for training the ANN.
14. The method of claim 1, further comprising, after training the ANN: receiving second data; and assigning scores to the second data using the stored values of the trained ANN.
15. An electronic system, comprising: one or more processors; a first random access memory (RAM) comprising magnetic random access memory (MRAM); a second random access memory of a type distinct from MRAM; a non-transitory computer-readable storage medium storing instructions executable by the one or more processors, including instructions for: training an artificial neural network (ANN) using first data by performing a first set of training iterations using the first RAM comprising MRAM; training the ANN using the first data by performing a second set of training iterations using the second RAM comprising a type distinct from MRAM; and storing values for the trained ANN, wherein the trained ANN is configured to classify second data based on the stored values.
</claims>
</document>
