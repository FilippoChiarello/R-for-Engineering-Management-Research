<document>

<filing_date>
2019-05-29
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-05-29
</priority_date>

<ipc_classes>
G06F16/18,G06F16/25,G06F16/28,G06F16/36
</ipc_classes>

<assignee>
TADA Cognitive Solutions, LLC
</assignee>

<inventors>
Turlapati, Subbarao
Guha, Seshadri
Sikka, Vinay
</inventors>

<docdb_family_id>
73550838
</docdb_family_id>

<title>
Digital Duplicate
</title>

<abstract>
Disclosed herein is new approach for structuring an organization's data, involving at a high level establishing a digital context and populating the digital context with digital content to thereby form what is referred to herein as a digital duplicate. In one aspect, the disclosed approach may be embodied in a computer-implemented method that involves: establishing a data structure comprising (i) a structural context that has at least one data component, where each component of the structural context has associated therewith one or more respective data properties (ii) a semantic context that has at least two data types that further describe individual data properties and; and populating underlying data into an instance of the data structure such that underlying data populated into each respective property of the at least one data component has each of the at least two data types of the semantic context.
</abstract>

<claims>
1. A computing system comprising: a network interface; at least one processor; a non-transitory computer-readable medium; and program instructions stored on the non-transitory computer-readable medium that are executable by the at least one processor to cause the computing system to perform functions including: establishing a data structure comprising (i) a semantic context having at least two data types, and (ii) a structural context having at least one data component, wherein the at least two data types of the semantic context comprise (a) a structural data type configured to contain data describing how the source data is stored within the computing system, and (b) a semantic data type configured to contain data describing the semantic meaning of and definitional aspects of the source data, and wherein the at least one data component of the structural context has associated therewith one or more respective data properties, and wherein the at least one data component comprises (a) a conceptual data component configured to contain data describing a particular aspect of an organization, and (b) an associative data component configured to contain data describing a particular aspect of an organization and a relationship between two or more conceptual data components; and populating source data into an instance of the data structure such that source data populated into each respective property of the at least one data component has each of the at least two data types of the semantic context and source data populated into different respective data properties but the same semantic data type is thereby configured to be associated with a given function that utilizes the underlying source data, and such that the source data populated into the instance of the data structure forms a data network.
2. (canceled)
3. The computing system of claim 1, wherein the definitional aspects of the source data include a primitive data type and at least one instance of pointer data configured to identify a location in data storage communicatively coupled to the computing system that contains data defining a function for application to the source data having the same semantic data type.
4. 4-5. (canceled)
6. The computing system of claim 1, wherein the program instructions are further executable to cause the computing system to perform functions including: connecting to at least one data source; ingesting into the computing system from the at least one data source Gourco data; and assigning to the source data both (i) a semantic data type, and (ii) a structural data type, wherein the source data itself contains data on which to base the assignment of the semantic data type and the structural data type.
7. A method comprising: establishing a data structure comprising (i) a semantic context having at least two data types, and (ii) a structural context having at least one data component, wherein the at least two data types of the semantic context comprise (a) a structural data type configured to contain data describing how the source data is stored within the computing system, and (b) a semantic data type configured to contain data describing the semantic meaning of and definitional aspects of the source data, and wherein the at least one data component of the structural context has associated therewith one or more respective data properties, and wherein the at least one data component comprises (a) a conceptual data component configured to contain data describing a particular aspect of an organization, and (b) an associative component configured to contain data describing a particular aspect of an organization and a relationship between two or more conceptual data components; and populating source data into an instance of the data structure such that source data populated into each respective property of the at least one data component has each of the at least two data types of the semantic context and source data populated into different respective data properties but the same semantic data type is thereby configured to be associated with a given function that utilizes the underlying source data, and such that the source data populated into the instance of the data structure forms a data network.
8. (canceled)
9. The method of claim 7, wherein the definitional aspects of the source data include a primitive data type and at least one instance of pointer data configured to identify a location in data storage communicatively coupled to the computing system that contains data defining a function for application to the source data having the same semantic data type.
10. 10-11. (canceled)
12. The method of claim 7, further comprising: connecting to at least one data source; ingesting into a computing system from the at least one data source data; and assigning to the source data both (i) a semantic data type, and (ii) a structural data type, wherein the source data itself contains data on which to base the assignment of the semantic data type and the structural data type.
13. A non-transitory computer-readable storage medium having program instructions stored thereon that are executable to cause a computing system to: establish a data structure comprising (i) a semantic context having at least two data types, and (ii) a structural context having at least one data component, wherein the at least two data types of the semantic context comprise (a) a structural data type configured to contain data describing how the source data is stored within the computing system, and (b) a semantic data type configured to contain data describing the semantic meaning of and definitional aspects of the source data, and wherein the at least one component of the structural context has associated therewith one or more respective data properties, and wherein the at least one data component comprises (a) a conceptual data component configured to contain data describing a particular aspect of an organization, and (b) an associative component configured to contain data describing a particular aspect of an organization and a relationship between two or more conceptual data components; and populate source data into an instance of the data structure such that source data populated into each respective property of the at least one data component has each of the at least two data types of the semantic context and source data populated into different respective data properties but the same semantic data type is thereby configured to be associated with a given function that utilizes the underlying source data, and such that the source data populated into the instance of the data structure forms a data network.
14. (canceled)
15. The computer-readable storage medium of claim 13, wherein the definitional aspects of the source data include a primitive data type and at least one instance of pointer data configured to identify a location in data storage communicatively coupled to the computing system that contains data defining a function for application to the source data having the same semantic data type.
16. 16-17. (canceled)
18. The computer-readable storage medium of claim 13, wherein the program instructions are further executable to cause the computing system to perform functions including: connecting to at least one data source; ingesting into the computing system from the at least one data source Gource data; and assigning to the source data both (i) a semantic data type, and (ii) a structural data type, wherein the source data itself contains data on which to base the assignment of the semantic data type and the structural data type.
19. The computer-readable storage medium of claim 18, wherein the definitional aspects of the source data include a primitive data type and at least one instance of pointer data configured to identify a location in data storage communicatively coupled to the computing system that contains data defining a function for application to the source data having the same semantic data type.
20. (canceled)
21. The computing system of claim 1, wherein populating source data into an instance of the data structure such that the source data populated into the instance of the data structure forms a data network comprises: storing reciprocal data tables in data storage, wherein a given reciprocal data table identifies that respective source data populated into properties of a respective associative data component corresponds to respective source data populated into properties of a respective conceptual data component.
22. The method of claim 7, wherein populating source data into an instance of the data structure such that the source data populated into the instance of the data structure forms a data network comprises: storing reciprocal data tables in data storage, wherein a given reciprocal data table identifies that respective source data populated into properties of a respective associative data component corresponds to respective source data populated into properties of a respective conceptual data component.
23. The computer-readable storage medium of claim 13, wherein populating source data into an instance of the data structure such that the source data populated into the instance of the data structure forms a data network comprises: storing reciprocal data tables in data storage, wherein a given reciprocal data table identifies that respective source data populated into properties of a respective associative data component corresponds to respective source data populated into properties of a respective conceptual data component.
</claims>
</document>
