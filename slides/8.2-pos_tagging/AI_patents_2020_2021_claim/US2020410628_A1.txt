<document>

<filing_date>
2019-06-28
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-06-28
</priority_date>

<ipc_classes>
G06F9/38,G06F9/455,G06F9/50,G06T1/20,G06T15/00
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
RAMADOSS, MURALI
SHAH, ANKUR N.
PENDLURU, NISHANTH REDDY
KOSTON, JOSEPH
</inventors>

<docdb_family_id>
74044591
</docdb_family_id>

<title>
APPARATUS AND METHOD FOR PROVISIONING VIRTUALIZED MULTI-TILE GRAPHICS PROCESSING HARDWARE
</title>

<abstract>
An apparatus and method for provisioning virtualized tile-based graphics processing circuitry. For example, one embodiment of an apparatus comprises: processing resources to process commands including graphics commands and generate results; resource partitioning circuitry to partition the processing resources into a plurality of tiles in accordance with a specified tile-based resource allocation policy; and graphics virtualization circuitry to perform tile-based allocation of the processing resources to a plurality of virtual machines in accordance with a specified virtualization policy, the virtual machines to be executed in a virtualized execution environment.
</abstract>

<claims>
1. A graphics processing apparatus comprising: processing resources to process commands including graphics commands and generate results; resource partitioning circuitry to partition the processing resources into a plurality of tiles in accordance with a specified tile-based resource allocation policy; and graphics virtualization circuitry to perform tile-based allocation of the processing resources to a plurality of virtual machines in accordance with a specified virtualization policy, the virtual machines to be executed in a virtualized execution environment.
2. The graphics processing apparatus of claim 1 wherein responsive to the specified tile-based resource allocation policy, the resource partitioning circuitry is to allocate an equal amount of the processing resources to each tile.
3. The graphics processing apparatus of claim 2 further comprising: a plurality of high bandwidth memories (HBMs), each HBM directly coupled to one of the plurality of tiles.
4. The graphics processing apparatus of claim 3 wherein in accordance with the specified tile-based resource allocation policy, each tile is to be allocated at least one 3D graphics engine to perform 3D graphics processing and at least one compute engine to perform general purpose graphics processing operations.
5. The graphics processing apparatus of claim 2 wherein the graphics virtualization circuitry is configurable by user selection of different virtualization policies, wherein responsive to a first specified virtualization policy, the graphics virtualization circuitry is to allocate at least one tile for continuous use by a virtual machine.
6. The graphics processing apparatus of claim 5 wherein responsive to a second specified virtualization policy, the graphics virtualization circuitry is to share at least one tile among a first plurality of virtual machines in accordance with a first plurality of time quanta, each time quantum of the first plurality associated with at least one of the first plurality of virtual machines.
7. The graphics processing apparatus of claim 6 wherein responsive to a third specified virtualization policy, the graphics virtualization circuitry is to allocate all tiles to each virtual machine in accordance with a second plurality of time quanta, each time quantum of the second plurality associated with at least one of the first plurality of virtual machines.
8. The graphics processing apparatus of claim 7 wherein each time quantum of the first and/or second plurality of time quanta are to be specified by a user within the second and/or third virtualization policies.
9. The graphics processing apparatus of claim 1 further comprising: scheduling circuitry to schedule operations from the plurality of virtual machines on the plurality of tiles in accordance with the tile-based resource allocation policy and the virtualization policy.
10. The graphics processing apparatus of claim 9 wherein the scheduling circuitry comprises a plurality of schedulers, each scheduler allocated to at least one of the tiles.
11. A method comprising: providing a specified tile-based resource allocation policy and a specified virtualization policy; partitioning a set of processing resources into a plurality of tiles in accordance with the specified tile-based resource allocation policy, the processing resources operable to process commands including graphics commands and generate results; and executing a plurality of virtual machines in a virtualized execution environment; and performing tile-based allocation of the processing resources to the plurality of virtual machines in accordance with a specified virtualization policy.
12. The method of claim 11 wherein responsive to the specified tile-based resource allocation policy, allocating an equal amount of the processing resources to each tile.
13. The method of claim 12 wherein each tile is to include a high bandwidth memory (HBM) directly coupled thereto.
14. The method of claim 13 wherein, in accordance with the specified tile-based resource allocation policy, each tile is to be allocated at least one 3D graphics engine to perform 3D graphics processing and at least one compute engine to perform general purpose graphics processing operations.
15. The method of claim 12 wherein responsive to a first specified virtualization policy selected by a user, allocating at least one tile for continuous use by a virtual machine.
16. The method of claim 15 wherein responsive to a second specified virtualization policy selected by the user, sharing at least one tile among a first plurality of virtual machines in accordance with a first plurality of time quanta, each time quantum of the first plurality associated with at least one of the first plurality of virtual machines.
17. The method of claim 16 wherein responsive to a third specified virtualization policy selected by the user, allocating all tiles to each virtual machine in accordance with a second plurality of time quanta, each time quantum of the second plurality associated with at least one of the first plurality of virtual machines.
18. The method of claim 17 wherein each time quantum of the first and/or second plurality of time quanta are to be specified by the user within the second and/or third virtualization policies.
19. The method of claim 11 further comprising: scheduling operations from the plurality of virtual machines on the plurality of tiles in accordance with the tile-based resource allocation policy and the virtualization policy.
20. The method of claim 19 wherein scheduling is implemented with a plurality of schedulers, each scheduler allocated to at least one of the tiles.
21. A non-transitory machine-readable medium having program code stored thereon which, when executed by a machine, causes the machine to perform the operations of: providing a specified tile-based resource allocation policy and a specified virtualization policy; partitioning a set of processing resources into a plurality of tiles in accordance with the specified tile-based resource allocation policy, the processing resources operable to process commands including graphics commands and generate results; and executing a plurality of virtual machines in a virtualized execution environment; and performing tile-based allocation of the processing resources to the plurality of virtual machines in accordance with a specified virtualization policy.
22. The non-transitory machine-readable medium of claim 21 wherein responsive to the specified tile-based resource allocation policy, allocating an equal amount of the processing resources to each tile.
23. The non-transitory machine-readable medium of claim 22 wherein each tile is to include a high bandwidth memory (HBM) directly coupled thereto.
24. The non-transitory machine-readable medium of claim 23 wherein, in accordance with the specified tile-based resource allocation policy, each tile is to be allocated at least one 3D graphics engine to perform 3D graphics processing and at least one compute engine to perform general purpose graphics processing operations.
25. The non-transitory machine-readable medium of claim 22 wherein responsive to a first specified virtualization policy selected by a user, allocating at least one tile for continuous use by a virtual machine.
26. The non-transitory machine-readable medium of claim 25 wherein responsive to a second specified virtualization policy selected by the user, sharing at least one tile among a first plurality of virtual machines in accordance with a first plurality of time quanta, each time quantum of the first plurality associated with at least one of the first plurality of virtual machines.
27. The non-transitory machine-readable medium of claim 26 wherein responsive to a third specified virtualization policy selected by the user, allocating all tiles to each virtual machine in accordance with a second plurality of time quanta, each time quantum of the second plurality associated with at least one of the first plurality of virtual machines.
28. The non-transitory machine-readable medium of claim 27 wherein each time quantum of the first and/or second plurality of time quanta are to be specified by the user within the second and/or third virtualization policies.
29. The non-transitory machine-readable medium of claim 21 further comprising: scheduling operations from the plurality of virtual machines on the plurality of tiles in accordance with the tile-based resource allocation policy and the virtualization policy.
30. The non-transitory machine-readable medium of claim 29 wherein scheduling is implemented with a plurality of schedulers, each scheduler allocated to at least one of the tiles.
</claims>
</document>
