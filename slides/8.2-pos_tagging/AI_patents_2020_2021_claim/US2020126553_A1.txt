<document>

<filing_date>
2019-10-28
</filing_date>

<publication_date>
2020-04-23
</publication_date>

<priority_date>
2017-12-06
</priority_date>

<ipc_classes>
G10L15/18,G10L15/22,G10L15/30,G10L17/00
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
LYNCH, BRADFORD
BARAN, ADAM D.
SINGH, KEVINDRA PAL
MODY, UDAI SEN
</inventors>

<docdb_family_id>
68466206
</docdb_family_id>

<title>
UNIVERSAL AND USER-SPECIFIC COMMAND PROCESSING
</title>

<abstract>
A system configured to process an incoming spoken utterance and to coordinate among multiple speechlet components to execute an action of the utterance, where the output of one speechlet may be used as the input to another speechlet to ultimately perform the action. The speechlets and intervening actions need not be expressly invoked by the utterance. Rather the system may determine how best to complete the action and may identify intermediate speechlets that may be provide input data to the speechlet that will ultimately perform the action. The speechlets may be configured to recognize a common universe of actions and/or entities rather than have each speechlet or subject matter domain have its own set of recognizable actions and entities.
</abstract>

<claims>
1. 1.-20. (canceled)
21. A computer-implemented method comprising: determining a first action corresponding to a user input; determining that execution of the first action is likely to use at least first data of a first type and second data of a second type; identifying a second action that is executable by a first skill component to determine the first data of the first type; sending, to the first skill component, a request to execute the second action; receiving, from the first skill component, first input data corresponding to the first type; determining second input data corresponding to the second type; and causing the first action to be executed using the first input data and the second input data.
22. The computer-implemented method of claim 21, wherein causing the first action to be executed comprises sending, to a second skill component, the first input data, the second input data, and an instruction to execute the first action.
23. The computer-implemented method of claim 21, wherein causing the first action to be executed comprises using the first input data and second input data to execute the first action, and wherein the method further comprises: determining, based at least in part on execution of the first action, output data corresponding to the first action; and sending the output data.
24. The computer-implemented method of claim 21, further comprising: identifying a third action that is executable by a second skill component to determine the second data of the second type; and sending, to the second skill component, a request to execute the third action, wherein determining the second input data comprises receiving, from the second skill component, the second input data corresponding to the second type.
25. The computer-implemented method of claim 24, further comprising: determining execution of the third action is likely to use at least the first data of the first type; and prior to receiving the second input data, sending, to the second skill component, the first input data.
26. The computer-implemented method of claim 24, wherein causing the first action to be executed comprises sending, to a third skill component, the first input data, the second input data, and an instruction to execute the first action
27. The computer-implemented method of claim 21, wherein determining the second input data comprises receiving, from a user profile, the second input data corresponding to the second type.
28. The computer-implemented method of claim 21, further comprising: determining stored data corresponding to a prior user input; and determining a portion of the stored data corresponds to the second type, wherein determining the second input data comprises obtaining the portion of the stored data.
29. The computer-implemented method of claim 28, further comprising, prior to receipt of the user input: receiving input data corresponding to the prior user input; processing the input data to determine a request for a third action; causing the third action to be executed by a second skill component; receiving, from the second skill component, output data corresponding to the third action; and storing a portion of the output data as the stored data.
30. The computer-implemented method of claim 21, further comprising: determining that the first skill component is configured to output data corresponding to the first type; determining that a second skill component is configured to output data corresponding to the first type; and determining user profile data indicating a preference for the first skill component, wherein sending the request to the first skill component is based at least in part on the user profile data.
31. A system, comprising: at least one processor; at least one memory comprising instructions that, when executed by the at least one processor, cause the system to: determine a first action corresponding to a user input; determine that execution of the first action is likely to use at least first data of a first type and second data of a second type; identify a second action that is executable by a first skill component to determine the first data of the first type; send, to the first skill component, a request to execute the second action; receive, from the first skill component, first input data corresponding to the first type; determine second input data corresponding to the second type; and cause the first action to be executed using the first input data and the second input data.
32. The system of claim 31, wherein the instructions that cause the system to cause the first action to be executed comprise instructions that, when executed by the at least one processor, cause the system to send, to a second skill component, the first input data, the second input data, and an instruction to execute the first action.
33. The system of claim 31, wherein the instructions that cause the system to cause the first action to be executed comprise instructions that, when executed by the at least one processor, cause the system to use the first input data and second input data to execute the first action, and wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to: determine, based at least in part on execution of the first action, output data corresponding to the first action; and send the output data.
34. The system of claim 31, wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to: identify a third action that is executable by a second skill component to determine the second data of the second type; and send, to the second skill component, a request to execute the third action, wherein the instructions that cause the system to determine the second input data comprise instructions that, when executed by the at least one processor, cause the system to receive, from the second skill component, the second input data corresponding to the second type.
35. The system of claim 34, wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to: determine execution of the third action is likely to use at least the first data of the first type; and prior to receiving the second input data, send, to the second skill component, the first input data.
36. The system of claim 34, wherein the instructions that cause the system to cause the first action to be executed comprise instructions that, when executed by the at least one processor, cause the system to send, to a third skill component, the first input data, the second input data, and an instruction to execute the first action
37. The system of claim 31, wherein the instructions that cause the system to determine the second input data comprise instructions that, when executed by the at least one processor, cause the system to receive, from a user profile, the second input data corresponding to the second type.
38. The system of claim 31, wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to: determine stored data corresponding to a prior user input; and determine a portion of the stored data corresponds to the second type, wherein the instructions that cause the system to determine the second input data comprise instructions that, when executed by the at least one processor, cause the system to obtain the portion of the stored data.
39. The system of claim 38, wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to, prior to receipt of the user input: receive input data corresponding to the prior user input; process the input data to determine a request for a third action; cause the third action to be executed by a second skill component; receive, from the second skill component, output data corresponding to the third action; and store a portion of the output data as the stored data.
40. The system of claim 31, wherein the at least one memory further comprises instructions that, when executed by the at least one processor, further cause the system to: determine that the first skill component is configured to output data corresponding to the first type; determine that a second skill component is configured to output data corresponding to the first type; and determine user profile data indicating a preference for the first skill component, wherein the instructions that cause the system to send the request to the first skill component are based at least in part on the user profile data.
</claims>
</document>
