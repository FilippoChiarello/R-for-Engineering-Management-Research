<document>

<filing_date>
2017-06-27
</filing_date>

<publication_date>
2020-02-04
</publication_date>

<priority_date>
2012-03-01
</priority_date>

<ipc_classes>
G06F16/21,G06F16/23,G06F16/25,G06F17/30
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
AHMED, HAROON
LAFLEN, JAMES D.
</inventors>

<docdb_family_id>
49043428
</docdb_family_id>

<title>
Drift detection and notification
</title>

<abstract>
A drift condition, or change, in a data structure can be detected and communicated to one or more subscribers. Data structure can be monitored by periodic configurable polling of a data source or on demand polling. Upon detection of a change in the in the data structure, subscribers can be notified of the change and optionally other information such as the identity of the object that changed and nature of the change.
</abstract>

<claims>
1. A computing system comprising: one or more processors; and one or more computer-readable hardware storage media having stored thereon computer-executable instructions that are executable by the one or more processors to cause the computing system to: identify one or more subscribers that are configured to acquire data from a database on a server; receive particular data that is indicative of a database structure of the database, wherein the computing system uses machine learning to infer when checks are made on the database to determine when the computing system corresponds with the database to receive the particular data, wherein a type of the machine learning is selected from the group consisting of an expert system type, a fuzzy logic type, and a data fusion engine type; determine that one or more changes have been made to the database structure based at least in part on the particular data, wherein the particular data is changed relative to previous data indicative of the database structure that was received at a prior time; and notify the one or more subscribers after determining that the one or more changes have been made, wherein the one or more subscribers include a first application that is subscribed to receive information corresponding to the one or more changes according to a first level of granularity and a second application that is subscribed to receive the information corresponding to the one or more changes according to a second level of granularity, such that the notifying includes sending a first notice of the one or more changes with a first set of change information to the first application and a second notice of the one or more changes with a second set of change information to the second application, and wherein the first level of granularity is determined based on a first identified subscription type and the second level of granularity is determined based on a second identified subscription type whereby information that is included within the first notice and that corresponds to the first level of granularity is different than information that is included within the second notice and that corresponds to the second level of granularity.
2. The computing system of claim 1, wherein multiple requests for data regarding the one or more changes are batched together to form a batch request.
3. The computing system of claim 1, wherein the computing system provides a notification to notify the one or more subscribers, and wherein execution of the computer-executable instructions further causes the computing system to: configure the notification to include information describing a change to a name and a change to a type of an object of the database structure.
4. The computing system of claim 1, wherein the computing system provides a notification to notify the one or more subscribers, and wherein execution of the computer-executable instructions further causes the computing system to: configure the notification to include information describing a nature of change to an object of the database structure.
5. The computing system of claim 1, wherein the first notice omits at least the name or type of object information and wherein the second notice includes the name or type of object information that is omitted from the first notice based on a subscription level of the first application or the second application.
6. The computing system of claim 1, wherein the computing system is a distributed computing system.
7. The computing system of claim 1, wherein execution of the computer-executable instructions further causes the computing system to: query the database at a predetermined interval for a value that indicates a current state of the database structure, the value that indicates the current state of the database structure comprising at least one of (i) a new timestamp of an additional modification made to the database structure or (ii) a new checksum of the database structure after the additional modification; compare the value that indicates the current state of the database structure with a stored value that represents a previous state of the database structure; upon detecting a difference between the value that indicates the current state of the database structure and the stored value that represents the previous state of the database structure, request additional data from the database, the requested additional data comprising at least one of a name or a type of object information associated with the database structure; and provide the additional data to one or more software applications.
8. A computer-implemented method comprising: a computing system identifying one or more subscribers that are configured to acquire data from a database on a server; the computing system receiving particular data that is indicative of a database structure of the database, wherein the computing system uses machine learning to infer when checks are made on the database to determine when the computing system corresponds with the database to receive the particular data, wherein a type of the machine learning is selected from the group consisting of an expert system type, a fuzzy logic type, and a data fusion engine type; the computing system determining that one or more changes have been made to the database structure based at least in part on the particular data, wherein the particular data is changed relative to previous data indicative of the database structure that was received at a prior time; and the computing system notifying the one or more subscribers after determining that the one or more changes have been made, wherein the one or more subscribers include a first application that is subscribed to receive information corresponding to the one or more changes according to a first level of granularity and a second application that is subscribed to receive the information corresponding to the one or more changes according to a second level of granularity, such that the notifying includes sending a first notice of the one or more changes with a first set of change information to the first application and a second notice of the one or more changes with a second set of change information to the second application, and wherein the first level of granularity is determined based on a first identified subscription type and the second level of granularity is determined based on a second identified subscription type whereby information that is included within the first notice and that corresponds to the first level of granularity is different than information that is included within the second notice and that corresponds to the second level of granularity.
9. The method of claim 8, wherein the one or more subscribers comprise one or more software applications.
10. The method of claim 8, wherein determining that the one or more changes have been made to the database structure is at least partially based on a function of a timestamp associated with the database structure.
11. The method of claim 9, wherein determining that the one or more changes have been made to the database structure includes use of a function of a checksum associated with the database structure.
12. The method of claim 9, wherein determining whether the database structure has changed is performed as part of a background process.
13. The method of claim 9, wherein the database structure is a table, and wherein the one or more changes comprises a detectable drift condition that includes the table being modified.
14. The method of claim 9, wherein the method further includes: the computing system polling the database and then receiving the particular data from the database.
</claims>
</document>
