<document>

<filing_date>
2019-06-12
</filing_date>

<publication_date>
2020-12-17
</publication_date>

<priority_date>
2019-06-12
</priority_date>

<ipc_classes>
G06N3/04,G06N3/08,H04L29/06
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
WATANABE YUJI
GAJANANAN, KUGAMOORTHY
AKIYAMA, FUMIKO
LOYOLA, PABLO
</inventors>

<docdb_family_id>
73746378
</docdb_family_id>

<title>
GUIDED CHARACTER STRING ALTERATION
</title>

<abstract>
Guided character string alteration can be performed by obtaining an original character string and a plurality of altered character strings, traversing the original character string with a first Long Short Term Memory (LSTM) network to generate, for each character of the original character string, a hidden state of a partial original character string up to that character, and applying, during the traversing, an alteration learning process to each hidden state of a partial original character string to produce an alteration function for relating partial original character strings to partial altered character strings.
</abstract>

<claims>
1. A computer program product including one or more computer readable storage mediums collectively storing program instructions that are executable by a computer to cause the computer to perform operations comprising: obtaining an original character string and a plurality of altered character strings; traversing the original character string with a first Long Short Term Memory (LSTM) network to generate, for each character of the original character string, a hidden state of a partial original character string up to that character; and applying, during the traversing, an alteration learning process to each hidden state of a partial original character string to produce an alteration function for relating partial original character strings to partial altered character strings.
2. The computer program product of claim 1, further comprising obtaining a new character string; traversing the new character string with the first LSTM network to generate, for each character of the new character string, a hidden state of a partial new character string up to that character; and generating a new altered character string by applying the alteration function to each hidden state of a partial new character string.
3. The computer program product of claim 1, wherein the traversing further generates, for each character in the original character string, an output state of that character, and the alteration learning process: selects an action based on each hidden state, and selects an alternate character based on each output state corresponding to a hidden state.
4. The computer program product of claim 3, wherein the alteration learning process includes an alternate character learning process that is applied to an output state corresponding to the one or more hidden states to produce an alternate character generating function for relating an original character to an alternate character.
5. The computer program product of claim 3, wherein the action is one of adding the alternate character to the original character, replacing the original character with the alternate character, permuting the original character with the previous character in the original character string, removing the original character, and maintaining the original character.
6. The computer program product of claim 5, wherein a loss from the alteration learning process is applied to the alternate character learning process only in response to selection of an action utilizing the selected alternate character.
7. The computer program product of claim 1, wherein the applying the alteration learning process includes obtaining a vector representation of each partial altered character string output from the alteration learning process, and the traversing includes considering, for each character of the original character string, the vector representation of the partial altered character string output in response to application of the alteration learning process to the previous character of the original character string, to generate the hidden state.
8. The computer program product of claim 7, wherein obtaining the vector representation of each partial altered character string includes applying each partial altered character string to a second LSTM network.
9. A computer-implemented method comprising: obtaining an original character string and a plurality of altered character strings; traversing the original character string with a first Long Short Term Memory (LSTM) network to generate, for at each character of the original character string, a hidden state of a partial original character string up to that character; and applying, during the traversing, an alteration learning process to each hidden state to produce an alteration function for relating partial original character strings to partial altered character strings.
10. The computer-implemented method of claim 9, further comprising obtaining a new character string; traversing the new character string with the first LSTM network to generate, for each character of the new character string, a hidden state of a partial new character string up to that character; and generating a new altered character string by applying the alteration function to each hidden state of a partial new character string.
11. The computer-implemented method of claim 9, wherein the traversing further generates, for each character in the original character string, an output state of that character, and the alteration learning process: selects an action based on each hidden state, and selects an alternate character based on each output state corresponding to a hidden state.
12. The computer-implemented method of claim 11, wherein the alteration learning process includes an alternate character learning process that is applied to an output state corresponding to the one or more hidden states to produce an alternate character generating function for relating an original character to an alternate character.
13. The computer-implemented method of claim 11, wherein the action is one of adding the alternate character to the original character, replacing the original character with the alternate character, permuting the original character with the previous character in the original character string, removing the original character, and maintaining the original character.
14. The computer-implemented method of claim 13, wherein a loss from the alteration learning process is applied to the alternate character learning process only in response to selection of an action utilizing the selected alternate character.
15. An apparatus comprising: an obtaining section configured to obtain an original character string and a plurality of altered character strings; a traversing section configured to traverse the original character string with a first Long Short Term Memory (LSTM) network to generate, for at each character of the original character string, a hidden state of a partial original character string up to that character; and an applying section configured to apply, during the traversing, an alteration learning process to each hidden state to produce an alteration function for relating partial original character strings to partial altered character strings.
16. The apparatus of claim 15, further comprising a generating section configured to generate a new altered character string by applying the alteration function to each hidden state of a partial new character string, wherein the obtaining section is further configured to obtain a new character string, and the traversing section is further configured to traverse the new character string with the first LSTM network to generate, for each character of the new character string, a hidden state of a partial new character string up to that character.
17. The apparatus of claim 15, wherein the traversing section is further configured to generate, for each character in the original character string, an output state of that character, and the alteration learning process: selects an action based on each hidden state, and selects an alternate character based on each output state corresponding to a hidden state.
18. The apparatus of claim 17, wherein the alteration learning process includes an alternate character learning process that is applied to an output state corresponding to the one or more hidden states to produce an alternate character generating function for relating an original character to an alternate character.
19. The computer program product of claim 17, wherein the action is one of adding the alternate character to the original character, replacing the original character with the alternate character, permuting the original character with the previous character in the original character string, removing the original character, and maintaining the original character.
20. The computer program product of claim 19, wherein a loss from the alteration learning process is applied to the alternate character learning process only in response to selection of an action utilizing the selected alternate character.
</claims>
</document>
