<document>

<filing_date>
2018-10-10
</filing_date>

<publication_date>
2020-04-16
</publication_date>

<priority_date>
2018-10-10
</priority_date>

<ipc_classes>
G05D1/02,G06F11/07,G06F12/0804,G06F9/4401,G11C11/16,G11C13/00
</ipc_classes>

<assignee>
MICRON TECHNOLOGY
</assignee>

<inventors>
GOLOV, GIL
</inventors>

<docdb_family_id>
70162319
</docdb_family_id>

<title>
Memory mapping for hibernation
</title>

<abstract>
A computing system has a processing device (e.g., CPU, FPGA, or GPU) and memory regions (e.g., in a DRAM device) used by the processing device during normal operation. The computing system is configured to: monitor use of the memory regions in volatile memory; based on monitoring the use of the memory regions, identify at least one of the memory regions of the volatile memory; initiate a hibernation process; and during the hibernation process, copy data stored in the identified memory regions to non-volatile memory.
</abstract>

<claims>
1. A system, comprising: at least one processing device; and memory storing instructions configured to instruct the at least one processing device to: monitor use of memory regions in volatile memory; based on monitoring the use of the memory regions, identify at least one of the memory regions of the volatile memory; initiate a hibernation process; and during the hibernation process, copy data stored in the identified memory regions to non-volatile memory.
2. The system of claim 1, wherein identifying the at least one of the memory regions includes associating a flag with each of the memory regions, the flag identifying the respective memory region as critical for hibernation.
3. The system of claim 2, wherein the flag is a first flag, the identified memory regions are first memory regions, and the instructions are further configured to instruct the at least one processing device to associate a second flag with each of at least one second memory region of the volatile memory, the second flag identifying each of the at least one second memory region as non-critical for hibernation.
4. The system of claim 3, wherein the instructions are further configured to instruct the at least one processing device to, during the hibernation process, copy data stored in the second memory regions to the non-volatile memory, wherein the data stored in the second memory regions is copied to the non-volatile memory after copying the data stored in the first memory regions to the non-volatile memory.
5. The system of claim 1, wherein the at least one processing device controls navigation of an autonomous vehicle by executing software, and wherein the identified memory regions store run-time data for the software.
6. The system of claim 1, wherein software is executing on the at least one processing device prior to initiating the hibernation process, and wherein the identified memory regions store run-time data generated during execution of the software.
7. The system of claim 1, wherein the instructions are further configured to instruct the at least one processing device to: receive a request from a first process for a memory allocation, the memory allocation associated with a first memory region of the volatile memory, and the request including a memory characterization indicating that data stored in the first memory region is critical for hibernation; use the first memory region to store first data, wherein the first data is generated during execution of the first process; based on using the first memory region to store the first data, identify the first data as critical for hibernation; and during the hibernation process, copy the first data to the non-volatile memory.
8. The system of claim 1, wherein the hibernation process is initiated in response to detection of an impending power loss to the volatile memory.
9. A method, comprising: identifying at least one first region of memory regions in volatile memory, wherein the identified at least one first region is to be saved during a hibernation process; initiating the hibernation process; and during the hibernation process, copying first data stored in the identified at least one first region to non-volatile memory.
10. The method of claim 9, wherein identifying at least one first region of the memory regions is performed by updating a memory map associated with the volatile memory.
11. The method of claim 10, further comprising: starting a new process on a processing device, the new process associated with software that controls a vehicle system of an autonomous vehicle; and identifying, in response to starting the new process, a second memory region to save during the hibernation process, the second memory region allocated to store run-time data generated during execution of the new process; wherein the memory map is updated to indicate the second memory region as critical for hibernation.
12. The method of claim 9, wherein a software component executing on a processing device of an autonomous vehicle identifies the at least one first region of the memory regions, and wherein the software component updates a memory map to store a flag associated with the identified at least one first region, the flag indicating the at least one first region as critical for hibernation.
13. The method of claim 9, wherein at least one process executing on a processing device of an autonomous vehicle is in a first state when the hibernation process is initiated, the method further comprising restoring the first data from the non-volatile memory to the volatile memory such that the at least one process is restored to the first state.
14. The method of claim 13, wherein the at least one process generates at least one graphical image for presentation on a display to a user of the autonomous vehicle, and wherein the first state includes data associated with the at least one graphical image as presented on the display at the time that the user initiates a shut down of the vehicle.
15. The method of claim 9, further comprising: initiating, by a processing device of a host system, execution of a first software component; in response to initiating the execution of the first software component, allocating, by a memory management unit of the host system, a second memory region of the volatile memory for use by the first software component to store second data; determining, by the memory management unit, that the second memory region is to be saved during the hibernation process; updating, by the memory management unit, a memory map to indicate the second memory region as critical for hibernation; and during the hibernation process, copying the second data stored in the second memory region to the non-volatile memory.
16. The method of claim 9, wherein identifying the at least one first region is performed in response to receiving a memory characterization from an application executing on a processing device, the application to use the at least one first region during execution.
17. The method of claim 9, wherein the volatile memory stores system memory used by a processing device when executing one or more applications, and the first data resides in the system memory, the method further comprising: in response to initiating the hibernation process, instructing, by the processing device, a direct memory access controller to copy the first data to the non-volatile memory; and after instructing the direct memory access controller to copy the first data, shutting off power to the processing device; wherein, after shutting off the power to the processing device, the direct memory access controller completes copying of the first data to the non-volatile memory.
18. The method of claim 9, wherein second data stored in the volatile memory is supported by a first backup power source, and wherein the first data is not supported by a backup power source, the method further comprising: during the hibernation process, copying the second data to the non-volatile memory, wherein the second data is copied after the first data is fully copied to the non-volatile memory.
19. The method of claim 18, wherein the second data is copied to the non-volatile memory after determining an impending failure of the first backup power source.
20. A non-transitory computer-readable storage medium storing instructions that, when executed by a processing device, cause the processing device to perform a method, the method comprising: identifying at least one first region of memory regions in volatile memory, wherein the identified at least one first region is to be saved during a hibernation process; initiating the hibernation process; and during the hibernation process, copying first data stored in the identified at least one first region to non-volatile memory.
</claims>
</document>
