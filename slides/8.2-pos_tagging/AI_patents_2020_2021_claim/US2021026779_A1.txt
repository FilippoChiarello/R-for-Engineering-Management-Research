<document>

<filing_date>
2020-10-12
</filing_date>

<publication_date>
2021-01-28
</publication_date>

<priority_date>
2018-07-30
</priority_date>

<ipc_classes>
G06F12/10,G06F3/06
</ipc_classes>

<assignee>
MICRON TECHNOLOGY
</assignee>

<inventors>
CHRITZ, JEREMY
HULTON, DAVID
</inventors>

<docdb_family_id>
69178099
</docdb_family_id>

<title>
CONFIGURABLE LOGIC BLOCK NETWORKS AND MANAGING COHERENT MEMORY IN THE SAME
</title>

<abstract>
Apparatuses and methods for managing a coherent memory are described. These may include one or more algorithmic logic units (ALUs) and an input/output (I/O) interface. The I/O interface may receive one or more commands and retrieve data from or write data to a memory device. Each command may contain a memory address portion associated with a memory device. The apparatus may also include a memory mapping unit and a device controller. The memory mapping unit may map the memory address to a memory portion of the memory device, and the device controller may communicate with the memory device to retrieve data from or write data to the memory device. The apparatus may be implemented as a processing element in a configurable logic block network, which may additionally include a control logic unit that receives programming instructions from an application and generate the one or more commands based on the instructions.
</abstract>

<claims>
1. A method comprising: receiving, by an integrated circuit, a first set of instructions, wherein the integrated circuit comprises an interconnect and a plurality of logic circuits each comprising at least a memory mapping unit, wherein each of the plurality of logic circuits is addressable by the interconnect and; generating a first command for a first logic circuit of the plurality of logic circuits based on the first set of instructions and a second command for a second logic circuit of the plurality of logic circuits based on the first set of instructions, each of the first and second commands containing at least an operation portion and a memory address portion associated with a shared memory device; by the first logic circuit of the integrated circuit: receiving at least the first command, mapping the memory address portion to a memory portion of the shared memory device, and reading data from or writing data to the memory portion of the shared memory device; and by the second logic circuit of the integrated circuit: receiving at least the second command, mapping the memory address portion to the memory portion of the shared memory device, and reading data from or writing data to the memory portion of the shared memory device.
2. The method of claim 1, wherein generating the first and second commands are performed by a control logic unit of the integrated circuit, the control logic unit is coupled to the interconnect.
3. The method of claim 1, wherein receiving the first set of instructions comprises receiving the first set of instructions from an application by one or more input/output (I/O) blocks of the integrated circuit.
4. The method of claim 1 further comprising: by one or more algorithm logic units (ALUs) of the first logic circuit, performing a first operation based on the operation portion of the first command; and by one of more ALUs of the second logic circuit, performing a second operation based on the operation portion of the second command.
5. The method of claim 4 further comprising, by an advanced extensible interface (AXI): receiving an AXI transaction by the one or more ALUs of the first logic circuit to provide write data from the AXI transaction to input to the shared memory device; and retrieving data from the shared memory device and convert the retrieved data to one or more AXI transactions to input to the one or more ALUs of the first logic circuit.
6. The method of claim 1 further comprising: by a respective device controller of the first and second logic circuit, communicating with the shared memory device to read data from or write data to the memory portion of the shared memory device.
7. The method of claim 1, wherein the integrated circuit is an application-specific integrated circuit (ASIC), a digital signal processor (DSP), a field-programmable gate array (FPGA), or a system-on-chip (SoC).
8. The method of claim 1, wherein the first and second logic circuits each comprises a programmable logic block.
9. An integrated circuit comprising: a plurality of logic circuits each comprising at least a memory mapping unit, wherein the plurality of logic circuits are arranged in rows and columns; an interconnect coupled to the plurality of logic circuits so that each of the logic circuits is addressable by the interconnect; a control logic containing instruction sets and configured to generate one or more commands each associated with a respective logic circuit of the plurality of logic circuits and configured to control the respective logic circuit to access a memory portion of a shared memory device, wherein the memory portion of the shared memory device is provided by the memory mapping unit of the respective logic circuit.
10. The integrated circuit of claim 9, wherein one command associated with the respective logic circuit comprises at least a memory address portion associated with a memory device, and wherein the memory mapping unit of the respective logic circuit is configured to map the memory address portion in the command to the memory portion of the shared memory device.
11. The integrated circuit of claim 10, wherein the respective logic circuit further comprises a device controller configured to: communicate with the memory mapping unit of the respective logic circuit; and read data from or write data to the portion of the shared memory device.
12. The integrated circuit of claim 9 further comprising one or more input/output (I/O) blocks, each configured to receive one or more instructions from an application, wherein the control logic is configured to generate the one or more commands based on the one or more instructions.
13. The integrated circuit of claim 9, wherein a first logic circuit and a second logic circuit of the plurality of logic circuits each further comprise one or more algorithm logic units (ALUs) and an input/output (I/O) interface coupled to the one or more ALUs, and configured to: determine, based on a command associated with the first logic circuit, a first function and a second function; implement, by the one or more ALUs of the first logic circuit, the first function; and transmit an instruction to a second logic circuit of the plurality of logic circuits via the one or more IO blocks.
14. The integrated circuit of claim 13, wherein the second logic circuit is further configured to: receive the instruction from the first logic circuit via the interconnect; determine the second function from the received instruction; and implement, by the one or more ALUs of the second logic circuit, the second function.
15. The integrated circuit of claim 9, wherein the shared memory device is one of a direct memory access (DMA)-compliant memory, a double data rate (DDR) memory, a hybrid memory cube (HMC) device, a peripheral component interconnect express (PCIe) device, or an accelerator.
16. A field-programmable gate array (FPGA) comprising: a first memory mapping unit configured to, in response to a first command, map a memory address portion of the first command to a memory portion of a shared memory device; a second memory mapping unit configured to, in response to a second command, map a memory address portion of the second command to the memory portion of the shared memory device; and an interconnect coupled to the first and second memory mapping units, and configured to address each of the first and second mapping units.
17. The array of claim 16 further comprising: one or more input/output (I/O) blocks configured to receive one or more instructions from an application; and a control logic coupled to the interconnect and configured to generate the first and second commands based on the one or more instructions.
18. The array of claim 16 further comprising: a first device controller coupled to the first memory mapping unit and configured to communicate with the shared memory device; and a second device controller coupled to the second memory mapping unit and configured to communicate with the shared memory device.
19. The array of claim 18 further comprising: a first additional device controller coupled to the first memory mapping unit and configured to communicate with an additional shared memory device; and a second additional device controller coupled to the second memory mapping unit and configured to communicate with the additional shared memory device.
20. The array of claims 19, wherein the shared memory device and the additional shared memory device each is one of a direct memory access (DMA)-compliant memory, a double data rate (DDR) memory, a hybrid memory cube (HMC) device, a peripheral component interconnect express (PCIe) device, or an accelerator.
21. The array of claim 16 further comprising: one or more first algorithm logic units (ALUs) associated with the first memory mapping unit and configured to perform an operation; a first advanced extensible interface (AXI) coupled to the first memory mapping unit and the one or more first ALUs and configured to: receive AXI transactions from the operation of the one or more first ALUs and provide write data from the AXI transactions to the shared memory device; and read data from the shared memory device and convert the read data to AXI transactions to be provided to the one or more first ALUs to perform the operation; one or more second algorithm logic units (ALUs) associated with the second memory mapping unit and configured to perform an operation; and a second advanced extensible interface (AXI) coupled to the second memory mapping unit and the one or more second ALUs and configured to: receive AXI transactions from the operation of the one or more second ALUs and provide write data from the AXI transactions to the shared memory device; and read data from the shared memory device and convert the read data to AXI transactions to be provided to the one or more second ALUs to perform the operation.
</claims>
</document>
