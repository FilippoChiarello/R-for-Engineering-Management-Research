<document>

<filing_date>
2020-06-01
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2018-05-07
</priority_date>

<ipc_classes>
G06F11/36,G06F8/33,G06F8/34
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
ZHANG, Xiongqi
WEI, Xiao
</inventors>

<docdb_family_id>
72424084
</docdb_family_id>

<title>
IMMERSIVE WEB-BASED SIMULATOR FOR DIGITAL ASSISTANT-BASED APPLICATIONS
</title>

<abstract>
Immersive web-based simulator for digital assistant-based applications is provided. A system can provide, for display in a web browser, an inner iframe configured to load, in a secure, access restricted computing environment, an application configured to integrate with a digital assistant. The application can be provided by a third-party developer device. The system can provide, for display in a web browser, an outer iframe configured with a two-way communication protocol to communicate with the inner iframe. The system can provide a state machine to identify a current state of the application loaded in the inner frame, and load a next state of the application responsive to a control input.
</abstract>

<claims>
1. 1.-21. (canceled)
22. A system to detect errors in digital assistant-based applications, comprising: a data processing system comprising one or more processors to: identify an application package file for an application, provided by an application developer, that interfaces with a digital assistant via audio signals; receive, from a device of the application developer, a transcript file for the application; establish, in a web browser executed by the device of the application developer, a first iframe of a simulator component for digital assistant-based applications, the simulator component to establish a plurality of iframes within the first iframe that communicate between the plurality of iframes via a two-way communication protocol; provide, for display in the web browser executed by the device of the application developer, a second iframe within the first iframe to load a control setting for the simulator component; provide, for display in the web browser, a third iframe within the first iframe to display output of the simulator component; provide, for display in the web browser, a fourth iframe within the first iframe to execute a state machine to generate a query based on the transcript file and responsive to the control setting established in the second iframe; the simulator component to: provide, via the fourth iframe, the query for display via the web browser; receive, responsive to the query, an input including a content item request; update a state of the state machine responsive to the query and the input to generate an application output, the application output including a digital component responsive to the content item request for display via the third iframe; identify, based on a second query generated by the state machine responsive to the input, an error with the application; and terminate, responsive to the error, at least one of the plurality of iframes established by the simulator component.
23. The system of claim 22, comprising the simulator component to simulate content selection including selection of at least one digital component that includes an audio component.
24. The system of claim 22, comprising the simulator component to simulate content selection as part of a digital component placement campaign.
25. The system of claim 22, wherein the content item request includes a request for audio content.
26. The system of claim 22, wherein the application output includes audio content.
27. The system of claim 22, wherein the fourth iframe has restricted access to computing resources of the device of the application developer.
28. The system of claim 22, comprising the data processing system to execute the state machine provided via the fourth iframe.
29. The system of claim 22, comprising the data processing system to: receive an audio signal responsive to the query displayed by the simulator component; and provide the audio signal as the input to the state machine of the fourth iframe.
30. The system of claim 22, wherein the application is built by the application developer via a digital assistant application engine provided by the data processing system.
31. The system claim 22, comprising: the data processing system to load, in the second iframe, the control setting comprising at least one of a surface, a language, or a location.
32. The system of claim 22, comprising: the data processing system to receive, from the device of the application developer, an HTML file comprising the transcript file.
33. The system of claim 22, comprising: the data processing system to simulate one or more features of the application and provide a dynamic, real-time interface via at least one of the plurality of iframes.
34. The system of claim 22, comprising the data processing system to: receive, via the control setting of the second iframe, a selection of a surface from a plurality of surfaces; and generate the query based on a policy or characteristic for the surface selected via the second iframe.
35. The system of claim 22, comprising: the data processing system to generate an alert indicating the error associated with the application simulated via the simulator component.
36. The system of claim 22, comprising: the data processing system to block, responsive to the error, further communication between at least two of the plurality of iframes established by the simulator component.
37. The system of claim 22, comprising: the data processing system to refresh, responsive to the error, at least one of the plurality of iframes established by the simulator component.
38. The system of claim 22, comprising the data processing system to: remove, responsive to the error, at least one of the plurality of iframes; and establish a new instance of the at least one of the plurality of iframes previously removed.
39. A method of detecting errors in digital assistant-based applications, comprising: identifying, by a data processing system comprising one or more processors and memory, an application package file for an application, provided by an application developer, that interfaces with a digital assistant via audio signals; receiving, by the data processing system from a device of the application developer, a transcript file for the application; establishing, by the data processing system in a web browser executed by the device of the application developer, a first iframe of a simulator component for digital assistant-based applications, the simulator component to establish a plurality of iframes within the first iframe that communicate between the plurality of iframes via a two-way communication protocol; providing, by the data processing system for display in the web browser executed by the device of the application developer, a second iframe within the first iframe to load a control setting for the simulator component; providing, by the data processing system for display in the web browser, a third iframe within the first iframe to display output of the simulator component; providing, by the data processing system for display in the web browser, a fourth iframe within the first iframe that executes a state machine to generate a query based on the transcript file and responsive to the control setting established in the second iframe; providing, via the fourth iframe, the query for display via the web browser; receiving, responsive to the query, an input including a content item request; updating a state of the state machine responsive to the query and the input to generate an application output for display via the third iframe, the application output including a digital component responsive to the content item request; identifying, based on a second query generated by the state machine responsive to the input, an error with the application; and terminating, responsive to the error, at least one of the plurality of iframes established by the simulator component.
40. The method of claim 39, wherein the fourth iframe has restricted access to computing resources of the device of the application developer.
41. The method of claim 39, comprising: receiving an audio signal responsive to the query displayed by the simulator component; and providing the audio signal as the input to the state machine of the fourth iframe.
</claims>
</document>
