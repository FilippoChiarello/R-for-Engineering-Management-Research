<document>

<filing_date>
2019-02-10
</filing_date>

<publication_date>
2020-08-13
</publication_date>

<priority_date>
2019-02-10
</priority_date>

<ipc_classes>
G06Q30/02,H04L12/26,H04L29/08
</ipc_classes>

<assignee>
KOVVALI, SURYA KUMAR
HUTCHINS, JOHN
SHASTRI, SHREERANG
</assignee>

<inventors>
KOVVALI, SURYA KUMAR
HUTCHINS, JOHN
SHASTRI, SHREERANG
</inventors>

<docdb_family_id>
71946209
</docdb_family_id>

<title>
Correlating multi-dimensional data to extract & associate unique identifiers for analytics insights, monetization, QOE & Orchestration
</title>

<abstract>
Data collection system that receives plurality of user network data access flows that include HTTP/HTTPS URLs from network probes or network elements such as CDNs, Proxies, control plane logs (S11, SlAP etc.) that include permanent subscriber identifier (IMSI, IMEI) or obfuscated subscriber identifiers, or obtains such identifiers corresponding to user IP addresses in access flows from operator network elements, extracts plurality of unique identifiers (UUIDs), plurality of tags, or contextual identifiers that appear in URL strings, determines domain names from HTTP/HTTPS header fields or temporally close DNS flows and generates a mapping table that includes subscriber identifiers, domain names, HTTP tags, and associates subset of UUIDs as potential Advertisement Identifier (Ad-Id) for each subscriber-id based on the usage counts of that UUID across multiple domains.
</abstract>

<claims>
1. A data collection system that receives plurality of user network data access flows that include HTTP/HTTPS URLs from network probes or network elements such as CDNs, Proxies, control plane logs (S11, S1AP etc.) that include permanent subscriber identifier (IMSI, IMEI) or obfuscated subscriber identifiers, or obtains such identifiers corresponding to user IP addresses in access flows from operator network elements, extracts plurality of unique identifiers (UUIDs), plurality of tags, or contextual identifiers that appear in URL strings, determines domain names from HTTP/HTTPS header fields or temporally close DNS flows and generates a mapping table that includes subscriber identifiers, domain names, HTTP tags, and associates subset of UUIDs as potential Advertisement Identifier (Ad-Id) for each subscriber-id based on the usage counts of that UUID across multiple domains.
2. Selecting a small set of UUIDs from the mapping table in claim 1 based on use count by a subscriber-id in recent flows across multiple domains.
3. Exporting the subscriber-ID to Ad-ID mapping information generated in claim 2 to other operator network elements so that they could determine Subscriber-id corresponding to an Ad-Id in click-stream data for targeted advertisements.
4. Presenting an API for the mapping table in claim 2 to facilitate retrieval of subscriber ID for a given Ad-ID or plurality of Ad-IDs with different confidence intervals for a given subscriber-ID.
5. Increasing the confidence interval for Subscriber-ID to Ad-ID mapping when the external query in claim 4 is by Ad-ID.
6. Using the domain/publisher name and associated HTTP tags in the mapping table in claim 1 associated with most probable Ad-IDs with increased confidence intervals to increase confidence intervals for other subscriber-id to Ad-Id mappings.
7. The data collection system in claim 1 dynamically learning & selecting most probable Ad-Ids from plurality of UUIDs observed in click stream data and subsequently using them for follow-on time periods, and age-out unused IDs or discard IDs below a confidence level to reduce the number of ids; this auto-tuning accommodates UUID changes and uses both old and new IDs for a configured time period or based on usage count.
8. A data collection system that receives click stream data and subscriber information that includes HTTP/HTTPS/QUIK URL information, subscriber identifiers, such as IMSI, IMEI, or obfuscated subscriber identifiers, device types etc., and differentiates traffic from web-browser vs. native applications (non-browser), based on HTTP information elements, the number of simultaneous connections to the same site, number of simultaneous connections to multiple sites, number of websites accessed in a given user session, web-site access pattern, fully qualified domain name at the start of new session, learned browser behavior from similar set of device types etc., and uses the learned information to identify new user flows as browser vs. native applications in real-time.
9. The user session in claim 8 is identified as all the user flows between two significant time gaps where the time gap is chosen to reflect user idle time estimated from large number of user flows.
10. The web-site access pattern in claim 8 includes the first site accessed in a new session
11. The number of websites accessed in claim 8 excludes non-user-initiated requests such as advertisements.
12. A data collection system that receives plurality of user network data access flows that include HTTP/HTTPS/QUIK URLs from network elements such as probes, CDNs, Proxies, etc., extracts plurality of unique identifiers (UIDs), plurality of tags that appear in the proximity of the said UIDs, or contextual identifiers that appear in URL strings, determines domain names from URL fields or temporally close DNS flows and generates a mapping table that includes subscriber identities, domain names, HTTP tags, and associates subset of UIDs as potential Application Identifier based on the usage counts of that UID across multiple user devices of the same device family, to the same website; using the application identifier determined to group flow data from large number of users to characterize application behavior, and detect anomalies.
13. The website in claim 12 for determining UUID as Application Identifier is the first or dominant website in sessions of multiple users; thus, multiple users access the said website and the same UID appears in sessions of multiple users.
14. The anomaly detection in claim 12 includes learning application dataflow behavior of a number of flows over longer time period, fitting a statistical model, and using the model to determine anomalies of new flows from the same AppID in near Realtime.
</claims>
</document>
