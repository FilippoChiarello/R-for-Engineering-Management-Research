<document>

<filing_date>
2016-11-23
</filing_date>

<publication_date>
2021-01-12
</publication_date>

<priority_date>
2016-11-23
</priority_date>

<ipc_classes>
G06F40/35,G06F9/48,G06F9/50,G06F9/54
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
STEFANI STEFANO
SIVASUBRAMANIAN, SWAMINATHAN
ANBAZHAGAN, VIKRAM SATHYANARAYANA
ZHUKOV, VLADIMIR
</inventors>

<docdb_family_id>
62147576
</docdb_family_id>

<title>
Back-end task fulfillment for dialog-driven applications
</title>

<abstract>
A determination is made as to whether a value of a first parameter of a first application is to be obtained using a natural language interaction. Based on received input, a first service of a plurality of services is identified. The first service is to be used to perform a first task associated with the first parameter. Portions of the first application to determine the value of the first parameter and to invoke the first service are generated.
</abstract>

<claims>
1. A system, comprising: one or more processors; and memory storing program instructions that, if executed, cause the one or more processors to perform a method comprising: determining whether a value of a first parameter of a first application is to be obtained using a natural language interaction; identifying, based at least in part on received input, a first service of a plurality of services, wherein the first service is to be used to perform a first task associated with the first parameter; and based, at least in part, on determining that the value of the first parameter of the first application is to be obtained using the natural language interaction, generating one or more portions of application code for the first application, wherein the one or more generated portions of application code are associated with obtaining the value of the first parameter and invoking the first service.
2. The system as recited in claim 1, wherein the first service comprises one of: (a) a dynamic provisioning computing service at which an execution platform for a program to be used to implement the first task is selected at run-time, without pre-allocating the execution platform, and (b) a virtual computing service of a provider network at which a virtual machine to be used to implement the first task is pre-allocated to a client.
3. The system as recited in claim 1, wherein the first service is implemented at a provider network, wherein the method comprises: identifying a resource external to the provider network, wherein the resource is to be used to implement a second task of the first application.
4. The system as recited in claim 3, wherein the resource is instantiated at one or more of: (a) a premise of an application owner of the first application or (b) a premise of a third party vendor.
5. The system as recited in claim 1, wherein the natural language interaction is performed using a device comprising one or more of: (a) a speech sensor, (b) a speech generator or (c) an input/output interface for text messages.
6. A method, comprising: determining whether a value of a first parameter of a first application is to be obtained using a natural language interaction; identifying, based at least in part on received input, a first service of a plurality of services, wherein the first service is to be used to perform a first task associated with the first parameter; and based, at least in part, on determining that the value of the first parameter of the first application is to be obtained using the natural language interaction, generating one or more portions of application code for the first application, wherein the one or more generated portions of application code are associated with obtaining the value of the first parameter and invoking the first service.
7. The method as recited in claim 6, wherein the first service comprises one of: (a) a dynamic provisioning computing service or (b) a virtual computing service.
8. The method as recited in claim 6, wherein the first service is implemented at a provider network, the method further comprising: identifying a resource external to the provider network, wherein the resource is to be used to implement a second task of the first application.
9. The method as recited in claim 8, wherein the resource is instantiated at one or more of: (a) a premise of an application owner of the first application or (b) a premise of a third party application vendor.
10. The method as recited in claim 6, wherein the one or more generated portions of the first application are further associated with invoking a second service of the plurality of services to perform the first task.
11. The method as recited in claim 6, further comprising: determining, based on input received via a programmatic interface, wherein the input does not include source code, one or more steps of the natural language interaction.
12. The method as recited in claim 6, wherein the natural language interaction comprises one or more of: (a) a speech-based interaction or (b) a text-based interaction.
13. The method as recited in claim 6, further comprising: storing an indication of one or more device types to be used for the natural language interaction.
14. The method as recited in claim 6, further comprising: determining that an end user has approved a use of profile-based personalization with respect to the first application; and selecting a value of a second parameter of the first application based at least in part on a profile record of the end user.
15. The method as recited in claim 6, further comprising: storing one or more log records indicative of interactions with respective end-users of the first application; and in response to a query received via a programmatic interface, providing an indication of the one or more log records.
16. A non-transitory computer-accessible storage medium storing program instructions that when executed on one or more processors cause the one or more processors to: determine whether a value of a first parameter of a first application is to be obtained using a natural language interaction; identify, based at least in part on received input, a first service of a plurality of services, wherein the first service is to be used to perform a first task associated with the first parameter; and based, at least in part, on determining that the value of the first parameter of the first application is to be obtained using the natural language interaction, generate one or more portions of application code for the first application, wherein the one or more generated portions of application code are associated with obtaining the value of the first parameter and invoking the first service.
17. The non-transitory computer-accessible storage medium as recited in claim 16, wherein the first service comprises one of: (a) a dynamic provisioning computing service or (b) a virtual computing service.
18. The non-transitory computer-accessible storage medium as recited in claim 16, wherein the first service is implemented at a provider network, wherein the instructions when executed on the one or more processors cause the one or more processors to: identify a resource external to the provider network, wherein the resource is to be used to implement a second task of the first application.
19. The non-transitory computer-accessible storage medium as recited in claim 18, wherein the resource is instantiated at one or more of: (a) a premise of an application owner of the first application or (b) a premise of a third party vendor.
20. The non-transitory computer-accessible storage medium as recited in claim 16, wherein the one or more generated portions of application code are further associated with invoking a second service of the plurality of services to perform the first task.
</claims>
</document>
