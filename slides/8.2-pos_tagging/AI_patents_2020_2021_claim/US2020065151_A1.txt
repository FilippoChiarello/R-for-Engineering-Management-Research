<document>

<filing_date>
2019-03-20
</filing_date>

<publication_date>
2020-02-27
</publication_date>

<priority_date>
2018-08-21
</priority_date>

<ipc_classes>
G06F9/50
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
PRASAD, RAJENDRA T.
JANA, KOUSTUV
JAGANNATHAN, PURNIMA
NAGARAJAN, RAJESH
SEKHAR, MOHAN
VENKATESWARAN, BALAJI
HIGGINS, LUKE
MOHAMMED YUSUF, SYED
GHOSH, BHASKAR
SENAPATI, PRADEEP
VIJAYARAGHAVAN, KOUSHIK
SHAFFI, NIYAZ
</inventors>

<docdb_family_id>
69584580
</docdb_family_id>

<title>
AUTOMATION PLAN GENERATION AND TICKET CLASSIFICATION FOR AUTOMATED TICKET RESOLUTION
</title>

<abstract>
A device may obtain ticket data relating to a set of tickets, and process the ticket data to generate a ticket analysis model that is a clustering based natural language analysis model of natural language text associated with tickets of the set of tickets. The device may classify the set of tickets using the ticket analysis model, may determine an automation plan for at least one class of ticket determined based on classifying the set of tickets, and may implement the automation plan to configure an automatic ticket resolution or ticket generation mitigation procedure for the at least one class of ticket. The device may receive a ticket after configuring the automatic ticket resolution or ticket generation mitigation procedure, may classify, using the ticket analysis model, the ticket into the at least one class of ticket, and may automatically implement a response action for the ticket based on classifying the ticket and using the automatic ticket resolution or ticket generation mitigation procedure.
</abstract>

<claims>
1. A device, comprising: one or more memories; and one or more processors, communicatively coupled to the one or more memories, to: obtain ticket data relating to a set of tickets; process the ticket data to generate a ticket analysis model, wherein the ticket analysis model is a clustering based natural language analysis model of natural language text associated with tickets of the set of tickets; classify, using the ticket analysis model, the set of tickets; determine, for at least one class of ticket determined based on classifying the set of tickets, an automation plan for the at least one class of ticket; implement the automation plan to configure an automatic ticket resolution or ticket generation mitigation procedure for the at least one class of ticket; receive a ticket after configuring the automatic ticket resolution or ticket generation mitigation procedure; classify, using the ticket analysis model, the ticket into the at least one class of ticket; and automatically implement a response action for the ticket based on classifying the ticket into the at least one class of ticket and using the automatic ticket resolution or ticket generation mitigation procedure.
2. The device of claim 1, wherein the one or more processors are further to: determine a set of criticality scores for a set of classes of tickets determined based on classifying the set of tickets; select the at least one class of ticket, from the set of classes of tickets, for determining the automation plan based on the set of criticality scores for the set of classes, wherein a criticality score, of the set of criticality scores, is related to at least one of a predicted ticket inflow rate, a predicted ticket subject impact, or a ticket type for a class of ticket of the set of classes of tickets; and wherein the one or more processors, that cause the one or more processors to determine the automation plan, cause the one or more processors to: determine the automation plan for the at least one class based on selecting the at least one class of ticket.
3. The device of claim 1, wherein the one or more processors are further to: determine a set of automation scores for a set of classes of tickets determined based on classifying the set of tickets, wherein an automation score, of the set of automation scores, is related to a predicted automatability for resolving a class of tickets of the set of classes of tickets; select the at least one class of ticket, from the set of classes of tickets, for determining the automation plan based on the set of automation scores for the set of classes; and wherein the one or more processors, that cause the one or more processors to determine the automation plan, cause the one or more processors to: determine the automation plan for the at least one class of ticket based on selecting the at least one class.
4. The device of claim 1, wherein the one or more processors, when processing the ticket data to generate the ticket analysis model, are to: process the ticket data using at least one of unsupervised clustering of a set of n-gram keywords of the natural language text or supervised clustering of the set of n-gram keywords of the natural language text.
5. The device of claim 1, wherein the one or more processors, are further to: generate a visualization model based on visualization data identifying a set of analytics and a set of user interactions with the set of analytics; determine, based on the visualization model, a predicted user interface view for data relating to one or more predictions for the at least one class of ticket, wherein the predicted user interface view is predicted to minimize a quantity of user interactions to view information relating to the at least one class of ticket; and provide the predicted user interface view for display.
6. The device of claim 1, wherein the one or more processors, when determining the automation plan, are to: identify an asset catalogue storing information identifying a set of ticket resolution descriptions; and generate, based on the set of ticket resolution descriptions, the automatic ticket resolution or ticket generation mitigation procedure.
7. The device of claim 1, wherein the one or more processors, when automatically implementing the response action, are to: generate program code to resolve the ticket based on the automatic ticket resolution or ticket generation mitigation procedure; and communicate with another device to automatically deploy the program code to the other device.
8. The device of claim 1, wherein the one or more processors, when automatically implementing the response action, are to: select an application, from an application store, based on a class of the ticket, wherein the class is included in the at least one class of ticket, wherein the application is associated with resolving tickets of the class; and communicate with another device to provide the ticket for processing using the application.
9. The device of claim 1, wherein the one or more processors, when determining the automation plan, are to: process a set of application descriptions for a set of applications; determine, based on processing the set of application descriptions, a set of application scores, wherein the set of application scores relate to a likelihood that an application, of the set of applications, is usable for automatically resolving a class of ticket of the at least one class of ticket; and select, based on the set of application scores, a particular application, of the set of applications, for use in resolving the class of ticket.
10. A method, comprising: receiving, by a device, a request to generate an automation plan for resolving incoming tickets; obtaining, by the device, ticket data based on receiving the request; processing, by the device, natural language descriptions of tickets in the ticket data to generate a ticket analysis model for classifying tickets into at least one of a plurality of classes of tickets, wherein the plurality of classes of tickets are a set of clusters identified by the ticket analysis model; determining, by the device and for a class of tickets of the plurality of classes of tickets, the automation plan for resolving a portion of the incoming tickets classified into the class; receiving, by the device, a ticket after determining the automation plan; classifying, by the device and using the ticket analysis model, the ticket into the class of tickets of the plurality of classes of tickets; and automatically resolving, by the device, the ticket based on the automation plan based on classifying the ticket into the class of tickets of the plurality of classes of tickets.
11. The method of claim 10, further comprising pre-processing the ticket data, and wherein pre-processing the ticket data comprises at least one of: removing numbers from the ticket data, removing special characters from the ticket data, removing stop words from the ticket data, removing punctuation from the ticket data, removing whitespaces from the ticket data, or performing a stemming operation on words of the ticket data.
12. The method of claim 10, wherein processing the natural language descriptions of tickets comprises: extracting entities from the natural language descriptions of tickets; and generating the set of clusters based on extracting the entities from the natural language descriptions.
13. The method of claim 10, further comprising: determining a predicted inflow for the class of tickets; determining that the predicted inflow satisfies a threshold; and determining the automation plan based on determining that the predicted inflow satisfies the threshold.
14. The method of claim 10, wherein automatically resolving the ticket comprises: transmitting an alert to a preselected entity, wherein the alert identifies an issue relating to the class of tickets of the plurality of classes of tickets; and assigning the ticket to the preselected entity.
15. The method of claim 10, wherein automatically resolving the ticket comprises: automatically allocating computing resources for ticket resolution, wherein an amount of computing resources is selected based on the class of tickets of the plurality of classes of tickets; and using the computing resources to resolve the ticket based on automatically allocating the computing resources.
16. The method of claim 10, further comprising: ordering the plurality of classes of tickets based on one or more characteristics of the plurality of classes of tickets; and selecting the class of tickets of the plurality of classes of tickets for the automation plan based on ordering the plurality of classes of tickets.
17. A non-transitory computer-readable medium storing instructions, the instructions comprising one or more instructions that, when executed by one or more processors, cause the one or more processors to: obtain ticket data relating to a set of tickets; process the ticket data to identify a set of ticket clusters; determine, for at least one cluster, an automation plan; and implement the automation plan to configure an automatic ticket resolution or ticket generation mitigation procedure for the at least one cluster, wherein implementing the automation plan comprises: configuring monitoring for tickets of a type corresponding to the at least one cluster, allocating resources for resolving detected tickets of the type corresponding to the at least one cluster, and providing a user interface including a visualization of data relating to the resolving of detected tickets of the type corresponding to the at least one cluster.
18. The non-transitory computer-readable medium of claim 17, wherein the one or more instructions, when executed by the one or more processors, further cause the one or more processors to: receive a ticket; classify the ticket into the at least one cluster based on a natural language description of an issue included in the ticket; and use the allocated resources to resolve the issue included in the ticket.
19. The non-transitory computer-readable medium of claim 18, wherein the one or more instructions, when executed by the one or more processors, further cause the one or more processors to: update the user interface to indicate that the ticket is resolved.
20. The non-transitory computer-readable medium of claim 17, wherein the one or more instructions, when executed by the one or more processors, further cause the one or more processors to: predict a ticket volume for the at least one cluster; and allocate the resources based on the ticket volume for the at least one cluster.
</claims>
</document>
