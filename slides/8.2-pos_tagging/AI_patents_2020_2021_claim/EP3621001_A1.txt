<document>

<filing_date>
2019-03-11
</filing_date>

<publication_date>
2020-03-11
</publication_date>

<priority_date>
2018-09-04
</priority_date>

<ipc_classes>
G06Q10/04
</ipc_classes>

<assignee>
HITACHI
</assignee>

<inventors>
MIYAMOTO, HIROKI
ZHU, YUNCHENG
</inventors>

<docdb_family_id>
65766822
</docdb_family_id>

<title>
SOLUTION SEARCHING DEVICE
</title>

<abstract>
A solution is calculated using a tree search within a limited calculation time. A solution searching device that performs solution search using a search tree includes a search tree expanding unit that creates a node based on options until a stop condition is satisfied, an evaluation calculation unit that calculates an evaluation value for an leaf node using a first evaluation method, and a search solution determination unit that sequentially updates an evaluation value of an upper node based on an evaluation value of a lower node to determine a search solution.
</abstract>

<claims>
1. A solution searching device that performs solution search using a search tree comprising: a search tree expanding unit that creates a node based on options until a stop condition is satisfied; an evaluation calculation unit that calculates evaluation values for leaf nodes using a first evaluation method; and a search solution determination unit that sequentially updates an evaluation value of an upper node based on an evaluation value of a lower node to determine a search solution.
2. The solution searching device according to claim 1,
wherein the search solution determination unit updates an evaluation value of a child node of a root node using a second evaluation method different from the first evaluation method to determine the search solution.
3. The solution searching device according to claim 2,
wherein in a case where evaluation values of a plurality of child nodes of the root node are the highest values, the search solution determination unit updates the evaluation values of the plurality of child nodes using the second evaluation method to determine the search solution.
4. The solution searching device according to any one of claims 2 through 3,
wherein the first evaluation method evaluates a status of a first stage defined by a constraint condition, and
the second evaluation method evaluates a status of a stage prior to the first stage.
5. The solution searching device according to any one of claims 1 through 4,
wherein the search tree expanding unit checks whether a new node overlaps already created nodes, and in a case where the new node overlaps one of the already created nodes, the tree expanding unit omits creation of the new node.
6. The solution searching device according to claim 5,
wherein the search tree expanding unit calculates a feature value of the new node, compares the feature value of the new node with feature values of the already created nodes, and in a case where the feature value of the new node and any one of the feature values of the already created nodes are the same, determines that the new node overlaps one of the already created nodes.
7. An optimization exploration system comprising: a controller that controls an object to be controlled; and the solution searching device according to claim 1 that acquires phase information of the object to be controlled from the controller and performs solution search using the search tree based on the phase information.
8. A solution search method using a search tree executed by a computer system including one or more storage devices and one or more processors operating in accordance with a program stored in the one or more storage devices, the method comprising: causing the processor to create a node based on options until a stop condition is satisfied; causing the processor to calculate evaluation values for leaf nodes using a first evaluation method; and causing the processor to sequentially update an evaluation value of an upper node based on an evaluation value of a lower node to determine a search solution.
9. The solution search method according to claim 8,
wherein the processor updates an evaluation value of a child node of a root node using a second evaluation method different from the first evaluation method to determine the search solution.
10. The solution search method according to claim 9,
wherein, in a case where evaluation values of a plurality of the child nodes of the root node are the highest values, the processor updates the evaluation values of the plurality of child nodes using the second evaluation method to determine the search solution.
11. The solution search method according to any one of claims 9 through 10,
wherein the first evaluation method evaluates a status of a first stage defined by a constraint condition, and
the second evaluation method evaluates a status of a stage prior to the first stage.
12. The solution search method according to any one of claims 8 through 11,
wherein the processor checks whether a new node overlap with already created nodes, and in a case where the new node overlaps one of the already created nodes, the processor omits creation of the new node.
13. The solution search method according to claim 12,
wherein the processor calculates a feature value of the new node, compares the feature value of the new node with the feature values of the already created nodes, and in a case where the feature value of the new node and any one of the feature values of the already created nodes are the same, determines that the new node overlaps one of the already created nodes.
</claims>
</document>
