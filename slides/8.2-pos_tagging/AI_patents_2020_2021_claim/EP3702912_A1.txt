<document>

<filing_date>
2018-08-08
</filing_date>

<publication_date>
2020-09-02
</publication_date>

<priority_date>
2017-09-30
</priority_date>

<ipc_classes>
G06F9/445
</ipc_classes>

<assignee>
GUANGDONG OPPO MOBILE TELECOMMUNICATIONS CORPORATION
</assignee>

<inventors>
ZENG, YUANQING
</inventors>

<docdb_family_id>
61139811
</docdb_family_id>

<title>
BACKGROUND APPLICATION CLEANING METHOD AND APPARATUS, AND STORAGE MEDIUM AND ELECTRONIC DEVICE
</title>

<abstract>
Implementations of the present disclosure provide a method and device for cleaning up a background application, a storage medium, and an electronic device. The method for cleaning up a background application includes the following. Collect multi-dimensional feature information associated with the application as samples and construct a sample set associated with the application according to the samples. Extract, according to a predetermined rule, feature information from the sample set to construct multiple training sets. Train each training set to generate a corresponding decision tree. Predict, with multiple decision trees generated, current feature information associated with the application and output multiple predicted results when the application is switched to the background, where the predicted results include predicted results indicative of that the application is able to be cleaned up and predicted results indicative of that the application is unable to be cleaned up. Determine whether the application is able to be cleaned up according to the multiple predicted results.
</abstract>

<claims>
1. A method for cleaning up a background application, comprising: collecting multi-dimensional feature information associated with the application as samples and constructing a sample set associated with the application according to the samples; extracting, according to a predetermined rule, feature information from the sample set to construct a plurality of training sets; training each of the plurality of training sets to generate a corresponding decision tree; predicting, with a plurality of decision trees generated, current feature information associated with the application and outputting a plurality of predicted results upon detecting that the application is switched to the background, wherein the plurality of predicted results comprise predicted results indicative of that the application is able to be cleaned up and predicted results indicative of that the application is unable to be cleaned up; and determining whether the application is able to be cleaned up according to the plurality of predicted results.
2. The method of claim 1, wherein training each of the training sets to generate a corresponding decision tree comprises: computing an information gain of each piece of feature information contained in each of the training sets; and generating a corresponding decision tree by determining a piece of feature information with a maximum information gain in each of the plurality of training sets as a piece of feature information of a root node and determining remaining pieces of feature information in each of the plurality of training sets as pieces of feature information of leaf nodes in descending order of information gains of the remaining pieces of feature information.
3. The method of claim 2, wherein computing the information gain of each piece of feature information contained in each of the plurality of training sets comprises:
computing, with an equation g(S, K)=H(S)-H(S|K), the information gain of each piece of feature information contained in each of the plurality of training sets, wherein g(S, K) represents an information gain of feature information K contained in a training set S, H(S) represents entropy of the training set S, and H(S|K) represents entropy of the training set S after dividing the training set S with the feature information K, wherein represents a probability that a predicted result of ith category appears in the training set S, and n represents predicted result categories, and wherein H(Y|K = Ki) represents conditional entropy of the training set S when the feature information K is fixed to be Ki.
4. The method of any of claims 1 to 3, wherein extracting, according to the predetermined rule, the feature information from the sample set to construct the plurality of training sets comprises:
obtaining preset number pieces of feature information each time by performing a random extraction with replacement on the multi-dimensional feature information contained in each of the samples to construct a corresponding sub-sample, wherein each of the plurality of training sets is constructed with a plurality of sub-samples, and the plurality of training sets are constructed after performing the random extraction with replacement a number of times.
5. The method of claim 4, wherein the multi-dimensional feature information associated with the application comprises Q pieces of feature information, and the preset number is q, wherein the method further comprises:
determining, with an equation the number of the plurality of training sets constructed, wherein M represents the number of the plurality of training sets.
6. The method of claim 4, further comprising:
after collecting the multi-dimensional feature information associated with the application as the samples: marking each of the samples in the sample set with a sample tag to obtain a plurality of sample tags, wherein the plurality of sample tags comprise sample tags indicative of that the application is able to be cleaned up and sample tags indicative of that the application is unable to be cleaned up; wherein the method further comprises:
after constructing a corresponding sub-sample:
marking each sub-sample with a sample tag of a corresponding sample.
7. The method of claim 1, wherein determining whether the application is able to be cleaned up according to the plurality of predicted results comprises: determining a ratio of the number of the predicted results indicative of that the application is able to be cleaned up to the number of all the plurality of predicted results as a cleanable probability; determining a ratio of the predicted results indicative of that the application is unable to be cleaned up to the number of all the plurality of predicted results as a maintaining probability; determining that the application is able to be cleaned up upon determining that the cleanable probability of the application is larger than the maintaining probability of the application; and determining that the application is kept to be in the background upon determining that the maintaining probability of the application is larger than the cleanable probability of the application.
8. The method of claim 7, further comprising:
when a plurality of applications are in the background: selecting preset number applications from the plurality of applications in descending order of cleanable probabilities of the plurality of applications, or selecting, from the plurality of applications, applications each with a cleanable probability larger than a preset probability; and cleaning up the applications selected.
9. The method of claim 1, wherein collecting the multi-dimensional feature information associated with the application as the samples and constructing the sample set associated with the application according to the samples comprises: collecting the multi-dimensional feature information associated with the application once every preset time interval, wherein the multi-dimensional feature information associated with the application comprises feature information associated with running of the application and/or status feature information of an electronic device; determining the multi-dimensional feature information associated with the application collected each time as one of the plurality of samples; and obtaining the plurality of samples within a preset historical time period to construct the sample set.
10. The method of claim 1, further comprising:
after collecting the multi-dimensional feature information associated with the application as the samples and constructing the sample set associated with the application according to the samples: transmitting the sample set associated with the application to a server; and receiving the plurality of decision trees from the server.
11. A device for cleaning up a background application, comprising: a collecting unit configured to collect multi-dimensional feature information associated with an application as samples and construct a sample set associated with the application according to the samples; an extracting unit configured to extract, according to a predetermined rule, feature information from the sample set to construct a plurality of training sets; a training unit configured to train each of the plurality of training sets to generate a corresponding decision tree; a predicting unit configured to predict, with a plurality of decision trees generated, current feature information associated with the application and output a plurality of predicted results upon detecting that the application is switched to the background, wherein the plurality of predicted results comprise predicted results indicative of that the application is able to be cleaned up and predicted results indicative of that the application is unable to be cleaned up; and a first determining unit configured to determine whether the application is able to be cleaned up according to the plurality of predicted results.
12. The device of claim 11, wherein the training unit comprises: a computing sub-unit configured to compute an information gain of each piece of feature information contained in each of the plurality of training sets; and a generating sub-unit configured to generate a corresponding decision tree by determining a piece of feature information with a maximum information gain in each of the plurality of training sets as a piece of feature information of a root node and determining remaining pieces of feature information in each of the plurality of training sets as pieces of feature information of leaf nodes in descending order of information gains of the remaining pieces of feature information.
13. The device of any of claims 11 or 12, wherein the extracting unit is configured to obtain preset number pieces of feature information each time by performing a random extraction with replacement on the multi-dimensional feature information contained in each of the samples to construct a corresponding sub-sample, wherein each of the plurality of training sets is constructed with a plurality of sub-samples, and the plurality of training sets are constructed after performing the random extraction with replacement a number of times;
wherein the multi-dimensional feature information associated with the application comprises Q pieces of feature information, and the preset number is q, wherein the device further comprises:
a second determining unit configured to determine, with an equation the number of the plurality of training sets constructed, wherein M represents the number of the plurality of training sets.
14. The device of claim 13, further comprising a marking unit configured to: mark each of the samples in the sample set with a sample tag to obtain a plurality of sample tags, wherein the plurality of sample tags comprise sample tags indicative of that the application is able to be cleaned up and sample tags indicative of that the application is unable to be cleaned up; and mark each sub-sample with a sample tag of a corresponding sample.
15. The device of claim 11, wherein the first determining unit comprises: a calculating sub-unit configured to determine a ratio of the number of the predicted results indicative of that the application is able to be cleaned up to the number of all the plurality of predicted results as a cleanable probability, and determine a ratio of the predicted results indicative of that the application is unable to be cleaned up to the number of all the plurality of predicted results as a maintaining probability; and a determining sub-unit configured to determine that the application is able to be cleaned up upon determining that the cleanable probability of the application is larger than the maintaining probability of the application, and determine that the application is kept to be in the background upon determining that the maintaining probability of the application is larger than the cleanable probability of the application.
16. A storage medium storing computer programs, wherein when the computer programs are run in a computer, the computer is enabled to perform the method for cleaning up a background application of any of claims 1 to 10.
17. An electronic device comprising a processor and a memory, the memory storing computer programs, and the processor being configured to invoke the computer programs to: collect multi-dimensional feature information associated with an application as samples and construct a sample set associated with the application according to the samples; extract, according to a predetermined rule, feature information from the sample set to construct a plurality of training sets; train each of the plurality of training sets to generate a corresponding decision tree; predict, with a plurality of decision trees generated, current feature information associated with the application and output a plurality of predicted results upon detecting that the application is switched to the background, wherein the plurality of predicted results comprise predicted results indicative of that the application is able to be cleaned up and predicted results indicative of that the application is unable to be cleaned up; and determine whether the application is able to be cleaned up according to the plurality of predicted results.
18. The electronic device of claim 17, wherein the processor configured to train each of the plurality of training sets to generate a corresponding decision tree is configured to: compute an information gain of each piece of feature information contained in each of the plurality of training sets; and generate a corresponding decision tree by determining a piece of feature information with a maximum information gain in each of the plurality of training sets as a piece of feature information of a root node and determining remaining pieces of feature information in each of the plurality of training sets as pieces of feature information of leaf nodes in descending order of information gains of the remaining pieces of feature information.
19. The electronic device of claim 17 or claim 18, wherein the processor configured to extract, according to the predetermined rule, the feature information from the sample set to construct the plurality of training sets is configured to obtain preset number pieces of feature information each time by performing a random extraction with replacement on the multi-dimensional feature information contained in each of the samples to construct a corresponding sub-sample, wherein each of the plurality of training sets is constructed with a plurality of sub-samples, and the plurality of training sets are constructed after performing the random extraction with replacement a number of times;
the multi-dimensional feature information associated with the application comprises Q pieces of feature information, and the preset number is q, wherein the processor is further configured to:
determine, with an equation the number of the plurality of training sets constructed, wherein M represents the number of the plurality of training sets.
20. The electronic device of claim 17, wherein the processor configured to determine whether the application is able to be cleaned up according to the plurality of predicted results is further configured to: determine a ratio of the number of the predicted results indicative of that the application is able to be cleaned up to the number of all the plurality of predicted results as a cleanable probability, and determine a ratio of the predicted results indicative of that the application is unable to be cleaned up to the number of all the plurality of predicted results as a maintaining probability; and determine that the application is able to be cleaned up upon determining that the cleanable probability of the application is larger than the maintaining probability of the application, and determine that the application is kept to be in the background upon determining that the maintaining probability of the application is larger than the cleanable probability of the application.
</claims>
</document>
