<document>

<filing_date>
2020-06-03
</filing_date>

<publication_date>
2020-12-24
</publication_date>

<priority_date>
2019-06-03
</priority_date>

<ipc_classes>
G06F8/20,G06F9/445,G06N20/00,G06N5/04,G06Q10/06,G06Q30/00,G06Q30/02,G06Q40/02,G06Q40/08
</ipc_classes>

<assignee>
CEREBRI AI
</assignee>

<inventors>
BELANGER, JEAN JOSEPH
BRIANCON, ALAIN CHARLES
Coovrey, Chris Michael
Sotiris, Valisis
Simon, Eric Paver
</inventors>

<docdb_family_id>
73549699
</docdb_family_id>

<title>
OBJECT-ORIENTED AI MODELING
</title>

<abstract>
Provided is a process including: obtaining, for a plurality of entities, datasets; and orchestrating an object-orientated application or service by: forming a plurality of objects, forming object-oriented labeled datasets based on an event and the attributes of each of the datasets; forming a library or framework of classes with a plurality of object-orientation modelors; and forming a plurality of object-manipulation functions, each function being configured to leverage a respective class among the library or framework of classes.
</abstract>

<claims>
1. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors effectuate operations comprising: obtaining, with one or more processors, for a plurality of entities, datasets, wherein: the datasets comprise a plurality of entity logs; the entity logs comprise events involving the entities; at least some of the events are actions by the entities; at least some of the actions are targeted actions; the entity logs comprise or are otherwise associated with attributes of the entities; and the events are distinct from the attributes; orchestrating, with one or more processors, an object-orientated application or service by: forming a plurality of objects, wherein each object of the plurality of objects comprises a different set of attributes and events; forming object-oriented labeled datasets based on the event and the attributes of each of the datasets; forming a library or framework of classes with a plurality of object-orientation modelors; and forming a plurality of object-manipulation functions, each function being configured to leverage a respective class among the library or framework of classes; receiving, with one or more processors, a request to determine a set of actions to achieve, or increase likelihood of, a given targeted action; assigning, with one or more processors, the given targeted action to a first subset of classes from the library or framework of classes of the object-orientated application or service; and determining, with one or more processors, based on the assigning, the set of actions to achieve, or increase likelihood of, the given targeted action using a first subset of the plurality of object-manipulation functions leveraging the first subset of classes from the library or framework of classes of the object-orientated application or service.
2. The medium of claim 1, wherein the orchestrating further comprises: adding version numbers to the datasets; adding primary surrogate keys to the datasets and updating the version numbers; and encoding the datasets in dimensional star schema and updating the version numbers.
3. The medium of claim 1, wherein the orchestrating further comprises: forming a first training dataset from the datasets; training, with one or more processors, a first machine-learning modeling pipeline on the first training dataset by adjusting parameters of the first machine-learning modeling pipeline to optimize a first objective function that indicates an accuracy of the plurality of object-orientation modelors in generating the library or framework of classes; and storing, with one or more processors, the adjusted parameters of the trained first machine-learning modeling pipeline in memory.
4. The medium of claim 3, wherein training comprises steps for training.
5. The medium of claim 1, wherein the orchestrating further comprises: forming a second training dataset from the datasets; training, with one or more processors, a second machine-learning model on the second training dataset by adjusting parameters of the second machine-learning model to optimize a second objective function that determines the first subset of the plurality of object-manipulation functions; and storing, with one or more processors, the adjusted parameters of the trained second machine-learning model in memory.
6. The medium of claim 1, wherein the plurality of entity logs comprise: consumers; communications to consumers by an enterprise; communications to an enterprise by consumers; purchases by consumers from an enterprise; non-purchase interactions by consumers with an enterprise; and a customer relationship management system of an enterprise.
7. The medium of claim 6, wherein: the enterprise is a credit card issuer and the given targeted action is predicting whether a consumer will default; the enterprise is a lender and the given targeted action is predicting whether a consumer will borrow; the enterprise is an insurance company and the given targeted action is predicting whether a consumer will file a claim; the enterprise is an insurance company and the given targeted action is predicting whether a consumer will sign-up for insurance; the enterprise is a vehicle seller and the given targeted action is predicting whether a consumer will purchase a vehicle; the enterprise is a seller of goods and the given targeted action is predicting whether a consumer will file a warranty claim, the enterprise is a wireless operator and the given targeted action is predicting whether a consumer upgrade their cellphone, or the enterprise is a bank and the given targeted action is predicting GDP variation.
8. The medium of claim 1, wherein the assignment of the given targeted action to a first subset of classes comprises: assigning the given targeted action to a first subset of the plurality of objects using a second subset of the plurality of object-manipulation functions; and determining the first subset of classes from the library or framework of classes of the object-orientated application or service that are related to the first subset of the plurality of objects.
9. The medium of claim 8, wherein second subset of the plurality of object-manipulation functions are configured to add new objects to the plurality of objects.
10. The medium of claim 9, wherein the new objects comprise attributes and events related to the given targeted action.
11. The medium of claim 1, wherein the datasets comprise: a data frame; a data stream; a column in a table; a row in a column; a cell in a table; structured data; and unstructured data.
12. The medium of claim 1, wherein the plurality of object-manipulation functions comprises: a sequence function used to change a collection of events into a time sequences for processing; a feature function used to gather features of a first object-orientation modelor and then use the features in a second object-orientation modelor; an economic function used to: gather economic objectives and economic constraints of an entity; and employ an allocation algorithm to maximize the objectives; and an ensembling function used to combine a first subset of the library or framework of classes.
13. The medium of claim 12, wherein the plurality of object-manipulation functions are arranged to perform in series.
14. The medium of claim 12, wherein the plurality of object-manipulation functions are arranged to change orders dynamically based on the given targeted action.
15. The medium of claim 1, wherein the plurality of object-orientation modelors comprises: a scaled propensity modelor used to calculate probability of a customer making an economic commitment; a timing modelor used to calibrate moments in time when a customer is likely to engage with the given targeted action; an affinity modelor used to capture ranked likes and dislikes of an entity's customers for a first subset of targeted actions; a best action modelor used to create a framework for concurrent Key Performance Index of the given targeted action at different points in a customer's journey; and a cluster modelor used to group an entity's customers based on the customers' behavior into a finite list.
16. The medium of claim 15, wherein the plurality of object-orientation modelors are arranged to perform in series.
17. The medium of claim 15, wherein the plurality of object-orientation modelors are arranged to perform in parallel.
18. The medium of claim 15, wherein the plurality of object-orientation modelors are arranged to change orders dynamically based on the given targeted action.
19. The medium of claim 1, wherein: the given targeted action comprises a plurality of sub-targets; and at least some targets of the plurality of sub-targets are expected to happen at different times in future.
20. The medium of claim 1, wherein: the given targeted action comprises a plurality of sub-targets; and the plurality of object-orientation modelors comprises: a scaled propensity modelor used to calculate probability of a customer making an economic commitment; a timing modelor used to calibrate moments in time when a customer is likely to engage with each subset of the plurality of sub-targets; an affinity modelor used to capture ranked likes and dislikes of an entity's customers for a first subset of targeted actions; a best action modelor used to create a framework for concurrent Key Performance Index for each subset of the plurality of sub-targets at different points in a customer's journey; a cluster modelor used to group an entity's customers based on the customers' behavior into a finite list; and wherein: a first subset of the plurality of object-orientation modelors are used for a first subset of the plurality of sub-targets; a second subset of the plurality of object-orientation modelors are used for a second subset of the plurality of sub-targets; and wherein the order in which the first subset of the plurality of object-orientation modelors perform is different from the order in which the second subset of the plurality of object-orientation modelors perform.
21. The medium of claim 1, wherein the object-oriented labeled datasets formed according to an ontology of events.
22. The medium of claim 21, wherein the ontology of events comprises Concurrent Ontology Labelling Datastore (COLD) methodology.
23. The medium of claim 1, wherein the object-oriented labeled datasets formed according to a hierarchal taxonomy of events.
24. The medium of claim 1, the operations comprising: steps for determining the set of actions required to achieve the given targeted action.
25. A method, comprising: obtaining, with one or more processors, for a plurality of entities, datasets, wherein: the datasets comprise a plurality of entity logs; the entity logs comprise events involving the entities; at least some of the events are actions by the entities; at least some of the actions are targeted actions; the entity logs comprise or are otherwise associated with attributes of the entities; and the events are distinct from the attributes; orchestrating, with one or more processors, an object-orientated application or service by: forming a plurality of objects, wherein each object of the plurality of objects comprises a different set of attributes and events; forming object-oriented labeled datasets based on the event and the attributes of each of the datasets; forming a library or framework of classes with a plurality of object-orientation modelors; and forming a plurality of object-manipulation functions, each function being configured to leverage a respective class among the library or framework of classes; receiving, with one or more processors, a request to determine a set of actions to achieve, or increase likelihood of, a given targeted action; assigning, with one or more processors, the given targeted action to a first subset of classes from the library or framework of classes of the object-orientated application or service; and determining, with one or more processors, based on the assigning, the set of actions to achieve, or increase likelihood of, the given targeted action using a first subset of the plurality of object-manipulation functions leveraging the first subset of classes from the library or framework of classes of the object-orientated application or service.
</claims>
</document>
