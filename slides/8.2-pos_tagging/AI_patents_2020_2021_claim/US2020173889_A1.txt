<document>

<filing_date>
2018-11-30
</filing_date>

<publication_date>
2020-06-04
</publication_date>

<priority_date>
2018-11-30
</priority_date>

<ipc_classes>
G01M99/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
BOLDRIN, WARREN
DAR MOUSA, NOSAIBA
HIRST, JASON
RAMAKRISHNAN, SREEKANTH
</inventors>

<docdb_family_id>
70848433
</docdb_family_id>

<title>
COMPONENT TESTING PLAN CONSIDERING DISTINGUISHABLE AND UNDISTINGUISHABLE COMPONENTS
</title>

<abstract>
A component testing plan considers both distinguishable components and undistinguishable components for each of the distinguishable components. In addition to distinguishable and undistinguishable components, inputs to the system include a level of customer demand, using component-based demand forecasting, and what test types are to be performed. The system then determines a set of combinatorial test options for each of the test types and a cycle time for each combinatorial test option. The system then cognitively develops a component testing plan including a listing of combinatorial test(s) of the set of combinatorial test options for each test type to be performed and how many times to perform each combinatorial test(s) on a testing machine with a known capacity in order to minimize a total cycle time for all of the test types and a number of the testing machine needed; and implementing the component testing plan on a set of test components on a production line.
</abstract>

<claims>
1. A computer-implemented method of developing a component testing plan, the computer-implemented method comprising: receiving, by a data processing system, an indication of at least two distinguishable components there are for testing, resulting in identified distinguished components; receiving, by the data processing system, an identification of two or more undistinguishable components to be tested for each of the at least two distinguishable components, resulting in identified undistinguished components; receiving, by the data processing system, an identification of a level of customer demand using component-based demand forecasting; receiving, by the data processing system, an identification of a plurality of test types; determining, by the data processing system, a set of combinatorial test options for each of the plurality of test types; determining, by the data processing system, a cycle time for each combinatorial test option of the set of combinatorial test options for each test type; cognitively developing, by the data processing system, a component testing plan, the component testing plan comprising a listing of one or more combinatorial tests of the set of combinatorial test options for each test type to be performed and how many times to perform each of the one or more combinatorial tests on a testing machine with a known capacity in order to minimize a total cycle time for all of the plurality of test types and a number of the testing machine needed; and implementing the component testing plan on a set of test components on a production line.
2. The computer-implemented method of claim 1, wherein the cycle time comprises an average cycle time for each combinatorial test option of the set of combinatorial test options for each test type based on available historical cycle time data.
3. The computer-implemented method of claim 2, wherein for each combinatorial test option for which there is no available historical cycle time data, using a default cycle time.
4. The computer-implemented method of claim 1, wherein the component testing plan further comprises procurement planning.
5. The computer-implemented method of claim 1, wherein the developing, by the data processing system, the component testing plan comprises performing, by the data processing system, an iteration process for each test type.
6. The computer-implemented method of claim 5, wherein the developing, by the data processing system, the component testing plan further comprises generating, by the data processing system, an optimization model based on the test types, the identified distinguished parts, the identified undistinguished parts, the set of combinatorial test options, the cycle time for each combinatorial test of the set of combinatorial test options, the level of customer demand and one or more model assumptions, resulting in a generated optimization model, and wherein the iteration process uses the generated optimization model.
7. The computer-implemented method of claim 6, wherein the iteration process produces a testing time for each test option of each test type.
8. The computer-implemented method of claim 6, wherein the generated optimization model is formulated to minimize a total testing time for all of the plurality of test types subject to one or more model constraint.
9. The computer-implemented method of claim 8, wherein the one or more model constraint comprises: a number of each component at least meeting the level of customer demand; each of the plurality of test types have been executed; at least one of the set of combinatorial test options for each test type has been executed; each decision variable for each combinatorial test option for each test type is a zero value or a positive value; and each decision variable for each combinatorial test option for each test type that is non-zero is an integer.
10. The computer-implemented method of claim 1, further comprising receiving, by the data processing system, a time to run each individual test for each combinatorial test option for each test type for use by the data processing system in the developing.
11. A system for developing a component testing plan, the system comprising: a memory; and at least one processor in communication with the memory to perform a method, the method comprising: receiving, by a data processing system, an indication of at least two distinguishable components there are for testing, resulting in identified distinguished components; receiving, by the data processing system, an identification of two or more undistinguishable components to be tested for each of the at least two distinguishable components, resulting in identified undistinguished components; receiving, by the data processing system, an identification of a level of customer demand using component-based demand forecasting; receiving, by the data processing system, an identification of a plurality of test types; determining, by the data processing system, a set of combinatorial test options for each of the plurality of test types; determining, by the data processing system, a cycle time for each combinatorial test option of the set of combinatorial test options for each test type using component-based demand forecasting; cognitively developing, by the data processing system, a component testing plan, the component testing plan comprising a listing of one or more combinatorial tests of the set of combinatorial test options for each test type to be performed and how many times to perform each of the one or more combinatorial tests on a testing machine with a known capacity in order to minimize a total cycle time for all of the plurality of test types and a number of the testing machine needed; and implementing the component testing plan on a set of test components on a production line.
12. The system of claim 11, wherein the cycle time comprises an average cycle time for each combinatorial test option of the set of combinatorial test options for each test type based on available historical cycle time data, and wherein for each combinatorial test option for which there is no available historical cycle time data, using a default cycle time.
13. The system of claim 11, wherein the developing, by the data processing system, the component testing plan comprises performing, by the data processing system, an iteration process for each test type, wherein the developing, by the data processing system, the component testing plan further comprises generating, by the data processing system, an optimization model based on the test types, the identified distinguished parts, the identified undistinguished parts, the set of combinatorial test options, the cycle time for each combinatorial test of the set of combinatorial test options, the level of customer demand and one or more model assumptions, resulting in a generated optimization model, and wherein the iteration process uses the generated optimization model.
14. The computer-implemented method of claim 13, wherein the iteration process produces a testing time for each test option of each test type.
15. The system of claim 13, wherein the generated optimization model is formulated to minimize a total testing time for all of the plurality of test types subject to one or more model constraint, wherein the one or more model constraint comprises: a number of each component at least meeting the level of customer demand; each of the plurality of test types have been executed; at least one of the set of combinatorial test options for each test type has been executed; each decision variable for each combinatorial test option for each test type is a zero value or a positive value; and each decision variable for each combinatorial test option for each test type that is non-zero is an integer.
16. A computer program product for developing a component testing plan, the computer program product comprising: a storage medium readable by a processor and storing instructions executable by the processor for performing a method of developing a component testing plan, the method comprising: receiving, by a data processing system, an indication of at least two distinguishable components there are for testing, resulting in identified distinguished components; receiving, by the data processing system, an identification of two or more undistinguishable components to be tested for each of the at least two distinguishable components, resulting in identified undistinguished components; receiving, by the data processing system, an identification of a level of customer demand using component-based demand forecasting; receiving, by the data processing system, an identification of a plurality of test types; determining, by the data processing system, a set of combinatorial test options for each of the plurality of test types; determining, by the data processing system, a cycle time for each combinatorial test option of the set of combinatorial test options for each test type; cognitively developing, by the data processing system, a component testing plan, the component testing plan comprising a listing of one or more combinatorial tests of the set of combinatorial test options for each test type to be performed and how many times to perform each of the one or more combinatorial tests on a testing machine with a known capacity in order to minimize a total cycle time for all of the plurality of test types and a number of the testing machine needed; and implementing the component testing plan on a set of test components on a production line.
17. The computer program product of claim 16, wherein the cycle time comprises an average cycle time for each combinatorial test option of the set of combinatorial test options for each test type based on available historical cycle time data, and wherein for each combinatorial test option for which there is no available historical cycle time data, using a default cycle time.
18. The computer program product of claim 16, wherein the developing, by the data processing system, the component testing plan comprises performing, by the data processing system, an iteration process for each test type, wherein the developing, by the data processing system, the component testing plan further comprises generating, by the data processing system, an optimization model based on the test types, the identified distinguished parts, the identified undistinguished parts, the set of combinatorial test options, the cycle time for each combinatorial test of the set of combinatorial test options, the level of customer demand and one or more model assumptions, resulting in a generated optimization model, and wherein the iteration process uses the generated optimization model.
19. The computer program product of claim 18, wherein the iteration process produces a testing time for each test option of each test type.
20. The computer program product of claim 18, wherein the generated optimization model is formulated to minimize a total testing time for all of the plurality of test types subject to one or more model constraint, and wherein the one or more model constraint comprises: a number of each component at least meeting the level of customer demand; each of the plurality of test types have been executed; at least one of the set of combinatorial test options for each test type has been executed; each decision variable for each combinatorial test option for each test type is a zero value or a positive value; and each decision variable for each combinatorial test option for each test type that is non-zero is an integer.
</claims>
</document>
