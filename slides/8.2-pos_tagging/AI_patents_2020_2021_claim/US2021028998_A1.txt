<document>

<filing_date>
2019-07-25
</filing_date>

<publication_date>
2021-01-28
</publication_date>

<priority_date>
2019-07-25
</priority_date>

<ipc_classes>
G06F3/0482,H04L12/24,H04L29/08
</ipc_classes>

<assignee>
VMWARE
</assignee>

<inventors>
Khetarpal, Anar
Levy, Andrew
</inventors>

<docdb_family_id>
74189489
</docdb_family_id>

<title>
VISUAL OVERLAYS FOR NETWORK INSIGHTS
</title>

<abstract>
Examples described herein include systems and methods for providing network insights on a graphical user interface ("GUI"). The GUI can visualize network errors to help administrative or information technology users more quickly identify issues with an enterprise application. The enterprise application can report network request information to a server. Then the GUI can present visual overlays that compare error metrics between different time cycles of the application. The visual overlay can graphically display these errors on top of one another for immediate relative visualization. Additionally, a grouped list of host destinations can be simultaneously provided. The destination addresses can be abbreviated, and errors grouped accordingly in a manner that provides advantageous error visualization.
</abstract>

<claims>
1. A method for providing network insights relative to an application, comprising: receiving, on a graphical user interface ("GUI"), a selection of at least one network service used by the application; determining first and second abbreviated uniform resource locators ("URLs") representing destinations correlating to the at least one network service; grouping error information according to the abbreviated URLs; displaying the first and second abbreviated URLs in an ordered list with the corresponding grouped error information; in response to receiving a selection of the first abbreviated URL, displaying multiple expanded URLs and corresponding error information for the expanded URLs; receiving a selection of at least one path segment of the first or second abbreviated URL; creating a third abbreviated URL based on the selection; grouping error information according to the third abbreviated URL; and displaying the third abbreviated URL with the corresponding grouped error information.
2. The method of claim 1, wherein a first expanded URL includes a nested abbreviation, and wherein selecting the first expanded URL causes the GUI to display additional URLs that expand from the nested abbreviation.
3. The method of claim 1, wherein the first abbreviated URL is determined based on reaching a threshold number of unique URLs, wherein common segments of the unique URLs are detected from an end to a beginning of the unique URLs and the common segments are included in the first abbreviated URL.
4. The method of claim 1, wherein determining the first and second abbreviated URLs includes applying a template that indicates a number of path segments to retain for the abbreviation.
5. The method of claim 4, wherein the template is created by a machine learning service that determines which URLs the application uses for a customer and which portions of the URLs are unique identifiers.
6. The method of claim 4, further comprising receiving, on the GUI, user selections to define the template, the selections including insertion points for abbreviations and nesting.
7. The method of claim 1, further comprising visually indicating on the GUI where the abbreviation begins at the right side of the first abbreviated URL.
8. A non-transitory, computer-readable medium containing instructions for providing network insights relative to an application, the instructions causing a processor to perform stages comprising: receiving, on a graphical user interface ("GUI"), a selection of at least one network service used by the application; determining first and second abbreviated uniform resource locators ("URLs") representing destinations correlating to the at least one network service; grouping error information according to the abbreviated URLs; displaying the first and second abbreviated URLs in an ordered list with the corresponding grouped error information; and in response to receiving a selection of the first abbreviated URL, displaying multiple expanded URLs and corresponding error information for the expanded URLs; receiving a selection of at least one path segment of the first or second abbreviated URL; creating a third abbreviated URL based on the selection; grouping error information according to the third abbreviated URL; and displaying the third abbreviated URL with the corresponding grouped error information.
9. The non-transitory, computer-readable medium of claim 8, wherein a first expanded URL includes a nested abbreviation, and wherein selecting the first expanded URL causes the GUI to display additional URLs that expand from the nested abbreviation.
10. The non-transitory, computer-readable medium of claim 8, wherein the first abbreviated URL is determined based on reaching a threshold number of unique URLs, wherein common segments of the unique URLs are detected from an end to a beginning of the unique URLs and the common segments are included in the first abbreviated URL.
11. The non-transitory, computer-readable medium of claim 8, wherein determining the first and second abbreviated URLs includes applying a template that indicates a number of path segments to retain for the abbreviation.
12. The non-transitory, computer-readable medium of claim 11, wherein the template is created by a machine learning service that determines which URLs the application uses for a customer and which portions of the URLs are unique identifiers.
13. The non-transitory, computer-readable medium of claim 11, the stages further comprising receiving, on the GUI, user selections to define the template, the selections including insertion points for abbreviations and nesting.
14. The non-transitory, computer-readable medium of claim 8, the stages further comprising visually indicating on the GUI where the abbreviation begins at the right side of the first abbreviated URL.
15. A system for providing network insights relative to an application, comprising: a non-transitory, computer-readable storage medium that includes instructions; and a processor that executes the instructions to perform stages comprising: receiving, on a graphical user interface ("GUI"), a selection of at least one network service used by the application; determining first and second abbreviated uniform resource locators ("URLs") representing destinations correlating to the at least one network service; grouping error information according to the abbreviated URLs; displaying the first and second abbreviated URLs in an ordered list with the corresponding grouped error information; and in response to receiving a selection of the first abbreviated URL, displaying multiple expanded URLs and corresponding error information for the expanded URLs; receiving a selection of at least one path segment of the first or second abbreviated URL; creating a third abbreviated URL based on the selection; grouping error information according to the third abbreviated URL; and displaying the third abbreviated URL with the corresponding grouped error information.
16. The system of claim 15, wherein a first expanded URL includes a nested abbreviation, and wherein selecting the first expanded URL causes the GUI to display additional URLs that expand from the nested abbreviation.
17. The system of claim 15, wherein the first abbreviated URL is determined based on reaching a threshold number of unique URLs, wherein common segments of the unique URLs are detected from an end to a beginning of the unique URLs and the common segments are included in the first abbreviated URL.
18. The system of claim 15, wherein determining the first and second abbreviated URLs includes applying a template that indicates a number of path segments to retain for the abbreviation.
19. The system of claim 18, wherein the template is created by a machine learning service that determines which URLs the application uses for a customer and which portions of the URLs are unique identifiers.
20. The system of claim 15, the stages further comprising receiving, on the GUI, user selections to define the template, the selections including insertion points for abbreviations and nesting.
</claims>
</document>
