<document>

<filing_date>
2020-09-24
</filing_date>

<publication_date>
2021-01-07
</publication_date>

<priority_date>
2018-05-07
</priority_date>

<ipc_classes>
G06F11/34,G06F11/36,G06F8/20,G06N20/00,H04L12/26
</ipc_classes>

<assignee>
PROOV SYSTEMS
</assignee>

<inventors>
OLSHANETSKY, TOBY
SAPOZHNIKOV, ALEXEY
KUPITMAN, YURY
</inventors>

<docdb_family_id>
68385259
</docdb_family_id>

<title>
POC PLATFORM WHICH COMPARES STARTUP S/W PRODUCTS INCLUDING EVALUATING THEIR MACHINE LEARNING MODELS
</title>

<abstract>
A proof-of-concept (PoC) method comprising: on a networked platform, serving a population of enterprise end-users and a population of ISV end-users, on which PoCs are run, providing a PoC-defining user interface via which at least one enterprise end-user generates a definition of at least one PoC; and using a processor to automatically assess whether an individual machine learning model embodied in a body of code of an individual software product registered for an individual PoC, is suitable for the individual PoC as defined by the definition.
</abstract>

<claims>
1. 1-13. (canceled)
14. A proof-of-concept (PoC) system comprising: a networked platform, serving a population of enterprise end-users and a population of independent software vendor (ISV) ISV end-users, on which PoCs are run, the platform including a PoC-defining user interface via which at least one enterprise end-user generates a definition of at least one PoC, and a processor including logic configured to automatically assess whether an individual machine learning (ML) model embodied in a body of code of an individual software product registered for an individual PoC is suitable for the individual PoC as defined by said definition of the at least one PoC.
15. The system according to claim 14, wherein the system includes a memory and wherein tags define at least one PoC, and wherein at least some of the tags are associated in said memory with a respective set of machine learning models including at least one category of machine learning model and wherein the processor determines the category of said individual machine learning model and then assesses that the individual machine learning model is suitable for the individual PoC if the category of said individual machine learning model is included in said set of machine learning models.
16. The system according to claim 15, wherein said tags are selected, by the enterprise end-user via the PoC-defining user interface, from a plurality of tags stored in said memory and presented to the enterprise end-user.
17. The system according to claim 14, wherein the system also comprises an ISV user interface via which at least one ISV end-user registers at least one software product for at least one PoC defined by at least one enterprise end-user, wherein the user interface prompts an individual ISV end-user to generate a definition of the individual machine learning model embodied in the individual software product registered for the individual PoC by the individual ISV end-user, and wherein the individual machine learning model is of a particular category and wherein the processor derives said particular category from said definition of the individual machine learning model and assesses that the individual machine learning model is suitable for the individual PoC if said particular category is included in said set of machine learning models.
18. The system according to claim 14, wherein for at least one PoC for which at least one software product has registered, a KPI is computed which represents the software product's extent of usage of at least one of memory and CPU.
19. The system according to claim 14, wherein for software products with different categories of ML models, the platform computes different ML model quality KPIs respectively, using stored data indicating ML KPIs which are suitable for each of plural categories of ML models.
20. The system according to claim 19, wherein said ML model quality KPIs are computed by code snippets that are stored by the platform and wherein at least one of said code snippets is re-used plural times, to compute model quality for each of m>1 models participating in each of p>1 PoCs.
21. The system according to claim 14, wherein the platform stores datasets suitable for a certain category of models which are re-run on each of m>1 models of said category participating in each of p>1 PoCs.
22. The system according to claim 21, wherein the platform stores dictionaries of instances of semantic categories and uses said dictionaries to identify table columns in newly arrived datasets.
23. The system according to claim 21, wherein the PoC-defining user interface provides at least one enterprise end-user with a hierarchical menu having at least one layer, and wherein the enterprise end-user classifies the PoC according to a taxonomy underlying the hierarchical menu and wherein the same taxonomy is used to add dataset metadata to each of said datasets, said dataset metadata classifying each of said datasets according to said taxonomy.
24. The system according to claim 23, wherein the same taxonomy is used to add dictionary metadata to each of said dictionaries, said dictionary metadata classifying each of said dictionaries according to said taxonomy.
25. A proof-of-concept (PoC) method comprising: on a networked platform, serving a population of enterprise end-users and a population of independent software vendor (ISV) ISV end-users, on which PoCs are run, providing a PoC-defining user interface via which at least one enterprise end-user generates a definition of at least one PoC; and using a processor to automatically assess whether an individual machine learning model embodied in a body of code of an individual software product registered for an individual PoC, is suitable for the individual PoC as defined by said definition of the at least one PoC.
26. A computer program product, comprising a non-transitory tangible computer readable medium having computer readable program code embodied therein, said computer readable program code adapted to be executed to implement a proof-of-concept (PoC) method comprising: on a networked platform, serving a population of enterprise end-users and a population of independent software vendor (ISV) ISV end-users, on which PoCs are run, providing a PoC-defining user interface via which at least one enterprise end-user generates a definition of at least one PoC; and using a processor to automatically assess whether an individual machine learning model embodied in a body of code of an individual software product registered for an individual PoC, is suitable for the individual PoC as defined by said definition of the at least one PoC.
27. The method of claim 25, wherein the definition of the at least one PoC comprises an indication of a request to evaluate an artificial intelligence (AI) model provided by a startup participating in a pilot.
</claims>
</document>
