<document>

<filing_date>
2019-03-04
</filing_date>

<publication_date>
2020-09-10
</publication_date>

<priority_date>
2019-03-04
</priority_date>

<ipc_classes>
G06F16/2455,G06F16/25,G06F9/445,G06N20/00,H04L29/08
</ipc_classes>

<assignee>
WALMART APOLLO
</assignee>

<inventors>
JALALIBARSARI, VAHID
</inventors>

<docdb_family_id>
72336414
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR A MACHINE LEARNING FRAMEWORK
</title>

<abstract>
Systems and methods including one or more processors and one or more non-transitory storage devices storing computing instructions configured to run on the one or more processors and perform acts of receiving, from an extraction, transform, load (ETL) application, a matrix, which can comprise raw feature data; storing the matrix comprising the raw feature data in a standard format in the one or more non-transitory computer readable storage devices; receiving a configuration file over a computer network; storing the configuration file in a standard format in the one or more non-transitory computer readable storage devices; instantiating one or more unifier applications based upon the configuration file; identifying relevant feature data of the raw feature data; storing the relevant feature data in a standardized format in an output file in the one or more non-transitory computer-readable storage devices; and transmitting, over the computer network in real time to a model building system, the output file comprising the relevant feature data from the one or more non-transitory computer-readable storage devices, so that the machine learning model building applications have immediate access to up-to-date data. Other embodiments are disclosed herein.
</abstract>

<claims>
1. A system comprising: one or more processors; and one or more non-transitory computer-readable storage devices storing computing instructions configured to run on the one or more processors and perform acts of: receiving, from an extraction, transform, load (ETL) application, a matrix comprising raw feature data; storing the matrix comprising the raw feature data in a standard format in the one or more non-transitory computer readable storage devices; receiving a configuration file over a computer network; storing the configuration file in a standard format in the one or more non-transitory computer readable storage devices; instantiating one or more unifier applications based upon the configuration file; identifying relevant feature data of the raw feature data; storing the relevant feature data in a standardized format in an output file in the one or more non-transitory computer-readable storage devices; and transmitting, over the computer network in real time to a model building system, the output file comprising the relevant feature data from the one or more non-transitory computer-readable storage devices, so that the machine learning model building applications have immediate access to up-to-date data.
2. The system of claim 1, wherein instantiating the one or more unifier applications based on the configuration file comprises: accessing the configuration file to identify a list of unifier applications; and instantiating the one or more unifier applications when the list of the unifier applications comprises the one or more unifier applications.
3. The system of claim 1, wherein identifying the relevant feature data comprises: accessing the configuration file to identify at least one of: (1) a start date; (2) a direction; or (3) a duration; and filtering the matrix comprising the raw feature data to remove data from the raw feature data not characterized by at least one of: (1) the start date; (2) the direction; or (3) the duration.
4. The system of claim 1, wherein the one or more non-transitory computer-readable storage devices storing the computing instructions are further configured to perform acts of: receiving, from the ETL application, an identity mapping; and joining, using the identity mapping, the one or more unifier applications such that a user is identified.
5. The system of claim 4, wherein joining, using the identity mapping, the one or more unifier applications comprise at least one of: performing a left join; performing a right join; or performing a full join.
6. The system of claim 1, wherein the relevant feature data is stored in the output file as a sparse representation of the relevant feature data.
7. The system of claim 1, wherein identifying the relevant feature data of the raw feature data comprises: instantiating one or more reader applications; identifying, using the one or more reader applications, first data comprising a first type of the raw feature data; and discarding second data of the raw feature data that does not comprise the first type of the raw feature data.
8. The system of claim 7, wherein the raw feature data comprises at least one of: a text file; a sequence file; a compressed file; or a partitioned file.
9. The system of claim 7, wherein identifying, using the one or more reader applications, the first data comprising the first type of the raw feature data comprises: identifying a delimiter in the raw feature data; and separating the raw feature data into the first type of the raw feature data and a second type of the raw feature data based upon a location of the delimiter.
10. The system of claim 1, wherein: instantiating the one or more unifier applications based on the configuration file comprises: accessing the configuration file to identify a list of unifier applications; and instantiating the one or more unifier applications when the list of the unifier applications comprises the one or more unifier applications; identifying the relevant feature data comprises: accessing the configuration file to identify at least one of: (1) a start date; (2) a direction; or (3) a duration; filtering the matrix comprising the raw feature data to remove data from the raw feature data not characterized by at least one of: (1) the start date; (2) the direction; or (3) the duration; the one or more non-transitory computer-readable storage devices storing the computing instructions are further configured to perform acts of: receiving, from the ETL application, an identity mapping; joining, using the identity mapping, the one or more unifier applications such that a user is identified; joining, using the identity mapping, the one or more unifier applications comprises at least one of: performing a left join; performing a right join; or performing a full join; the relevant feature data is stored in the output file as a sparse representation of the relevant feature data; identifying the relevant feature data of the raw feature data comprises: instantiating one or more reader applications; identifying, using the one or more reader applications, first data comprising a first type of the raw feature data; and discarding second data of the raw feature data that does not comprise the first type of the raw feature data; the raw feature data comprises at least one of: a text file; a sequence file; a compressed file; or a partitioned file; and identifying, using the one or more reader applications, the first data of the first type within the raw feature data comprises: identifying a delimiter in the raw feature data; and separating the raw feature data into the first type of the raw feature data and a second type of the raw feature data based upon a location of the delimiter.
11. A method being implemented via execution of computing instructions configured to run at one or more processors and configured to be stored at non-transitory computer-readable media, the method comprising: receiving, from an extraction, transform, load (ETL) application, a matrix comprising raw feature data; storing the matrix comprising the raw feature data in a standard format in the one or more non-transitory computer readable storage devices; receiving a configuration file over a computer network; storing the configuration file in a standard format in the one or more non-transitory computer readable storage devices instantiating one or more unifier applications based upon the configuration file; identifying relevant feature data of the raw feature data; storing the relevant feature data in a standardized format in an output file in the one or more non-transitory computer-readable storage devices; and transmitting, over the computer network in real time to a model building system, the output file comprising the relevant feature data from the one or more non-transitory computer-readable storage devices, so that the machine learning model building applications have immediate access to up-to-date data.
12. The method of claim 11, wherein instantiating the one or more unifier applications based on the configuration file comprises: accessing the configuration file to identify a list of unifier applications; and instantiating the one or more unifier applications when the list of the unifier applications comprises the one or more unifier applications.
13. The method of claim 11, wherein identifying the relevant feature data comprises: accessing the configuration file to identify at least one of: (1) a start date; (2) a direction; or (3) a duration; and filtering the matrix comprising the raw feature data to remove data from the raw feature data not characterized by at least one of: (1) the start date; (2) the direction; or (3) the duration.
14. The method of claim 11 further comprising: receiving, from the ETL application, an identity mapping; and joining, using the identity mapping, the one or more unifier applications such that a user is identified.
15. The method of claim 14, wherein joining, using the identity mapping, the one or more unifier applications comprise at least one of: performing a left join; performing a right join; or performing a full join.
16. The method of claim 11, wherein the relevant feature data is stored in the output file as a sparse representation of the relevant feature data.
17. The method of claim 11, wherein identifying the relevant feature data of the raw feature data comprises: instantiating one or more reader applications; identifying, using the one or more reader applications, first data comprising a first type of the raw feature data; and discarding second data of the raw feature data that does not comprise the first type of the raw feature data.
18. The method of claim 17, wherein the raw feature data comprises at least one of: a text file; a sequence file; a compressed file; or a partitioned file.
19. The method of claim 17, wherein identifying, using the one or more reader applications, the first data comprising the first type of the raw feature data comprises: identifying a delimiter in the raw feature data; and separating the raw feature data into the first type of the raw feature data and a second type of the raw feature data based upon a location of the delimiter.
20. The method of claim 11, wherein: instantiating the one or more unifier applications based on the configuration file comprises: accessing the configuration file to identify a list of unifier applications; and instantiating the one or more unifier applications when the list of the unifier applications comprises the one or more unifier applications; identifying the relevant feature data comprises: accessing the configuration file to identify at least one of: (1) a start date; (2) a direction; or (3) a duration; filtering the matrix comprising the raw feature data to remove data from the raw feature data not characterized by at least one of: (1) the start date; (2) the direction; or (3) the duration; the method further comprises: receiving, from the ETL application, an identity mapping; joining, using the identity mapping, the one or more unifier applications such that a user is identified; joining, using the identity mapping, the one or more unifier applications comprises at least one of: performing a left join; performing a right join; or performing a full join; the relevant feature data is stored in the output file as a sparse representation of the relevant feature data; identifying the relevant feature data of the raw feature data comprises: instantiating one or more reader applications; identifying, using the one or more reader applications, first data comprising a first type of the raw feature data; and discarding second data of the raw feature data that does not comprise the first type of the raw feature data; the raw feature data comprises at least one of: a text file; a sequence file; a compressed file; or a partitioned file; and identifying, using the one or more reader applications, the first data of the first type within the raw feature data comprises: identifying a delimiter in the raw feature data; and separating the raw feature data into the first type of the raw feature data and a second type of the raw feature data based upon a location of the delimiter.
</claims>
</document>
