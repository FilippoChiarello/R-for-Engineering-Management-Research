<document>

<filing_date>
2018-11-27
</filing_date>

<publication_date>
2021-01-26
</publication_date>

<priority_date>
2018-11-27
</priority_date>

<ipc_classes>
G06F12/02,G06F12/0802,G06F30/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
KAMINSKY, DAVID
GAMBETTA, JAY M.
GUNNELS, JOHN A.
WEGMAN, MARK
MCKAY, DAVID C.
JAVADIABHARI, ALI
</inventors>

<docdb_family_id>
68699388
</docdb_family_id>

<title>
Cached result use through quantum gate rewrite
</title>

<abstract>
Techniques facilitating cached result use through quantum gate rewrite are provided. In one example, a computer-implemented method comprises converting, by a device operatively coupled to a processor, an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; detecting, by the device, a match between the normalized quantum circuit and a cached quantum circuit among a set of cached quantum circuits; and providing, by the device, a cached run result of the cached quantum circuit based on the detecting.
</abstract>

<claims>
1. A system comprising: a memory that stores computer executable components; and a processor that executes computer executable components stored in the memory, wherein the computer executable components comprise: a gate rewrite component that converts an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; a cache lookup component that detects a match between the normalized quantum circuit and a cached quantum circuit among a set of cached quantum circuits; and a result provision component that provides a cached run result of the cached quantum circuit based on the cache lookup component detecting the match.
2. The system of claim 1, wherein the result provision component applies the cached run result to the normalized quantum circuit in place of running the normalized quantum circuit.
3. The system of claim 1, wherein the computer executable components further comprise: an authorization component that generates and transmits a user authorization for application of the cached run result, and obtains the user authorization, wherein the result provision component applies the cached run result to the normalized quantum circuit based on the authorization component obtaining the user authorization.
4. The system of claim 3, wherein the result provision component runs the normalized quantum circuit, thereby obtaining an independent run result for the normalized quantum circuit, based on the authorization component failing to obtain the user authorization.
5. The system of claim 1, wherein the computer executable components further comprise: a guidance component that generates respective explanations for changes made to the input quantum circuit by the gate rewrite component and provides the respective explanations with the cached run result.
6. The system of claim 1, wherein the gate rewrite component detects a non-normalized gate configuration in the input quantum circuit having a normalized configuration equivalent and replaces the non-normalized gate configuration with the normalized configuration equivalent.
7. The system of claim 1, wherein the gate rewrite component detects a non-normalized gate configuration in a sub-circuit of the input quantum circuit having a normalized configuration equivalent and replaces the non-normalized gate configuration with the normalized configuration equivalent, resulting in a normalized sub-circuit.
8. The system of claim 7, wherein the sub-circuit is a first sub-circuit, wherein the non-normalized gate configuration is a first non-normalized gate configuration, and wherein the gate rewrite component detects a second non-normalized gate configuration in a second sub-circuit of the input quantum circuit based on replacing the first sub-circuit with the normalized sub-circuit.
9. A computer-implemented method, comprising: converting, by a device operatively coupled to a processor, an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; detecting, by the device, a match between the normalized quantum circuit and a cached quantum circuit among a set of cached quantum circuits; and providing, by the device, a cached run result of the cached quantum circuit based on the detecting.
10. The computer-implemented method of claim 9, wherein the providing comprises applying the cached run result to the normalized quantum circuit in place of running the normalized quantum circuit.
11. The computer-implemented method of claim 9, further comprising: requesting, by the device, a user authorization for the cached run result, wherein the providing comprises applying the cached run result to the normalized quantum circuit based on obtaining the user authorization.
12. The computer-implemented method of claim 9, further comprising: generating, by the device, respective explanations for changes made to the input quantum circuit by the converting; and providing, by the device, the respective explanations with the cached run result.
13. The computer-implemented method of claim 9, wherein the converting comprises detecting a non-normalized gate configuration in the input quantum circuit having a normalized configuration equivalent and replacing the non-normalized gate configuration with the normalized configuration equivalent.
14. The computer-implemented method of claim 9, wherein the converting comprises detecting a non-normalized gate configuration in a sub-circuit of the input quantum circuit having a normalized configuration equivalent and replacing the non-normalized gate configuration with the normalized configuration equivalent.
15. A computer program product for quantum circuit result management, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor to cause the processor to: convert an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; detect a match between the normalized quantum circuit and a cached quantum circuit among a set of cached quantum circuits; and provide a cached run result of the cached quantum circuit based on the match being detected.
16. The computer program product of claim 15, wherein the program instructions further cause the processor to: apply the cached run result to the normalized quantum circuit in place of running the normalized quantum circuit.
17. The computer program product of claim 15, wherein the program instructions further cause the processor to: detect a non-normalized gate configuration in the input quantum circuit having a normalized configuration equivalent; and replace the non-normalized gate configuration with the normalized configuration equivalent.
18. A system comprising: a memory that stores computer executable components; and a processor that executes computer executable components stored in the memory, wherein the computer executable components comprise: a gate rewrite component that converts an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; a statistical analysis component that computes a degree of equivalency between the normalized quantum circuit and a cached quantum circuit; and a result provision component that provides a cached run result of the cached quantum circuit based on the degree of equivalency between the normalized quantum circuit and the cached quantum circuit being greater than a threshold.
19. The system of claim 18, wherein the computer executable components further comprise: an authorization component that requests user authorization for application of the cached run result, wherein the result provision component applies the cached run result to the normalized quantum circuit in place of running the normalized quantum circuit based on the authorization component obtaining the user authorization.
20. The system of claim 18, wherein the statistical analysis component computes the degree of equivalency between the normalized quantum circuit and the cached quantum circuit by generating an estimated run result of the normalized quantum circuit and comparing the estimated run result to the cached run result of the cached quantum circuit.
21. The system of claim 18, wherein the gate rewrite component detects a non-normalized gate configuration in the input quantum circuit having a normalized configuration equivalent and replaces the non-normalized gate configuration with the normalized configuration equivalent.
22. A computer-implemented method, comprising: converting, by a device operatively coupled to a processor, an input quantum circuit to a normalized form, resulting in a normalized quantum circuit; determining, by the device, a degree of equivalency between the normalized quantum circuit and a cached quantum circuit; and providing, by the device, a cached run result of the cached quantum circuit based on the degree of equivalency between the normalized quantum circuit and the cached quantum circuit being greater than a threshold.
23. The computer-implemented method of claim 22, further comprising: requesting, by the device, a user authorization for the cached run result, wherein the providing comprises applying the cached run result to the normalized quantum circuit in place of running the normalized quantum circuit based on obtaining the user authorization.
24. The computer-implemented method of claim 22, wherein the determining comprises generating an estimated run result of the normalized quantum circuit and comparing the estimated run result to the cached run result of the cached quantum circuit.
25. The computer-implemented method of claim 22, wherein the converting comprises detecting a non-normalized gate configuration in the input quantum circuit having a normalized configuration equivalent and replacing the non-normalized gate configuration with the normalized configuration equivalent.
</claims>
</document>
