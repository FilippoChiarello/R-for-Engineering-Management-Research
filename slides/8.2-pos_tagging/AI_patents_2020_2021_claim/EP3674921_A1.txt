<document>

<filing_date>
2018-12-31
</filing_date>

<publication_date>
2020-07-01
</publication_date>

<priority_date>
2018-12-31
</priority_date>

<ipc_classes>
G06F16/31,G06F16/33
</ipc_classes>

<assignee>
CHARLES UNIVERSITY
</assignee>

<inventors>
HAJIC, JAN
</inventors>

<docdb_family_id>
64901920
</docdb_family_id>

<title>
A COMPUTER-IMPLEMENTED METHOD OF DOMAIN-SPECIFIC FULL-TEXT DOCUMENT SEARCH
</title>

<abstract>
A computer-implemented method for domain-specific full-text document search including indexing of documents set of steps and querying documents set of steps in which three main processes are involved: preparation of embeddings, indexing of a set of relevant documents, and querying of the indexed documents
</abstract>

<claims>
1. A computer-implemented method for domain-specific full-text document search including indexing of documents set of steps and querying documents set of steps, characterized in that
during indexing of documents set of steps: - In step 1, text analysis from segmentation to basic syntactic dependencies and morphological features using a neural network trained previously on an unrelated training corpus T1, coming from a similar domain or a general domain, on a large corpus C in the language of the documents to be later indexed and containing also the documents to be indexed, if available, is performed resulting in a corpus R1; - In step 2, semantic analysis is performed with use of neural networks either after the text analysis with use of the corpus R1 as an input, or as an alternative, step 2 is performed jointly with the text analysis, taking input to step 1 directly, resulting in corpus R2, while the semantic processing engine used is trained on a corpus T2 which has to contain semantic relations in the form of directed dependencies between content words, manually prepared, and extended to multilingual cases by known multitask techniques; - Next in step 3, linking of all named and other non-verb entities in the corpus R2 to any large or small scale ontology O3B that contains at least a paragraph-long description of the ontology entry is performed resulting in Verb entities (predicates) linked to semantic classes O3B consisting of multilingual sets of normalized predicates, while the semantic classes are created based on extraction from parallel corpora and manual pruning using multiple annotation and majority voting technologies and pre-prepared data T3A for sense-based verb classification and T3B for named entity recognition; - Next in step 4, the corpus R2 and the corpus R3 are merged, resulting in a corpus R4, where the corpus R3 is fully grounded, while the merge is performed as straightforward substitution of entities from the corpus R3 to labelled graphs containing the semantic analysis in the corpus R2; - Next in step 5, word-, lemmaand nametypeand grounded entities embeddings are created from the corpus R4 based on their local and global context within R4, as expressed in the semantic structure contained in R4 resulting in a set of tables E5; - while during indexing of documents set of steps, steps 1 to 4 are performed on every document Di to be indexed, resulting in an annotated document DiR4, followed next by mapping all entities in DiR4 of every document Di processed to embeddings using the set of tables E5, while the resulting embeddings are stored with the document and text positions in the form of a multidimensional index X, the dimensions of which will be determined at indexing time by minimizing the cost of access, using an optimizing technique called Minimum Description Length method, resulting in documents indexed by entity embeddings taken from E5; while during querying documents set of steps, - a user input query Q inserted into simple full-text window is analyzed with use of steps from 1 to 4, as if the query is a document itself resulting in an annotated query Q4 and then entities identified in the annotated query Q4 are mapped to embeddings using tables E5, resulting in a set of embeddings Q5; - embeddings Q5 are used in an approximate search performed by multidimensional search methods through index X resulting in a set A of documents found, each associated with a real number representing similarity to the query Q; - returned documents and positions in them matching the query are pruned to a predefined number of outputs set by the user at query time; and - returned documents are ranked by similarity and presented on the computer screen together with additional information on a total number of documents found.
</claims>
</document>
