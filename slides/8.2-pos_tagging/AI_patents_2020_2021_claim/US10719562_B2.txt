<document>

<filing_date>
2014-12-11
</filing_date>

<publication_date>
2020-07-21
</publication_date>

<priority_date>
2013-12-13
</priority_date>

<ipc_classes>
G06F16/951,G06F16/958,G06F17/30
</ipc_classes>

<assignee>
BLOOMREACH
</assignee>

<inventors>
GARG, ASHUTOSH
SARKAR, MANOJIT
BRAR, GURASHISH SINGH
PATNALA, PRAVEEN K.
AGGARWAL, AMIT
GUPTA, PRATEEK
WANG, SHAO-CHUAN
SHARMA, KANNAN NITIN
</inventors>

<docdb_family_id>
53368691
</docdb_family_id>

<title>
Distributed and fast data storage layer for large scale web data services
</title>

<abstract>
Techniques for providing a distributed and fast data storage layer for large scale web data services are disclosed. In some embodiments, a distributed data storage layer for web data services includes storing web related data for a plurality of merchants in the distributed data storage layer; and copying on demand a data store and a search index for web related data for a first merchant to perform a job for updating the web related data for the first merchant.
</abstract>

<claims>
1. A system for a distributed data storage layer for web data services, comprising: the distributed data storage layer configured to store web related data for a plurality of merchants; a copy on demand dynamic cluster including a data store and a search index configured to store web related data for each of the plurality of merchants to perform a job for updating the web related data for each of the plurality of merchants using a processor; a merge product information engine configured to: merge crawled web site data and feed data for each of the plurality of merchants, the plurality of merchants including a first merchant and a second merchant, wherein the merging of the crawled web site data and feed data for each of the plurality of merchants comprises to: merge crawled web site data and feed data for the first merchant to obtain a first merged data; and merge crawled web site data and feed data for the second merchant to obtain a second merged data, wherein the first merged data is isolated from the second merged data; and maintain data consistency for the crawled web site data and feed data for each of the plurality of merchants, comprising to: determine whether a first value of an attribute associated with a product in the crawled web site data matches a second value of the attribute associated with the product in the feed data; and in response to a determination that the first value does not match the second value, store the second value as a value for the merged attribute associated with the product in the search index; a resource aware adaptive capacity/throttling engine configured to: determine resource requirements for performing back-end job processing for each of the plurality of merchants based on one or more rules, comprising to: perform one or more of the following: determine whether a resource requirement exceeds a quota per application or fails to satisfy a service level agreement (SLA) for a merchant; or determine whether the resource requirement exceeds a dynamic rate limit; and in response to a determination that the resource requirements satisfy the one or more rules for at least one merchant of the plurality of merchants, copy data from the data store and the search index to a copy on demand cluster to perform processing on the copied data for the at least one merchant, and perform back-end job processing for the remaining merchants of the plurality of merchants; a resource manager configured to, for at least one merchant of the plurality of merchants, optimize for a least expensive computation resource for performing a given job; and a search engine configured to provide a search result to a query based at least in part on the search index.
2. The system recited in claim 1, wherein the copy on demand dynamic cluster including the data store and the search index for storing the web related data for the first merchant corresponds to a snapshot of the data store and the search index stored in the dynamic cluster of the distributed data storage layer.
3. The system recited in claim 1, wherein the web related data for the plurality of merchants is stored in a back-end cluster of the distributed data storage layer.
4. The system recited in claim 1, wherein the web related data for the plurality of merchants is stored in a back-end cluster of the distributed data storage layer, and wherein the web related data includes crawled web site data, feed data, and user behavior data.
5. The system recited in claim 1, wherein the distributed data storage layer merges and stores crawled web site data and feed data for each of the plurality of merchants.
6. The system recited in claim 1, further comprising: an application that is in communication with the distributed data storage layer and a web site associated with the first merchant.
7. The system recited in claim 1, further comprising: an application that is in communication with the distributed data storage layer and a web site associated with the first merchant, wherein the application is also in communication with a user browser.
8. The system recited in claim 1, further comprising: a back-end job manager for delegating jobs for processing by a back-end cluster or the copy on demand dynamic cluster.
9. The system recited in claim 1, wherein the resource manager is further configured to optimize for the least expensive computation resource for a cluster size for at least one of the following: a back-end cluster or the copy on demand dynamic cluster for performing back-end job processing, and wherein optimization for performing the given job, the back-end cluster, or the copy on demand dynamic cluster for performing back-end job processing is based on fluctuations in a spot price of an instance on a market price, the spot price computed as an average over time.
10. The system recited in claim 1, further comprising: the front-end cluster for storing a subset of the web related data for each of the plurality of merchants in the distributed data storage layer.
11. A method of a distributed data storage layer for web data services, comprising: storing web related data for a plurality of merchants in the distributed data storage layer; copying on demand a data store and a search index for web related data for each of the plurality of merchants to perform a job for updating the web related data for each of the plurality of merchants; merging crawled web site data and feed data for each of the plurality of merchants, the plurality of merchants including a first merchant and a second merchant, wherein the merging of the crawled web site data and feed data for each of the plurality of merchants comprises: merging crawled web site data and feed data for the first merchant to obtain a first merged data; and merging crawled web site data and feed data for the second merchant to obtain a second merged data, wherein the first merged data is isolated from the second merged data; maintaining data consistency for the crawled web site data and feed data for each of the plurality of merchants, comprising: determining whether a first value of an attribute associated with a product in the crawled web site data matches a second value of the attribute associated with the product in the feed data; and in response to a determination that the first value does not match the second value, storing the second value as a value for the merged attribute associated with the product in the search index; determining resource requirements for performing back-end job processing for each of the plurality of merchants based on one or more rules, comprising: performing one or more of the following: determining whether a resource requirement exceeds a quota per application or fails to satisfy a service level agreement (SLA) for a merchant; or determining whether the resource requirement exceeds a dynamic rate limit; in response to a determination that the resource requirements satisfy the one or more rules for at least one merchant of the plurality of merchants, copying data from the data store and the search index to a copy on demand cluster to perform processing on the copied data for the at least one merchant, and performing back-end job processing for the remaining merchants of the plurality of merchants; optimizing for at least one merchant of the plurality of merchants a least expensive computation resource for performing a given job a resource manager; and providing a search result to a query based at least in part on the search index.
12. The method of claim 11, wherein the copy on demand of the data store and the search index for storing the web related data for the first merchant corresponds to a snapshot of the data store and the search index in a dynamic cluster.
13. The method of claim 11, wherein the web related data for the plurality of merchants is stored in a back-end cluster of the distributed data storage layer.
14. A computer program product for a distributed data storage layer for web data services, the computer program product being embodied in a non-transitory computer readable storage medium and comprising computer instructions for: storing web related data for a plurality of merchants in the distributed data storage layer; copying on demand a data store and a search index for web related data for each of the plurality of merchants to perform a job for updating the web related data for each of the plurality of merchants; merging crawled web site data and feed data for each of the plurality of merchants, the plurality of merchants including a first merchant and a second merchant, wherein the merging of the crawled web site data and feed data for each of the plurality of merchants comprises: merging crawled web site data and feed data for the first merchant to obtain a first merged data; and merging crawled web site data and feed data for the second merchant to obtain a second merged data, wherein the first merged data is isolated from the second merged data; maintaining data consistency for the crawled web site data and feed data for each of the plurality of merchants, comprising: determining whether a first value of an attribute associated with a product in the crawled web site data matches a second value of the attribute associated with the product in the feed data; and in response to a determination that the first value does not match the second value, storing the second value as a value for the merged attribute associated with the product in the search index; determining resource requirements for performing back-end job processing for each of the plurality of merchants based on one or more rules, comprising: performing one or more of the following: determining whether a resource requirement exceeds a quota per application or fails to satisfy a service level agreement (SLA) for a merchant; or determining whether the resource requirement exceeds a dynamic rate limit; and in response to a determination that the resource requirements satisfy the one or more rules for at least one merchant of the plurality of merchants, copying data from the data store and the search index to a copy on demand cluster to perform processing on the copied data for the at least one merchant, and performing back-end job processing for the remaining merchants of the plurality of merchants; optimizing for at least one merchant of the plurality of merchants for a least expensive computation resource for performing a given job a resource manager; and providing a search result to a query based at least in part on the search index.
15. The computer program product recited in claim 14, wherein the copy on demand of the data store and the search index for storing the web related data for the first merchant corresponds to a snapshot of the data store and the search index in a dynamic cluster.
16. The computer program product recited in claim 14, wherein the web related data for the plurality of merchants is stored in a back-end cluster of the distributed data storage layer.
17. The system recited in claim 1, wherein the attribute relates to price.
18. The system recited in claim 1, wherein the SLA for a merchant comprises an update to merchant pricing within a specified time frame.
19. The method of claim 11, wherein the SLA for a merchant comprises an update to merchant pricing within a specified time frame.
20. The computer program product recited in claim 14, wherein the SLA for a merchant comprises an update to merchant pricing within a specified time frame.
</claims>
</document>
