<document>

<filing_date>
2019-04-01
</filing_date>

<publication_date>
2021-01-05
</publication_date>

<priority_date>
2018-04-03
</priority_date>

<ipc_classes>
G06F16/56,G06K9/00,G06N3/08,G06T7/00
</ipc_classes>

<assignee>
NEC CORPORATION
NEC LABORATORIES AMERICA
</assignee>

<inventors>
COSATTO, ERIC
MIN, RENQIANG
GRAF, HANS PETER
LAI, FARLEY
</inventors>

<docdb_family_id>
68056438
</docdb_family_id>

<title>
Unsupervised neighbor-preserving embedding for image stream visualization and anomaly detection
</title>

<abstract>
Methods and systems for detecting and correcting anomalous inputs include training a neural network to embed high-dimensional input data into a low-dimensional space with an embedding that preserves neighbor relationships. Input data items are embedded into the low-dimensional space to form respective low-dimensional codes. An anomaly is determined among the high-dimensional input data based on the low-dimensional codes. The anomaly is corrected.
</abstract>

<claims>
1. A method for detecting and correcting anomalous inputs, comprising: training a neural network to embed high-dimensional input data into a low-dimensional space with an embedding that preserves neighbor relationships; embedding a plurality of input data items into the low-dimensional space to form respective low-dimensional codes; determining an anomaly among the high-dimensional input data based on the low-dimensional codes; and correcting the anomaly.
2. The method of claim 1, wherein the high-dimensional input data comprises images of manufactured products.
3. The method of claim 2, wherein correcting the anomaly comprises automatically discarding anomalous products.
4. The method of claim 1, further comprising visualizing the high-dimensional input data based on neighbor relationships among the low-dimensional codes.
5. The method of claim 1, wherein determining the anomaly comprises estimating a density of embeddings using a Gaussian mixture model and fitting a one-class support vector machine.
6. The method of claim 1, wherein training the neural network comprises determining pairwise neighboring probabilities in a batch of high-dimensional input training data.
7. The method of claim 6, wherein training the neural network further comprises embedding each high-dimensional input training data in the batch into the low-dimensional space.
8. The method of claim 7, wherein training the neural network further comprises reconstructing high-dimensional data from the high-dimensional training data that has been embedded into the low-dimensional space.
9. The method of claim 8, wherein training the neural network further comprises minimizing a Kullback-Leiber loss function, reconstruction errors, and hinge losses.
10. A system for detecting and correcting anomalous inputs, comprising: a neural network configured to embed high-dimensional input data into a low-dimensional space; a training module configured to train the neural network to embed the high-dimensional input data with an embedding that preserves neighbor relationships; an anomaly detector configured to use the neural network to embed a plurality of input data items into the low-dimensional space to form respective low-dimensional codes and to determine anomaly among the high-dimensional input data based on the low-dimensional codes; and an anomaly correction module configured to correct the anomaly.
11. The system of claim 10, wherein the high-dimensional input data comprises images of manufactured products.
12. The system of claim 11, wherein the anomaly correction module is further configured to automatically discard anomalous products.
13. The system of claim 10, further comprising a user interface configured to visualize the high-dimensional input data based on neighbor relationships among the low-dimensional codes.
14. The system of claim 10, wherein the anomaly detector is further configured to estimate a density of embeddings using a Gaussian mixture model and fitting a one-class support vector machine.
15. The system of claim 10, wherein the training module is further configured to determine pairwise neighboring probabilities in a batch of high-dimensional input training data.
16. The system of claim 15, wherein the training module is further configured to determine embed each high-dimensional input training data in the batch into the low-dimensional space.
17. The system of claim 16, wherein the training module is further configured to determine reconstruct high-dimensional data from the high-dimensional training data that has been embedded into the low dimensional space.
18. The system of claim 17, wherein the training module is further configured to determine minimize a loss function, reconstruction errors, and hinge losses.
</claims>
</document>
