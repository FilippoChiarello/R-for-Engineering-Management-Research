<document>

<filing_date>
2020-08-28
</filing_date>

<publication_date>
2020-12-17
</publication_date>

<priority_date>
2017-08-07
</priority_date>

<ipc_classes>
G06F40/18,G06F8/35,G06F9/445,G06N20/00,G06N20/20,G06N3/04,G06N3/08,G06N5/00
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
BALOG, MATEJ
BROCKSCHMIDT, MARC MANUEL JOHANNES
GAUNT, ALEXANDER LLOYD
NOWOZIN, SEBASTIAN
TARLOW, DANIEL STEFAN
</inventors>

<docdb_family_id>
65230397
</docdb_family_id>

<title>
PROGRAM PREDICTOR
</title>

<abstract>
A computer program predictor is described which has a processor configured to access a program attribute predictor; and a memory storing a search component configured to search a space of possible programs, to find a program which, given an input data instance and an output data instance, will compute the output data instance from the input data instance, the search being guided by attributes predicted by the attribute predictor given the input data instance and the output data instance.
</abstract>

<claims>
1. A computer program predictor comprising: a processor configured to access a program attribute predictor; and a memory storing a search component configured to search a space of possible programs, to predict a program which, given an input data instance and an output data instance, will compute the output data instance from the input data instance, the search being guided by attributes predicted by the program attribute predictor given the input data instance and the output data instance.
2. The computer program predictor of claim 1, the program attribute predictor having been trained on information about a plurality of programs, the information comprising: pairs of input and output data of the programs, and attributes of the programs.
3. The computer program predictor of claim 1 where the search component is configured to search the space of possible programs using an exploration order which is influenced by the predictions of the program attribute predictor.
4. The computer program predictor of claim 1 where the program attribute predictor predicts a probability value for each of a plurality of possible functions and the search component searches for a new function to add to the program, from the plurality of possible functions, by assessing those sequentially in an order influenced by the probability values.
5. The computer program predictor of claim 4 where the search component is configured such that the most likely attributes, as predicted by the program attribute predictor, are assessed first.
6. The computer program predictor of claim 1 where the search component is configured to carry out a depth first search.
7. The computer program predictor of claim 1 where the search component is configured to maintain a plurality of active functions, so that the top k most probable functions according to the program attribute predictor are in the active set, and performs depth first search with the plurality of active functions.
8. The computer program predictor of claim 1 where the program attribute predictor is configured to predict one or more of: an indicator of whether a specified function is the first function used in the program, an indicator of whether a specified function is the last function used in the program, the presence of a loop in the program, the number of different functions used in the program.
9. The computer program predictor of claim 1 where the program attribute predictor is a machine learning system selected from one or more of: a neural network, a random decision forest, a kernel method, a linear logistic regression.
10. The computer program predictor of claim 1 where the program attribute predictor comprises a neural network encoder configured to encode individual input-output examples of a program into encodings and to pool the encodings into a single encoding.
11. The computer program predictor of claim 1 where the program attribute predictor comprises a neural network encoder and a neural network decoder and where the neural network encoder has a feed-forward architecture.
12. The computer program predictor of claim 1 where the program attribute predictor comprises a neural network encoder and a neural network decoder and where the neural network encoder has a gated recurrent neural network architecture.
13. The computer program predictor of claim 1 where the program attribute predictor comprises a neural network encoder which is a differentiable mapping from a set of M input-output examples generated by a single program to a latent real-valued vector.
14. The computer program predictor of claim 13 where the decoder is a differentiable mapping from the latent real-valued vector produced by the encoder to predictions of attributes of the program.
15. The computer program predictor of claim 1 where the program attribute predictor is a neural network having been trained using negative cross-entropy.
16. The computer program predictor of claim 1 wherein the predicted program comprises a spreadsheet formula of a spreadsheet application, and wherein the input data instance and the output data instance are extracted from the spreadsheet application.
17. The computer program predictor of claim 1 wherein the input data instance and the output data instance are patterns of user input at a user interface of a computing device.
18. The computer program predictor of claim 1 wherein the search component comprises a cache and is configured to cache intermediate results of the search and to reuse the cached intermediate results.
19. A computer-implemented method comprising: accessing, using a processor, a program attribute predictor; and searching a space of possible programs, to predict a program which, given an input data instance and an output data instance, will compute the output data instance from the input data instance, the search being guided by attributes predicted by the program attribute predictor given the input data instance and the output data instance, wherein the predicted program comprises a spreadsheet formula of a spreadsheet application, and wherein the input data instance and the output data instance are extracted from the spreadsheet application.
20. A computer implemented method comprising: accessing, using a processor, a program attribute predictor; and searching a space of possible programs, to predict a program which, given an input data instance and an output data instance, will compute the output data instance from the input data instance, the search being guided by attributes predicted by the program attribute predictor given the input data instance and the output data instance.
</claims>
</document>
