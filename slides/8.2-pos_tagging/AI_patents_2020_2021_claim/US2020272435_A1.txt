<document>

<filing_date>
2019-12-13
</filing_date>

<publication_date>
2020-08-27
</publication_date>

<priority_date>
2019-02-25
</priority_date>

<ipc_classes>
G06F40/30,G06F8/36,G06N5/02,G06N5/04
</ipc_classes>

<assignee>
ATOS SYNTEL
</assignee>

<inventors>
PAREY, PRABHAT
DHAL, LOPAMUDRA
ZENDE, POOJA VITTHAL
AGASHE, YOGESHKUMAR KISHOR
HARDAS, KAUSTUBH
CHAPALGAONKAR, AKHILA
APTE, ABHIJIT ANIL
GANTA, RAMA MOHAN
MORE, JOTIRAM VITHALRAO
PUREKAR, AJAY
SHERKAR, RITESH TUKARAM
</inventors>

<docdb_family_id>
69726492
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR VIRTUAL PROGRAMMING BY ARTIFICIAL INTELLIGENCE
</title>

<abstract>
Systems and methods of generating a computer program using artificial intelligence module include generating logic programming by analyzing natural language in sample input data received from an external source, the sample input data resulting in a known output. Select input data, which includes select natural language or a coding instruction including the select natural language, is received. Context data is generated by processing the select natural language. The logic programming based on the context data is selected. A computing instruction is determined for the select input data using the logic programming, and the computer program including the computing instruction is generated.
</abstract>

<claims>
1. A method of generating a computer program using artificial intelligence, the method comprising: generating, at an artificial intelligence module, logic programming by analyzing natural language in sample input data received from an external source, the sample input data resulting in a known output; receiving select input data, the select input data including select natural language or a coding instruction including the select natural language; generating context data by processing, using an artificial neural network of the artificial intelligence module, the select natural language; selecting the logic programming based on the context data; determining, at the artificial intelligence module, a computing instruction for the select input data using the logic programming; and generating the computer program, the computer program including the computing instruction.
2. The method of claim 1, further comprising: storing the logic programming in a knowledge repository; receiving process input data, the process input data being a result of the computing instruction, and the process input data including the select natural language or the coding instruction including the select natural language; generating process context data by processing, at the artificial intelligence module, the select natural language in the process input data; generating additional logic programming based on a comparison between the process context data and the context data; and storing the additional logic programming in the knowledge repository.
3. The method of claim 1, further comprising: storing the logic programming in a knowledge repository; and receiving subsequent input data, the subsequent input data including the select natural language or the coding instruction including the select natural language, and the subsequent input data being different from the select input data; generating subsequent context data by processing, at the artificial intelligence module, the select natural language in the subsequent input data; retrieving the logic programming from the knowledge repository based on a comparison between the subsequent context data and the context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the logic programming; and updating the computer program to include the subsequent computing instruction.
4. The method of claim 1, wherein the select input data is encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
5. The method of claim 1, wherein the generating of the context data includes creating metadata for the select input data by performing, using a natural language processing module, at least one of sentiment analysis, sentence recognition, relationship extraction or language detection; and generating the context data using the metadata.
6. The method of claim 1, further comprising: storing the logic programming in a knowledge repository; receiving initial input data, the initial input data including natural language or a coding instruction including the natural language; generating context data by processing, at the artificial intelligence module, the natural language; identifying select data in the context data, the select data including the natural language or the coding instruction including the natural language; generating select context data by processing, at the artificial intelligence module, the natural language in the select data; generating, at the artificial intelligence module, select logic programming for the select context data, the generating of the select logic programming being based on the logic programming; determining, at the artificial intelligence module, a select computing instruction for the select data using the select logic programming; and generating a select computer program, the select computer program including the select computing instruction.
7. The method of claim 6, further comprising: storing the select logic programming in the knowledge repository; and receiving subsequent input data, the subsequent input data including the natural language or the coding instruction including the natural language, and the subsequent input data being different from the select data; generating subsequent context data by processing, at the artificial intelligence module, the natural language in the subsequent input data; retrieving the select logic programming from the knowledge repository based on a comparison between the subsequent context data and the select context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the select logic programming; and updating the select computer program to include the subsequent computing instruction.
8. The method of claim 6, wherein the initial input data and the select data are encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
9. A system for generating a computer program using artificial intelligence, the system comprising: a processor; and a memory storing a program for execution by the processor, the program including instructions for generating, at an artificial intelligence module, logic programming by analyzing natural language in sample input data received from an external source, the sample input data resulting in a known output; receiving select input data, the select input data including select natural language or a coding instruction including the select natural language; generating context data by processing, at the artificial intelligence module, the select natural language; selecting the logic programming based on the context data; determining, at the artificial intelligence module, a computing instruction for the select input data using the logic programming; and generating the computer program, the computer program including the computing instruction.
10. The system of claim 9, wherein the program includes instructions for: storing the logic programming in a knowledge repository; receiving process input data, the process input data being a result of the computing instruction, and the process input data including the select natural language or the coding instruction including the select natural language; generating process context data by processing, at the artificial intelligence module, the select natural language in the process input data; generating additional logic programming based on a comparison between the process context data and the context data; and storing the additional logic programming in the knowledge repository.
11. The system of claim 9, wherein the program includes instructions for: storing the logic programming in a knowledge repository; and receiving subsequent input data, the subsequent input data including the select natural language or the coding instruction including the select natural language, and the subsequent input data being different from the select input data; generating subsequent context data by processing, at the artificial intelligence module, the select natural language in the subsequent input data; retrieving the logic programming from the knowledge repository based on a comparison between the subsequent context data and the context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the logic programming; and updating the computer program to include the subsequent computing instruction.
12. The system of claim 9, wherein the select input data is encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
13. The system of claim 9, wherein the generating of the context data includes creating metadata for the select input data by performing, using a natural language processing module, at least one of sentiment analysis, sentence recognition, relationship extraction or language detection; and generating the context data using the metadata.
14. The system of claim 9, wherein the program includes instructions for: storing the logic programming in a knowledge repository; receiving initial input data, the initial input data including natural language or a coding instruction including the natural language; generating context data by processing, at an the artificial intelligence module, the natural language; identifying select data in the context data, the select data including the natural language or the instruction including the natural language; generating select context data by processing, at the artificial intelligence module, the natural language in the select data; generating, at the artificial intelligence module, select logic programming for the select context data, the generating of the select logic programming being based on the logic programming; determining, at the artificial intelligence module, a select computing instruction for the select data using the select logic programming; and generating a select computer program, the select computer program including the select computing instruction.
15. The system of claim 14, wherein the instructions further comprise: storing the select logic programming in the knowledge repository; and receiving subsequent input data, the subsequent input data including the natural language or the coding instruction including the natural language, and the subsequent input data being different from the select data; generating subsequent context data by processing, at the artificial intelligence module, the natural language in the subsequent input data; retrieving the select logic programming from the knowledge repository based on a comparison between the subsequent context data and the select context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the select logic programming; and updating the select computer program to include the subsequent computing instruction.
16. The system of claim 14, wherein the initial input data and the select data are encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
17. A non-transitory computer readable medium having instructions embodied thereon that, when executed by a processor, cause the processor to perform operations comprising: generating, at an artificial intelligence module, logic programming by analyzing natural language in sample input data received from an external source, the sample input data resulting in a known output; receiving select input data, the select input data including select natural language or a coding instruction including the select natural language; generating context data by processing, at the artificial intelligence module, the select natural language; selecting the logic programming based on the context data; determining, at the artificial intelligence module, a computing instruction for the select input data using the logic programming; and generating a computer program, the computer program including the computing instruction.
18. The non-transitory computer readable medium of claim 17, wherein the operations further comprise: storing the logic programming in a knowledge repository; receiving process input data, the process input data being a result of the computing instruction, and the process input data including the select natural language or the coding instruction including the select natural language; generating process context data by processing, at the artificial intelligence module, the select natural language in the process input data; generating additional logic programming based on a comparison between the process context data and the context data; and storing the additional logic programming in the knowledge repository.
19. The non-transitory computer readable medium of claim 17, wherein the operations further comprise: storing the logic programming in a knowledge repository; and receiving subsequent input data, the subsequent input data including the select natural language or the coding instruction including the select natural language, and the subsequent input data being different from the select input data; generating subsequent context data by processing, at the artificial intelligence module, the select natural language in the subsequent input data; retrieving the logic programming from the knowledge repository based on a comparison between the subsequent context data and the context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the logic programming; and updating the computer program to include the subsequent computing instruction.
20. The non-transitory computer readable medium of claim 17, wherein the select input data is encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
21. The non-transitory computer readable medium of claim 17, wherein the generating of the context data includes creating metadata for the select input data by performing, using a natural language processing module, at least one of sentiment analysis, sentence recognition, relationship extraction or language detection; and generating the context data using the metadata.
22. The non-transitory computer readable medium of claim 17, wherein the operations further comprise: storing the logic programming in a knowledge repository; receiving initial input data, the initial input data including natural language or a coding instruction including the natural language; generating context data by processing, at the artificial intelligence module, the natural language; identifying select data in the context data, the select data including the natural language or the coding instruction including the natural language; generating select context data by processing, at the artificial intelligence module, the natural language in the select data; generating, at the artificial intelligence module, select logic programming for the select context data, the generating of the select logic programming being based on the logic programming; determining, at the artificial intelligence module, a select computing instruction for the select data using the select logic programming; and generating a select computer program, the select computer program including the select computing instruction.
23. The non-transitory computer readable medium of claim 22, wherein the operations further comprise: storing the logic programming in the knowledge repository; and receiving subsequent input data, the subsequent input data including the natural language or the coding instruction including the natural language, and the subsequent input data being different from the select data; generating subsequent context data by processing, at the artificial intelligence module, the natural language in the subsequent input data; retrieving the select logic programming from the knowledge repository based on a comparison between the subsequent context data and the select context data; and determining, at the artificial intelligence module, a subsequent computing instruction for the subsequent input data using the select logic programming; and updating the select computer program to include the subsequent computing instruction.
24. The non-transitory computer readable medium of claim 22, wherein the initial input data and the select data are encoded in a first logic programming language, and the logic programming is encoded in a second logic programming language, the second logic programming language being different than the first logic programming language.
</claims>
</document>
