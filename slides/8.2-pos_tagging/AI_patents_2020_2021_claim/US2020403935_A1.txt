<document>

<filing_date>
2020-06-17
</filing_date>

<publication_date>
2020-12-24
</publication_date>

<priority_date>
2019-06-18
</priority_date>

<ipc_classes>
G06F9/455,H04L12/911,H04L29/08
</ipc_classes>

<assignee>
TMRW FOUNDATION IP & HOLDING
TMRW Foundation IP & Holding S. Ã€ R. L.
</assignee>

<inventors>
YERLI, CEVAT
</inventors>

<docdb_family_id>
71111231
</docdb_family_id>

<title>
SOFTWARE ENGINE VIRTUALIZATION AND DYNAMIC RESOURCE AND TASK DISTRIBUTION ACROSS EDGE AND CLOUD
</title>

<abstract>
A system and method for enabling software engine virtualization and dynamic resource and task distribution across edge and cloud, comprising at least one cloud server comprising memory and at least one processor, the at least one cloud server hosting at least one cloud engine configured to store and process application data from one or more applications; one or more client devices connected to the cloud server via a network, the one or more client devices hosting at least one local engine configured to store and process application data from the one or more applications and to provide output to users; and a virtual engine hosted across edge and cloud configured to virtualize, via a virtualization logic component, one or more system network components, applications, and engine components, creating a virtual layer connected to the one or more client devices and cloud server via the network.
</abstract>

<claims>
1. A system enabling software engine virtualization and dynamic resource and task distribution across edge and cloud, comprising: at least one cloud server comprising memory and at least one processor, the at least one cloud server hosting a virtualization logic component and at least one cloud engine of a software engine, the at least one cloud engine configured to store and process application data from one or more applications; one or more client devices connected to the at least one cloud server via a network, the one or more client devices hosting at least one local engine of the software engine, the at least one local engine configured to store and process application data from the one or more applications and to provide output to users; and a virtual engine hosted across edge and cloud, the virtual engine configured to virtualize, via the virtualization logic component, one or more system network components, the one or more applications, and components of the at least one cloud engine and the at least one local engine, creating a virtual layer connected to the one or more client devices and the at least one cloud server via the network.
2. The system of claim 1, further comprising one or more fog servers comprising memory and at least one processor, the fog servers being located in areas proximate to the one or more client devices and configured to assist the at least one cloud server and the one or more client devices in the processing of application data from the one or more applications, wherein the functions of the fog servers are abstracted within the virtual layer.
3. The system of claim 2, wherein the one or more applications are hosted by the one or more client devices, cloud servers, fog servers, or combinations thereof.
4. The system of claim 1, wherein the virtual engine further comprises: at least one optimization component configured to assess engine task and system resource requirements from the one or more applications and to optimize the resource and task allocation based on said assessment; and at least one system resource distribution platform configured to distribute required engine tasks and system resources across edge and cloud on demand based on the optimization of the at least one optimization component.
5. The system of claim 4, wherein the at least one system resource distribution platform comprises one or more virtual cells linked to a plurality of physical network resources.
6. The system of claim 5, wherein two or more virtual cells may be used in combination in order to dynamically allocate resources and engine tasks to the one or more client devices.
7. The system of claim 4, wherein the optimization component utilizes resource allocation parameters comprising one or more of server capabilities; client capabilities; end-to-end response time; application resources demand; demanded and available quality of service; service level agreement; distance between devices and servers; bandwidth capacity; or required level of detail, or combinations thereof.
8. The system of claim 1, wherein the virtual engine further comprises one or more function-specific sub-engines.
9. The system of claim 1, wherein the network comprises millimeter-wave (mmW) or combinations of mmW and sub 6 GHz communication systems, or a wireless local area network.
10. The system of claim 1, wherein the one or more client devices include one or more mobile devices, personal computers, game consoles, media centers, smart contact lenses, or head-mounted displays.
11. A method enabling software engine virtualization and distribution across edge and cloud, comprising: providing a virtual engine hosted across one or more cloud servers and one or more client devices connected via a network, the virtual engine comprising a virtualization logic component; and virtualizing, via the virtualization logic component of the virtual engine, one or more system network components, one or more applications, and components of a software engine, creating a virtual layer connected to the one or more client devices and the one or more cloud servers via the network.
12. The method of claim 11, further comprising providing one or more fog servers comprising memory and at least one processor, the one or more fog servers being located in areas proximate to the one or more client devices and configured to assist the one or more cloud servers and the one or more client devices in the processing of application data from the applications, wherein the functions of the one or more fog servers are abstracted within the virtual layer.
13. The method of claim 12, wherein the applications are hosted by the one or more client devices, the one or more cloud servers, the one or more fog servers, or combinations thereof.
14. The method of claim 11, further comprising: assessing, by at least one optimization component in the virtual engine, engine task and system resource requirements from the one or more applications; optimizing, by the at least one optimization component in the virtual engine, the allocation of engine tasks and system resources based on said assessment; and dynamically distributing on demand engine tasks and system resources across edge and cloud via a distribution component of the virtual engine based on the optimization performed by the at least one optimization component.
15. The method of claim 14, wherein the at least one optimization component utilizes resource allocation parameters comprising one or more of server capabilities; client capabilities; end-to-end response time; application resources demand; demanded and available quality of service; service level agreement; distance between devices and servers; bandwidth capacity; or level of detail, or a combination thereof.
16. The method of claim 14, wherein the distribution component comprises one or more virtual cells linked to a plurality of physical network resources.
17. The method of claim 16, wherein two or more virtual cells may be used in combination in order to dynamically allocate resources and engine tasks to the one or more client devices.
18. The method of claim 11, wherein the software engine comprises one or more function-specific sub-engines.
19. The method of claim 11, wherein the network comprises millimeter-wave (mmW) or combinations of mmW and sub 6 GHz communication systems, or a wireless local area network.
20. One or more non-transitory computer-readable media having stored thereon instructions configured to, when executed by one or more computers, cause the one or more computers to enable software engine virtualization and dynamic resource and task distribution across edge and cloud by performing steps comprising: providing a virtual engine hosted across one or more cloud servers and one or more client devices connected via a network, the virtual engine comprising a virtualization logic component; and virtualizing, via the virtualization logic component of the virtual engine, one or more system network components, one or more applications, and components of a software engine, creating a virtual layer connected to the one or more client devices and the one or more cloud servers via the network; assessing, by at least one optimization component in the virtual engine, engine task and system resource requirements from the one or more applications; optimizing, by the at least one optimization component in the virtual engine, the allocation of engine tasks and system resources based on said assessment; and dynamically distributing on demand engine tasks and system resources across edge and cloud via a distribution component of the virtual engine based on the optimization performed by the at least one optimization component.
</claims>
</document>
