<document>

<filing_date>
2019-12-05
</filing_date>

<publication_date>
2020-10-22
</publication_date>

<priority_date>
2019-04-18
</priority_date>

<ipc_classes>
G06F16/242,G06F17/16,G06N3/04
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
LEE, DONG JUN
YOON, JAESIK
</inventors>

<docdb_family_id>
72829435
</docdb_family_id>

<title>
ONE-SHOT LEARNING FOR TEXT-TO-SQL
</title>

<abstract>
Provided is a system and method for detecting a SQL command from a natural language input using neural networks which works even when the SQL command has not been seen before by the neural networks. In one example, the method may include storing a candidate set comprising structured query language (SQL) templates paired with respective text values, reducing, via a first predictive network, the candidate set into a subset of candidates based on a natural language input and the text values included in the candidate set, selecting, via a second predictive network, an SQL template from among the subset of candidates based on the natural language input and text values included in the subset of candidates, and determining a SQL command that corresponds to the natural language input based on the selected SQL template and content from the natural language input.
</abstract>

<claims>
1. A computing system comprising: a memory configured to store a candidate set comprising structured query language (SQL) templates paired with respective text values; and a processor configured to reduce, via a first predictive network, the candidate set into a subset of candidates based on the natural language input and the text values included in the candidate set, select, via a second predictive network, an SQL template from among the subset of candidates based on the natural language input and text values included in the subset of candidates, and determine a SQL command that corresponds to the natural language input based on the selected SQL template and content from the natural language input.
2. The computing system of claim 1, further comprising a microphone which receives speech including the natural language input.
3. The computing system of claim 1, wherein the processor is configured to: convert the text values of the candidate set into a set of vectors and convert the natural language input into a natural language vector using a first function; and compare the set of vectors to the natural language vector to identify a subset of vectors from the set of vectors that most closely matches the natural language vector.
4. The computing system of claim 3, wherein the processor compares of the set of vectors to the natural language vector via cosine similarity.
5. The computing system of claim 1, wherein a size of the subset of candidates comprises a fixed size that is predefined in advance.
6. The computing system of claim 1, wherein the processor is configured to: convert text values of the subset of candidates into a subset of vectors and convert the natural language input into a natural language vector using a second function, and compare the subset of vectors to the natural language vector to select a vector from the subset of vectors that most closely matches the natural language vector.
7. The computing system of claim 1, wherein the processor is configured to fill-in one or more slots of the selected SQL template with one or more words from the natural language input.
8. The computing of claim 7, wherein the processor is further configured to determine, via a third predictive network, a word from the natural language input which belongs in an empty slot of the selected SQL template.
9. The computing system of claim 1, wherein the processor is further configured to generate a response to the determined SQL command, and output the response to at least one of a user interface and a software program.
10. A method comprising: storing a candidate set comprising structured query language (SQL) templates paired with respective text values; reducing, via a first predictive network, the candidate set into a subset of candidates based on a natural language input and the text values included in the candidate set; selecting, via a second predictive network, an SQL template from among the subset of candidates based on the natural language input and text values included in the subset of candidates; and determining a SQL command that corresponds to the natural language input based on the selected SQL template and content from the natural language input.
11. The method of claim 10, further comprising receiving the natural language input via a microphone.
12. The method of claim 10, wherein the reducing comprises: converting the text values of the candidate set into a set of vectors and converting the natural language input into a natural language vector using a first function; and comparing the set of vectors to the natural language vector to identify a subset of vectors from the set of vectors that most closely matches the natural language vector.
13. The method of claim 12, wherein the comparing comprises comparing the set of vectors to the natural language vector via cosine similarity.
14. The method of claim 10, wherein a size of the subset of candidates comprises a fixed size that is predefined in advance.
15. The method of claim 10, wherein the selecting comprises: converting text values of the subset of candidates into a subset of vectors and converting the natural language input into a natural language vector using a second function, and comparing the subset of vectors to the natural language vector to select a vector from the subset of vectors that most closely matches the natural language vector.
16. The method of claim 10, wherein the determining comprises filling-in one or more slots of the selected SQL template with one or more words from the natural language input.
17. The method of claim 10, wherein the determining comprises determining, via a third predictive network, a word from the natural language input which belongs in an empty slot of the selected SQL template.
18. The method of claim 10, wherein the method further comprises generating a response to the determined SQL command, and outputting the response to at least one of a user interface and a software program.
19. A non-transitory computer-readable medium storing instructions which when executed by a processor cause a computer to perform a method comprising: storing a candidate set comprising structured query language (SQL) templates paired with respective text values; reducing, via a first predictive network, the candidate set into a subset of candidates based on a natural language input and the text values included in the candidate set, selecting, via a second predictive network, an SQL template from among the subset of candidates based on the natural language input and text values included in the subset of candidates, and determining a SQL command that corresponds to the natural language input based on the selected SQL template and content from the natural language input.
20. The non-transitory computer-readable medium of claim 19, wherein the determining comprises determining, via a third predictive network, a word from the natural language input which belongs in an empty slot of the selected SQL template.
</claims>
</document>
