<document>

<filing_date>
2019-03-20
</filing_date>

<publication_date>
2020-09-22
</publication_date>

<priority_date>
2019-03-20
</priority_date>

<ipc_classes>
G11C11/419,G11C16/08,G11C16/12,G11C7/00
</ipc_classes>

<assignee>
ARM
</assignee>

<inventors>
BHARGAVA, MUDIT
JAISWAL, AKHILESH RAMLAUT
</inventors>

<docdb_family_id>
69811419
</docdb_family_id>

<title>
Read and Logic Operation Methods for Voltage-Divider Bit-Cell Memory Devices
</title>

<abstract>
In a particular implementation, a method to perform a read operation on a voltage divider bit-cell having first and second transistors and first and second storage elements is disclosed. The method includes: providing a first voltage to a bit-line coupled to the second transistor of the voltage-divider bit-cell; providing a second voltage to a first word-line and providing an electrical grounding to a second word-line; where the first and second word-lines are coupled to the respective first and second resistive memory devices; and determining at least one of first and second data resistances in the respective first and second storage elements based on an output voltage on the bit-line.
</abstract>

<claims>
1. A method of read operation in a voltage-divider bit-cell having first and second transistors and first and second storage elements, the method comprising: providing a first voltage to a bit-line coupled to the second transistor of the voltage-divider bit-cell; providing a second voltage to a first word-line; providing an electrical grounding to a second word-line, wherein the first and second word-lines are coupled to the respective first and second storage elements; and determining at least one of first and second data resistances in the respective first and second storage elements based on an output voltage on the bit-line.
2. The method of claim 1, further comprising: determining, by a sense amplifier, the output voltage on the bit-line.
3. The method of claim 1, further comprising: generating an electrical path across the first and second storage elements based on the provided second voltage to the first word-line and the provided electrical grounding to the second word-line.
4. The method of claim 1, wherein the output voltage is determined by: determining an input voltage of the second transistor based on the first and second data resistances, wherein the second transistor is configured to provide a discharge path for the first voltage and is coupled to the bit-line.
5. The method of claim 4, wherein the output voltage is further determined by: determining if the input voltage of the second transistor exceeds a threshold voltage of the second transistor.
6. The method of claim 5, wherein the output voltage is further determined by: discharging the first voltage from the bit-line to the resistive voltage-divider bit-cell if the input voltage exceeds a discharge threshold voltage.
7. The method of claim 1, wherein the first and second data resistances comprise complementary first and second data values or a fixed resistance and a corresponding programmable data value.
8. A method of performing logic computations in a memory array comprising: providing a first voltage to a column bit-line coupled to a plurality of rows of voltage-divider bit-cells of the memory array; activating two or more rows of the voltage-divider bit-cells, wherein each of the two or more or rows is activated by: providing a second voltage to respective first word-lines of the two or more rows; providing an electrical grounding to respective second word-lines of the two or more rows, wherein the respective first and second word-lines are coupled to the respective first and second resistive memory devices of the voltage-divider bit-cells; and determining respective column data values of the one or more activated rows based on an output voltage of the column bit-line, wherein determining the respective column data values correspond to a logic operation.
9. The method of claim 8, wherein determining the respective column data values includes determining, by a sense amplifier, the output voltage of the first bit-line.
10. The method of claim 9, wherein the first word-lines are top-lines and the second word-lines are bottom-lines.
11. The method of claim 10, wherein if the output voltage is close to the first voltage, then each of the determined respective column data values is a digital 0 value, and the determined respective column data values and the output voltage correspond to a NOR logic operation.
12. The method of claim 9, wherein the first word-lines are bottom-lines and the second word-lines are top-lines.
13. The method of claim 12, wherein if the output voltage is close to the first voltage, then each of the determined respective column data values is a digital 1 value, and the determined respective column data values and the output voltage correspond to an AND logic operation.
14. The method of claim 13, further comprising: inverting the output voltage by the sense amplifier, wherein the determined respective column data values and the inverted output voltage correspond to a NAND logic operation.
15. The method of claim 8, wherein each voltage-divider bit-cell comprises first and second transistors and first and second resistive memory devices, the method further comprising: for each activated voltage-divider bit cell: determining at least one of the first and second data resistances in the first and second resistive memory devices based on the second voltage and the electrical grounding to the first and second word-lines; determining an input voltage of the second transistor based on the stored first and second data resistances, wherein the second transistor is configured to provide a discharge path for the first voltage and is coupled to the column bit-line; determining if the input voltage of the second transistor exceeds a threshold voltage of the second transistor; and discharging the first voltage from the column bit-line to the resistive voltage-divider bit-cell if the input voltage exceeds the threshold voltage.
16. A method of performing a batch read in a memory array comprising: providing a first voltage to a column bit-line coupled to a plurality of rows of voltage-divider bit-cells; performing a first computation on two or more rows of the voltage-divider bit-cells in a first memory cycle, wherein the first computation is either a NOR-Boolean computation or a NAND-Boolean computation; and determining if first respective column data values of the two or more activated rows correspond to a first logic operation.
17. The method of claim 16, wherein the first logic operation is a NOR operation when the first computation is the NOR-Boolean computation, and wherein the first logic operation is a NAND operation when the first computation is the NAND-Boolean computation.
18. The method of claim 16, further comprising: performing a second computation on the two or more rows of the voltage-divider bit-cells in a second memory cycle if the first respective column data values do not correspond the first logic operation, wherein the first and second computations are different Boolean computations; and determining if second respective column data values of the two or more activated rows correspond to a second logic operation, wherein the second computation is the NAND-Boolean computation when the first computation is the NOR-Boolean computation, and wherein the second computation is the NOR-Boolean computation when the first computation is the NAND-Boolean computation, and wherein the second logic operation is the NAND operation when the second computation is the NAND-Boolean computation, and the second logic operation is the NOR operation when the second computation is the NOR-Boolean computation.
19. The method of claim 18, further comprising: performing a sequential read operation in a third memory cycle if the second respective column data values do not correspond to the second logic operation, wherein the sequential read operation comprises: for each voltage-divider bit-cell: providing a first voltage to the column bit-line coupled to the second transistor of the voltage-divider bit-cell; providing a second voltage to a first word-line; providing an electrical grounding to a second word-line, wherein the first and second word-lines are coupled to the respective first and second storage elements devices; determining at least one of first and second data resistances in the respective first and second storage elements based on an output voltage of the column bit-line; and determining the output voltage of the column bit-line.
20. The method of claim 16, wherein the NOR-Boolean computation is performed by: activating the two or more rows of the voltage-divider bit-cells, wherein each of the two or more or rows are activated by: providing a second voltage to respective top word-lines of the two or more rows and providing an electrical grounding to respective bottom word-lines of the two or more rows, wherein the respective top and bottom word-lines are coupled to the respective first and second resistive memory devices of the voltage-divider bit-cells; and determining the respective column data values of the two or more activated rows based on an output voltage of the column bit-line, wherein the NOR-Boolean computation determines if the respective column data values of the two or more activated rows are all a digital 0 value.
21. The method of claim 16, wherein the NAND-Boolean computation is performed by: activating the two or more rows of the voltage-divider bit-cells, wherein each of the two or more or rows are activated by: providing a second voltage to respective bottom word-lines of the two or more rows and providing an electrical grounding to respective top word-lines of the two or more rows, wherein the respective bottom and top word-lines are coupled to the respective first and second resistive memory devices of the voltage-divider bit-cells; and determining the respective column data values of the two or more activated rows based on an output voltage of the column bit-line, wherein the NAND-Boolean computation determines if the respective column data values of the two or more activated rows are all a digital 1 value.
</claims>
</document>
