<document>

<filing_date>
2020-09-15
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-03-12
</priority_date>

<ipc_classes>
G06F3/0482,G06F40/166,G06F40/279,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
BEIJING BYTEDANCE NETWORK TECHNOLOGY COMPANY
</assignee>

<inventors>
CHEN, XIAOSHUAI
</inventors>

<docdb_family_id>
66987114
</docdb_family_id>

<title>
METHOD AND DEVICE FOR GENERATING STATEMENT
</title>

<abstract>
A method and a device for generating a statement are provided. An embodiment includes obtaining an input statement by a user over a terminal; determining at least one target position in the input statement; according to a target position in the at least one target position, determining a statement to be inserted from the input statement; based on the statement to be inserted, determining at least one candidate word to be inserted in the target position; inserting a candidate word in the at least one candidate word into the target position to obtain a candidate statement; and sending the candidate statement to the terminal of the user for display. The embodiment can make candidate statements displayed on the terminal of the user more diversified to assist the user to select an expected statement from candidate statements, thereby saving time of the user spending on manually inserting words.
</abstract>

<claims>
1. A method for generating a statement, comprising: obtaining an input statement by a user over a terminal; determining at least one target position in the input statement; wherein the at least one target position is a position for inserting a word; according to a target position in the at least one target position, determining a statement to be inserted from the input statement; based on the statement to be inserted, determining at least one candidate word to be inserted in the target position; inserting a candidate word in the at least one candidate word into the target position to obtain a candidate statement; and sending the candidate statement to the terminal of the user for display.
2. The method according to claim 1, wherein the determining at least one target position in the input statement comprises: separating words in the input statement to obtain a word list; determining a position before a first word in the word list, a position after a last word in the word list, and a position between adjacent words in a circumstance of the word list comprising at least two words as candidate positions; and determining at least one target position from the candidate positions.
3. The method according to claim 2, wherein the determining at least one target position from the candidate positions comprises: inputting the word list into a position estimation module which is pre-trained to obtain a probability value corresponding to each of the candidate positions; wherein the probability value is configured for indicating a probability to insert a word into the candidate positions; and selecting at least one probability value in a descending order from probability values, and determining a candidate position corresponding to the at least one probability value as the target position.
4. The method according to claim 3, wherein the position estimation module is pre-obtained by training based on follow steps of: obtaining a first training sample set; wherein the first training sample set comprises a sample word list and position label information to mark a candidate position in the sample word list; and utilizing a machine learning method, taking the sample word list comprised in first training samples in the first training sample set as an input of an initial module, taking the position label information respectively corresponding to words comprised in the sample word list as an expected output of the initial module, training the initial module to obtain the position estimation module.
5. The method according to claim 1, wherein the determining at least one target position in the input statement comprises: in response to determining an end operation of a cursor movement aiming at the input statement, determining a current position of a cursor as the target position.
6. The method according to claim 1, wherein the based on the statement to be inserted, determining at least one candidate word to be inserted in the target position comprises: in response to determining the statement to be inserted comprises a prefix statement and a suffix statement, utilizing a word insertion module which is predisposed, determining a word to be inserted between the prefix statement and the suffix statement as the at least one candidate word; in response to determining the statement to be inserted merely comprises the prefix statement, utilizing the word insertion module to determine at least one word to be inserted after the prefix statement as the at least one candidate word; and in response to determining the statement to be inserted merely comprises the suffix statement, utilizing the word insertion module to determine at least one word to be inserted before the suffix statement as the at least one candidate word.
7. The method according to claim 6, wherein the word insertion module is a bidirectional Trie tree which is pre-constructed; wherein the bidirectional Trie tree comprises a forward Trie tree and a backward Trie tree; the forward Trie tree is configured for determining a word to be inserted after the prefix statement based on the prefix statement; the backward Trie tree is configured for determining a word to be inserted before the suffix statement based on the suffix statement; and wherein the determining a word to be inserted between the prefix statement and the suffix statement as the at least one candidate word comprises: determining a first word set consisting of the at least one word to be inserted after the prefix statement, and determining a second word set consisting of the at least one word to be inserted before the suffix statement; and determining words comprised in an intersection of the first word set and the second word set as the at least one candidate word.
8. The method according to claim 7, wherein the bidirectional Trie tree is pre-constructed based on following steps of: obtaining a history input statement set; separating words in a history input statement in the history input statement set to obtain a history input word list; and utilizing the history input word list to construct the bidirectional Trie tree; wherein the bidirectional Trie tree comprises nodes, and the nodes correspond to words in the history input word list.
9. The method according to claim 6, wherein the word insertion module is a neural network model which is pre-trained; the neural network model comprises a prefix neural network model, a suffix neural network model and a data processing layer; the prefix neural network model is configured for determining feature data of the prefix statement; the suffix neural network model is configured for determining feature data of the suffix statement; the data processing layer is configured for processing the feature data to obtain the at least one candidate word to be inserted into the at least one target position.
10. The method according to claim 9, wherein the neural network model is pre-constructed based on following steps of: obtaining a second training sample set; wherein the second training sample set comprises a sample prefix statement and a sample suffix statement, and a sample insertion word predisposed to be inserted between the sample prefix statement and the sample suffix statement; utilizing a machine learning method, inputting the sample prefix statement comprised in second training samples in the second training sample set into the prefix neural network model to obtain first feature data, and inputting the sample suffix statement corresponding to the sample prefix statement into the suffix neural network model to obtain second feature data; taking the first feature data and the second feature data as an input of the data processing layer, taking the sample insertion words corresponding to the sample prefix statement and the sample suffix statement as an expected output of the data processing layer, training to obtain the neural network model.
11. A server, comprising: one or more processors; a storage device, stored with one or more programs therein; and when the one or more programs are executed by the one or more processors, enabling the one or more processors to perform: obtaining an input statement by a user over a terminal; determining at least one target position in the input statement; wherein the at least one target position is a position for inserting a word; according to a target position in the at least one target position, determining a statement to be inserted from the input statement; based on the statement to be inserted, determining at least one candidate word to be inserted in the target position; inserting a candidate word in the at least one candidate word into the target position to obtain a candidate statement; and sending the candidate statement to the terminal of the user for display.
12. The server according to claim 11, wherein the storage device further stores the one or more programs that upon execution by the one or more processors cause the server to: separate words in the input statement to obtain a word list; determine a position before a first word in the word list, a position after a last word in the word list, and a position between adjacent words in a circumstance of the word list comprising at least two words as candidate positions; and determine at least one target position from the candidate positions.
13. The server according to claim 12, wherein the storage device further stores the one or more programs that upon execution by the one or more processors cause the server to: input the word list into a position estimation module which is pre-trained to obtain a probability value corresponding to each of the candidate positions; wherein the probability value is configured for indicating a probability to insert a word into the candidate positions; and select at least one probability value in a descending order from probability values, and determine a candidate position corresponding to the at least one probability value as the target position.
14. The server according to claim 13, wherein the position estimation module is pre-obtained by training based on follow steps of: obtaining a first training sample set; wherein the first training sample set comprises a sample word list and position label information to mark a candidate position in the sample word list; and utilizing a machine learning method, taking the sample word list comprised in first training samples in the first training sample set as an input of an initial module, taking the position label information respectively corresponding to words comprised in the sample word list as an expected output of the initial module, training the initial module to obtain the position estimation module.
15. The server according to claim 11, wherein the storage device further stores the one or more programs that upon execution by the one or more processors cause the server to: in response to determining an end operation of a cursor movement aiming at the input statement, determine a current position of a cursor as the target position.
16. The server according to claim 11, wherein the storage device further stores the one or more programs that upon execution by the one or more processors cause the server to: in response to determining the statement to be inserted comprises a prefix statement and a suffix statement, utilize a word insertion module which is predisposed, determine a word to be inserted between the prefix statement and the suffix statement as the at least one candidate word; in response to determining the statement to be inserted merely comprises the prefix statement, utilize the word insertion module to determine at least one word to be inserted after the prefix statement as the at least one candidate word; and in response to determining the statement to be inserted merely comprises the suffix statement, utilize the word insertion module to determine at least one word to be inserted before the suffix statement as the at least one candidate word.
17. The server according to claim 16, wherein the word insertion module is a bidirectional Trie tree which is pre-constructed; wherein the bidirectional Trie tree comprises a forward Trie tree and a backward Trie tree; the forward Trie tree is configured for determining a word to be inserted after the prefix statement based on the prefix statement; the backward Trie tree is configured for determining a word to be inserted before the suffix statement based on the suffix statement; and wherein the storage device further stores the one or more programs that upon execution by the one or more processors cause the server to: determine a first word set consisting of the at least one word to be inserted after the prefix statement, and determine a second word set consisting of the at least one word to be inserted before the suffix statement; and determine words comprised in an intersection of the first word set and the second word set as the at least one candidate word.
18. The server according to claim 17, wherein the bidirectional Trie tree is pre-constructed based on following steps of: obtaining a history input statement set; separating words in a history input statement in the history input statement set to obtain a history input word list; and utilizing the history input word list to construct the bidirectional Trie tree; wherein the bidirectional Trie tree comprises nodes, and the nodes correspond to words in the history input word list.
19. The server according to claim 16, wherein the word insertion module is a neural network model which is pre-trained; the neural network model comprises a prefix neural network model, a suffix neural network model and a data processing layer; the prefix neural network model is configured for determining feature data of the prefix statement; the suffix neural network model is configured for determining feature data of the suffix statement; the data processing layer is configured for processing the feature data to obtain the at least one candidate word to be inserted into the at least one target position.
20. The server according to claim 19, wherein the neural network model is pre-constructed based on following steps of: obtaining a second training sample set; wherein the second training sample set comprises a sample prefix statement and a sample suffix statement, and a sample insertion word predisposed to be inserted between the sample prefix statement and the sample suffix statement; utilizing a machine learning method, inputting the sample prefix statement comprised in second training samples in the second training sample set into the prefix neural network model to obtain first feature data, and inputting the sample suffix statement corresponding to the sample prefix statement into the suffix neural network model to obtain second feature data; taking the first feature data and the second feature data as an input of the data processing layer, taking the sample insertion words corresponding to the sample prefix statement and the sample suffix statement as an expected output of the data processing layer, training to obtain the neural network model.
</claims>
</document>
