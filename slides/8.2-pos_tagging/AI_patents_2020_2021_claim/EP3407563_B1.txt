<document>

<filing_date>
2018-04-26
</filing_date>

<publication_date>
2020-09-23
</publication_date>

<priority_date>
2017-05-26
</priority_date>

<ipc_classes>
H04L12/861,H04L29/06
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
MCDONNELL, NIALL D.
CONNOR, PATRICK L.
HEARN, JAMES ROBERT
HERDRICH, ANDREW J.
SOOD, KAPIL
DUBAL, SCOTT P.
</inventors>

<docdb_family_id>
62165338
</docdb_family_id>

<title>
METHOD, APPARATUS AND MACHINE READABLE MEDIUM FOR ACCELERATING NETWORK SECURITY MONITORING
</title>

<abstract>
Generally discussed herein are systems, devices, and methods for network security monitoring (NSM). A hardware queue manager (HQM) may include an input interface to receive first data from at least a first worker thread, queue duplication circuitry to generate a copy of at least a portion of the first data to create first copied data, and an output interface to (a) provide the first copied data to a second worker thread, and/or (b) provide at least a portion of the first data to a third worker thread.
</abstract>

<claims>
1. A hardware queue manager (310, 504) comprising: an input interface for coupling to a plurality of input queues, the input interface being adapted to receive first data from at least a first worker thread (308A-308D) from an input queue of the plurality of input queues; and a queue duplication circuitry (404) to generate a copy of at least a portion of the first data to create first copied data; the hardware queue manager further comprising an output interface for coupling to a plurality of output queues, the output interface being adapted to (a) provide the first copied data to a second worker thread (3081) to perform security monitoring; the second worker threat coupled to a first output queue of the plurality of output queues coupled to the hardware queue manager; the second worker thread being a debug thread, and to (b) provide at least a portion of the first data to a third worker threat coupled to a second output queue of the plurality of output queues, the third worker thread including packet inspection, network address translation, intrusion detection, ad insertion, or routing.
2. The apparatus of claim 1, wherein the first worker thread executes on a first processing core (218A-C), the second worker thread executes on a second processing core (218D-E), and the third worker thread executes on a third processing core (218D-E), the first, second, and third processing cores comprising separate processing cores.
3. The apparatus of claim 1, wherein the first worker thread executes on a first virtual machine, the second worker thread executes on a second virtual machine, and the third worker thread executes on a third virtual machine, the first, second, and third processing virtual machines comprising separate virtual machines.
4. The apparatus of claim 1, wherein the queue duplication circuitry (402) is to copy a pointer to the first data.
5. The apparatus of claim 4, further comprising data copy circuitry (404) to copy the first data.
6. The apparatus of claim 1, further comprising queue routing control circuitry (518) to route the first data and the first copied data to respective output queues coupled between the second and third processing cores and the hardware queue manager.
7. The apparatus of claim 6, further comprising sequencer circuitry (508) to receive indication information to indicate data to be copied from a plurality of input queues, and provide the data to be copied to the third processing core, and a copy of the data to be copied, to the duplication circuitry.
8. A method for network security monitoring, the method comprising: receiving, at an input interface of a hardware queue manager (310, 504) and through an input queue of a plurality of input queues coupled to the hardware queue manager, first data from a first worker thread; and generating, by a queue duplication circuitry of the hardware queue manager, a copy of at least a portion of the first data to create first copied data; the method further comprising, by an output interface of the hardware queue manager, (a) providing the first copied data to a second worker thread to perform network security monitoring, the second worker thread coupled to a first output queue of a plurality of output queues coupled to the hardware queue manager wherein the second worker thread is a debug thread, and (b) providing at least a portion of the first data to a third worker thread through a second output queue of the plurality of output queues coupled to the hardware queue manager wherein the third worker thread includes packet inspection, network address translation, intrusion detection, ad insertion, or routing.
9. The method of claim 8, wherein the first worker thread executes on a first processing core, the second worker thread executes on a second processing core, and the third worker thread executes on a third processing core, the first, second, and third processing cores comprising separate processing cores.
10. The method of claim 8, wherein the first worker thread executes on a first virtual machine, the second worker thread executes on a second virtual machine, and the third worker thread executes on a third virtual machine, the first, second, and third processing virtual machines comprising separate virtual machines.
11. The method of any of claims 8 to 10, wherein generating the copy of at least the portion of the first includes copying a pointer to the first data.
12. The method of any of claims 8 to 11, wherein the operations further comprise routing the first data and the first copied data to respective output queues coupled between second and third processing cores and a hardware queue manager.
13. The method of claim 12, wherein the operations further comprise receiving indication information to indicate data to be copied from a plurality of input queues and providing the data to be copied to data duplication circuitry.
14. A computer readable medium having stored thereon instructions that, when executed on a machine, cause the machine to perform the method of any of claims 8 to 13.
</claims>
</document>
