<document>

<filing_date>
2020-05-11
</filing_date>

<publication_date>
2020-11-12
</publication_date>

<priority_date>
2019-05-09
</priority_date>

<ipc_classes>
G16B30/00,G16B50/50,G16H50/30
</ipc_classes>

<assignee>
CATALOG TECHNOLOGIES
</assignee>

<inventors>
BHATIA, SWAPNIL
ROQUET, NATHANIEL
FERRAGINA, Paolo
</inventors>

<docdb_family_id>
70857293
</docdb_family_id>

<title>
DATA STRUCTURES AND OPERATIONS FOR SEARCHING, COMPUTING, AND INDEXING IN DNA-BASED DATA STORAGE
</title>

<abstract>
The present disclosure is directed to enabling search and extraction of data stored in DNA with optimized data structures and functions. Accordingly, systems and methods are provided herein for performing certain functions on data stored in nucleic acid molecules. The present disclosure covers at least the following areas of interest: (1) data structures to provide efficient access and search of information stored in nucleic acid molecules, (2) accurate and quick reading of information stored in nucleic acid molecules, (3) targeted approaches to accessing subsets of information stored in nucleic acid molecules, (4) a rank function that determines a count of particular bit or symbol value in a set of information stored in nucleic acid molecules, (5) functions including counting, locating, and extracting occurrences of a specific pattern in a message of information stored in nucleic acid molecules, and (6) an if-then-else operation to sort data stored in nucleic acid molecules.
</abstract>

<claims>
CLAIMS 1. A method for obtaining a rank of a particular bit in a string of bits, each bit having a bit value and a bit position, from digital information stored in a pool of nucleic acid molecules, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules representative of the string of bits, the pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes;
(b) obtaining a second pool of identifier nucleic acid molecules representative of a string of counter symbols that is derived from the string of bits, each counter symbol represented by a string of b counter bits indicative of a running count of a number of bits, for every w bits in the string of bits, that have a specific bit value;
(c) obtaining a first count by accessing the second pool in (b) with a second series of probes to target at least the identifier nucleic acid molecules within the second pool that represent a corresponding counter symbol that indicates the running count of the number of bits of a given value for either (1) all blocks of w bits preceding the particular bit, or (2) all blocks of w bits preceding the particular bit and including the block of w bits that includes the particular bit;
(d) obtaining a second count by accessing the first pool in (a) with a first series of probes to target one or more distinct identifier nucleic acid molecules within the first pool that either (1) represent bits not counted in (c) and preceding or including the particular bit, or (2) represent bits that were counted in (c) but that do not precede or include the particular bit; and (e) obtaining the rank of the particular bit in the string of bits from the first count and the second count. 2. The method of claim 1, wherein the identifier nucleic acid molecules in the first pool represent the string of bits such that the presence of an identifier represents the bit-value of'1' at a bit position. 3. The method of any of claims 1 and 2, wherein when the first count in (c) represents all blocks of w bits preceding the particular bit, the first series of probes in (d) targets one or more distinct identifier nucleic acid molecules within the first pool that represents bits not counted in (c) and preceding or including the particular bit, and the rank of the particular bit in the string of bits is obtained by summing the first and second counts in (e). 4. The method of any of claims 1 and 2, wherein when the first count in (c) represents all blocks of w bits preceding the particular bit and including the block of w bits that includes the particular bit, the first series of probes targets one or more distinct identifier nucleic acid molecules within the first pool that represents bits counted in (c) but that do not precede or include the particular bit, and the rank of the particular bit in the string of bits is obtained by subtracting the second count from the first count in (e). 5. The method of any of claims 1-4, wherein the first count is obtained by reading the counter symbol value corresponding to the targeted identifier nucleic acid molecules in (c). 6. The method of any of claims 1-5, wherein the second count is obtained by reading the targeted identifier nucleic acid molecules from (d). 7. The method of any of claims 1-6, wherein the first pool in (a) is the second pool in (b). 8. The method of any of claims 1-6, wherein the first pool in (a) is separate from the second pool in (b). 9. The method of any of claims 1-8, wherein the presence of corresponding identifier nucleic acid molecules in the first pool indicates the bit value of 1, and the absence of corresponding identifier nucleic acid molecules in the first pool indicates the bit value of 0. 10. The method of any of claims 1-9, wherein the string of bits has length n, and b is the ceiling of log2(n+1). 11. The method of claim 10, wherein the string of counter symbols includes a ceiling of n divided by w counter symbols, and is represented by a string of counter bits having length corresponding to b multiplied by the ceiling of n divided by w. 12. The method of any of claims 1-11, wherein if the particular bit is within the first block of w bits, the running count preceding the first block of w bits is zero.
13. The method of any of claims 1-12, wherein if the particular bit is not within the first block of w bits, the counter symbol of all blocks of w bits preceding the particular bit represents the number of bits in the string of bits that have value 1 within positions ranging from 0 to w*B(x)-1, where 0 is the first position of the string of bits, and where x corresponds to the particular bit's position in the string of bits and B(x) is the floor of x divided by w. 14. The method of claim 13, wherein the targeted identifier nucleic acid molecules within the second pool in (c) are within the range defined by positions b*B(x) and b*(B(x)+1)-1, where a position of 0 corresponds to the first position in the string of bits. 15. The method of any of claims 1-14, wherein the second count corresponds to a number of bits in the string of bits that have value 1 within the range of positions w*B(x) to x, where x corresponds to the particular bit's position in the string of bits where position 0 is the first position, and B(x) is the floor of x divided by w. 16. The method of any of claims 1-15, wherein w is set to the value of b. 17. The method of any of claims 1-15, wherein w is set to the value of one. 18. The method of claim 17, wherein the first count is obtained by targeting identifier nucleic acid molecules in (c) that represent the counter symbol corresponding to the blocks of w bits including the particular bit, and wherein the rank is equivalent to the first count. 19. The method of claim 18, wherein step (d) is not executed. 20. The method of any of claims 1-19 wherein blocks of bits in the string of bits are mapped to blocks of contiguously ordered identifier nucleic acid molecules in the first pool of identifier nucleic acid molecules. 21. The method of claim 20, wherein the presence or absence of identifier nucleic acid molecules in the first pool does not correlate directly with one bit value or another in the string of bits.
22. The method of any of claims 20 and 21, wherein fixed length substrings (words) of the string of bits are mapped to codewords that comprise a fixed number of unique identifier acid molecules out of a fixed number of possible unique identifier nucleic acid molecules. 23. The method of any of claims 1-22, further comprising using additional information to detect and correct errors in writing, accessing, and reading identifier nucleic acid molecules from the first and second pool. 24. The method of claim 23, wherein said additional information is stored in the identifier nucleic acid molecules of the first and second pool. 25. The method of any of claims 1-24, wherein the string of bits represents a string of symbols, and the rank is obtained for a particular symbol in the string of symbols. 26. The method of claim 25, wherein the symbols in the string of symbols are selected from a set of symbol values, and the string of counter symbols in (b) is indicative of a running count of a number of symbols that have the particular symbol value. 27. The method of any of claims 25 and 26, wherein different second pools of identifier nucleic acid molecules in (b) represent different strings of counter symbols that count the number of instances of specific symbol values, each different string of counter symbols counting instances of a corresponding specific symbol value. 28. The method of any of claims 1-27, further comprising forming an identifier nucleic acid molecule by physically assembling M selected component nucleic acid molecules, each of the M selected component nucleic acid molecules being selected from a set of distinct component nucleic acid molecules that are separated into M different layers. 29. A method for fetching digital information from a pool of nucleic acid molecules, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules, the pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes, wherein the identifier nucleic acid molecules represent strings of symbols such that the symbol values are indicated by a presence or absence of the corresponding identifier nucleic acid molecules in said first pool;
(b) accessing said first pool with a first series of probes, each of which targets at least one of the component nucleic acid molecules, to create a second pool with a subset of identifier nucleic acid molecules from said first pool;
(c) reading the sequences of said subset of identifier nucleic acid molecules from said second pool; and
(d) using said sequences to obtain at least a subset of symbols in the strings of symbols from (a). 30. The method of claim 29, wherein each identifier nucleic acid molecule comprises distinct component nucleic acid molecules having component nucleic acid sequences from each of M layers, wherein each layer comprises a set of the component nucleic acid sequences. 31. The method of claim 30, wherein the M layers are logically ordered. 32. The method of claim 31, wherein the component nucleic acid sequences of each layer are logically ordered. 33. The method of claim 32, wherein the identifier nucleic acid molecules correspond to identifier nucleic acid sequences that are logically ordered by sorting the identifier nucleic acid sequences by the corresponding component nucleic acid sequences in the first layer, subsorting the identifier nucleic acid sequences by the corresponding component nucleic acid sequences in the second layer, and repeating the sub-sorting process for each of the remaining M-2 layers. 34. The method of claim 33, wherein each identifier sequence includes a series of component nucleic acid sequences that are represented as paths in a query tree that start at a root node, diverge over M instances, one instance for each layer, and terminate at leaf nodes, each leaf node representing an identifier nucleic acid sequence. 35. The method of claim 34, wherein the first series of probes corresponds to a partial or full path from the root node in the query tree.
36. The method of claim 35, wherein the full path corresponds to a root-to-leaf path that includes M probes, such that the series of the probes targets a single identifier nucleic acid molecule. 37. The method of claim 36, wherein the partial path corresponds to fewer than M probes, such that the series of the probes targets multiple populations of identifier nucleic acid molecules having different sequences. 38. The method of claim 37, wherein the multiple populations of identifier nucleic acid molecules having different sequences corresponds to different component nucleic acid molecules in at least the Mth layer. 39. The method of any of claims 29-38, wherein the first pool is accessed with a plurality of series of probes. 40. The method of claim 39, further comprising splitting the first pool in (a) into at least two duplicate pools, and wherein (b), (c), and (d) are executed on each of said duplicate pools with each of the series of probes. 41. The method of claim 40, further comprising replicating said first pool prior to splitting into the at least two duplicate pools. 42. The method of claim 41, further comprising accessing a first pool of identifier nucleic acid molecules with a sub-series of probes to create an intermediate pool of identifier nucleic acid molecules. 43. The method of claim 42, further comprising splitting an intermediate pool of identifier nucleic acids into at least two duplicate pools. 44. The method of claim 43, further comprising replicating said intermediate pool prior splitting into the at least two duplicate pools.
45. The method of any of claims 39-44, further comprising accessing a first intermediate pool of identifier nucleic acid molecules with a subsequent sub-series of probes to form a second intermediate pool of identifier nucleic acid molecules or a second pool of identifier nucleic acid molecules. 46. The method of any of claims 39-45, further comprising combining at least two intermediate pools of identifier nucleic acid molecules to form another intermediate pool of identifier nucleic acid molecules or a second pool of identifier nucleic acid molecules. 47. The method of any of claims 41 and 44, wherein the replicating is executed with polymerase chain reaction (PCR). 48. The method of any of claims 29-47, wherein probes are PCR primers and accessing is executed with polymerase chain reaction. 49. The method of any of claims 29-47, wherein said probes are affinity tagged oligonucleotides and accessing is executed with an affinity pull down assay. 50. A method for obtaining a count of a particular bit pattern of length p in a message comprising a string of bits of length n, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules representative of a string of bits L, wherein the string of bits L is a last column of a Burrows-Wheeler Transform matrix of the message, the first pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes;
(b) obtaining a second pool of identifier nucleic acid molecules representative of a string of counter symbols that is derived from the string of bits L, each counter symbol represented by a string of b counter bits indicative of a running count of a number of bits, for every w bits in the string of bits L that have a specific bit value of'1';
(c) using a series of probes to access the identifier nucleic acid molecules from the second pool that represent the counter symbol for a total number of occurrences of bit value of'1' in the string of bits L; (d) reading the accessed identifier nucleic acid molecules in (c) to count the total number of occurrences of bit value of'1', in the string of bits L;
(e) using the total number of occurrences of each bit value from (d) to reconstruct a first column F of the Burrows-Wheeler Transform matrix of the message;
(f) determining first position h and a last position z, that define a range of the pth bit value in the first column F, inclusive of h and z;
(g) using a first series of probes to access the identifier nucleic acid molecules from the first pool and the second pool to calculate the rank rh-1 of the (p-i)th bit value of the pattern, at position h-1 in L, where i=1;
(h) using a second series of probes to access the identifier nucleic acid molecules from the first pool and second pool to calculate the rank rz of the (p-i)th bit value of the pattern, at position z in L;
(i) if rh-1 is equal to rz, setting the count of occurrences of the pattern in the message as zero;
(j) otherwise, if rh-1 is not equal to rz,
(j1) setting h to the index of the (rh-1+1)th instance of the (p-i)th bit value in F; (j2) setting z to the index of the r th
z instance of the (p-i)th bit value in F;
(j3) incrementing i by one;
(j4) repeating steps (g), (h), (i), (j), (j1), (j2), and (j3) a number of times until i=p-1;
(j5) calculating the count of occurrences of the pattern in the message as z-h+1. 51. The method of claim 50, wherein the first pool in (a) is the second pool in (b). 52. The method of claim 50, wherein the first pool in (a) is separate from the second pool in (b). 53. The method of any of claims 50-52, wherein the presence of corresponding identifier nucleic acid molecules in the first pool indicates the bit value of 1, and the absence of corresponding identifier nucleic acid molecules in the first pool indicates the bit value of 0. 54. The method of any of claims 50-53, wherein b is the ceiling of log2(n+1).
55. The method of claim 54, wherein the string of counter symbols includes a ceiling of n divided by w counter symbols, and is represented by a string of counter bits having length corresponding to b multiplied by the ceiling of n divided by w. 56. The method of any of claims 50-55, where the running count of any bit value preceding the first block of w bits in L is zero. 57. The method of any of claims 50-56, wherein w is set to the value of b. 58. The method of any of claims 50-57, wherein w is set to the value of one. 59. The method of any of claims 50-58, further comprising mapping blocks of bits in the string of bits L to blocks of contiguously ordered identifier nucleic acid molecules in the first pool. 60. The method of claim 59, wherein fixed-length substrings of the string of bits L are mapped to codewords that are represented by a fixed number of unique identifier acid molecules selected from a fixed-size set of unique identifier nucleic acid molecules. 61. The method of any of claims 50-60, wherein additional information is used to detect and correct errors in writing, accessing, and reading identifier nucleic acid molecules from the first and second pool. 62. The method of claim 61, wherein said additional information is stored in the identifier nucleic acid molecules of the first and second pool. 63. The method of any of claims 50-62, further comprising obtaining a third pool of identifier nucleic acid molecules representative of a suffix array, SA, that is derived from the Burrows-Wheeler Transform of the message, each element of SA represented by a bit string of at least log2(n) bits indicative of the position of the corresponding element of L in the message. 64. The method of claim 63, further comprising locating the occurrences of the pattern in the message, when the count is greater than zero, by accessing the identifier nucleic acid molecules in the third pool corresponding to the elements in the suffix array at positions between and including final values for h and z.
65. The method of claim 64, further comprising obtaining a fourth pool of identifier nucleic acid molecules representative of the message. 66. The method of claim 65, further comprising extracting the context of a first location of the pattern by accessing the identifier nucleic acid molecules in the fourth pool corresponding to said first location and the neighborhood of positions surrounding the first location. 67. A method for obtaining a count of a particular bit pattern of length p in a message comprising a string of bits of length n, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules representative of a string of bits L, wherein the string of bits L is a last column of a Burrows-Wheeler Transform matrix of the message, the first pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes;
(b) obtaining a second pool of identifier nucleic acid molecules representative of a string of counter symbols that is derived from the string of bits L and represent a running count of a number of bits having a specific bit value;
(c) obtaining the count of the particular bit pattern in the message, by selectively accessing identifier nucleic acid molecules from the first pool and the second pool. 68. The method of claim 67, wherein step (c) further comprises reconstructing a first column F of the Burrows-Wheeler Transform matrix. 69. The method of claim 68, wherein step (c) comprises using a series of probes to access the identifier nucleic acid molecules from the second pool that represent the counter symbol for a total number of occurrences of the specific bit value in the string of bits L; and reconstructing F using said total number of occurrence of the specific bit value. 70. The method of any of claims 68 and 69, wherein step (c) further includes determining a range of positions in F that have the p-th bit value in the pattern.
71. The method of claim 70, wherein said range of positions in F is defined by a first position h and a last position z, inclusive of h and z. 72. The method of any of claims 70 and 71, wherein step (c) further comprises, for each preceding bit in the pattern after the p-th bit:
determining a first rank of the corresponding bit value in L at a position immediately preceding the range and a second rank of the corresponding bit value in L at a position at the end of the range, using a series of probes to access the identifier nucleic acid molecules from the first pool and the second pool; and
using the first rank and the second rank to update the range to the range of positions in F that have instances of the corresponding bit that precede the subsequent bit in the pattern 73. The method of claim 72, wherein the first rank is of the respective preceding bit value in the pattern, at position h-1 in L, and the second rank is of the respective preceding bit value in the pattern, at position z in L. 74. The method of claim 73, wherein updating the range includes, based on the first rank, setting h to the position of one instance of the respective preceding bit value in the pattern, in F. 75. The method of any of claims 73 and 74, wherein updating the range includes, based on the second rank, setting z to the position of one instance of the respective preceding bit value in the pattern, in F. 76. The method of any of claims 72-75, wherein step (c) further includes setting the count of occurrences of the pattern in the message based on the final values of the first and second ranks. 77. The method of claim 76, wherein the count of occurrences is the difference between the final values of the first and second ranks. 78. The method of claim 76, wherein the count of occurrences is set to zero if the first and second ranks are equal to each other for the p-th bit or for any preceding bit.
79. A method for obtaining a count of a particular symbol pattern of length ps in a message comprising a string of symbols of length ns, each symbol being selected from a set of r symbol values, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules representative of a string of symbols L that is the last column of a Burrows-Wheeler Transform matrix of the message, the first pool having powder, liquid, or solid form, and each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes;
(b) obtaining r second pools of identifier nucleic acid molecules, each of which corresponds to a string of counter symbols, Cv for v=1,2,…, r, that is derived from L and represents a running count of a number of symbols in L with a corresponding symbol value Rv; and
(c) obtaining the count of a particular symbol pattern of length ps in the message, by selectively accessing identifier nucleic acid molecules from the first pool and the r second pools. 80. The method of claim 79, wherein step (c) further comprises reconstructing a first column F of the Burrows-Wheeler Transform matrix. 81. The method of claim 80, wherein step (c) includes, using a series of probes, accessing the identifier nucleic acid molecules from the last counter symbol in each of the r second pools that represent the total number of occurrences of each corresponding symbol value Rv in L; and using said total number of occurrence of each corresponding symbol value Rv to reconstruct F. 82. The method of any of claims 80 and 81, wherein step (c) further includes determining a range of positions in F that have the p-th symbol value in the pattern. 83. The method of claim 82, wherein said range of positions in F is defined by a first position h and a last position z, inclusive of h and z. 84. The method of any of claims 82 and 83, wherein step (c) further includes, for each preceding symbol in the pattern after the p-th symbol: determining a first rank of the corresponding symbol value in L at a position immediately preceding the range and a second rank of the corresponding symbol value in L at a position at the end of the range, using a series of probes to access the identifier nucleic acid molecules from the first pool and the corresponding second pool; and
using the first rank and the second rank to update the range to the range of positions in F that have instances of the corresponding symbol that precede the subsequent symbol in the pattern. 85. The method of claim 84, wherein the first rank rh-1 is of the respective preceding symbol value in the pattern, at position h-1 in L, and the second rank rz is of the respective preceding symbol value in the pattern, at position z in L. 86. The method of claim 85, wherein updating the range includes setting h to the position of the (rh-1+1)-th instance of the respective preceding symbol value in the pattern, in F. 87. The method of any of claims 85 and 86, wherein updating the range includes setting z to the index of the rz-th instance of the respective preceding symbol value in the pattern, in F. 88. The method of any of claims 84-87, wherein step (c) further includes setting the count of occurrences of the pattern in the message based on the final values of the first and second ranks. 89. The method of claim 88, wherein the count of occurrences is a difference between the final values of the first and second ranks. 90. The method of claim 88, wherein the count of occurrences is set to zero if the first and second ranks are equal to each other for the p-th symbol or for any preceding symbol. 91. The method of any of clams 79-90, wherein the first pool of identifier nucleic acid molecules is one of r first pools, each corresponding to a string of bits Lv for v=1,2,…,r, such that elements of Lv have a bit-value of'1' for elements of L that match the symbol value Rv and a bit-value of'0' otherwise, or vice versa.
92. The method of claim 91, wherein the first pool corresponding to Lv is used to determine the first and second rank of a symbol value Rv in the pattern. 93. The method of any of claims 79-92, further comprising obtaining a pool of identifier nucleic acid molecules, the SA pool, representative of a suffix array, SA, that is derived from the Burrows-Wheeler Transform of the message, each element of SA represented by a bit string of at least log2(n) bits indicative of the position of the corresponding element of L in the message. 94. The method of claim 93, further comprising locating the occurrences of the pattern in the message, given that the count is greater than zero, by accessing identifier nucleic acid molecules in the SA pool that correspond to elements of the SA at positions given by the final range of positions in F. 95. The method of claim 94, further comprising obtaining a message pool of identifier nucleic acid molecules representative of the message. 96. The method of claim 95, further comprising extracting the context of a first location of the pattern by accessing the identifier nucleic acid molecules in the message pool corresponding to said first location and the neighborhood of positions surrounding the first location. 97. The method of any of claims 79-96, wherein step (c) includes:
(c.1) determining a first position h and a last position z, that define a range of the pth symbol value in the first column F, inclusive of h and z;
(c.2) using a series of probes to access the identifier nucleic acid molecules from a first pool and a second pool to calculate a rank rh-1 of the (p-i)th symbol value of the pattern, at position h-1 in L, where i=1;
(c.3) using a series of probes to access the identifier nucleic acid molecules from a first pool and a second pool to calculate a rank rz of the (p-i)th symbol value of the pattern, at position z in L;
(c.4) if rh-1 is equal to rz, setting the count of occurrences of the pattern in the message as zero; and (c.5) otherwise, if rh-1 is not equal to rz,
(c.5.A) setting h to the index of the (rh-1+1)th instance of the (p-i)th symbol value in F;
(c.5.B) setting z to the index of the r th
z instance of the (p-i)th symbol value in F; (c.5.C) incrementing i by one;
(c.5.D) repeating steps (c.2), (c.3), (c.4), (c.5), (c.5.A), (c.5.B), and (c.5.C) a number of times until i=p-1; and
(c.5.E) calculating the count of occurrences of the pattern in the message as zh+1. 98. The method of claim 97, wherein the first pool and the second pool in (c.2) correspond to the (p-i)th symbol value of the pattern. 99. The method of any of claims 97 and 98, wherein the first pool and the second pool in (c.3) correspond to the (p-i)th symbol value of the pattern. 100. A method for storing digital information into nucleic acid molecules, the method comprising:
obtaining a plurality of blocks, wherein each block comprises a string of symbols and is associated with a block ID;
assigning a block of the plurality of blocks to a container;
mapping the block to a plurality of identifier nucleic acid sequences to be associated with the container, each identifier nucleic acid sequence comprising component nucleic acid sequences, at least a portion of which are configured to bind to one or more probes;
constructing individual identifier nucleic acid molecules of the plurality of identifier nucleic acid sequences; and
storing the individual identifier nucleic acid molecules in the assigned container, wherein a physical address, comprising the identities of the container and the plurality of identifier nucleic acid sequences associated therewith, is configured to be determined using the associated block ID. 101. The method of claim 100, wherein the block ID is an integer, a string, a triple, a list of attributes, or a semantic annotation.
102. The method of any of claims 100 and 101, wherein said physical address is stored in a data structure designed to facilitate access of the physical address using the associated block ID. 103. The method of any of claims 100-102, wherein the data structure is one of a B-tree, a trie, or an array. 104. The method of any of claims 102 and 103, wherein at least a portion of the data structure is stored along with the digital information in an index. 105. The method of claim 104, wherein the index comprises a second plurality of identifier nucleic acid sequences associated with a second container. 106. The method of claim 105, wherein the index comprises a B-tree data structure and each node of the B-tree comprises a distinct plurality of identifier nucleic acid molecules of the second plurality of identifier nucleic acid sequences. 107. The method of claim 106, wherein searching for the block ID in the B-tree comprises: accessing the distinct plurality of identifier nucleic acid molecules that comprise a first node;
reading a value of the first node, and
repeating the process of steps (i) and (ii) with a subsequent node, wherein the identity of the distinct plurality of identifier nucleic acid molecules that comprise the subsequent node is determined by the block ID in relation to the value of the first node. 108. The method of claim 107, wherein the first node is the root node of the B-tree and the process of steps (i) and (ii) continues until the value of a leaf node of the B-tree is read, wherein the value of the leaf node is configured to communicate whether the block for the block ID exists, and if the block ID exists, communicate the physical address of said block.
109. The method of claim 105, wherein said index comprises a trie data structure and each node of the trie comprises a distinct plurality of identifier nucleic acid molecules of the second plurality of identifier nucleic acid sequences. 110. The method of claim 109, wherein the block ID is a string of symbols and each node in the trie data structure corresponds to a possible prefix of the string of symbols. 111. The method of claim 110, wherein a leaf node of the trie data structure represents the physical address associated with the block ID that matches the string of symbols specified by the trie data structure in said leaf node. 112. The method of claim 104, wherein the data structure is an array and each element of the array comprises a distinct plurality of identifier nucleic acid molecules of the second plurality of identifier nucleic acid sequences. 113. The method of claim 112, wherein each element in the array corresponds to a block ID. 114. The method of claim 113, wherein each element of the array stores the physical address of the associated block ID. 115. The method of any of claims 104-114, further comprising accessing a physical address, using a series of probes, from a pool of identifier nucleic acid molecules comprising the second plurality of identifier nucleic acid sequences. 116. The method of claim 102, wherein the data structure is stored in a magnetic storage device, an optical storage device, a flash memory device, or cloud storage. 117. The method of claim 101, wherein said physical address is natively configured to the block ID, such that the block ID maps to the physical address without storing the physical address in an additional data structure.
118. The method of claim 117, wherein the block ID maps to a plurality of component nucleic acid sequences that are shared by all identifier nucleic acid sequences of the plurality of identifier nucleic acid sequences associated with the physical address. 119. The method of any of claims 100-118, wherein a plurality of identifier nucleic acid sequences associated with a block comprises contiguously ordered identifier nucleic acid sequences, such that said plurality of identifier nucleic acid sequences is specified in a corresponding physical address by an identifier range comprising the identities of the first and last identifier nucleic acid molecules in said identifier range. 120. The method of claim 119, wherein the first and last identifier nucleic acid sequences in said identifier range are represented by integers. 121. The method of any of claims 100-120, further comprising accessing a plurality of nucleic acid molecules associated with a block by using a series of probes. 122. The method of any of claims 115 and 121, wherein said probes are PCR primers, and wherein the accessing is executed with polymerase chain reaction. 123. The method of any of claims 112 and 121, wherein said probes are affinity tagged oligonucleotides, and wherein the accessing is executed with an affinity pull down assay. 124. The method of any of claims 100-123, wherein a block ID is a position. 125. The method of any of claim 124, wherein said position is a position of a string of symbols that is represented by the corresponding block of a parent string of symbols. 126. The method of claim 125, wherein said parent string of symbols comprises a data structure for counting or locating the occurrences of a pattern in another string of symbols. 127. The method of claim 126, wherein said data structure is one of a counter array, a column of a Burrows-Wheeler Transform (BWT) matrix, a suffix array, a suffix tree, or an inverted index.
128. A method for operating on digital information stored in nucleic acid molecules, the method comprising:
obtaining a first pool of identifier nucleic acid molecules, the pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes, wherein the identifier nucleic acid molecules represent input strings of symbols; performing an if-then-else operation on the identifier nucleic acid molecules in the first pool, wherein the if-then-else operation targets at least one of the component nucleic acid molecules with a probe, to create an intermediate pool with a subset of identifier nucleic acid molecules from said first pool;
repeating step (b) wherein the intermediate pool replaces the first pool at every subsequent step until a final pool of identifier nucleic acid molecules is created that represents at least a portion of an output string of symbols. 129. The method of claim 128, wherein each identifier nucleic acid molecule in the first pool comprises a distinct component nucleic acid molecule from each of M layers, wherein each layer comprises a set of component nucleic acid molecules. 130. The method of any of claims 128 and 129, wherein an if-then-else operation comprises accessing identifier nucleic acid molecules in a pool that include a specific component nucleic acid molecule. 131. The method of any of claim 130, wherein probes are PCR primers, and accessing is executed with polymerase chain reaction. 132. The method of claim 130, wherein probes are affinity tagged oligonucleotides, and accessing is executed with an affinity pull down assay. 133. The method of any of claims 128-132, wherein two or more if-then-else operations are performed on one or more pools of identifier nucleic acid molecules in parallel.
134. The method of claims 128-133, further comprising splitting at least one of the first pool, the intermediate pool, or the final pool into at least two duplicate pools. 135. The method of claim 134, further comprising replicating the at least one of the first pool, the intermediate pool, or the final pool prior to splitting. 136. The method of claim 135, wherein the replicating is executed with polymerase chain reaction (PCR). 137. The method of any of claims 128-136, further comprising combining at least two intermediate pools of identifier nucleic acid molecules to form a new intermediate pool of identifier nucleic acid molecules or a second pool of identifier nucleic acid molecules. 138. A method for obtaining a rank of a particular symbol value at a particular position in a string of symbols, each symbol having a symbol value and a symbol position, from digital information stored in a pool of nucleic acid molecules, the method comprising:
(a) obtaining a first pool of identifier nucleic acid molecules representative of the string of symbols, the pool having powder, liquid, or solid form, each identifier nucleic acid molecule in the first pool comprising component nucleic acid molecules, at least a portion of which are configured to bind to one or more probes;
(b) obtaining a second pool of identifier nucleic acid molecules representative of a string of counter symbols that is derived from the string of symbols, each counter symbol representing a running count of the particular symbol value in every w symbols of the string of symbols;
(c) obtaining a first count by accessing the second pool in (b) with a second series of probes to target at least the identifier nucleic acid molecules within the second pool that represent a corresponding counter symbol that indicates the running count of the particular symbol value for either (1) all blocks of w symbols preceding the particular position, or (2) all blocks of w symbols preceding the particular position and including the block of w symbols that includes the particular position;
(d) obtaining a second count by accessing the first pool in (a) with a first series of probes to target one or more distinct identifier nucleic acid molecules within the first pool that either (1) represents symbols not counted in (c) and preceding or including the particular position, or (2) represents symbols that were counted in (c) but that do not precede or include the particular position; and
(e) obtaining the rank of the particular symbol value at the particular position in the string of symbols from the first count and the second count. 139. The method of claim 138, wherein the identifier nucleic acid molecules in the first pool represent a string of bits that map to the strings of symbols, such that the presence of an identifier nucleic acid molecules represents a particular symbol value at the symbol position. 140. The method of any of claims 138 and 139, wherein when the first count in (c) represents all blocks of w symbols preceding the particular position, the first series of probes in (d) targets one or more distinct identifier nucleic acid molecules within the first pool that represents symbols not counted in (c) and preceding or including the particular position, and the rank of the particular symbol value at the particular position in the string of symbols is obtained by summing the first and second counts in (e). 141. The method of any of claims 138 and 139, wherein when the first count in (c) represents all blocks of w symbols preceding the particular position and including the block of w symbols that includes the particular position, the first series of probes targets one or more distinct identifier nucleic acid molecules within the first pool that represents symbols counted in (c) but that do not precede or include the particular position, and the rank of the particular symbol value at the particular position in the string of symbols is obtained by subtracting the second count from the first count in (e). 142. The method of any of claims 138-141, wherein the first count is obtained by reading the counter symbol value corresponding to the targeted identifier nucleic acid molecules in (c). 143. The method of any of claims 138-142, wherein the second count is obtained by reading the targeted identifier nucleic acid molecules from (d). 144. The method of any of claims 138-143, wherein the first pool in (a) is the second pool in (b).
145. The method of any of claims 138-143, wherein the first pool in (a) is separate from the second pool in (b). 146. The method of any of claims 138-145, wherein the presence of corresponding identifier nucleic acid molecules in the first pool indicates a first symbol value, and the absence of corresponding identifier nucleic acid molecules in the first pool indicates a second symbol value. 147. The method of any of claims 138-146, wherein the string of symbols has length n, and the counter symbols are represented by b bits, where b is the ceiling of log2(n+1). 148. The method of claim 147, wherein the string of counter symbols includes a ceiling of n divided by w counter symbols, and is represented by a string of counter bits having length corresponding to b multiplied by the ceiling of n divided by w. 149. The method of any of claims 138-148, wherein if the particular position is within the first block of w symbols, the running count preceding the first block of w symbols is zero. 150. The method of any of claims 138-149, wherein if the particular position is not within the first block of w symbols, the counter symbol of all blocks of w symbols preceding the particular position represents the number of occurrences of the particular symbol value within positions ranging from 0 to w*B(x)-1 of the string of symbols, where 0 is the first position of the string of symbols, and where x corresponds to the particular position in the string of symbols and B(x) is the floor of x divided by w. 151. The method of claim 150, wherein the targeted identifier nucleic acid molecules within the second pool in (c) are within the range defined by positions b*B(x) and b*(B(x)+1)-1, where a position of 0 corresponds to the first position in the string of symbols. 152. The method of any of claims 138-151, wherein the second count corresponds to a number of occurrences of the particular symbol value within the range of positions w*B(x) to x of the string of symbols, where x corresponds to the particular position in the string of symbols where position 0 is the first position, and B(x) is the floor of x divided by w.
153. The method of any of claims 138-152, wherein w is set such that the length of bits to represent w symbols of the string of symbols is equivalent to the length of bits, b, to represent the counter symbols. 154. The method of any of claims 138-152, wherein w is set to the value of one. 155. The method of claim 154, wherein the first count is obtained by targeting identifier nucleic acid molecules in (c) that represent the counter symbol corresponding to the blocks of w symbols including the particular position, and wherein the rank is equivalent to the first count. 156. The method of claim 155, wherein step (d) is not executed. 157. The method of any of claims 138-156 wherein blocks of w symbols in the string of symbols are mapped to blocks of contiguously ordered identifier nucleic acid molecules in the first pool of identifier nucleic acid molecules. 158. The method of claim 157, wherein the symbols in the string of symbols are bits, and each bit maps to an identifier nucleic acid molecule such that the presence or absence of said identifier in the first pool of identifier nucleic acid molecules signifies the value of the bit. 159. The method of any of claims 157 and 158, wherein fixed length substrings of the string of symbols are mapped to codewords that comprise a fixed number of unique identifier nucleic acid molecules out of a fixed number of possible unique identifier nucleic acid molecules. 160. The method of any of claims 138-159, further comprising using additional information to detect and correct errors in writing, accessing, and reading identifier nucleic acid molecules from the first and second pool. 161. The method of claim 160, wherein said additional information is stored in the identifier nucleic acid molecules of the first and second pool. 162. The method of any of claims 138-161, wherein the string of symbols represents a string of bits.
163. The method of claim 162, wherein each symbol of the string of symbols corresponds to a fixed number of bits. 164. The method of any of claims 162 and 163, wherein different second pools of identifier nucleic acid molecules in (b) represent different strings of counter symbols that count the number of instances of specific symbol values, each different string of counter symbols counting instances of a corresponding specific symbol value. 165. The method of any of claims 138-164, wherein an identifier nucleic acid molecule is formed by physically assembling M selected component nucleic acid molecules, each of the M selected component nucleic acid molecules being selected from a set of distinct component nucleic acid molecules that are separated into M different layers.
</claims>
</document>
