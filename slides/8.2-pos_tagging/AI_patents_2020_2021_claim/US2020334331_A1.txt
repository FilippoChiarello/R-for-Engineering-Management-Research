<document>

<filing_date>
2019-04-17
</filing_date>

<publication_date>
2020-10-22
</publication_date>

<priority_date>
2019-04-17
</priority_date>

<ipc_classes>
G06N20/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
SEKAR, KANDHAN
Cason, Joshua
Rogers, Thomas Hay
</inventors>

<docdb_family_id>
72832556
</docdb_family_id>

<title>
MACHINE LEARNED SENTENCE SPAN INCLUSION JUDGMENTS
</title>

<abstract>
A method, system, and computer program product for using a natural language processor includes importing a training text including a plurality of training nodes and having a first marked span that includes some of the plurality of training nodes and a first training trigger, wherein each training node includes a first attribute and a second attribute. Also included are generating a first plurality of training tree tables for each training node with respect to a first training traversal from the first training trigger, each training tree table including the first and second attributes of each training node in the first training traversal, and generating a first plurality of training comparison tables from the first plurality of training tree tables. Each training comparison table is also analyzed to determine if a target node belongs in the first marked span, and labeling each training comparison table accordingly.
</abstract>

<claims>
1. A method of using a natural language processor, the method comprising: importing a training text including a plurality of training nodes and having a first marked span that includes some of the plurality of training nodes and a first training trigger, wherein each training node includes a first attribute and a second attribute; generating a first plurality of training tree tables for each training node with respect to a first training traversal from the first training trigger, each training tree table including the first and second attributes of each training node in the first training traversal; generating a first plurality of training comparison tables from the first plurality of training tree tables; analyzing each training comparison table to determine if a target node belongs in the first marked span; labeling each training comparison table which includes a target node in the first marked span as true; and labeling each training comparison table which includes a target node that is not in the first marked span as false.
2. The method of claim 1, further comprising: labeling each of the plurality of training nodes with a first tag or a second tag, wherein the training nodes in the first marked span receive the first tag and the training nodes outside of the first marked span receive the second tag.
3. The method of claim 1, further comprising: providing a new text including a plurality of new nodes to the natural language processor, wherein each new node includes the first and second attributes; generating a plurality of new tree tables for each of the plurality of new nodes with respect to a new traversal from the first new trigger, each new tree table including the first and second attributes of each new node in the new traversal; generating a plurality of new comparison tables from the plurality of new tree tables; and analyzing each new comparison table to determine which new nodes belong in a first new span.
4. The method of claim 3, further comprising: labeling each of the plurality of new nodes with a first tag or a second tag, wherein the new nodes in the first new span receive the first tag and the new nodes outside of the first new span receive the second tag.
5. The method of claim 1, wherein the training text includes a second marked span that includes some of the plurality of training nodes, wherein the second marked span includes a second training trigger node, the method further comprising: generating a second plurality of training tree tables for each training node with respect to a second training traversal from the second training trigger, each training tree table including the first and second attributes of each training node in the second training traversal.
6. The method of claim 1, further comprising: one-hot encoding a row in each of the training comparison tables.
7. The method of claim 1, wherein the analyzing each training table further comprises: determine whether a target node of the first training traversal is marked.
8. A system to find nodes in a span, the system comprising: a computing processor; and a memory coupled to the computing processor, wherein the memory comprises instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: import a training text including a plurality of training nodes and having a first marked span that includes some of the plurality of training nodes and a first training trigger, wherein each training node includes a first attribute and a second attribute; generate a first plurality of training tree tables for each training node with respect to a first training traversal from the first training trigger, each training tree table including the first and second attributes of each training node in the first training traversal; generate a first plurality of training comparison tables from the first plurality of training tree tables; analyze each training comparison table to determine if a target node belongs in the first marked span; label each training comparison table which includes a target node in the first marked span as true; and label each training comparison table which includes a target node that is not in the first marked span as false.
9. The system of claim 8, wherein the memory comprises further instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: label each of the plurality of training nodes with a first tag or a second tag, wherein the training nodes in the first marked span receive the first tag and the training nodes outside of the first marked span receive the second tag.
10. The system of claim 8, wherein the memory comprises further instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: provide a new text including a plurality of new nodes to the natural language processor, wherein each new node includes the first and second attributes; generate a plurality of new tree tables for each of the plurality of new nodes with respect to a new traversal from the first new trigger, each new tree table including the first and second attributes of each new node in the new traversal; generating a plurality of new comparison tables from the plurality of new tree tables; and analyze each new comparison table to determine which new nodes belong in a first new span.
11. The system of claim 10, wherein the memory comprises further instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: label each of the plurality of new nodes with a first tag or a second tag, wherein the new nodes in the first new span receive the first tag and the new nodes outside of the first new span receive the second tag.
12. The system of claim 8, wherein the training text includes a second marked span that includes some of the plurality of training nodes, wherein the second marked span includes a second training trigger node, and wherein the memory comprises further instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: generate a second plurality of training tree tables for each training node with respect to a second training traversal from the second training trigger, each training tree table including the first and second attributes of each training node in the second training traversal.
13. The system of claim 8, wherein the memory comprises further instructions which, when executed by the computing processor, specifically configures the computing processor and causes the computing processor to: one-hot encode a row in each of the training comparison tables.
14. The system of claim 8, wherein the analyzing each training table further comprises: determine whether a target node of the first training traversal is marked.
15. A computer program product comprising a computer readable storage medium having a computer readable program stored therein to find nodes in a span, wherein the computer readable program, when executed on a computing device, specifically configures the computing device, and causes the computing device to: import a training text including a plurality of training nodes and having a first marked span that includes some of the plurality of training nodes and a first training trigger, wherein each training node includes a first attribute and a second attribute; generate a first plurality of training tree tables for each training node with respect to a first training traversal from the first training trigger, each training tree table including the first and second attributes of each training node in the first training traversal; generate a first plurality of training comparison tables from the first plurality of training tree tables; analyze each training comparison table to determine if a target node belongs in the first marked span; label each training comparison table which includes a target node in the first marked span as true; and label each training comparison table which includes a target node that is not in the first marked span as false.
16. The computer program product of claim 15, wherein the computer readable program, when executed on a computing device, further specifically configures the computing device, and further causes the computing device to: label each of the plurality of training nodes with a first tag or a second tag, wherein the training nodes in the first marked span receive the first tag and the training nodes outside of the first marked span receive the second tag.
17. The computer program product of claim 15, wherein the computer readable program, when executed on a computing device, further specifically configures the computing device, and further causes the computing device to: provide a new text including a plurality of new nodes to the natural language processor, wherein each new node includes the first and second attributes; generate a plurality of new tree tables for each of the plurality of new nodes with respect to a new traversal from the first new trigger, each new tree table including the first and second attributes of each new node in the new traversal; generating a plurality of new comparison tables from the plurality of new tree tables; and analyze each new comparison table to determine which new nodes belong in a first new span.
18. The computer program product of claim 17, wherein the computer readable program, when executed on a computing device, further specifically configures the computing device, and further causes the computing device to: label each of the plurality of new nodes with a first tag or a second tag, wherein the new nodes in the first new span receive the first tag and the new nodes outside of the first new span receive the second tag.
19. The computer program product of claim 15, wherein the training text includes a second marked span that includes some of the plurality of training nodes, wherein the second marked span includes a second training trigger node, and wherein the computer readable program, when executed on a computing device, further specifically configures the computing device, and further causes the computing device to: generate a second plurality of training tree tables for each training node with respect to a second training traversal from the second training trigger, each training tree table including the first and second attributes of each training node in the second training traversal.
20. The computer program product of claim 15, wherein the computer readable program, when executed on a computing device, further specifically configures the computing device, and further causes the computing device to: one-hot encode a row in each of the training comparison tables.
</claims>
</document>
