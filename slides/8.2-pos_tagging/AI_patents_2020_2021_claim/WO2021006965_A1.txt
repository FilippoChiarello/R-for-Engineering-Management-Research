<document>

<filing_date>
2020-05-28
</filing_date>

<publication_date>
2021-01-14
</publication_date>

<priority_date>
2019-07-11
</priority_date>

<ipc_classes>
G06F1/3234,G06F12/02,G06F12/04,G06F12/0886,G06F13/16,G06N3/04,G06N3/063
</ipc_classes>

<assignee>
FACEBOOK TECHNOLOGY COMPANY
</assignee>

<inventors>
LI MENG
VENKATESH, GANESH
CHUANG, PIERCE I-JEN
LAI, Liangzhen
</inventors>

<docdb_family_id>
71103419
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR READING AND WRITING SPARSE DATA IN A NEURAL NETWORK ACCELERATOR
</title>

<abstract>
Disclosed herein includes a system, a method, and a device for reading and writing sparse data in a neural network accelerator. A plurality of slices can be established to access a memory having an access size of a data word. A first slice can be configured to access a first side of the data word in memory. Circuitry can access a mask identifying byte positions within the data word having non-zero values. The circuitry can modify the data word to have non-zero byte values stored starting at an end of the first side, and any zero byte values stored in a remainder of the data word. A determination can be made whether a number of non-zero byte values is less than or equal to a first access size of the first slice. The circuitry can write the modified data word to the memory via at least the first slice.
</abstract>

<claims>
1. A method comprising: establishing, by circuitry, a plurality of slices to access a memory having an access size of a data word, a first slice of the plurality of slices configured to access a first side of the data word in memory, the first side having a size less than that of the data word; accessing, by the circuitry, a mask identifying byte positions within the data word having non-zero values; modifying, by the circuitry, the data word to have non-zero byte values stored starting at an end of the first side, and any zero byte values stored in a remainder of the data word; determining, by the circuitry, whether a number of non-zero byte values starting at the end of the first side is less than or equal to a first access size of the first slice; and writing, by the circuitry responsive to the determination, the modified data word to the memory via at least the first slice.
2. The method of claim 1, further comprising generating the mask as one of a one-byte mask or a two-byte mask.
3. The method of claim 1 or claim 2, further comprising determining, by the circuitry, the number of non-zero byte values of the first side is less than or equal to the first access size of the first slice; and preferably further comprising writing, by the circuitry, the first side of the modified data word only via the first slice. 4. The method of claim 1, claim 2 or claim 3, further comprising determining, by the circuitry, the number of non-zero byte values starting at the end of the first side is greater than the first access size of the first slice; and preferably further comprising writing, by the circuitry, the bytes of the first side of the modified data word via the first slice and remainder non-zero bytes via a second slice.
5. The method of any one of claims 1 to 4, wherein one of the first access size of the first slice or a second access size of a second slice of the plurality of slices is selected to provide a predetermined reduction in power usage of the circuitry in accessing the memory.
6. The method of any one of claims 1 to 5, further comprising determining, by the circuitry, the number of non-zero byte values of the modified data word based on the mask.
7. A method comprising: establishing, by circuitry, a plurality of slices to access a memory having an access size of a data word, a first slice of the plurality of slices configured to access a first side of the data word in the memory, the first side having a size less than that of the data word; accessing, by the circuitry, a mask identifying positions within the data word having non zero values; determining, by the circuitry, from the mask a number of non-zero byte values of the data word is less than or equal to a first access size of the first slice; reading, by the circuitry responsive to the determination, a packed representation of the data word stored in memory via the first slice, the packed representation comprising the non-zero byte values stored starting at an end of the first side of the data word and any zero byte values stored in a remainder of the data word; and providing, by the circuitry from the packed representation, the data word having the non zero byte values and the zero byte values at the positions indicated by the mask.
8. The method of claim 7, wherein the mask identifies the position of non-zero byte values on a one-byte basis or a two-byte basis.
9. The method of claim 7 or claim 8, further comprising determining, by the circuitry, the number of non-zero byte values of the data word is less than or equal to the first access size of the first slice; and preferably further comprising reading, by the circuitry, the packed
representation of the data word via only the first slice.
10. The method of claim 7, claim 8 or claim 9, further comprising determining, by the circuitry, the number of non-zero byte values of the data word is greater than the first access size of the first slice; and preferably further comprising reading, by the circuitry, a first side of the data word via the first slice and any remainder non-zero bytes via a second slice of the plurality of slices.
11. The method of any one of claims 1 to 10, wherein one of the first access size of the first slice or a second access size of a second slice of the plurality of slices is selected to provide a predetermined reduction in power usage of the circuitry in reading from the memory.
12. A device comprising: memory having an access size of a data word; and circuitry configured to: establish a plurality of slices to access the memory, a first slice of the plurality of slices configured to access a left side of a data word in the memory; access a mask identifying byte positions within the data word having non-zero values; modify the data word to have non-zero byte values stored starting at an end of a first side of the data word and any zero byte values stored in a remainder of the data word; determine a number of non-zero byte values of the left most bytes of the modified data word is less than or equal to a first access size of the first slice; and write, responsive to the determination, the modified data word to the memory via at least the first slice.
13. The device of claim 12, wherein the circuitry is configured to read, a packed
representation of the data word stored in memory via at least the first slice, wherein the packed representation comprises the non-zero byte values stored in the first side of the data word and any zero byte values stored in a remaining bytes of the data word; and preferably wherein the circuitry is configured to create the data word to have the non-zero byte values and the zero byte values stored in the positions indicated by the bit mask.
14. The device of claim 13, wherein the circuitry is further configured to read the first side of the data word via the first slice and any remaining non-zero bytes via a second slice of the plurality of slices.
15. The device of claim 14, wherein one of the first access size of the first slice or a second access size of a second slice of the plurality of slices is selected to provide a predetermined reduction in power usage of the circuitry in reading from the memory.
</claims>
</document>
