<document>

<filing_date>
2020-06-17
</filing_date>

<publication_date>
2021-01-27
</publication_date>

<priority_date>
2019-07-15
</priority_date>

<ipc_classes>
G06F9/4401,G06F9/445,G06F9/50,H04W4/50,H04W40/08
</ipc_classes>

<assignee>
BOEING COMPANY
</assignee>

<inventors>
FREEMAN, Roland N.
THAKKAR, Rahul C.
</inventors>

<docdb_family_id>
71105369
</docdb_family_id>

<title>
SOFTWARE DISTRIBUTION IN A WIRELESS AD HOC NETWORK FOR AD-HOC DATA PROCESSING ON A SOURCE NODE
</title>

<abstract>
A method of acquiring software by a source node in a wireless ad hoc network. The method includes the source node executing application software from which a need to process a particular modality of data is identified, and making a determination that the source node is incapable of processing the particular modality of data. Responsive to the determination, the source node searches a local module repository (MR) of the source node for a software module usable to process the particular modality of data, and responsive to the source node failing to locate the software module in the local MR, broadcasts a request for the software module to neighbor nodes of the plurality of nodes in radio range of the source node. The source node receives the software module from the neighbor node, and uses the software module to process the particular modality of data.
</abstract>

<claims>
1. A source node (402a, 700) operable in a wireless ad hoc network (400) that includes a plurality of nodes (402), the source node (402a, 700) comprising: a memory (704) configured to store computer-readable program code (706); and processing circuitry (702) configured to access the memory (704), and execute the computer-readable program code (706) to cause the source node (402a, 700) to at least: execute (502) application software (408a) from which a need to process a particular modality of data is identified; make (504) a determination that the source node (402a, 700) is incapable of processing the particular modality of data; and responsive to the determination, search (506) a local module repository (MR, 410a) of the source node (402a, 700) for a software module usable to process the particular modality of data; broadcast (508) a request for the software module to those of the plurality of nodes in radio range of the source node that are thereby neighbor nodes (402b, 402c), responsive to the source node (402a, 700) failing to locate the software module in the local module repository (MR, 410a), the request causing a neighbor node (402b) of the neighbor nodes to search a respective local module repository (MR, 410b) of the neighbor node for the software module, rebroadcast the request to those of the plurality of nodes in radio range of the neighbor node that are thereby further neighbor nodes (402d, 402e), when the neighbor node fails to locate the software module in the respective local module repository (MR, 410b), and receive the software module from a further neighbor node (402d) of the further neighbor nodes; and the source node (402a, 700) further caused to, receive (510) the software module from the neighbor node; and use (512) the software module to process the particular modality of data.
2. The source node (402a, 700) of claim 1, wherein the source node (402a, 700) has a collection of sensors (406a), a sensor of the sensors (406a) being configured to produce or provide the particular modality of data to the application software (408a) from which the need to process the particular modality of data is identified.
3. The source node (402a, 700) of any preceding claim, wherein making (504) the determination is made by the application software (408a).
4. The source node (402a, 700) of any preceding claim, wherein making (504) the determination is made from a request received by the source node (402a, 700) from a remote terminal.
5. The source node (402a, 700) of any preceding claim, wherein the source node (402a, 700) is caused to search the local module repository (MR, 410a) for the software module that is specifically identified, and
wherein the source node (402a, 700) is caused to broadcast the request that specifically identifies the software module.
6. The source node (402a, 700) of any preceding claim, wherein the source node (402a, 700) is caused to search the local module repository (MR, 410a) for any software module usable to process the particular modality of data, without specific identification of the software module, and
wherein the source node (402a, 700) is caused to broadcast the request that describes the particular modality of data, and excludes specific identification of the software module.
7. The source node (402a, 700) of any preceding claim, wherein the source node (402a, 700) caused to receive the software module from the neighbor node (402b) includes the source node caused to at least: receive a response from the neighbor node that indicates the neighbor node has the software module; unicast a second request for the software module to the neighbor node; and receive the software module from the neighbor node in response to the second request.
8. The source node (402a, 700) of any preceding claim, wherein the source node (402a, 700) is caused to use the software module includes the source node caused to at least:
perform an operating-system-level containerization, including create and launch an isolated container on the source node in which to use the software module, the source node caused to create the isolated container including the source node caused to install the software module in the isolated container.
9. A method (500) of acquiring software by a source node (402a) in a wireless ad hoc network (400) that includes a plurality of nodes (402), the method (500) comprising the source node (402a): executing (502) application software (408a) from which a need to process a particular modality of data is identified; making (504) a determination that the source node (402a) is incapable of processing the particular modality of data; and responsive to the determination, searching (506) a local module repository (MR, 410a) of the source node (402a) for a software module usable to process the particular modality of data; broadcasting (508) a request for the software module to those of the plurality of nodes in radio range of the source node that are thereby neighbor nodes (402b, 402c), responsive to the source node (402a) failing to locate the software module in the local module repository (MR, 410a) the request causing a neighbor node (402b) of the neighbor nodes to search a respective local module repository (MR, 410b) of the neighbor node for the software module, rebroadcast the request to those of the plurality of nodes in radio range of the neighbor node that are thereby further neighbor nodes (402d, 402e), when the neighbor node fails to locate the software module in the respective local module repository (MR, 410b), and receive the software module from a further neighbor node (402d) of the further neighbor nodes; and the source node (402a) further, receiving (510) the software module from the neighbor node; and using (512) the software module to process the particular modality of data.
10. The method (500) of claim 9, wherein the source node (402a) has a collection of sensors (406a), and the method (500) further comprises a sensor of the sensors (406a):
producing or providing the particular modality of data to the application software (408a) from which the need to process the particular modality of data is identified.
11. The method (500) of any of claims 9-10, wherein making (504) the determination is made by the application software (408a), or optionally wherein making (504) the determination is made from a request received by the source node (402a) from a remote terminal.
12. The method (500) of any of claims 9-11, wherein searching the local module repository (MR, 410a) includes searching the local module repository (MR, 410a) for the software module that is specifically identified, and
wherein broadcasting the request includes broadcasting the request that specifically identifies the software module.
13. The method (500) of any of claims 9-12, wherein searching the local module repository (MR, 410a) includes searching the local module repository (MR, 410a) for any software module usable to process the particular modality of data, without specific identification of the software module, and
wherein broadcasting the request includes broadcasting the request that describes the particular modality of data, and excludes specific identification of the software module.
14. The method (500) of any of claims 9-13, wherein the source node (402a) receiving the software module from the neighbor node (402b) includes the source node (402a): receiving a response from the neighbor node that indicates the neighbor node has the software module; unicasting a second request for the software module to the neighbor node; and receiving the software module from the neighbor node in response to the second request.
15. The method (500) of any of claims 9-14, wherein using the software module includes the source node (402a):
performing an operating-system-level containerization, including creating and launching an isolated container on the source node in which to use the software module, creating the isolated container including installing the software module in the isolated container.
</claims>
</document>
