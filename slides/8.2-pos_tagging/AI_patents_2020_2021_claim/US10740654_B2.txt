<document>

<filing_date>
2018-01-22
</filing_date>

<publication_date>
2020-08-11
</publication_date>

<priority_date>
2018-01-22
</priority_date>

<ipc_classes>
G06K9/62,G06K9/66,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
QUALCOMM
</assignee>

<inventors>
HABIBIAN, AMIRHOSSEIN
SNOEK, CORNELIS GERARDUS MARIA
</inventors>

<docdb_family_id>
65279674
</docdb_family_id>

<title>
Failure detection for a neural network object tracker
</title>

<abstract>
A method of detecting failure of an object tracking network with a failure detection network includes receiving an activation from an intermediate layer of the object tracking network and classifying the activation as a failure or success. The method also includes determining whether to initiate a recovery mode of the object tracking network or to remain in a tracking mode of the object tracking network, based on the classifying.
</abstract>

<claims>
1. A method of detecting failure of an object tracking network with a failure detection network, comprising: receiving, at the failure detection network, an activation from an intermediate layer of the object tracking network, the failure detection network and the object tracking network being different networks; classifying, at the failure detection network, the activation as a failure or success; and determining, at the failure detection network, whether to initiate a recovery mode of the object tracking network or to remain in a tracking mode of the object tracking network, based on the classifying.
2. The method of claim 1, further comprising initiating the recovery mode for the object tracking network based on determining that the object tracking network has failed.
3. The method of claim 2, in which the recovery mode comprises resetting the object tracking network, switching to an object detector, refining a search region, or requesting user input.
4. The method of claim 1, in which the failure detection network is a convolutional neural network or a recurrent convolutional neural network.
5. The method of claim 4, in which the convolutional neural network comprises a shallow convolutional neural network.
6. The method of claim 4, further comprising modelling temporal dependencies of the activation via a recurrent layer, the recurrent layer comprising a long short term memory network or a gated recurrent unit network.
7. The method of claim 1, in which the activation comprises at least one of a similarity map, an output from an intermediate layer, or a combination thereof.
8. The method of claim 1, further comprising receiving, at the failure detection network, contextual information comprising at least one of raw pixels, optical flow, or a combination thereof.
9. The method of claim 1, further comprising training the failure detection network and the object tracking network independently.
10. The method of claim 1, further comprising training the failure detection network and the object tracking network jointly.
11. A failure detection network for detecting failure of an object tracking network, the failure detection network comprising: a memory; and at least one processor coupled to the memory, the at least one processor configured: to receive an activation from an intermediate layer of the object tracking network, the failure detection network and the object tracking network being different networks; to classify the activation as a failure or success; and to determine whether to initiate a recovery mode of the object tracking network or to remain in a tracking mode of the object tracking network, based on the classifying.
12. The failure detection network of claim 11, in which the at least one processor is further configured to initiate the recovery mode for the object tracking network based on determining that the object tracking network has failed.
13. The failure detection network of claim 12, in which the recovery mode comprises resetting the object tracking network, switching to an object detector, refining a search region, or requesting user input.
14. The failure detection network of claim 11, in which the failure detection network is a convolutional neural network or a recurrent convolutional neural network.
15. The failure detection network of claim 14, in which the convolutional neural network comprises a shallow convolutional neural network.
16. The failure detection network of claim 14, in which the at least one processor is further configured to model temporal dependencies of the activation via a recurrent layer, the recurrent layer comprising a long short term memory network or a gated recurrent unit network.
17. The failure detection network of claim 11, in which the activation comprises at least one of a similarity map, an output from an intermediate layer, or a combination thereof.
18. The failure detection network of claim 11, in which the at least one processor is further configured to receive contextual information comprising at least one of raw pixels, optical flow, or a combination thereof.
19. The failure detection network of claim 11, in which the at least one processor is further configured to train the failure detection network and the object tracking network independently.
20. The failure detection network of claim 11, in which the at least one processor is further configured to train the failure detection network and the object tracking network jointly.
21. A non-transitory computer-readable medium having program code recorded thereon for detecting failure of an object tracking network with a failure detection network, the program code executed by a processor and comprising: program code to receive an activation from an intermediate layer of the object tracking network, the failure detection network and the object tracking network being different networks; program code to classify the activation as a failure or success; and program code to determine whether to initiate a recovery mode of the object tracking network or to remain in a tracking mode of the object tracking network, based on the classifying.
22. The non-transitory computer-readable medium of claim 21, in which the program code further comprises program code to initiate the recovery mode for the object tracking network based on determining that the object tracking network has failed.
23. The non-transitory computer-readable medium of claim 22, in which the recovery mode comprises resetting the object tracking network, switching to an object detector, refining a search region, or requesting user input.
24. The non-transitory computer-readable medium of claim 23, in which the failure detection network is a convolutional neural network or a recurrent convolutional neural network.
25. The non-transitory computer-readable medium of claim 24, in which the convolutional neural network comprises a shallow convolutional neural network.
26. An apparatus for detecting failure of an object tracking network, comprising: means for receiving an activation from an intermediate layer of the object tracking network, the failure detection network and the object tracking network being different networks; means for classifying the activation as a failure or success; and means for determining whether to initiate a recovery mode of the object tracking network or to remain in a tracking mode of the object tracking network, based on the classifying.
27. The apparatus of claim 26, further comprising means for initiating the recovery mode for the object tracking network based on determining that the object tracking network has failed.
28. The apparatus of claim 27, in which the recovery mode comprises resetting the object tracking network, switching to an object detector, refining a search region, or requesting user input.
29. The apparatus of claim 26, further comprising means for receiving contextual information comprising at least one of raw pixels, optical flow, or a combination thereof.
30. The apparatus of claim 26, in which the activation comprises at least one of a similarity map, an output from an intermediate layer, or a combination thereof.
</claims>
</document>
