<document>

<filing_date>
2019-07-31
</filing_date>

<publication_date>
2020-10-06
</publication_date>

<priority_date>
2019-04-25
</priority_date>

<ipc_classes>
G06F16/23,G06F21/00,G06F21/57,G06N20/20
</ipc_classes>

<assignee>
FOUNDATION OF SOONGSIL UNIVERSITY-INDUSTRY COOPERATION
</assignee>

<inventors>
YI, JEONG-HYUN
KIM, Kichang
</inventors>

<docdb_family_id>
68771176
</docdb_family_id>

<title>
METHOD OF APPLICATION SECURITY VULNERABILITY EVALUATION BASED ON TREE BOOSTING, AND READABLE MEDIUM AND APPARATUS FOR PERFORMING THE METHOD
</title>

<abstract>
Provided is a method of application security vulnerability evaluation based on tree boosting and a readable medium and an apparatus for performing the same. The method of application security vulnerability evaluation based on tree boosting includes the step of generating an API classifier which classifies an input API as benign or malicious using a tree boosting-based algorithm, the step of calculating security vulnerability score of API using the API classifier, and the step of classifying a target application as a malicious application or a benign application according to the security vulnerability score of API used in the target application.
</abstract>

<claims>
1. A method of vulnerability evaluation of an apparatus having a processor and a memory for application security vulnerability evaluation based on tree boosting, the method comprising: generating an API classifier which classifies an input API as benign or malicious using a tree boosting-based algorithm; assigning a security vulnerability score to the API inputted into the API classifier according to a benign or a malicious classification result of the API and storing in a database, wherein the security vulnerability score indicates security vulnerability in a quantitative value; calculating the security vulnerability score of the API used in a target application using the security vulnerability score of each of the API stored in the database; and classifying the target application as a malicious application or a benign application according to the security vulnerability score of the API used in the target application, wherein the step of generating the API classifier which classifies the input API as benign or malicious using the tree boosting-based algorithm comprises: extracting the API used in the application classified as the malicious application or the benign application and generating into a training dataset; performing character string pre-processing on API feature information that constitutes the training dataset; and vectorizing the training dataset having undergone the character string pre-processing by calculating an importance of each word, and wherein the step of assigning the security vulnerability score to the API inputted into the API classifier according to the benign or the malicious classification result of the corresponding API and storing in the database comprises: extracting APIs used in all applications provided at an Android reference site to generate a target dataset; performing character string pre-processing on API feature information that constitutes the target dataset; and vectorizing the target dataset having undergone the character string pre-processing by calculating an importance of each word.
2. The method of vulnerability evaluation of claim 1, further comprising: adding the API used in the target application as the training dataset to generate the API classifier, when the target application is classified as the malicious application.
3. The method of vulnerability evaluation of claim 1, wherein the step of the generating the API classifier further comprises: generating the API classifier by learning the training dataset with the tree boosting-based algorithm; and generating a plurality of API classifiers by repeating the step of the generating the API classifier by learning the training dataset with the tree boosting-based algorithm to construct an Ensemble model.
4. The method of vulnerability evaluation of claim 3, wherein the step of the assigning the security vulnerability score to the API inputted into the API classifier according to the benign or malicious classification result of the API and storing in the database further comprises: inputting the target dataset into the Ensemble model to obtain the benign or the malicious classification result of each of the API that constitutes the target dataset for each of the plurality of API classifiers that constitutes the Ensemble model; calculating the security vulnerability score of each of the API that constitutes the target dataset by averaging the benign or malicious classification results of each of the API that constitutes the target dataset acquired for each of the plurality of API classifiers; and setting security vulnerability rankings divided according to the security vulnerability score, and mapping the security vulnerability rankings to each of the API that constitutes the target dataset according to the security vulnerability score and storing in the database.
5. The method of vulnerability evaluation of claim 1, wherein the step of the calculating the security vulnerability score of the API used in the target application using the security vulnerability score for each of the API stored in the database comprises: extracting all APIs used in the target application to generate an API list; and averaging the security vulnerability score of each of the API included in the API list using the database and calculating as the security vulnerability score of the API used in the target application.
6. A non-transitory computer-readable recording medium having recorded thereon a computer program for the method of application security vulnerability evaluation based on tree boosting of claim 1.
7. An apparatus for application security vulnerability evaluation based on tree boosting, the apparatus comprising: an API learning unit which generates an API classifier which classifies an input API as benign or malicious using a tree boosting-based algorithm, and assigns a security vulnerability score to the API inputted into the API classifier according to a benign or a malicious classification result of the API and stores in a database; and an API evaluation unit which calculates security vulnerability score of the API used in a target application using the security vulnerability score of each of the API stored in the database, and classifies the target application as a malicious application or a benign application according to the security vulnerability score of the API used in the target application, wherein the API learning unit comprises: an API classifying unit which extracts API used in an application classified as the malicious application or the benign application and generates into a training dataset, extracts APIs used in all applications provided at an Android reference site to generate a target dataset; a character string pre-processing unit which performs character string pre-processing on API feature information that constitutes the training dataset or the target dataset; and a TF-IDF vector generation unit which vectorizes the training dataset or the target dataset having undergone the character string pre-processing by calculating an importance of each word.
8. The apparatus for application security vulnerability evaluation based on tree boosting of claim 7, further comprising: a dataset update unit which adds the API used in the target application as the training dataset to generate the API classifier when the target application is classified as the malicious application.
9. The apparatus for application security vulnerability evaluation based on tree boosting of claim 7, wherein the API learning unit further comprises: an API classifying unit which generates a plurality of API classifiers by learning the training dataset with the tree boosting-based algorithm to construct an Ensemble model, obtains the benign or the malicious classification results of each of the API which constitutes the target dataset for each of the plurality of API classifiers, and calculates security vulnerability scores for each API which constitutes the target dataset; and a security vulnerability ranking generation unit which sets security vulnerability rankings divided according to the security vulnerability score, and maps the security vulnerability rankings to each of the API that constitutes the target dataset according to the security vulnerability score and stores in the database.
10. The apparatus for application security vulnerability evaluation based on tree boosting of claim 7, wherein the API evaluation unit comprises: an API extraction unit which extracts all APIs used in the target application to generate an API list; a security vulnerability score calculation unit which averages the security vulnerability score of each of the API included in the API list using the database and calculates as the security vulnerability score of the API used in the target application; an application evaluation unit which classifies the target application as a malicious application or a benign application according to the security vulnerability score of the API used in the target application; and a model validation unit which sets a classification reference score of a malicious application or a benign application for the security vulnerability score of the API used in the target application.
</claims>
</document>
