<document>

<filing_date>
2019-11-07
</filing_date>

<publication_date>
2020-07-29
</publication_date>

<priority_date>
2019-01-25
</priority_date>

<ipc_classes>
G06K9/00
</ipc_classes>

<assignee>
STRADVISION
</assignee>

<inventors>
BOO, SUKHOON
CHO, HOJIN
JANG, TAEWOONG
JE, HONGMO
JEONG, KYUNGJOONG
KIM, HAK-KYOUNG
KIM, INSU
KIM, KYE-HYEON
KIM, YONGJOONG
NAM, WOONHYUN
RYU, WOOJU
SUNG, MYUNGCHUL
YEO, DONGHUN
</inventors>

<docdb_family_id>
68502920
</docdb_family_id>

<title>
LEARNING METHOD AND LEARNING DEVICE FOR IMPROVING SEGMENTATION PERFORMANCE TO BE USED FOR DETECTING ROAD USER EVENTS USING DOUBLE EMBEDDING CONFIGURATION IN MULTI-CAMERA SYSTEM AND TESTING METHOD AND TESTING DEVICE USING THE SAME
</title>

<abstract>
A learning method for improving segmentation performance to be used for detecting road user events including pedestrian events and vehicle events using double embedding configuration in a multi-camera system is provided. The learning method includes steps of: a learning device instructing similarity convolutional layer to generate similarity embedding feature by applying similarity convolution operations to a feature outputted from a neural network; instructing similarity loss layer to output a similarity loss by referring to a similarity between two points sampled from the similarity embedding feature, and its corresponding GT label image; instructing distance convolutional layer to generate distance embedding feature by applying distance convolution operations to the similarity embedding feature; instructing distance loss layer to output a distance loss for increasing inter-class differences among mean values of instance classes and decreasing intra-class variance values of the instance classes; backpropagating at least one of the similarity loss and the distance loss.
</abstract>

<claims>
1. A learning method for instance segmentation, comprising steps of: (a) a learning device performing a process of acquiring at least one network output feature from a neural network capable of detecting one or more objects in at least one training image; (b) the learning device performing a process of instructing at least one similarity convolutional layer to apply one or more similarity convolution operations to the network output feature, to thereby generate at least one similarity embedding feature, wherein the similarity convolution operations are adopted to output one or more embedding vectors corresponding to at least part of pixels of the network output feature; (c) the learning device performing a similarity embedding process of instructing at least one similarity loss layer to output at least one similarity between two points sampled from the similarity embedding feature and to output at least one similarity loss by referring to the similarity and its corresponding at least one GT label image; (d) the learning device performing a process of instructing at least one distance convolutional layer to apply one or more distance convolution operations to the similarity embedding feature, to thereby generate at least one distance embedding feature, wherein the distance convolution operations are adopted to transform the similarity embedding feature into at least one feature space; (e) the learning device performing a distance embedding process of instructing at least one distance loss layer to calculate each of mean values and each of variance values of each of one or more instance classes by using the distance embedding feature, to thereby output at least one distance loss to be used for increasing each of inter-class differences among each of the mean values of the instance classes and decreasing each of intra-class variance values of each of the instance classes; and (f) the learning device performing a process of learning one or more parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating at least one of the similarity loss and the distance loss.
2. The learning method of Claim 1, further comprising a step of:
(g) the learning device performing a process of instructing at least one sampling layer and at least one detecting layer to recognize the objects individually by sampling the distance embedding feature and by finding locations of the objects through regression, to thereby generate at least one instance segmentation.
3. The learning method of Claim 2, further comprising a step of:
(h) the learning device performing a process of instructing at least one segmentation loss layer to output at least one segmentation loss by referring to the instance segmentation and its corresponding at least one GT label image, to thereby learn the parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating the segmentation loss.
4. The learning method of Claim 1, wherein a range of change in the parameters of the similarity convolutional layer is determined as higher than that in the parameters of the neural network, and
wherein a range of change in the parameters of the distance convolutional layer is determined as higher than that in the parameters of the neural network or that in the parameters of the similarity convolutional layer.
5. The learning method of Claim 1, wherein the similarity is represented as a following equation where the fp and the fq represent the two points randomly sampled from the similarity embedding feature, and wherein the similarity loss is a cross entropy loss represented as a following equation where the A represents the number of combinations acquired from the two points randomly sampled from the similarity embedding feature, the y is 1 if the two points are in a same class, or 0 if the points are in different classes, and the s represents the similarity.
6. The learning method of Claim 1, wherein the objects represent one or more lanes.
7. The learning method of Claim 6, wherein the distance loss is a clustering loss represented as a following equation where the L1 and the L2 represent two lanes randomly selected from the lanes, the mean(L1) represents a mean value of the L1, the mean(L2) represents a mean value of the L2, the var(Li) represents each variance value of each lane among the lanes, the n_combination(L1, L2) represents the number of cases of selecting every combination of any two lanes among the lanes, and the thresh represents a threshold.
8. A testing method for instance segmentation, comprising steps of: (a) on condition that a learning device (i) has performed a process of instructing at least one similarity convolutional layer to apply one or more similarity convolution operations to at least one network output feature for training acquired from a neural network capable of detecting one or more objects for training in at least one training image, to thereby generate at least one similarity embedding feature for training, wherein the similarity convolution operations are adopted to output one or more embedding vectors for training corresponding to at least part of pixels of the network output feature for training, (ii) has performed a similarity embedding process of instructing at least one similarity loss layer to output at least one similarity between two points sampled from the similarity embedding feature for training and to output at least one similarity loss by referring to the similarity and its corresponding at least one GT label image, (iii) has performed a process of instructing at least one distance convolutional layer to apply one or more distance convolution operations to the similarity embedding feature for training, to thereby generate at least one distance embedding feature for training, wherein the distance convolution operations are adopted to transform the similarity embedding feature for training into at least one feature space for training, (iv) has performed a distance embedding process of instructing at least one distance loss layer to calculate each of mean values and each of variance values of each of one or more instance classes by using the distance embedding feature for training, to thereby output at least one distance loss to be used for increasing each of inter-class differences among each of the mean values of the instance classes and decreasing each of intra-class variance values of each of the instance classes; and (v) has performed a process of learning one or more parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating at least one of the similarity loss and the distance loss, a testing device acquiring at least one network output feature for testing from the neural network capable of detecting one or more objects for testing in at least one test image; (b) the testing device performing a process of instructing the similarity convolutional layer to apply the similarity convolution operations to the network output feature for testing, to thereby generate at least one similarity embedding feature for testing, wherein the similarity convolution operations are adopted to output one or more embedding vectors for testing corresponding to at least part of pixels of the network output feature for testing; (c) the testing device performing a process of instructing the distance convolutional layer to apply the distance convolution operations to the similarity embedding feature for testing, to thereby generate at least one distance embedding feature for testing, wherein the distance convolution operations are adopted to transform the similarity embedding feature for testing into at least one feature space for testing; and (d) the testing device performing a process of instructing at least one sampling layer and at least one detecting layer to recognize one or more objects for testing individually by sampling the distance embedding feature for testing and by finding locations of the objects for testing through regression, to thereby generate at least one instance segmentation for testing.
9. The testing method of Claim 8, wherein, at the step of (a), the learning device further has performed processes of (vi) instructing the sampling layer and the detecting layer to recognize the objects for training individually by sampling the distance embedding feature for training and by finding locations of the objects for training through the regression, to thereby generate at least one instance segmentation for training and (vii) instructing at least one segmentation loss layer to output at least one segmentation loss by referring to the instance segmentation for training and its corresponding at least one GT label image, to thereby learn the parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating the segmentation loss.
10. The testing method of Claim 8, wherein a range of change in the parameters of the similarity convolutional layer is determined as higher than that in the parameters of the neural network, and
wherein a range of change in the parameters of the distance convolutional layer is determined as higher than that in the parameters of the neural network or that in the parameters of the similarity convolutional layer.
11. The testing method of Claim 8, wherein the similarity is represented as a following equation where the fp and the fq represent the two points randomly sampled from the similarity embedding feature, and wherein the similarity loss is a cross entropy loss represented as a following equation where the A represents the number of combinations acquired from the two points randomly sampled from the similarity embedding feature, the y is 1 if the two points are in a same class, or 0 if the points are in different classes, and the s represents the similarity.
12. The testing method of Claim 8, wherein the objects for training represents one or more lanes, and
wherein the distance loss is a clustering loss represented as a following equation where the L1 and the L2 represent two lanes randomly selected from the lanes, the mean(L1) represents a mean value of the L1, the mean(L2) represents a mean value of the L2, the var(Li) represents each variance value of each lane among the lanes, the n_combination(L1, L2) represents the number of cases of selecting every combination of any two lanes among the lanes, and the thresh represents a threshold.
13. A learning device for instance segmentation, comprising: at least one memory that stores instructions; and at least one processor configured to execute the instructions to: (I) perform a process of instructing at least one similarity convolutional layer to apply one or more similarity convolution operations to at least one network output feature acquired from a neural network capable of detecting one or more objects in at least one training image, to thereby generate at least one similarity embedding feature, wherein the similarity convolution operations are adopted to output one or more embedding vectors corresponding to at least part of pixels of the network output feature, (II) perform a similarity embedding process of instructing at least one similarity loss layer to output at least one similarity between two points sampled from the similarity embedding feature and to output at least one similarity loss by referring to the similarity and its corresponding at least one GT label image, (III) perform a process of instructing at least one distance convolutional layer to apply one or more distance convolution operations to the similarity embedding feature, to thereby generate at least one distance embedding feature, wherein the distance convolution operations are adopted to transform the similarity embedding feature into at least one feature space, (IV) perform a distance embedding process of instructing at least one distance loss layer to calculate each of mean values and each of variance values of each of one or more instance classes by using the distance embedding feature, to thereby output at least one distance loss to be used for increasing each of inter-class differences among each of the mean values of the instance classes and decreasing each of intra-class variance values of each of the instance classes, and (V) perform a process of learning one or more parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating at least one of the similarity loss and the distance loss.
14. The learning device of Claim 13, wherein the processor further performs a process of:
(VI) instructing at least one sampling layer and at least one detecting layer to recognize the objects individually by sampling the distance embedding feature and by finding locations of the objects through regression, to thereby generate at least one instance segmentation.
15. A testing device for instance segmentation, comprising: at least one memory that stores instructions; and at least one processor, on condition that a learning device (i) has performed a process of instructing at least one similarity convolutional layer to apply one or more similarity convolution operations to at least one network output feature for training acquired from the neural network capable of detecting one or more objects for training in at least one training image, to thereby generate at least one similarity embedding feature for training, wherein the similarity convolution operations are adopted to output one or more embedding vectors for training corresponding to at least part of pixels of the network output feature for training, (ii) has performed a similarity embedding process of instructing at least one similarity loss layer to output at least one similarity between two points sampled from the similarity embedding feature for training and to output at least one similarity loss by referring to the similarity and its corresponding at least one GT label image, (iii) has performed a process of instructing at least one distance convolutional layer to apply one or more distance convolution operations to the similarity embedding feature for training, to thereby generate at least one distance embedding feature for training, wherein the distance convolution operations are adopted to transform the similarity embedding feature for training into at least one feature space for training, (iv) has performed a distance embedding process of instructing at least one distance loss layer to calculate each of mean values and each of variance values of each of one or more instance classes by using the distance embedding feature for training, to thereby output at least one distance loss to be used for increasing each of inter-class differences among each of the mean values of the instance classes and decreasing each of intra-class variance values of each of the instance classes; and (v) has performed a process of learning one or more parameters of at least one of the distance convolutional layer, the similarity convolutional layer, and the neural network by backpropagating at least one of the similarity loss and the distance loss; configured to execute the instructions to: (I) perform a process of instructing the similarity convolutional layer to apply the similarity convolution operations to at least one network output feature for testing acquired from the neural network capable of detecting one or more objects for testing in at least one test image, to thereby generate at least one similarity embedding feature for testing, wherein the similarity convolution operations are adopted to output one or more embedding vectors for testing corresponding to at least part of pixels of the network output feature for testing, (II) perform a process of instructing the distance convolutional layer to apply the distance convolution operations to the similarity embedding feature for testing, to thereby generate at least one distance embedding feature for testing, wherein the distance convolution operations are adopted to transform the similarity embedding feature for testing into at least one feature space for testing, and (III) perform a process of instructing at least one sampling layer and at least one detecting layer to recognize the objects for testing individually by sampling the distance embedding feature for testing and by finding locations of the objects for testing through regression, to thereby generate at least one instance segmentation for testing.
</claims>
</document>
