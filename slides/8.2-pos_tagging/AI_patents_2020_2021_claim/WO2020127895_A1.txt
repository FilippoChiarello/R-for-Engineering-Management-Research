<document>

<filing_date>
2019-12-20
</filing_date>

<publication_date>
2020-06-25
</publication_date>

<priority_date>
2018-12-20
</priority_date>

<ipc_classes>
G06N3/063
</ipc_classes>

<assignee>
SIEMENS
</assignee>

<inventors>
THON, INGO
FRANK, JOHANNES
SOLER GARRIDO, JOSEP
</inventors>

<docdb_family_id>
64746399
</docdb_family_id>

<title>
A METHOD AND SYSTEM FOR GENERATING AN ARTIFICIAL INTELLIGENCE MODEL
</title>

<abstract>
The present invention provides a method for generating an artificial intelligence, AI, model, (200) for an engineering system (110), said method comprising: - determining (S10) an artificial intelligence, AI, function (420) in an engineering framework system (400); - defining (S20) an inference path (422) for the generation of the AI model (200) by a computation graph; - converting (S30) the AI function (420) and the inference path (422) into a processing format; - sending and exporting (S40) the converted AI function (420) to an extraction and extension module (522) of an AI workbench module (520); - deploying (S50) the converted AI function (420) on a processing module (310) of the engineering system (110) and/or another processing device; - transmitting (S60) the extended computation graph of the inference path (422) from the extraction and ex- tension module (522) to an AI framework module (540); - communicating (S70) of a communication adapter (524) with the processing module (310) continuously by using a supporting communication protocol for receiving training data as input for the AI function (420) and forwarding them to the AI framework module (540); - transferring (S80) learned parameters of the AI model (200) from an API interface (542) of the AI framework module (540) to the communication adapter (524) for updating the AI model (200).
</abstract>

<claims>
Patent Claims
1. A computer implemented method for generating an artifi cial intelligence, AI, model, (200) for an engineering system, said method comprising:
- determining (S10) an artificial intelligence, AI, func tion (420) in an engineering framework system (400), wherein the artificial intelligence, AI, function (420) is a specific function block comprising the definition of operations of algorithms;
- defining (S20) an inference path (422) for the genera tion of the AI model (200) starting from the determined AI function (420) by a computation graph, wherein the inference path (422) for reaching the AI model (200) is described by operation steps such as convolution or by providing function blocks that correspond to parameterizable layers or by a single function block represent ing a complete neural network such as a convolutional neural network;
- converting (S30) the AI function (420) and the infer ence path (422) into a processing format;
- sending and exporting (S40) the converted AI function (420) and the converted inference path (422) to an ex traction and extension module (522) of an AI workbench module (520), wherein the extraction and extension mod ule (522) of the AI workbench module (520) has the functionality to extract and extend the computation graph architecture of the previously defined inference path (422) by operations of algorithms for model train ing; - deploying (S50) the converted AI function (420) on a processing module (310) of the engineering system and/or another processing device;
- transmitting (S60) the extended computation graph of the inference path (422) from the extraction and exten sion module (522) to an AI framework module (540);
- communicating (S70) of a communication adapter (524) with the processing module (310) continuously by using a supporting communication protocol for receiving training data as input for the AI function (420) and forwarding the training data to the AI framework module (540) ; transferring (S80) learned parameters of the AI model (200) from an API interface (542) of the AI framework module (540) to the communication adapter (524) for up dating the AI model (200) .
2. The method according to claim 1, wherein said method com prises the step of evaluating an interface and a context annotation of the AI function (420) by the extraction and extension module (522) of the AI workbench module (520) for extracting an address (220) for storing the data and parameters on the processing module (310) .
3. The method according to claim 2, wherein this address (220) is used to automatically configure the communica tion adapter (524) which is used to communicate with the processing module (310) .
4. The method according to any one of claims 1 to 3, wherein the communication protocol contains a semantic data model for the address (220) of the AI function (420) .
5. The method according to any one of claims 1 to 4, wherein the processing module (310) can be configured as a Pro grammable Logic Controller (PLC) .
6. The method according to any one of claims 1 to 5, wherein the AI function (420) comprises a description which pa rameters and data are needed for the training of the AI function (420) .
7. A system (100) for generating an artificial intelligence, AI, model (200) comprising an engineering framework sys tem (400) configured to determine an artificial intelli gence, AI, function (420), wherein the artificial intel ligence, AI, function (420) is a specific function block comprising the definition of operations of algorithms, and configured to define a inference path (422) for the generation of the AI model (200) starting from the deter mined AI function (420) by a computation graph, wherein the inference path (422) for reaching the AI model (200) is described by operation steps such as convolution or by providing function blocks that correspond to parameterizable layers or by a single function block representing a complete neural network such as a convolutional neural network, and configured to convert the AI function (420) and the inference path (422) into a processing format, and to export the converted AI function (420) and the converted inference path (422) to an extraction and ex tension module (522) of an AI workbench module (520), wherein the extraction and extension module (522) of the AI workbench module (520) has the functionality to ex tract and extend the computation graph architecture of the previously defined inference path (422) by operations of algorithms for model training and is configured to transmit the extended computation graph of the inference path (422) to an AI framework module (540); further com prising a processing module (310) of the engineering sys tem and/or another processing device configured to deploy the converted AI function (420); further comprising a communication adapter (524) configured to communicate with the processing module (310) continuously by using a supporting communication protocol for receiving training data as input for the AI function (420) and forwarding the training data to the AI framework module (540); and wherein the AI framework module (540) is configured to transfer learned parameters of the AI model (200) using an API interface (542) of the AI framework module (540) to the communication adapter (524) for updating the AI model (200) .
8. The system (100) according to claim 7, wherein the ex
traction and extension module (522) of the AI workbench module (520) is configured to evaluate an interface and a context annotation of the AI function (420) for extract ing an address (220) for storing the data and parameters on the processing module (310) .
9. The system (100) according to claim 8, wherein the ex
tracted address (220) is used to configure automatically the communication adapter (524) which is used to communi cate with the processing module (310) .
10. The system (100) according to claims 8 or 9, wherein the communication protocol contains a semantic data model for the address of the AI function (420) .
11. The system (100) according to any one of claims 8 to 10, wherein the processing module (310) is configured as a Programmable Logic Controller (PLC) .
12. The system (100) according to any one of claims 8 to 11, wherein the AI function (420) comprises a description which parameters and data are needed for the training of the AI function (420) .
</claims>
</document>
