<document>

<filing_date>
2018-07-05
</filing_date>

<publication_date>
2021-01-26
</publication_date>

<priority_date>
2018-07-05
</priority_date>

<ipc_classes>
G06F11/07
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
ANDRES, ROMERO SARABIA ENRIQUE
ESCUTIA GARCIA, PATRICIA
</inventors>

<docdb_family_id>
69101417
</docdb_family_id>

<title>
Electronic checklist
</title>

<abstract>
A method, computer program product, and a system where a processor(s) obtains data comprising issues and respective issue resolution plans for the issues experienced in a distributed computing system. The processor(s) cognitively analyzes the data to identify components of the distributed computing system for status evaluation and generates a script to perform a health check on the components and to automatically resolve performance issues of the components identified during the health check. The processor(s) executes the script, where for each component, the processor(s) determined if a status of the component indicates a performance issue and if not, update the data utilized in the cognitive analysis. If yes, the processor(s) attempts to resolve the status and updates the data with the results.
</abstract>

<claims>
1. A computer-implemented method, comprising: obtaining, by one or more processors, data comprising issues and respective issue resolution plans for the issues experienced in a distributed computing system; cognitively analyzing, by the one or more processors, the data to identify components of the distributed computing system for status evaluation, wherein the identifying is based on recognizing patterns in the data through the cognitive analysis; based on identifying the components, generating, at a given time, and regenerating at later times, by the one or more processors, based on the cognitive analysis and on the data, a single script to perform a health check on the components and to automatically resolve performance issues of the components identified during the health check, wherein the script comprises a checklist of the components and intervals for health checking each of the components, wherein the intervals for health checking for at least a portion of the components is based on past performance of the at least the portion of the components; executing, by the one or more processors, the script, wherein the executing comprises, for each components of the components identified in the script: determining, by the one or more processors, by performing a health check on the component, if a status of the component indicates a performance issue; based on determining that the status of the component does not indicate a performance issue based on the status being correct, updating, by the one or more processors, a certain portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component, wherein the updating comprises: determining whether the status of the component was correct during a threshold number of checks utilizing the checklist; and based on determining that the status was correct during the threshold number of checks, the updating of the certain portion comprises updating an interval for health checking the component, wherein the regenerating the single script after the given time comprises generating a new checklist comprising the updated interval; based on determining that the status of the component does indicates a performance issue, attempting, by the one or more processors, to resolve the status, the attempting comprising: utilizing procedures in the script based on the data comprising the issues and the respective issue resolution plans relevant to the component; determining, by the one or more processors, if the status was resolved by the procedures; based on determining that the procedures resolved the status, updating, by the one or more processors, a portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component; and based on determining that the procedures did not resolve the status, logging, by the one or more processors, one or more errors related to the status, and updating, by the one or more processors, the portion of the data.
2. The computer-implemented method of claim 1, further comprising: upon completion of the executing, cognitively analyzing, by the one or more processors, the data, to identify certain components of the distributed computing system for status evaluation; and generating, by the one or more processors, based on the cognitive analysis and on the data, an updated script to perform a new health check on the certain components and to automatically resolve performance issues of the certain components identified during the new health check.
3. The computer-implemented method of claim 1, wherein the cognitively analyzing comprises: transmitting, by the one or more processors, the data to a cognitive analysis tool; and obtaining, by the one or more processors, results from the cognitive analysis tool.
4. The computer-implemented method of claim 1, wherein the executing further comprises intermittently executing, by the one or more processors, the script as a background process.
5. The computer-implemented method of claim 1, wherein the executing further comprises executing, by the one or more processors, the script, responsive to obtaining an instruction to execute the script.
6. The computer-implemented method of claim 1, further comprising: obtaining, by the one or more processors, the logged errors; identifying, by the one or more processors, for each logged error, a specific component of the distributed computing system related to the logged errors; determining, by the one or more processors, based on the data, for the specific component, an escalation procedure to request assistance for resolving the status of the specific component; and executing, by the one or more processors, the escalation procedure.
7. The computer-implemented method of claim 6, wherein executing the escalation procedure comprises: generating, by the one or more processors, a help ticket; and populating, by the one or more processors, the help ticket in a resource of a helpdesk notification system communicatively coupled to the one or more processors.
8. A computer program product comprising: a computer readable storage medium readable by one or more processors and storing instructions for execution by the one or more processors for performing a method comprising: obtaining, by the one or more processors, data comprising issues and respective issue resolution plans for the issues experienced in a distributed computing system; cognitively analyzing, by the one or more processors, the data to identify components of the distributed computing system for status evaluation, wherein the identifying is based on recognizing patterns in the data through the cognitive analysis; based on identifying the components, generating, at a given time, and regenerating at later times, by the one or more processors, based on the cognitive analysis and on the data, a single script to perform a health check on the components and to automatically resolve performance issues of the components identified during the health check, wherein the script comprises a checklist of the components and intervals for health checking each of the components, wherein the intervals for health checking for at least a portion of the components is based on past performance of the at least the portion of the components; executing, by the one or more processors, the script, wherein the executing comprises, for each components of the components identified in the script: determining, by the one or more processors, by performing a health check on the component, if a status of the component indicates a performance issue; based on determining that the status of the component does not indicate a performance issue based on the status being correct, updating, by the one or more processors, a certain portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component, wherein the updating comprises: determining whether the status of the component was correct during a threshold number of checks utilizing the checklist; and based on determining that the status was correct during the threshold number of checks, the updating of the certain portion comprises updating an interval for health checking the component, wherein the regenerating the single script after the given time comprises generating a new checklist comprising the updated interval; based on determining that the status of the component does indicates a performance issue, attempting, by the one or more processors, to resolve the status, the attempting comprising: utilizing procedures in the script based on the data comprising the issues and the respective issue resolution plans relevant to the component; determining, by the one or more processors, if the status was resolved by the procedures; based on determining that the procedures resolved the status, updating, by the one or more processors, a portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component; and based on determining that the procedures did not resolve the status, logging, by the one or more processors, one or more errors related to the status, and updating, by the one or more processors, the portion of the data.
9. The computer program product of claim 8, the method further comprising: upon completion of the executing, cognitively analyzing, by the one or more processors, the data, to identify certain components of the distributed computing system for status evaluation; and generating, by the one or more processors, based on the cognitive analysis and on the data, an updated script to perform a new health check on the certain components and to automatically resolve performance issues of the certain components identified during the new health check.
10. The computer program product of claim 8, wherein the cognitively analyzing comprises: transmitting, by the one or more processors, the data to a cognitive analysis tool; and obtaining, by the one or more processors, results from the cognitive analysis tool.
11. The computer program product of claim 8, wherein the executing further comprises intermittently executing, by the one or more processors, the script as a background process.
12. The computer program product of claim 8, wherein the executing further comprises executing, by the one or more processors, the script, responsive to obtaining an instruction to execute the script.
13. The computer program product of claim 8, further comprising: obtaining, by the one or more processors, the logged errors; identifying, by the one or more processors, for each logged error, a specific component of the distributed computing system related to the logged errors; determining, by the one or more processors, based on the data, for the specific component, an escalation procedure to request assistance for resolving the status of the specific component; and executing, by the one or more processors, the escalation procedure.
14. The computer program product of claim 13, wherein executing the escalation procedure comprises: generating, by the one or more processors, a help ticket; and populating, by the one or more processors, the help ticket in a resource of a helpdesk notification system communicatively coupled to the one or more processors.
15. A system comprising: a memory; one or more processors in communication with the memory; program instructions executable by the one or more processors via the memory to perform a method, the method comprising: obtaining, by the one or more processors, data comprising issues and respective issue resolution plans for the issues experienced in a distributed computing system; cognitively analyzing, by the one or more processors, the data to identify components of the distributed computing system for status evaluation, wherein the identifying is based on recognizing patterns in the data through the cognitive analysis; based on identifying the components, generating, at a given time, and regenerating at later times, by the one or more processors, based on the cognitive analysis and on the data, a single script to perform a health check on the components and to automatically resolve performance issues of the components identified during the health check, wherein the script comprises a checklist of the components and intervals for health checking each of the components, wherein the intervals for health checking for at least a portion of the components is based on past performance of the at least the portion of the components; executing, by the one or more processors, the script, wherein the executing comprises, for each components of the components identified in the script: determining, by the one or more processors, by performing a health check on the component, if a status of the component indicates a performance issue; based on determining that the status of the component does not indicate a performance issue based on the status being correct, updating, by the one or more processors, a certain portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component, wherein the updating comprises: determining whether the status of the component was correct during a threshold number of checks utilizing the checklist; and based on determining that the status was correct during the threshold number of checks, the updating of the certain portion comprises updating an interval for health checking the component, wherein the regenerating the single script after the given time comprises generating a new checklist comprising the updated interval; based on determining that the status of the component does indicates a performance issue, attempting, by the one or more processors, to resolve the status, the attempting comprising: utilizing procedures in the script based on the data comprising the issues and the respective issue resolution plans relevant to the component; determining, by the one or more processors, if the status was resolved by the procedures; based on determining that the procedures resolved the status, updating, by the one or more processors, a portion of the data utilized in the cognitive analysis, wherein the portion is relevant to one or more of the status, the procedures, or the component; and based on determining that the procedures did not resolve the status, logging, by the one or more processors, one or more errors related to the status, and updating, by the one or more processors, the portion of the data.
16. The system of claim 15, the method further comprising: upon completion of the executing, cognitively analyzing, by the one or more processors, the data, to identify certain components of the distributed computing system for status evaluation; and generating, by the one or more processors, based on the cognitive analysis and on the data, an updated script to perform a new health check on the certain components and to automatically resolve performance issues of the certain components identified during the new health check.
17. The system of claim 15, wherein the cognitively analyzing comprises: transmitting, by the one or more processors, the data to a cognitive analysis tool; and obtaining, by the one or more processors, results from the cognitive analysis tool.
</claims>
</document>
