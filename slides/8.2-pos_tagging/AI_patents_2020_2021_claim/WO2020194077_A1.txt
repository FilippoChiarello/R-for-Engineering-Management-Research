<document>

<filing_date>
2020-02-25
</filing_date>

<publication_date>
2020-10-01
</publication_date>

<priority_date>
2019-03-22
</priority_date>

<ipc_classes>
G06K9/62
</ipc_classes>

<assignee>
IBM (CHINA) INVESTMENT COMPANY
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
IBM UNITED KINGDOM
</assignee>

<inventors>
VONGKULBHISAL, Jayakorn
VINAYAVEKHIN, Phongtharin
</inventors>

<docdb_family_id>
72611645
</docdb_family_id>

<title>
UNIFICATION OF MODELS HAVING RESPECTIVE TARGET CLASSES WITH DISTILLATION
</title>

<abstract>
A computer-implemented method for generating unified soft labels is disclosed. In the computer-implemented method, a collection of samples is prepared. Then, a plurality of predictions generated by a plurality of individual trained models is obtained for each sample, in which each individual trained model has an individual class set to form at least partially a unified class set that includes a plurality of target classes. The unified soft labels are estimated for each sample over the target classes in the unified class set from the plurality of the predictions using a relation connecting a first output of each Individual trained model and a second output of the unified model. The unified soft labels are output to train a unified model having the unified class set.
</abstract>

<claims>
1. A computer-implemented method for generating unified soft labels, the computer-implemented method comprising:
preparing a collection of samples;
obtaining, for each sample, a plurality of predictions generated by a plurality of individual trained models, each individual trained model having an individual class set to form at least partially a unified class set including a plurality of target classes;
estimating, for each sample, unified soft labels over the target classes in the unified class set from the plurality of the predictions using a relation connecting a first output of each individual trained model and a second output of the unified model; and
outputting the unified soft labels to train a unified model having the unified class set.
2. The computer-implemented method of claim 1, wherein the computer-implemented method comprises: feeding each sample into the unified model to infer predicted values over the target classes in the unified class set as the second output;
updating the unified model based on a loss function between the unified soft labels and the predicted values for each sample; and
storing the unified model updated.
3. The computer-implemented method of claim 1, wherein the relation indicates equivalence between each predicted value in the first output of one individual trained model and a corresponding predicted value in the second output of the unified model normalized by the individual class set of the one individual trained model.
4. The computer-implemented method of claim 2, wherein the loss function is weighted by weightings over the target classes in the unified class set, each weighting for one target class being computed in a manner based on a statistic of the unified soft labels on the one target class through the collection.
5. The computer-implemented method of claim 1, wherein the unified soft labels are estimated by solving a problem of optimizing an objective function with respect to a distribution q corresponding to the second output of the unified model, the objective function measuring an error between a plurality of reference distributions p/ corresponding to the plurality of the predictions and a plurality of normalized distributions q each obtained by normalizing the distribution q over target classes in each individual class set.
6. The computer-implemented method of claim 5, wherein the distribution q is obtained by: solving a convex problem with temporary variables u/each given to each target class / in the unified class set Lu, the distribution q being represented by a set of exponential functions of respective temporary variables ui in the convex problem; and
transforming solved temporary variables u/ into the distribution q.
7. The computer-implemented method of claim 5, wherein the objective function is a cross-entropy function.
8. The computer-implemented method of claim 1, wherein the unified soft labels are estimated by solving a problem of optimizing an objective function with respect to at least an output vector u representing the second output of the unified model as variables in a manner based on matrix factorization, the unified soft labels being represented in a form of probability or logits.
9. The computer-implemented method of claim 8, wherein the output vector u is represented in a form of probability and the problem of optimizing the objective function is solved further with respect to a normalization vector v representing normalization factors for the individual trained models, the objective function measuring an error between a probability matrix P representing the plurality of the predictions p/ in a form of probability with missing entries and a product of the output vector u and the normalization vector v, with a mask matrix M representing an existence of a missing class in the individual class sets.
10. The computer-implemented method of claim 8, wherein the output vector u is represented in a form of logits and the problem of optimizing the objective function is solved further with respect to a logit scaling vector v and a logit shift vector c, the objective function measuring an error between a logit matrix Z representing the plurality of the predictions p/ in a form of logits with missing entries and a product of the output vector u and the logit scaling vector v shifted by the logit shift vector c, with a mask matrix M representing an existence of missing class in the individual class sets.
11. The computer-implemented method of claim 8, wherein the output vector u is represented in a form of logits and the problem of optimizing the objective function is solved further with respect to a logit shift vector c, the objective function measuring an error between a logit matrix Z representing the plurality of the predictions p/ in a form of logits with missing entries and a product of the output vector u and the fixed scaling vector v shifted by the logit shift vector c, with a mask matrix M representing an existence of missing class in the individual class sets.
12. The computer-implemented method of claim 1 , wherein each of the unified model and the individual trained models is selected from a group consisting of neural network based classification models, decision tree or forest based classification models, and support vector machine based classification models.
13. The computer-implemented method of claim 1, wherein the computer-implemented method comprises: receiving, for each of the plurality of the individual trained models, (i) a content of individual trained model itself or (ii) a soft label collection obtained by feeding each sample into the individual trained model, together with a content of the individual class set.
14. A computer-implemented method for training a unified model, the computer-implemented method comprising:
preparing a collection of samples;
obtaining, for each sample, a plurality of predictions generated by a plurality of individual trained models, each individual trained model having an individual class set to form at least partially a unified class set including the plurality of target classes; and
updating the unified model having the unified class set using the plurality of the predictions for each sample and a relation connecting a first output of each individual trained model and a second output of the unified model over the target classes in the unified class set.
15. The computer-implemented method of claim 14, wherein the computer-implemented method comprises: feeding each sample into the unified model to infer predicted values over the target classes in the unified class set as the second output, the unified model being updated using the predicted values; and
storing the unified model updated.
16. The computer-implemented method of claim 15, wherein the unified model includes a neural network and the unified model is updated by back-propagating a loss throughout the neural network, the loss measuring an error between a plurality of reference distributions p/ corresponding to the plurality of the predictions and a plurality of normalized distributions qf obtained by normalizing a distribution q over target classes in each individual class set, the distribution q being obtained as the predicted values inferred by the unified model.
17. The computer-implemented method of claim 15, wherein the unified model includes a neural network and the unified model is updated by back-propagating a loss throughout the neural network, the loss being obtained by solving a problem of optimizing an objective function with an output vector u representing the second output of the unified model and other variables in a manner based on matrix factorization, the output vector u being obtained as the predicted values inferred by the unified model and fixed in the problem.
18. A computer system for generating unified soft labels, the computer system comprising: a memory storing program instructions;
a processing circuitry in communications with the memory for executing the program instructions, wherein the processing circuitry is configured to:
prepare a collection of samples;
obtain, for each sample, a plurality of predictions generated by a plurality of individual trained models, wherein each individual trained model has an individual class set to form at least partially a unified class set including a plurality of target classes;
estimate, for each sample, unified soft labels over the target classes in the unified class set from the plurality of the predictions using a relation connecting a first output of each individual trained model and a second output of the unified model; and
output the unified soft labels to train a unified model having the unified class set.
19. The computer system of claim 18, wherein the unified soft labels are estimated by solving a problem of optimizing an objective function with respect to a distribution q corresponding to the second output of the unified model, the objective function measuring an error between a plurality of reference distributions p/ corresponding to the plurality of the predictions and a plurality of normalized distributions qf each obtained by normalizing the distribution q over target classes in each individual class set.
20. The computer system of claim 18, wherein the unified soft labels are estimated by solving a problem of optimizing an objective function with respect to at least an output vector u representing the second output of the unified model as variables in a manner based on matrix factorization, the unified soft labels being represented in a form of probability or logits.
21. A computer system for training a unified model, the computer system comprising:
a memory storing program instructions;
a processing circuitry in communications with the memory for executing the program instructions, wherein the processing circuitry is configured to:
prepare a collection of samples;
obtain, for each sample, a plurality of predictions generated by a plurality of individual trained models, wherein each individual trained model has an individual class set to form at least partially a unified class set including a plurality of target classes; and
update the unified model having the unified class set using the plurality of the predictions for each sample and a relation connecting a first output of each individual trained model and a second output of the unified model over the target classes in the unified class set.
22. The computer system of claim 21, wherein the unified model includes a neural network and the unified model is updated by back-propagating a loss throughout the neural network, the loss measuring an error between a plurality of reference distributions p/ corresponding to the plurality of the predictions and a plurality of normalized distributions qf obtained by normalizing a distribution q over target classes in each individual class set, the distribution q being obtained as the second output of the unified model.
23. The computer system of claim 21, wherein the unified model includes a neural network and the unified model is updated by back-propagating a loss throughout the neural network, the loss being obtained by solving a problem of optimizing an objective function with an output vector u representing the second output of the unified model and other variables in a manner based on matrix factorization, the output vector u being obtained as the second output of the unified model and fixed in the problem.
24. A computer program product for generating unified soft labels, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a computer to cause the computer to perform a method comprising:
preparing a collection of samples;
obtaining, for each sample, a plurality of predictions generated by a plurality of individual trained models, each individual trained model having an individual class set to form at least partially a unified class set including a plurality of target classes;
estimating, for each sample, unified soft labels over the target classes in the unified class set from the plurality of the predictions using a relation connecting a first output of each individual trained model and a second output of the unified model; and
outputting the unified soft labels to train a unified model having the unified class set.
25. A computer program product for generating unified soft labels used for training a unified model having a unified class set including a plurality of target classes, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a computer to cause the computer to perform the computer-implemented method of claim 14.
</claims>
</document>
