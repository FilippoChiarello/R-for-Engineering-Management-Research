<document>

<filing_date>
2019-06-20
</filing_date>

<publication_date>
2020-12-24
</publication_date>

<priority_date>
2019-06-20
</priority_date>

<ipc_classes>
G06F17/11,G06F17/16
</ipc_classes>

<assignee>
FUJITSU
</assignee>

<inventors>
CHEN WEIPENG
Koyanagi, Yoichi
</inventors>

<docdb_family_id>
70008311
</docdb_family_id>

<title>
AUTOMATING SOLVING NP PROBLEMS IN ANNEALER SYSTEMS
</title>

<abstract>
According to an aspect of an embodiment, operations may include displaying a electronic user interface that includes a plurality of user-selectable options corresponding to taxonomy information for a plurality of optimization problems. The operations may further include receiving a first user input selecting a first template for a specific optimization problem of the plurality of optimization problems. The first user input may include a selection of at least one user-selectable option of the plurality of user-selectable options. The operations may further include receiving a second user input via the selected first template for the specific optimization problem and providing a call to the optimization solver machine to generate a solution for the specific optimization problem based on the received second user input. The second user input may include input data for a plurality of parameters of the specific optimization problem, specified in the selected first template.
</abstract>

<claims>
1. A method, comprising: displaying an electronic user interface that comprises a plurality of user-selectable options corresponding to taxonomy information for a plurality of optimization problems; receiving a first user input selecting a first template for a specific optimization problem of the plurality of optimization problems, wherein the first user input comprises a selection of at least one user-selectable option of the plurality of user-selectable options; receiving a second user input via the selected first template for the specific optimization problem, wherein the second user input comprises input data for a plurality of parameters of the specific optimization problem, specified in the selected first template; and providing a call to an optimization solver machine to generate a solution to the specific optimization problem based on the received second user input.
2. The method according to claim 1, wherein each optimization problem of the plurality of optimization problem corresponds to a combinatorial optimization problem, and wherein the specific optimization problem corresponds to a non-deterministic polynomial-time (NP) problem of a plurality of NP problems.
3. The method according to claim 2, wherein the NP problem is one of a graph coloring problem, a clique problem, an independent set problem, a clique cover problem, a minimax matching problem, a Knapsack problem, a sub-set sum problem, a bin packing problem, a cutting stock problem, a number partition problem, a Hamiltonian cycle problem, a travelling salesman problem, a direct feedback set problem, a vehicle routing problem, a job shop scheduling problem, a generalized assignment problem, a quadratic assignment problem, a set packing problem, a set partition problem, a set covering problem, or a K-Plex problem.
4. The method according to claim 1, wherein the taxonomy information comprises one or more of application-specific domains, domain-specific applications, sub-problems for the domain-specific applications, and a non-deterministic polynomial-time (NP) problem.
5. The method according to claim 1, further comprising: retrieving first information associated with a plurality of application-specific domains associated with optimization problems; classifying the plurality of application-specific domains into a set of categories based on the retrieved first information; determining a set of domain-specific applications for each category of the set of categories; determining a set of sub-problems for each domain-specific application of the determined set of domain-specific applications; mapping, for each domain-specific application of the determined set of domain-specific applications, a set of NP problem types to the determined set of sub-problems; and generating a knowledge graph for a plurality of NP problems associated with the mapped set of NP problem types, wherein the knowledge graph corresponds to a data structure that defines a relationship among different NP problems of the plurality of NP problems.
6. The method according to claim 5, further comprising: generating a plurality of templates for the corresponding plurality of optimization problems, based on the generated knowledge graph for the plurality of NP problems associated with the mapped set of NP problem types, wherein each template of the plurality of templates comprises a plurality of input fields for the plurality of parameters of a corresponding optimization problem, and wherein the plurality of parameters for the plurality of input fields comprises information associated with at least a set of application-specific constraints, a set of variables for the corresponding optimization problem, and an objective function for the corresponding optimization problem.
7. The method according to claim 6, wherein the received first user input corresponds to a selection of the first template from the generated plurality of templates.
8. The method according to claim 1, further comprising constructing at least one non-deterministic polynomial-time (NP) formulation for an NP problem corresponding to the specific optimization problem, based on the received second user input, wherein the construction of the at least one NP formulation corresponds to a mapping of the plurality of parameters of the specific optimization problem to a plurality of attributes of the NP problem.
9. The method according to claim 8, wherein the constructing further comprises: evaluating a plurality of NP formulations for the specific optimization problem based on a knowledge graph for a plurality of NP problems and the received second user input; and selecting at least one NP formulation from the evaluated plurality of NP formulations for the specific optimization problem, based on a number of constraints specified in each NP formulation of the evaluated plurality of NP formulations, wherein the selected at least one NP formulation corresponds to the constructed at least one NP formulation for the specific optimization problem.
10. The method according to claim 8, further comprising formulating a first objective function for the specific optimization problem, based on the constructed at least one NP formulation, wherein the first objective function comprises a relationship among the plurality of attributes of the NP problem.
11. The method according to claim 10, wherein the first objective function is one of a Quadratic Unconstrained Binary Optimization (QUBO) function, a first Quadratic Binary Optimization function with a set of equality constraints, a second Quadratic Binary Optimization function with a set of inequality constraints, or a Mixed Linear Integer Programming (MILP) function.
12. The method according to claim 10, wherein the formulating further comprises: retrieving a first mapping table that comprises a list of NP problems mapped to a corresponding list of objective functions; evaluating a plurality of first objective functions for the NP problem corresponding to the specific optimization problem, based on the retrieved first mapping table; and selecting the first objective function as an optimal objective function from the evaluated plurality of first objective functions, based on a number of attributes specified for each objective function of the evaluated plurality of first objective functions.
13. The method according to claim 10, further comprising formulating a second objective function that is compatible for execution by the optimization solver machine, based on the formulated first objective function, wherein the formulated second objective function comprises a relationship between a vector of binary decision variables and a Q-matrix corresponding to the formulated first objective function.
14. The method according to claim 13, further comprising: identifying a constraint type used in the formulated first objective function, wherein the constraint type is one of an inequality constraint type or an equality constraint type in the formulated first objective function; and appending a penalty term to the formulated first objective function based on a determination that the determined constraint type used in the formulated first objective function is one of the equality constraint type or the inequality constraint type, wherein the penalty term is specified in a second mapping table that comprises a list of penalty terms mapped to a corresponding list of constraint types applicable for the formulated first objective function.
15. The method according to claim 13, further comprising: submitting the formulated second objective function in an Algebraic Modelling Language (AML) format to the optimization solver machine pre-specified for the specific optimization problem; and providing the call to the optimization solver machine to generate the solution for the specific optimization problem by solving the submitted second objective function.
16. The method according to claim 13, further comprising: submitting the formulated second objective function in an AML format to a plurality of optimization solver machines that comprises the optimization solver machine; providing the call to the plurality of optimization solver machines to generate a plurality of solutions for the submitted second objective function; and determining a performance measure for each optimization solver machine of the plurality of optimization solver machines by application of a heuristic function on the generated plurality of solutions; and outputting, via a display screen, the solution generated by a corresponding optimization solver machine for which the determined performance measure is maximum.
17. The method according to claim 1, further comprising: connecting an application-specific database to the optimization solver machine, via a connection interface, wherein the application-specific database comprises the input data mapped to the plurality of parameters for the specific optimization problem; determining a set of user-specified conditions to be satisfied to trigger the optimization solver machine; and triggering the optimization solver machine to retrieve the input data from the connected application-specific database for solving the specific optimization problem based on the determination that the set of user-specified conditions are satisfied.
18. The method according to claim 1, wherein the optimization solver machine corresponds to a digital quantum-computing processor for solving the specific optimization problem.
19. One or more non-transitory computer-readable storage media configured to store instructions that, in response to being executed, cause a system to perform operations, the operations comprising: displaying an electronic user interface that comprise a plurality of user-selectable options corresponding to taxonomy information for a plurality of optimization problems; receiving a first user input selecting a first template for a specific optimization problem of the plurality of optimization problems, wherein the first user input comprises a selection of at least one user-selectable option of the plurality of user-selectable options; receiving a second user input via the selected first template for the specific optimization problem, wherein the second user input comprises input data for a plurality of parameters of the specific optimization problem, as specified in the selected first template; and providing a call to an optimization solver machine to generate a solution for the specific optimization problem based on the received second user input.
20. A system, comprising: a processor configured to: display an electronic user interface that comprises a plurality of user-selectable options corresponding to taxonomy information for a plurality of optimization problems; receive a first user input selecting a first template for a specific optimization problem of the plurality of optimization problems, wherein the first user input comprises a selection of at least one user-selectable option of the plurality of user-selectable options; and receive a second user input via the selected first template for the specific optimization problem, wherein the second user input comprises input data for a plurality of parameters of the specific optimization problem, as specified in the selected first template; and an optimization solver machine communicatively coupled to the processor, the optimization solver machine is configured to generate a solution for the specific optimization problem, based on the received second user input.
</claims>
</document>
