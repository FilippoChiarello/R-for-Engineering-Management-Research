<document>

<filing_date>
2015-03-20
</filing_date>

<publication_date>
2020-06-16
</publication_date>

<priority_date>
2015-03-20
</priority_date>

<ipc_classes>
G06K9/00,G06K9/46,G06K9/62,G06K9/66,G06K9/80,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
XU LIN
CHEN YURONG
LI JIANGUO
YAO, ANBANG
</inventors>

<docdb_family_id>
56976951
</docdb_family_id>

<title>
Object recognition based on boosting binary convolutional neural network features
</title>

<abstract>
Techniques related to implementing convolutional neural networks for object recognition are discussed. Such techniques may include generating a set of binary neural features via convolutional neural network layers based on input image data and applying a strong classifier to the set of binary neural features to generate an object label for the input image data.
</abstract>

<claims>
1. A computer-implemented method comprising: receiving a pre-trained deep convolutional neural network comprising a plurality of convolutional neural network layers followed by one or more fully connected neural network layers; generating a binary neural network features pool comprising a plurality response maps, wherein the binary neural network features pool comprises at least a response map for each convolutional kernel of a last convolutional neural network layer of the plurality of convolutional neural network layers; training and selecting among a plurality of support vector machine classifiers to generate a pre-trained strong classifier and a corresponding subset of the response maps for use by the pre-trained strong classifier; and eliminating the fully connected neural network layers and one of a plurality of convolutional kernels from the last convolutional neural network layer or the last convolutional neural network layer and a plurality of convolutional kernels from a second convolutional neural network layer of the plurality of convolutional neural network layers to provide a final pretrained convolutional neural network, the final pretrained convolutional neural network and the pre-trained strong classifier for application to input image data to generate a corresponding object label, wherein remaining convolutional kernels of the last or second convolutional neural network layer each correspond to one response map of the subset of response maps.
2. The method of claim 1, wherein the binary neural network features pool comprises at least one response map from each of the convolutional neural network layers.
3. The method of claim 1, wherein the final pretrained convolutional neural network comprises each of the convolutional neural network layers in response to at least one response map of the subset of the response maps corresponding to the last convolutional neural network layer.
4. The method of claim 1, wherein the last convolutional neural network layer is eliminated from the final pretrained convolutional neural network in response to no response map of the subset of the response maps corresponding to the last convolutional neural network layer.
5. The method of claim 1, wherein training and selecting among the plurality of support vector machine classifiers comprises: determining weighed classification error rates for the support vector machine classifiers; selecting a first support vector machine classifier as a new weak classifier based on the first support vector machine having a minimum error rate; determining a weight for the first support vector machine classifier; and generating the pre-trained strong classifier based at least in part on the first support vector machine and the weight.
6. The method of claim 1, further comprising: training an initial deep convolutional neural network using first training data to generate the pre-trained deep convolutional neural network, wherein the first training data is separate from second training data used to generate the pre-trained strong classifier.
7. The method of claim 1, wherein application of at least one of the plurality of convolutional neural network layers comprises application of at least one of a rectified linear unit, a max pooling operation, or a local response normalization.
8. The method of claim 1, further comprising: generating, via the final pretrained convolutional neural network, a first set of binary neural features based on first input image data, wherein the first set of binary neural network features are associated to the subset of response maps; and applying the pre-trained strong classifier to the first set of binary neural features to generate a first object label for the first input image data.
9. The method of claim 1, wherein the first object label comprises a human body recognition object label.
10. A system comprising: a memory to receive a pre-trained deep convolutional neural network; and one or more processors coupled to the memory, the one or more processors to: receive a pre-trained deep convolutional neural network comprising a plurality of convolutional neural network layers followed by one or more fully connected neural network layers; generate a binary neural network features pool comprising a plurality response maps, wherein the binary neural network features pool comprises at least a response map for each convolutional kernel of a last convolutional neural network layer of the plurality of convolutional neural network layers; train and select among a plurality of support vector machine classifiers to generate a pre-trained strong classifier and a corresponding subset of the response maps for use by the pre-trained strong classifier; and eliminate the fully connected neural network layers and one of a plurality of convolutional kernels from the last convolutional neural network layer or the last convolutional neural network layer and a plurality of convolutional kernels from a second convolutional neural network layer of the plurality of convolutional neural network layers to provide a final pretrained convolutional neural network, the final pretrained convolutional neural network and the pre-trained strong classifier for application to input image data to generate a corresponding object label, wherein remaining convolutional kernels of the last or second convolutional neural network layer each correspond to one response map of the subset of response maps.
11. The system of claim 10, wherein the binary neural network features pool comprises at least one response map from each of the convolutional neural network layers.
12. The system of claim 10, wherein the final pretrained convolutional neural network comprises each of the convolutional neural network layers in response to at least one response map of the subset of the response maps corresponding to the last convolutional neural network layer.
13. The system of claim 10, wherein the last convolutional neural network layer is eliminated from the final pretrained convolutional neural network in response to no response map of the subset of the response maps corresponding to the last convolutional neural network layer.
14. The system of claim 10, wherein the one or more processors to train and select among the plurality of support vector machine classifiers comprises: determine weighed classification error rates for the support vector machine classifiers; select a first support vector machine classifier as a new weak classifier based on the first support vector machine having a minimum error rate; determine a weight for the first support vector machine classifier; and generate the pre-trained strong classifier based at least in part on the first support vector machine and the weight.
15. The system of claim 10, the one or more processors further to: train an initial deep convolutional neural network using first training data to generate the pre-trained deep convolutional neural network, wherein the first training data is separate from second training data used to generate the pre-trained strong classifier.
16. The system of claim 10, wherein application of at least one of the plurality of convolutional neural network layers comprises application of at least one of a rectified linear unit, a max pooling operation, or a local response normalization.
17. The system of claim 10, the one or more processors further to: generate, via the final pretrained convolutional neural network, a first set of binary neural features based on first input image data, wherein the first set of binary neural network features are associated to the subset of response maps; and apply the pre-trained strong classifier to the first set of binary neural features to generate a first object label for the first input image data.
18. At least one non-transitory machine readable medium comprising a plurality of instructions that, in response to being executed on a computing device, cause the computing device to: receive a pre-trained deep convolutional neural network comprising a plurality of convolutional neural network layers followed by one or more fully connected neural network layers; generate a binary neural network features pool comprising a plurality response maps, wherein the binary neural network features pool comprises at least a response map for each convolutional kernel of a last convolutional neural network layer of the plurality of convolutional neural network layers; train and select among a plurality of support vector machine classifiers to generate a pre-trained strong classifier and a corresponding subset of the response maps for use by the pre-trained strong classifier; and eliminate the fully connected neural network layers and one of a plurality of convolutional kernels from the last convolutional neural network layer or the last convolutional neural network layer and a plurality of convolutional kernels from a second convolutional neural network layer of the plurality of convolutional neural network layers to provide a final pretrained convolutional neural network, the final pretrained convolutional neural network and the pre-trained strong classifier for application to input image data to generate a corresponding object label, wherein remaining convolutional kernels of the last or second convolutional neural network layer each correspond to one response map of the subset of response maps.
19. The non-transitory machine readable medium of claim 18, wherein the binary neural network features pool comprises at least one response map from each of the convolutional neural network layers.
20. The non-transitory machine readable medium of claim 18, wherein the final pretrained convolutional neural network comprises each of the convolutional neural network layers in response to at least one response map of the subset of the response maps corresponding to the last convolutional neural network layer.
21. The non-transitory machine readable medium of claim 18, wherein the last convolutional neural network layer is eliminated from the final pretrained convolutional neural network in response to no response map of the subset of the response maps corresponding to the last convolutional neural network layer.
22. The non-transitory machine readable medium of claim 18, wherein the computing device to train and select among the plurality of support vector machine classifiers comprises the computing device to: determine weighed classification error rates for the support vector machine classifiers; select a first support vector machine classifier as a new weak classifier based on the first support vector machine having a minimum error rate; determine a weight for the first support vector machine classifier; and generate the pre-trained strong classifier based at least in part on the first support vector machine and the weight.
23. The non-transitory machine readable medium of claim 18, further comprising instructions that, in response to being executed on the computing device, cause the computing device to: train an initial deep convolutional neural network using first training data to generate the pre-trained deep convolutional neural network, wherein the first training data is separate from second training data used to generate the pre-trained strong classifier.
24. The non-transitory machine readable medium of claim 18, wherein application of at least one of the plurality of convolutional neural network layers comprises application of at least one of a rectified linear unit, a max pooling operation, or a local response normalization.
25. The non-transitory machine readable medium of claim 18, further comprising instructions that, in response to being executed on the computing device, cause the computing device to: generate, via the final pretrained convolutional neural network, a first set of binary neural features based on first input image data, wherein the first set of binary neural network features are associated to the subset of response maps; and apply the pre-trained strong classifier to the first set of binary neural features to generate a first object label for the first input image data.
</claims>
</document>
