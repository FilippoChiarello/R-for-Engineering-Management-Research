<document>

<filing_date>
2019-10-17
</filing_date>

<publication_date>
2020-07-01
</publication_date>

<priority_date>
2018-12-28
</priority_date>

<ipc_classes>
G06T15/00,G06T15/06,G06T17/00
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
BENTHIN, CARSTEN
JANUS, SCOTT
LAWS, PHILIP
LIKTOR, GABOR
SURTI, PRASOONKUMAR
VAIDYANATHAN, KARTHIK
</inventors>

<docdb_family_id>
68318809
</docdb_family_id>

<title>
APPARATUS AND METHOD FOR GENERAL RAY TRACING QUERIES
</title>

<abstract>
Apparatus and method for general ray tracing queries. For example, one embodiment of an apparatus comprises: a hierarchical acceleration data structure generator to construct an acceleration data structure comprising a plurality of hierarchically arranged nodes associated with a graphics scene; traversal/intersection hardware logic to traverse one or more rays through the acceleration data structure to determine intersections between the one or more rays and one or more primitives within the hierarchical acceleration data structure; shape processing hardware logic to specify three dimensional (3D) shape data indicating one or more 3D shapes to be used to perform queries with respect to the hierarchical acceleration data structure; query processing hardware logic to execute queries comprising comparisons between nodes of the hierarchical acceleration data structure and the 3D shape data to generate a result indicating overlap between the 3D shapes and the nodes.
</abstract>

<claims>
1. An apparatus comprising: a hierarchical acceleration data structure generator to construct an acceleration data structure comprising a plurality of hierarchically arranged nodes associated with a graphics scene; traversal/intersection hardware logic to traverse one or more rays through the acceleration data structure to determine intersections between the one or more rays and one or more primitives within the hierarchical acceleration data structure; shape processing hardware logic to specify three dimensional (3D) shape data indicating one or more 3D shapes to be used to perform queries with respect to the hierarchical acceleration data structure; query processing hardware logic to execute queries comprising comparisons between nodes of the hierarchical acceleration data structure and the 3D shape data to generate a result indicating overlap between the 3D shapes and the nodes.
2. The apparatus of claim 1 wherein the hierarchical acceleration data structure comprises a bounding volume hierarchy (BVH), and wherein the nodes comprise portions of the BVH.
3. The apparatus of claim 2 wherein the query processing hardware logic is to traverse the BVH based on the 3D shape data.
4. The apparatus of claim 3 wherein traversing further comprises comparing 3D shape coordinates from the 3D shape data with coordinates associated with nodes of the BVH, the query processing hardware logic to begin traversal of the BVH from a parent node and, if the 3D shape overlaps the parent node, then the query processing logic to determine a first child node of the parent node that overlaps the 3D shape.
5. The apparatus of claim 4 wherein upon reaching a leaf node, the query processing hardware logic is to return an indication of overlap between the 3D shape and the leaf node.
6. The apparatus of claim 1 or 5 wherein the 3D shape data comprises a minimum coordinate value and a maximum coordinate value in x, y, and z coordinates.
7. The apparatus of claim 1 or 5 wherein the query processing hardware logic is to perform the comparisons between nodes of the hierarchical acceleration data structure and the 3D shape data to implement an N-nearest neighbor query.
8. The apparatus of claim 1 or 5 further comprising:
a plurality of execution units (EUs) to execution instructions, the query processing hardware logic to offload particular types of queries for execution by one or more of the EUs.
9. The apparatus of claim 8 wherein the particular types of queries include queries to return all primitives contained within a particular 3D shape when the query processing hardware logic reaches a BVH leaf.
10. A method comprising: constructing an acceleration data structure comprising a plurality of hierarchically arranged nodes associated with a graphics scene; traversing one or more rays through the acceleration data structure to determine intersections between the one or more rays and one or more primitives within the hierarchical acceleration data structure; specifying three dimensional (3D) shape data indicating one or more 3D shapes to be used to perform queries with respect to the hierarchical acceleration data structure; executing queries comprising comparisons between nodes of the hierarchical acceleration data structure and the 3D shape data to generate a result indicating overlap between the 3D shapes and the nodes.
11. The method of claim 10 wherein the acceleration data structure comprises a bounding volume hierarchy (BVH), and wherein the nodes comprise portions of the BVH.
12. The method of claim 11 further comprising:
traversing the BVH based on the 3D shape data.
13. The method of claim 12 wherein traversing further comprises: comparing 3D shape coordinates from the 3D shape data with coordinates associated with nodes of the BVH, initiating traversal of the BVH from a parent node; and, if the 3D shape overlaps the parent node, then determining a first child node of the parent node that overlaps the 3D shape.
14. The method of claim 13 wherein upon reaching a leaf node, returning an indication of overlap between the 3D shape and the leaf node.
15. The method of claim 10 or 14 wherein the 3D shape data comprises a minimum coordinate value and a maximum coordinate value in x, y, and z coordinates.
</claims>
</document>
