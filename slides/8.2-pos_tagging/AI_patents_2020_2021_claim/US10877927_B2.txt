<document>

<filing_date>
2018-05-31
</filing_date>

<publication_date>
2020-12-29
</publication_date>

<priority_date>
2018-05-31
</priority_date>

<ipc_classes>
G06F16/11,G06F16/16,G06F8/33,G06F9/50,G06N20/00
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
MICROSOFTTECHNOLOGY LICENSING, LLC
</assignee>

<inventors>
EBSTYNE, MICHAEL JOHN
ESCOS, PEDRO URBINA
SHALEV, EMANUEL
ZARGAHI, KAMRAN
MICHELOTTI, Stephen
</inventors>

<docdb_family_id>
66821374
</docdb_family_id>

<title>
Distributed computing system with a synthetic data as a service asset assembly engine
</title>

<abstract>
Various embodiments, methods and systems for implementing a distributed computing system asset assembly engine are provided. Initially a first source asset is received from a first distributed Synthetic Data as a Service (SDaaS) upload interface. A second source asset is received from a second a distributed SDaaS upload interface. The first source asset and the second source asset are ingested. Ingesting a source asset comprises automatically computing values for asset-variation parameters of the source asset, where the asset-variation parameters are programmable for machine-learning. A first synthetic data asset comprising a first set of values for the asset-variation parameters is generated. A second synthetic data asset comprising a second set of values for the asset-variation parameters is generated. The first synthetic data asset and the second synthetic data asset in a synthetic data asset are stored.
</abstract>

<claims>
1. A system for implementing a distributed computing system asset assembly engine, the system comprising: one or more hardware computer processors; and computer memory storing computer-useable instructions, that when used by the one or more computer processors, cause the one or more hardware computer processors to preform operations comprising: an asset assembly engine configured to: receive a first source asset from a first distributed Synthetic Data as a Service (SDaaS) upload interface of a synthetic data as a service (SDaaS) integrated development environment (IDE) associated with both SDaaS distributed computing service operations and SDaaS machine-learning training service operations that are part of a service-oriented architecture of an SDaaS service, wherein the service-oriented architecture abstracts underlying the SDaaS distributed computing service operations that are managed via the SDaaS service from the SDaaS machine-learning training service operations to provide machine-learning training services using the distributed computing system asset assembly engine; receive a second source asset from a second distributed SDaaS upload interface; ingest the first source asset and the second source asset, wherein ingesting a source asset comprises automatically computing values for asset-variation parameters of the source asset, wherein the asset-variation parameters are programmable for machine-learning; generate a first synthetic data asset comprising a first set of values for the asset-variation parameters; generate a second synthetic data asset comprising a second set of values for the asset-variation parameters; and store the first synthetic data asset and the second synthetic data asset in a synthetic data asset store.
2. The system of claim 1, wherein the SDaaS IDE supports identifying additional values for asset-variation parameters for source assets.
3. The system of claim 1, wherein the values are associated with generating training datasets based on intrinsic-parameter variation and extrinsic-parameter variation, wherein the intrinsic-parameter variation and the extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
4. The system of claim 1, wherein ingesting source assets is based on a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
5. The method of claim 1, wherein at least one SDaaS distributed computing service operation, managed via the SDaaS service, supports distributed computing availability of synthetic data assets, wherein the at least one SDaaS distributed computing service operation is different from the SDaaS machine-learning training service operations.
6. The system of claim 1, wherein ingesting the source asset comprises further comprises automatically computing values for scene-variation parameters of the source asset, wherein the scene-variation parameters are programmable for machine-learning.
7. The system of claim 1, wherein a synthetic data asset is stored as an archive format file, wherein the archive format file stores the values of the asset-variation parameters.
8. One or more computer-readable media storing instructions thereon for implementing a distributed computing system asset assembly engine, which, when executed by one or more processors of a computing device cause the computing device to perform actions comprising: receiving a first source asset from a first distributed Synthetic Data as a Service (SDaaS) upload interface of a synthetic data as a service (SDaaS) integrated development environment (IDE) associated with both SDaaS distributed computing service operations and SDaaS machine-learning training service operations that are part of a service-oriented architecture of an SDaaS service, wherein the service-oriented architecture abstracts underlying the SDaaS distributed computing service operations that are managed via the SDaaS service from the SDaaS machine-learning training service operations to provide machine-learning training services using the distributed computing system asset assembly engine; receiving a second source asset from a second distributed SDaaS upload interface; ingesting the first source asset and the second source asset, wherein ingesting a source asset comprises automatically computing values for asset-variation parameters of the source asset, wherein the asset-variation parameters are programmable for machine-learning; generating a first synthetic data asset comprising a first set of values for the asset-variation parameters; generating a second synthetic data asset comprising a second set of values for the asset-variation parameters; and storing the first synthetic data asset and the second synthetic data asset in a synthetic data asset store.
9. The media of claim 8, wherein the SDaaS IDE supports identifying additional values for asset-variation parameters for source assets.
10. The media of claim 8, wherein the values are associated with generating training datasets based on intrinsic-parameter variation and extrinsic-parameter variation, wherein the intrinsic-parameter variation and the extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
11. The media of claim 8, wherein ingesting source assets is based on a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
12. The media of claim 8, wherein ingesting the source asset further comprises automatically computing values for scene-variation parameters of the source asset, wherein the scene-variation parameters are programmable for machine-learning.
13. The media of claim 8, the actions further comprising generating a synthetic data scene based on the first synthetic data asset and the second synthetic data asset.
14. The media of claim 8, wherein a synthetic data store data structure for the synthetic data assets integrates with a machine-learning training service for automatic retrieval of synthetic data assets and synthetic data scenes.
15. A computer-implemented method for implementing a distributed computing system asset assembly engine, the method comprising: receiving a source asset from a distributed Synthetic Data as a Service (SDaaS) upload interface of a synthetic data as a service (SDaaS) integrated development environment (IDE) associated with both SDaaS distributed computing service operations and SDaaS machine-learning training service operations that are part of a service-oriented architecture of an SDaaS service, wherein the service-oriented architecture abstracts underlying the SDaaS distributed computing service operations that are managed via the SDaaS service from the SDaaS machine-learning training service operations to provide machine-learning training services using the distributed computing system asset assembly engine; ingesting the source asset, wherein ingesting the source asset comprises automatically computing values for asset-variation parameters of the source asset, wherein the asset-variation parameters are programmable for machine-learning; and generating a synthetic data asset comprising the values for the asset-variation parameters.
16. The method of claim 15, wherein the values are associated with generating training datasets on intrinsic-parameter variation and extrinsic-parameter variation, wherein the intrinsic-parameter variation and the extrinsic-parameter variation provide programmable machine-learning data representations of assets and scenes.
17. The method of claim 15, wherein ingesting source assets is based on a machine-learning synthetic data standard comprising a file format and a dataset-training architecture.
18. The method of claim 15, wherein ingesting the source asset further comprises automatically computing values for scene-variation parameters of the source asset, wherein the scene-variation parameters are programmable for machine-learning.
19. The method of claim 15, the method further comprising generating a synthetic data scene based on the first synthetic data asset and the second synthetic data asset.
20. The method of claim 15, the method further comprising: storing the synthetic data asset in an archive format file, wherein the archive format file stores the values of the asset-variation parameters; and communicating the synthetic data asset to an integrated machine-learning training algorithm.
</claims>
</document>
