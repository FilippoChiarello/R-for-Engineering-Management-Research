<document>

<filing_date>
2019-12-27
</filing_date>

<publication_date>
2020-07-29
</publication_date>

<priority_date>
2019-01-23
</priority_date>

<ipc_classes>
G06K9/00,G06K9/46,G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
STRADVISION
</assignee>

<inventors>
BOO, SUKHOON
CHO, HOJIN
JANG, TAEWOONG
JE, HONGMO
JEONG, KYUNGJOONG
KIM, HAK-KYOUNG
KIM, INSU
KIM, KYE-HYEON
KIM, YONGJOONG
NAM, WOONHYUN
RYU, WOOJU
SUNG, MYUNGCHUL
YEO, DONGHUN
</inventors>

<docdb_family_id>
66826023
</docdb_family_id>

<title>
METHOD AND DEVICE FOR ONLINE BATCH NORMALIZATION, ON-DEVICE LEARNING, AND CONTINUAL LEARNING APPLICABLE TO MOBILE DEVICES OR IOT DEVICES ADDITIONALLY REFERRING TO ONE OR MORE PREVIOUS BATCHES TO BE USED FOR MILITARY PURPOSE, DRONE OR ROBOT, AND TESTING METHOD AND TESTING DEVICE USING THE SAME
</title>

<abstract>
A method of online batch normalization, on-device learning, or continual learning which are applicable to mobile devices, loT devices, and the like is provided. The method includes steps of: (a) computing device instructing convolutional layer to acquire k-th batch, and to generate feature maps for k-th batch by applying convolution operations to input images included in k-th batch respectively; and (b) computing device instructing batch normalization layer to calculate adjusted averages and adjusted variations of the feature maps by referring to the feature maps in case k is 1, and the feature maps and previous feature maps, included in at least part of previous batches among previously generated first to (k-1)-th batches in case k is integer from 2 to m, and to apply batch normalization operations to the feature maps. Further, the method may be performed for military purpose, or other devices such as drones, robots.
</abstract>

<claims>
1. A method of batch normalization by using feature values of each batch including its corresponding input images, wherein the batches include a first to an m-th batches, comprising steps of: (a) a computing device instructing a convolutional layer of a CNN (i) to acquire a k-th batch, wherein k is an integer from 1 to m, and (ii) to generate feature maps for the k-th batch by applying convolution operations to the input images included in the k-th batch respectively; and (b) the computing device instructing a batch normalization layer of the CNN to (I) calculate one or more adjusted averages and one or more adjusted variations of the feature maps for the k-th batch by referring to (i) the feature maps for the k-th batch in case k is 1, and (ii) the feature maps for the k-th batch and previous feature maps, included in at least part of previous batches selected among the first to a (k-1)-th batches, which were previously generated in case k is an integer from 2 to m, and to (II) generate adjusted feature maps by applying batch normalization operations to the feature maps for the k-th batch by referring to the adjusted averages and the adjusted variations.
2. The method of claim 1, further comprising a step of:
(c) the computing device instructing an activation layer of the CNN to generate re-adjusted feature maps by applying nonlinear operations to the adjusted feature maps.
3. The method of claim 2, wherein the CNN includes a first to an n-th convolutional blocks each of which includes the convolutional layer, the batch normalization layer and the activation layer,
wherein, if the k-th batch is acquired, the re-adjusted feature maps are generated by applying operations through the first to the n-th convolutional blocks to the input images included in the k-th batch,
wherein, if x is an integer from 2 to n, the re-adjusted feature maps are generated by allowing (x-1)-th re-adjusted feature maps outputted from an (x-1)-th convolutional block to be inputted to an x-th convolutional block, and instructing an x-th convolutional block to generate x-th re-adjusted feature maps.
4. The method of claim 3, further comprising steps of: (d) the computing device instructing an output layer of the CNN to generate CNN output values by applying output operations to n-th re-adjusted feature maps outputted from the n-th convolutional block; and (e) the computing device instructing a loss layer to generate losses by referring to the CNN output values and their corresponding GTs, and learning parameters of the CNN by backpropagating the loss.
5. The method of any one of claims 1 to 4, wherein the batch normalization operations are operations that normalize values included in the feature maps for the k-th batch such that the adjusted averages and the adjusted variations are adjusted to a first value and a second value respectively.
6. The method of any one of claims 1 to 5, wherein, at the step of (b), by referring to variations of the feature maps for the k-th batch, the batch normalization layer determines the number of the batches, selected among the first to the (k-1)-th batches, to be used for generating the adjusted averages and the adjusted variations.
7. The method of any one of claims 1 to 6, wherein, if variations of the feature maps for the k-th batch are smaller than a specific threshold value, the batch normalization layer calculates the adjusted averages and the adjusted variations by referring to (i) the feature maps for the k-th batch only or (ii) the feature maps for the k-th batch and specific previous feature maps for one or more specific previous batches, wherein the specific previous batches are selected among the first to the (k-1)-th batches such that a ratio of the number of the specific previous batches to (k-1) is less than a predefined number.
8. The method of any one of claims 1 to 7, wherein, at the step of (b), by referring to the number of the input images included in the k-th batch, the batch normalization layer determines a ratio of the number of specific previous batches to (k-1), wherein the specific previous batches, to be used for calculating the adjusted averages and the adjusted variations, are selected among the first to the (k-1)-th batches.
9. The method of any one of claims 1 to 8, wherein, at the step of (b), the batch normalization layer calculates the adjusted averages and the adjusted variations by referring to (i) the feature maps for the k-th batch with a first weight assigned thereto, and (ii) the previous feature maps for at least part of the first to the (k-1)-th previous batches with one or more second weights assigned thereto.
10. The method of any one of claims 1 to 9, wherein, at the step of (b), the batch normalization layer selects specific previous batches, to be used for calculating the adjusted averages and the adjusted variations of the feature maps for the k-th batch, among the first to the (k-1)-th batches by referring to the number of times that each of the previous feature maps corresponding to each of the first to the (k-1)-th batches was used during the process of generating each of adjusted averages and each of adjusted variations for the second to the (k-1)-th batches.
11. The method of any one of claims 1 to 9, wherein, at the step of (b), the batch normalization layer selects specific previous batches, to be used for calculating the adjusted averages and the adjusted variations of the feature maps for the k-th batch, among the first to the (k-1)-th batches by referring to (i) information on whether each of averages of the previous feature maps corresponding to each of the first to the (k-1)-th batches is in a first specific range which is determined by referring to a first value or not, or (ii) information on whether each of variations of the previous feature maps corresponding to each of the first to (k-1)-th batches is in a second specific range determined by referring to a second value or not.
12. The method of any one of claims 1 to 11, wherein, at the step of (b), the batch normalization layer generates the adjusted feature maps for the k-th batch by applying linear operation to the feature maps for the k-th batch after the batch normalization operation is applied thereto, wherein the linear operation follows a formula below, γ is a scaling parameter, β is a bias parameter, and AF are feature maps for the k-th batch that batch normalization operation is applied thereto.
13. A testing method of batch normalization by using feature values of each batch including its corresponding test images, wherein the batches include a first to an m-th batches, comprising steps of: (a) on condition that (1) a learning device has instructed a convolutional layer of a CNN (i) to acquire a k-th batch for training, wherein k is an integer from 1 to m', and (ii) to generate feature maps for training for the k-th batch for training by applying convolution operations to training images included in the k-th batch for training respectively; (2) the learning device has instructed a batch normalization layer of the CNN to (I) calculate one or more adjusted averages for training and one or more adjusted variations for training of the feature maps for training for the k-th batch for training by referring to (i) the feature maps for training for the k-th batch for training in case k is 1, and (ii) the feature maps for training for the k-th batch for training and previous feature maps for training, included in at least part of previous batches for training selected among the first to a (k-1)-th batches for training, which were previously generated in case k is an integer from 2 to m', and to (II) generate adjusted feature maps for training by applying batch normalization operations to the feature maps for training for the k-th batch for training by referring to the adjusted averages for training and the adjusted variations for training; (3) the learning device has instructed an activation layer of the CNN to generate re-adjusted feature maps for training by applying nonlinear operations to the adjusted feature maps for training, wherein the CNN includes a first to an n-th convolutional blocks each of which includes the convolutional layer, the batch normalization layer and the activation layer, wherein, if the k-th batch for training is acquired, the re-adjusted feature maps for training are generated by applying operations through the first to the n-th convolutional blocks to the training images included in the k-th batch for training, wherein, if x is an integer from 2 to n, x-th re-adjusted feature maps for training are generated by allowing (x-1)-th re-adjusted feature maps for training outputted from an (x-1)-th convolutional block to be inputted to an x-th convolutional block, and has instructed an x-th convolutional block to generate the x-th re-adjusted feature maps for training; (4) the learning device has instructed an output layer of the CNN to generate CNN output values for training by applying output operations to n-th re-adjusted feature maps for training outputted from the n-th convolutional block; and (5) the learning device has instructed a loss layer of the CNN to generate losses by referring to the CNN output values for training and their corresponding GTs, and has learnt parameters of the CNN by backpropagating the loss, a testing device instructing a convolutional layer of a CNN (i) to acquire a k-th batch for testing, wherein k is an integer from 1 to m, and (ii) to generate feature maps for testing for the k-th batch for testing by applying convolution operations to test images included in the k-th batch for testing respectively; (b) the testing device instructing a batch normalization layer of the CNN to (I) calculate one or more adjusted averages for testing and one or more adjusted variations for testing of the feature maps for testing for the k-th batch for testing by referring to (i) the feature maps for testing for the k-th batch for testing in case k is 1, and (ii) the feature maps for testing for the k-th batch for testing and previous feature maps for testing, included in at least part of previous batches for testing selected among the first to a (k-1)-th batches for testing, which were previously generated in case k is an integer from 2 to m, and to (II) generate adjusted feature maps for testing by applying batch normalization operations to the feature maps for testing for the k-th batch for testing by referring to the adjusted averages for testing and the adjusted variations for testing; (c) the testing device instructing an activation layer of the CNN to generate re-adjusted feature maps for testing by applying nonlinear operations to the adjusted feature maps for testing, wherein the CNN includes a first to an n-th convolutional blocks each of which includes the convolutional layer, the batch normalization layer and the activation layer, wherein, if the k-th batch for testing is acquired, the re-adjusted feature maps for testing are generated by applying operations through the first to the n-th convolutional blocks to the input test images included in the k-th batch for testing, wherein, if x is an integer from 2 to n, the re-adjusted feature maps for testing are generated by allowing (x-1)-th re-adjusted feature maps for testing outputted from an (x-1)-th convolutional block to be inputted to an x-th convolutional block, and instructing an x-th convolutional block to generate x-th re-adjusted feature maps for testing; and (d) the testing device instructing an output layer of the CNN to generate CNN output values for testing by applying output operations to n-th re-adjusted feature maps for testing outputted from the n-th convolutional block.
14. A computing device of batch normalization by using feature values of each batch including its corresponding input images, wherein the batches include a first to an m-th batches, comprising: at least one memory that stores instructions; and at least one processor configured to execute the instructions to: perform processes of (1) instructing a convolutional layer of a CNN to generate feature maps for a k-th batch by applying convolution operations to the input images included in the k-th batch respectively, wherein k is an integer from 1 to m, and (2) instructing a batch normalization layer of the CNN to (I) calculate one or more adjusted averages and one or more adjusted variations of the feature maps for the k-th batch by referring to (i) the feature maps for the k-th batch in case k is 1, and (ii) the feature maps for the k-th batch and previous feature maps, included in at least part of previous batches selected among the first to a (k-1)-th batches, which were previously generated in case k is an integer from 2 to m, and to (II) generate adjusted feature maps by applying batch normalization operations to the feature maps for the k-th batch by referring to the adjusted averages and the adjusted variations.
15. A testing device of batch normalization by using feature values of each batch including its corresponding test images, wherein the batches include a first to an m-th batches, comprising: at least one memory that stores instructions; and at least one processor, on condition that (1) a learning device has instructed a convolutional layer of a CNN (i) to acquire a k-th batch for training, wherein k is an integer from 1 to m', and (ii) to acquire feature maps for training for the k-th batch for training by applying convolution operations to training images included in the k-th batch for training respectively; and (2) the learning device has instructed a batch normalization layer of the CNN to (I) calculate adjusted averages for training and adjusted variations for training of the feature maps for training for the k-th batch for training by referring to (i) the feature maps for training for the k-th batch for training in case k is 1, and (ii) the feature maps for training for the k-th batch for training and previous feature maps for training, included in at least part of previous batches for training selected among the first to a (k-1)-th batches for training, which were previously generated in case k is an integer from 2 to m', and to (II) generate adjusted feature maps for training by applying batch normalization operations to the feature maps for training for the k-th batch for training by referring to the adjusted averages for training and the adjusted variations for training; (3) the learning device has instructed an activation layer of the CNN to generate re-adjusted feature maps for training by applying nonlinear operations to the adjusted feature maps for training, wherein the CNN includes a first to an n-th convolutional blocks each of which includes the convolutional layer, the batch normalization layer and the activation layer, wherein, if the k-th batch for training is acquired, the re-adjusted feature maps for training are generated by applying convolution operations through the first to the n-th convolutional blocks to the training images included in the k-th batch for training, wherein, if x is an integer from 2 to n, x-th re-adjusted feature maps for training are generated by allowing (x-1)-th re-adjusted feature maps for training outputted from an (x-1)-th convolutional block to be inputted to an x-th convolutional block, and has instructed an x-th convolutional block to generate the x-th re-adjusted feature maps for training; (4) the learning device has instructed an output layer of the CNN to generate CNN output values for training by applying output operations to n-th re-adjusted feature maps for training outputted from the n-th convolutional block; and (5) the learning device has instructed a loss layer of the CNN to generate losses by referring to the CNN output values for training and their corresponding GTs, and has learnt parameters of the CNN by backpropagating the loss, a communication part for acquiring a k-th batch for testing, wherein k is an integer from 1 to m; configured to execute the instructions to: perform processes of (A) instructing a convolutional layer of a CNN to acquire feature maps for testing for the k-th batch for testing by applying convolution operations to test images included in the k-th batch for testing respectively; (B) instructing a batch normalization layer of the CNN to (I) calculate adjusted averages for testing and adjusted variations for testing of the feature maps for testing for the k-th batch for testing by referring to (i) the feature maps for testing for the k-th batch for testing in case k is 1, and (ii) the feature maps for testing for the k-th batch for testing and previous feature maps for testing, included in at least part of previous batches for testing selected among the first to a (k-1)-th batches for testing, which were previously generated in case k is an integer from 2 to m, and to (II) generate adjusted feature maps for testing by applying batch normalization operations to the feature maps for testing for the k-th batch for testing by referring to the adjusted averages for testing and the adjusted variations for testing; (C) instructing an activation layer of the CNN to generate re-adjusted feature maps for testing by applying nonlinear operations to the adjusted feature maps for testing, wherein the CNN includes a first to an n-th convolutional blocks each of which includes the convolutional layer, the batch normalization layer and the activation layer, wherein, if the k-th batch for testing is acquired, the re-adjusted feature maps for testing are generated by applying convolution operations through the first to the n-th convolutional blocks to the input test images included in the k-th batch for testing, wherein, if x is an integer from 2 to n, the re-adjusted feature maps for testing are generated by allowing (x-1)-th re-adjusted feature maps for testing outputted from an (x-1)-th convolutional block to be inputted to an x-th convolutional block, and instructing an x-th convolutional block to generate x-th re-adjusted feature maps for testing; and (D) instructing an output layer of the CNN to generate CNN output values for testing by applying output operations to n-th re-adjusted feature maps for testing outputted from the n-th convolutional block.
</claims>
</document>
