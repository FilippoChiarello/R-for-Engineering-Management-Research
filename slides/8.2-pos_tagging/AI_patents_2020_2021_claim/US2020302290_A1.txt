<document>

<filing_date>
2019-11-07
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2019-03-20
</priority_date>

<ipc_classes>
G06F17/18,G06N20/00,G06N3/08,G06T3/00
</ipc_classes>

<assignee>
LUNIT
</assignee>

<inventors>
LEE, HYUN JAE
</inventors>

<docdb_family_id>
68727931
</docdb_family_id>

<title>
Method for feature data recalibration and apparatus thereof
</title>

<abstract>
A method of recalibrating a feature data of each channel generated by a convolution layer of a convolution neural network is provided. According to some embodiments, since an affine transformation is applied to the feature data of each channel independently of the feature data of the other channel, the overall number of parameters defining the affine transformation is minimized. As a result, the amount of computations required in performing the feature data recalibration can be reduced.
</abstract>

<claims>
1. 1-4. (canceled)
5. The method of claim 7, wherein the style information of the two-dimensional feature map of the first channel includes an average and standard deviation of feature values of the two-dimensional feature map of the first channel.
6. The method of claim 7, wherein obtaining the importance weight of the first channel by performing the first affine transformation on the style information of the two-dimensional feature map of the first channel comprises: performing the first affine transformation on the style information of the two-dimensional feature map of the first channel; and obtaining the importance weight of the first channel by applying an activation function to a result of the first affine transformation.
7. A feature data recalibration method performed by a computing device, comprising: receiving a feature data of each of a plurality of channels generated by a convolution neural network; and recalibrating the feature data of each of the plurality of channels by performing independent affine transformation on the feature data of each of the plurality of channels, wherein recalibrating the feature data of each of the plurality of channels comprises: obtaining an importance weight of a first channel among the plurality of channels by performing a first affine transformation on the feature data of the first channel; obtaining an importance weight of a second channel among the plurality of channels by performing a second affine transformation on the feature data of the second channel, the second affine transformation having at least one different parameter from the first affine transformation; recalibrating the feature data of the first channel by reflecting the importance weight of the first channel; and recalibrating the feature data of the second channel by reflecting the importance weight of the second channel, wherein obtaining the importance weight of the first channel by performing the first affine transformation on the style information of the two-dimensional feature map of the first channel comprises: performing the first affine transformation on the style information of the two-dimensional feature map of the first channel; and obtaining the importance weight of the first channel by applying an activation function to a result of the first affine transformation, and wherein the image data input to the convolution neural network includes an image data of a first style and an image data of a second style.
8. The method of claim 7, wherein a parameter of the first affine transformation is learned when the convolution neural network by using the feature data of the first channel, and wherein the parameter of the second affine transformation is learned when the convolution neural network is learned by using the feature data of the second channel.
9. The method of claim 7, wherein recalibrating the feature data of the first channel comprises setting a result obtained by multiplying the feature data of the first channel by the importance weight of the first channel as a recalibrated feature data of the first channel.
10. 10-11. (canceled)
12. The machine learning apparatus of claim 13, wherein the processor obtains the importance weight of the first channel by performing the first affine transformation on the style information of the two-dimensional feature map of the first channel and applying an activation function to a result of the first affine transformation.
13. A machine learning apparatus comprising: a memory storing one or more instructions; and a processor executes the one or more instructions to receive a feature data of each of a plurality of channels generated by a convolution neural network, and to recalibrate the feature data of each of the plurality of channels by performing independent affine transformation on the feature data of each of the plurality of channels, wherein recalibrating the feature data of each of the plurality of channels comprises: obtaining the feature data of a first channel among the plurality of channels and the feature data of a second channel among the plurality of channels; obtaining an importance weight of a first channel among the plurality of channels by performing a first affine transformation on the feature data of the first channel; obtaining an importance weight of a second channel among the plurality of channels by performing a second affine transformation on the feature data of the second channel, the second affine transformation being different from the first affine transformation; recalibrating the feature data of the first channel by reflecting the importance weight of the first channel; and recalibrating the feature data of the second channel by reflecting the importance weight of the second channel, wherein a data input to the convolution neural network is an image data, wherein the feature data of the first channel includes a two-dimensional feature map of the first channel, wherein the processor obtains the importance weight of the first channel by performing the first affine transformation on style information of the two-dimensional feature map of the first channel, and wherein the image data input to the convolution neural network includes an image data of a first style and an image data of a second style.
14. The machine learning apparatus of claim 13, wherein a parameter of the first affine transformation is learned when the convolution neural network is learned by using the feature data of the first channel, and a parameter of the second affine transformation is learned when the convolution neural network is learned by using the feature data of the second channel.
15. The machine learning apparatus of claim 13, wherein the processor sets a result obtained by multiplying the feature data of the first channel by the importance weight of the first channel as a recalibrated feature data of the first channel.
16. 16-17. (canceled)
18. The computer program of claim 19, wherein obtaining the importance weight of the first channel by performing the first affine transformation on the style information of the two-dimensional feature map of the first channel comprises: performing the first affine transformation on the style information of the two-dimensional feature map of the first channel; and obtaining the importance weight of the first channel by applying an activation function to a result of the first affine transformation.
19. A computer program stored in a non-transitory computer-readable medium, for causing a computing device to execute: receiving a feature data of each of a plurality of channels generated by a convolution neural network; and recalibrating the feature data of each of the plurality of channels by performing independent affine transformation on the feature data of each of the plurality of channels, wherein recalibrating the feature data of each of the plurality of channels comprises: obtaining the feature data of a first channel among the plurality of channels and the feature data of a second channel among the plurality of channels; obtaining an importance weight of a first channel among the plurality of channels by performing a first affine transformation on the feature data of the first channel and obtaining an importance weight of a second channel among the plurality of channels by performing a second affine transformation on the feature data of the second channel, the second affine transformation being different from the first affine transformation; and recalibrating the feature data of the first channel by reflecting the importance weight of the first channel and recalibrating the feature data of the second channel by reflecting the importance weight of the second channel, wherein a data input to the convolution neural network is an image data, wherein the feature data of the first channel includes a two-dimensional feature map of the first channel, wherein obtaining the importance weight of the first channel comprises obtaining the importance weight of the first channel by performing the first affine transformation on style information of the two-dimensional feature map of the first channel, and wherein the image data input to the convolution neural network includes an image data of a first style and an image data of a second style.
20. The computer program of claim 19, wherein a parameter of the first affine transformation is learned when the convolution neural network is learned by using the feature data of the first channel, and the parameter of the second affine transformation is learned when the convolution neural network is learned by using the feature data of the second channel.
</claims>
</document>
