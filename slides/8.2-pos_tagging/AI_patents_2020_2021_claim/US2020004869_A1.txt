<document>

<filing_date>
2018-07-02
</filing_date>

<publication_date>
2020-01-02
</publication_date>

<priority_date>
2018-07-02
</priority_date>

<ipc_classes>
G06F16/00,G06F16/28,G06F16/93
</ipc_classes>

<assignee>
SALESFORCE.COM
</assignee>

<inventors>
DULAM, GANESWARA RAO
</inventors>

<docdb_family_id>
69008178
</docdb_family_id>

<title>
Automatic generation of regular expressions for homogenous clusters of documents
</title>

<abstract>
Regular expressions are generated automatically by receiving documents, clustering the documents, and selecting tokens from the documents which occur in each document in the cluster, and generating a regular expression for each cluster of documents using the selected tokens.
</abstract>

<claims>
1. A computer implemented method for automatically generating regular expressions, the method comprising: receiving a first plurality of documents; generating a first plurality of homogenous clusters using the first plurality of documents, wherein each of the first plurality of documents is included in only one of the clusters, wherein each of the clusters includes one or more of the documents and wherein the documents in each cluster share certain characteristics more closely with each other than the documents of the other clusters in the first plurality of clusters; for each cluster in the first plurality of clusters: selecting a single document from the cluster; generating a first set of tokens from only the single document selected from the cluster, wherein an order of the first set of tokens is preserved from the single document selected from the cluster; identifying a second set of tokens in the first set of tokens that occur in each of the other documents in the cluster in the preserved order; generating a regular expression for the cluster using the second set of tokens and the preserved order; and providing the regular expressions for each of the first plurality of clusters to a document classifier.
2. The method of claim 1, further comprising: attempting to classify a second plurality of documents into the first plurality of clusters using the regular expressions; and adding each those of the second plurality of documents that were successfully classified into one of the first plurality of clusters to that cluster.
3. The method of claim 2, further comprising: clustering those of the second plurality of documents that were not successfully classified into one of the first plurality of clusters into a second plurality of clusters; generating a regular expression for each of the second plurality of clusters; and providing the regular expression for each of the second plurality of clusters to the document classifier.
4. The method of claim 3, wherein for each cluster in the first plurality of clusters and the second plurality of clusters, the generating the regular expression for the cluster comprises generating only one for the cluster, and wherein the providing the regular expression for each of the first plurality of clusters and the second plurality of clusters is limited to one per cluster.
5. The method of claim 3, wherein the first plurality of documents includes error messages from a first test and the second plurality of documents include error messages from a second test, further comprising: generating a new bug notification for each cluster in the second plurality of clusters.
6. The method of claim 5, further comprising: determining that a quantity of remaining documents in the second plurality of documents exceeds a clustering threshold before the clustering.
7. The method of claim 3, wherein the first plurality of documents are error messages from a first test and the second plurality of documents are error messages from a second test, wherein, for each cluster in the first plurality of clusters and the second plurality of clusters, the generating the regular expression for the cluster comprises generating a single regular expression that includes two or more ordered alphanumeric strings and that every document in the cluster will match and wherein each cluster in the first plurality of clusters and the second plurality of clusters corresponds to one or more related software errors.
8. The method of claim 1, wherein the selecting a single document from the cluster includes randomly selecting the single document from the cluster.
9. The method of claim 1, wherein the generating a regular expression comprises inserting a wildcard before, between, and after each token in the second set of tokens.
10. A non-transitory machine-readable storage medium that provides instructions that, if executed by a processor, will cause said processor to perform operations comprising: receiving a first plurality of documents; generating a first plurality of homogenous clusters using the first plurality of documents, wherein each of the first plurality of documents is included in only one of the clusters, wherein each of the clusters includes one or more of the documents and wherein the documents in each cluster share certain characteristics more closely with each other than the documents of the other clusters in the first plurality of clusters; for each cluster in the first plurality of clusters: selecting a single document from the cluster; generating a first set of tokens from only the single document selected from the cluster, wherein an order of the first set of tokens is preserved from the single document selected from the cluster; identifying a second set of tokens in the first set of tokens that occur in each of the other documents in the cluster in the preserved order; generating a regular expression for the cluster using the second set of tokens and the preserved order; and providing the regular expressions for each of the first plurality of clusters to a document classifier.
11. The non-transitory machine-readable storage medium of claim 10, the operations further comprising: attempting to classify a second plurality of documents into the first plurality of clusters using the regular expressions; and adding each those of the second plurality of documents that were successfully classified into one of the first plurality of clusters to that cluster.
12. The non-transitory machine-readable storage medium of claim 11, the operations further comprising: clustering those of the second plurality of documents that were not successfully classified into one of the first plurality of clusters into a second plurality of clusters; generating a regular expression for each of the second plurality of clusters; and providing the regular expression for each of the second plurality of clusters to the document classifier.
13. The non-transitory machine-readable storage medium of claim 12, wherein for each cluster in the first plurality of clusters and the second plurality of clusters, the generating the regular expression for the cluster comprises generating only one for the cluster, and wherein the providing the regular expression for each of the first plurality of clusters and the second plurality of clusters is limited to one per cluster.
14. The non-transitory machine-readable storage medium of claim 12, wherein the first plurality of documents includes error messages from a first test and the second plurality of documents include error messages from a second test, further comprising: generating a new bug notification for each cluster in the second plurality of clusters.
15. The non-transitory machine-readable storage medium of claim 14, the operations further comprising: determining that a quantity of remaining documents in the second plurality of documents exceeds a clustering threshold before the clustering.
16. The non-transitory machine-readable storage medium of claim 12, wherein the first plurality of documents are error messages from a first test and the second plurality of documents are error messages from a second test, wherein, for each cluster in the first plurality of clusters and the second plurality of clusters, the generating the regular expression for the cluster comprises generating a single regular expression that includes two or more ordered alphanumeric strings and that every document in the cluster will match and wherein each cluster in the first plurality of clusters and the second plurality of clusters corresponds to one or more related software errors.
17. The non-transitory machine-readable storage medium of claim 10, wherein the selecting a single document from the cluster includes randomly selecting the single document from the cluster.
18. The non-transitory machine-readable storage medium of claim 10, wherein the generating a regular expression comprises inserting a wildcard before, between, and after each token in the second set of tokens.
19. An article of manufacture comprising: a processor; and a memory coupled to the processor, the memory storing instructions which, when executed by the processor, cause the article to: receive a first plurality of documents; generate a first plurality of homogenous clusters using the first plurality of documents, wherein each of the first plurality of documents is included in only one of the clusters, wherein each of the clusters includes one or more of the documents and wherein the documents in each cluster share certain characteristics more closely with each other than the documents of the other clusters in the first plurality of clusters; for each cluster in the first plurality of clusters: select a single document from the cluster; generate a first set of tokens from only the single document selected from the cluster, wherein an order of the first set of tokens is preserved from the single document selected from the cluster; identify a second set of tokens in the first set of tokens that occur in each of the other documents in the cluster in the preserved order; generate a regular expression for the cluster using the second set of tokens and the preserved order; and provide the regular expressions for each of the first plurality of clusters to a document classifier.
20. The article of claim 19, the instructions further causing the article to: attempt to classify a second plurality of documents into the first plurality of clusters using the regular expressions; add each those of the second plurality of documents that were successfully classified into one of the first plurality of clusters to that cluster; cluster those of the second plurality of documents that were not successfully classified into one of the first plurality of clusters into a second plurality of clusters; generate a regular expression for each of the second plurality of clusters; and provide the regular expression for each of the second plurality of clusters to the document classifier.
</claims>
</document>
