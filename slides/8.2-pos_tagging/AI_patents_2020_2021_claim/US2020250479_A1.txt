<document>

<filing_date>
2019-02-04
</filing_date>

<publication_date>
2020-08-06
</publication_date>

<priority_date>
2019-02-04
</priority_date>

<ipc_classes>
G06F17/16,G06F7/78,G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
QIAN, HAIFENG
WEGMAN, MARK
</inventors>

<docdb_family_id>
71837534
</docdb_family_id>

<title>
L2-NONEXPANSIVE NEURAL NETWORKS
</title>

<abstract>
A training method, system, and computer program product include computing a matrix norm over a product of a weight matrix and a transpose of the weight matrix and using the matrix norm to constrain the L2 non-expansive neural network.
</abstract>

<claims>
1. A computer-implemented training method for an L2 non-expansive neural network, the method comprising: computing a matrix norm over a product of a weight matrix and a transpose of the weight matrix; and using the matrix norm to constrain the L2 non-expansive neural network.
2. The method of claim 1, wherein the matrix norm includes at least summing a non-linear function of rows or columns.
3. The method of claim 2, wherein the non-linear function comprises an absolute value or a by taking to a power.
4. The method of claim 1, wherein the matrix norm is constrained such that the computed matrix norm does not exceed a value of one, where one is an integer.
5. The method of claim 1, wherein the matrix norm is constrained such that the computed matrix norm does not exceed one at an end of the training, where one is an integer.
6. The method of claim 1, wherein the matrix norm is constrained such that the computed matrix norm exceeds a fixed constant at an end of the training by a tolerance amount set by a user.
7. The method of claim 1, embodied in a cloud-computing environment.
8. A computer program product for training an L2 non-expansive neural network, the computer program product comprising a computer-readable storage medium having program instructions embodied therewith, the program instructions executable by a computer to cause the computer to perform: computing a matrix norm over a product of a weight matrix and a transpose of the weight matrix; and using the matrix norm to constrain the L2 non-expansive neural network.
9. The computer program product of claim 8, wherein the matrix norm includes at least summing a non-linear function of rows or columns.
10. The computer program product of claim 9, wherein the non-linear function comprises an absolute value or a squaring.
11. The computer program product of claim 8, wherein the matrix norm is constrained such that the computed matrix norm does not exceed a value of one, where one is an integer.
12. The computer program product of claim 8, wherein the matrix norm is constrained such that the computed matrix norm does not exceed one at an end of the training, where one is an integer.
13. The computer program product of claim 8, wherein the matrix norm is constrained such that the computed matrix norm exceeds a fixed constant at an end of the training by a tolerance amount set by a user.
14. A training system for an L2 non-expansive neural network, the system comprising: a processor; and a memory, the memory storing instructions to cause the processor to perform: computing a matrix norm over a product of a weight matrix and a transpose of the weight matrix; and using the matrix norm to constrain the L2 non-expansive neural network.
15. The system of claim 14, wherein the matrix norm includes at least summing a non-linear function of rows or columns.
16. The system of claim 15, wherein the non-linear function comprises an absolute value or a squaring.
17. The system of claim 14, wherein the matrix norm is constrained such that the computed matrix norm does not exceed a value of one, where one is an integer.
18. The system of claim 14, wherein the matrix norm is constrained such that the computed matrix norm does not exceed one at an end of the training, where one is an integer.
19. The system of claim 14, wherein the matrix norm is constrained such that the computed matrix norm exceeds a fixed constant at an end of the training by a tolerance amount set by a user.
20. The system of claim 14, embodied in a cloud-computing environment.
</claims>
</document>
