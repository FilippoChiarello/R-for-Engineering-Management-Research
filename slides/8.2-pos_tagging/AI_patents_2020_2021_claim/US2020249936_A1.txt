<document>

<filing_date>
2020-01-30
</filing_date>

<publication_date>
2020-08-06
</publication_date>

<priority_date>
2019-02-04
</priority_date>

<ipc_classes>
G06F8/41,G06F8/656,H04L29/08
</ipc_classes>

<assignee>
BARFIELD, JR., JAMES RONALD
</assignee>

<inventors>
BARFIELD, JR., JAMES RONALD
</inventors>

<docdb_family_id>
71836426
</docdb_family_id>

<title>
METHOD AND SYSTEM FOR A PLATFORM FOR API BASED USER SUPPLIED ALGORITHM DEPLOYMENT
</title>

<abstract>
A system for deploying user supplied algorithms that inserts the user supplied algorithms and creates application program interfaces within client or server devices. The user supplied algorithm is analyzed and software dependencies are determined along with computation that influences the systems decision to deploy the algorithm for inference on the device or in a cloud server device. Server type selection is determined based on analyst of the user supplied algorithm by the system and the user supplied algorithm is deployed in a selectable efficient manner. Using the user supplied algorithm, a sample a sample set of software is generated from analyst and deployment through an application program interface. The sample set of software can be used by the user to demonstrate the algorithm function in technologies like TOT devices, Smartphone apps or websites.
</abstract>

<claims>
1. A method, comprising: generating a dataset of dependencies that corresponds to analyzing a set of user supplied algorithm code and comparing function names to dependency libraries determining software dependencies automatically from analyzing a user supplied algorithm code; creating an application program interface based on naming convention and data; creating code in an interface code document and imports based on software file names; determining code language based on file name extensions and text attributes in the user supplied algorithm code; interfacing code for loading a software initialization and to operate on a data for a user supplied algorithm code computer software; calculating the computation of a user supplied algorithm; deploying software code into one either a server with algorithm acceleration hardware set, CPU server set, or serverless environment from feedback by a user and a user registering a choice for choice.
2. The method of claim 1 wherein a deploying software code is performed by access with a user's login credentials in a cloud server user interface.
3. The method of claim 1 wherein a determination of the computation of the user supplied algorithm results in the method selecting graphics processing unit or algorithm hardware acceleration system from measured computation.
4. The method of claim 1 wherein a data type choice is selected by a user corresponding to an input and output of an application program interface and the user supplied algorithm is interfaced with the selected data type to the application program interface.
5. The method of claim 1 wherein an analysis is performed to compare systems with algorithm hardware acceleration to CPU based servers, and to serverless for a calculation of latency of the user supplied algorithm to be performed.
6. The method of claim 1 wherein an included configuration of automatic scaling of servers or software threads based on provided computation requirements of the user supplied algorithm may be performed.
7. The method of claim 1 wherein a user is informed of latency of the user supplied algorithm for different deployment platforms and the user may make a choice to deploy in a one of the deployment platforms as specified by the user.
8. The method of claim 1 wherein the user supplied algorithm is tested for inference speed and includes user defined algorithm model weight sets that are tested with different model weights with the weights being represented by different numerical precisions.
9. A method, comprising: generating a containerized software from a user supplied algorithm with an input to the user supplied algorithm defined by a set of instructions code or algorithm model that is specified by a user through a user interface, wherein the user supplied algorithm takes data from an application programming interface defined in the setup of the selection of the containerized user supplied algorithm; determining based on the selected data a software set to generate a sample set of software to demonstrate usage of the application programming interface and user supplied algorithm with specified data by a user.
10. The method of claim 9 wherein the specified data by a user is an image, video, audio, text, document, IOT sensors, sensor data, or LIDAR data.
11. The method of claim 9 wherein the sample set of software produced is a mobile phone application.
12. The method of claim 9 wherein the sample set of software produced is an image capture mobile phone application that displays an altered by the user supplied algorithm image output.
13. The method of claim 9 wherein the user supplied algorithm is a deep learning algorithm.
14. A system, performing: A user inputted algorithm function defined by a set of instructions code or algorithm model encompassing of one or more client devices and one or more server devices: comprising one or more client devices or server devices; determining based on a criteria of a client device a calculated algorithm computation size, client computation ability, server computation ability, client device battery life, or client device algorithm acceleration hardware with ability to perform algorithm computation; determining if to perform user supplied algorithm function on the device or to perform user supplied algorithm function one a networked in a server device.
15. The method of claim 14 wherein some client devices have algorithm acceleration hardware and some client device do not have algorithm acceleration hardware.
16. The method of claim 14 wherein the client device performs the user supplied algorithm function if a device battery life measurement is above a predetermined threshold.
17. The method of claim 14 wherein the client device performs the user supplied algorithm function if a device has the presence of algorithm acceleration hardware.
18. The method of claim 14 wherein the client device determines based on device model number to perform algorithm function on device instead of in a server.
19. The method of claim 14 wherein the client device downloads a user supplied algorithm from a server if it is determined that the device can perform the algorithm function based on criteria.
20. The method of claim 14 wherein the device interfaces to a server with a generated client application program interface and server application program interface.
</claims>
</document>
