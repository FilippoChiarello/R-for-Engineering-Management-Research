<document>

<filing_date>
2019-12-31
</filing_date>

<publication_date>
2020-12-01
</publication_date>

<priority_date>
2019-12-31
</priority_date>

<ipc_classes>
G06F16/36,G06F9/54
</ipc_classes>

<assignee>
FUJITSU
</assignee>

<inventors>
BAHRAMI, MEHDI
CHEN WEIPENG
</inventors>

<docdb_family_id>
71786759
</docdb_family_id>

<title>
Generating application programming interface knowledge graphs
</title>

<abstract>
A method may include obtaining first API documentation associated with a first API and second API documentation associated with a second API. The method may include mining the first API documentation to extract a first plurality of semantic triples and mining the second API documentation to extract a second plurality of semantic triples. The method may include selecting a first subset of semantic triples from the first plurality of semantic triples and a second subset of semantic triples from the second plurality of semantic triples. The method may include generating a first ontology based on the first API documentation and the first subset of semantic triples. The method may include generating a second ontology. The method may include correlating the first ontology with the second ontology. The method may include generating a knowledge graph of the first API and the second API.
</abstract>

<claims>
1. A method comprising: obtaining first application programming interface (API) documentation associated with a first API; obtaining second API documentation associated with a second API; mining the first API documentation to extract a first plurality of semantic triples; mining the second API documentation to extract a second plurality of semantic triples; selecting a first subset of semantic triples from the first plurality of semantic triples; selecting a second subset of semantic triples from the second plurality of semantic triples; generating a first ontology based on the first API documentation and the first subset of semantic triples, the first ontology including one or more first concepts associated with the first API, one or more first attributes associated with the one or more first concepts, and one or more first taxonomical relationships between the one or more first concepts; generating a second ontology based on the second API documentation and the second subset of semantic triples, the second ontology including one or more second concepts associated with the second API, one or more second attributes associated with the one or more second concepts, and one or more second taxonomical relationships between the one or more second concepts; correlating the first ontology with the second ontology based on the one or more first concepts of the first ontology and the one or more second concepts of the second ontology; based on the first ontology, the second ontology, and the correlating the first ontology with the second ontology, generating a knowledge graph of the first API and the second API; obtaining a natural language user query provided by a user; converting the natural language user query to a semantic user query using natural language understanding; searching the knowledge graph using the semantic user query to identify an API call as a response to the natural language user query; executing the API call using the knowledge graph and the natural language user query to provide a result for the natural language user query; and providing the result to the user.
2. The method of claim 1, wherein the semantic triples of the first subset of semantic triples are selected as first objects and the semantic triples of the second subset of semantic triples are selected as second objects, further comprising: obtaining a first open API specification (OAS) associated with the first API and wherein the first ontology is further based on the first OAS; obtaining a second OAS associated with the second API and wherein the second ontology is further based on the second OAS; using the first OAS, generating first instances of the first objects, the first instances being examples of respective first objects; and using the second OAS, generating second instances of the second objects, the second instances being examples of respective second objects, wherein the generating the knowledge graph of the first API and the second API comprises generating the knowledge graph of the first API and the second API based on the first ontology, the second ontology, the first instances, the second instances, and the correlating the first ontology with the second ontology.
3. The method of claim 1, wherein each semantic triple of the first plurality of semantic triples includes a subject, a predicate and an object and wherein selecting the first subset of semantic triples from the first plurality of semantic triples comprises selecting the first subset of semantic triples based on a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple.
4. The method of claim 3, wherein the selecting the first subset of semantic triples comprises selecting the first subset of semantic triples in response to a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple satisfying a first threshold.
5. The method of claim 1, wherein the correlating the first ontology with the second ontology comprises using an unsupervised learning process to find similarities between the one or more first concepts and the one or more second concepts.
6. The method of claim 1, wherein the first API documentation is unstructured or semi-structured information.
7. A non-transitory computer-readable medium having encoded therein programming code executable by a processor to perform operations comprising: obtaining first application programming interface (API) documentation associated with a first API; obtaining second API documentation associated with a second API; mining the first API documentation to extract a first plurality of semantic triples; mining the second API documentation to extract a second plurality of semantic triples; selecting a first subset of semantic triples from the first plurality of semantic triples; selecting a second subset of semantic triples from the second plurality of semantic triples; generating a first ontology based on the first API documentation and the first subset of semantic triples, the first ontology including one or more first concepts associated with the first API, one or more first attributes associated with the one or more first concepts, and one or more first taxonomical relationships between the one or more first concepts; generating a second ontology based on the second API documentation and the second subset of semantic triples, the second ontology including one or more second concepts associated with the second API, one or more second attributes associated with the one or more second concepts, and one or more second taxonomical relationships between the one or more second concepts; correlating the first ontology with the second ontology based on the one or more first concepts of the first ontology and the one or more second concepts of the second ontology; based on the first ontology, the second ontology, and the correlating the first ontology with the second ontology, generating a knowledge graph of the first API and the second API; obtaining a natural language user query provided by a user; converting the natural language user query to a semantic user query using natural language understanding; searching the knowledge graph using the semantic user query to identify an API call as a response to the natural language user query; executing the API call using the knowledge graph and the natural language user query to provide a result for the natural language user query; and providing the result to the user.
8. The non-transitory computer-readable medium of claim 7, wherein the semantic triples of the first subset of semantic triples are selected as first objects and the semantic triples of the second subset of semantic triples are selected as second objects and wherein the operations further comprise: obtaining a first open API specification (OAS) associated with the first API and wherein the first ontology is further based on the first OAS; obtaining a second OAS associated with the second API and wherein the second ontology is further based on the second OAS; using the first OAS, generating first instances of the first objects, the first instances being examples of respective first objects; and using the second OAS, generating second instances of the second objects, the second instances being examples of respective second objects, wherein the generating the knowledge graph of the first API and the second API comprises generating the knowledge graph of the first API and the second API based on the first ontology, the second ontology, the first instances, the second instances, and the correlating the first ontology with the second ontology.
9. The non-transitory computer-readable medium of claim 7, wherein each semantic triple of the first plurality of semantic triples includes a subject, a predicate and an object and wherein selecting the first subset of semantic triples from the first plurality of semantic triples comprises selecting the first subset of semantic triples based on a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple.
10. The non-transitory computer-readable medium of claim 9, wherein the selecting the first subset of semantic triples comprises selecting the first subset of semantic triples in response to a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple satisfying a first threshold.
11. The non-transitory computer-readable medium of claim 7, wherein the correlating the first ontology with the second ontology comprises using an unsupervised learning process to find similarities between the one or more first concepts and the one or more second concepts.
12. The non-transitory computer-readable medium of claim 7, wherein the first API documentation is unstructured or semi-structured information.
13. A system comprising: one or more processors; and one or more computer-readable media configured to store instructions that in response to being executed by the one or more processors cause the system to perform operations, the operations comprising: obtaining first application programming interface (API) documentation associated with a first API; obtaining second API documentation associated with a second API; mining the first API documentation to extract a first plurality of semantic triples; mining the second API documentation to extract a second plurality of semantic triples; selecting a first subset of semantic triples from the first plurality of semantic triples; selecting a second subset of semantic triples from the second plurality of semantic triples; generating a first ontology based on the first API documentation and the first subset of semantic triples, the first ontology including one or more first concepts associated with the first API, one or more first attributes associated with the one or more first concepts, and one or more first taxonomical relationships between the one or more first concepts; generating a second ontology based on the second API documentation and the second subset of semantic triples, the second ontology including one or more second concepts associated with the second API, one or more second attributes associated with the one or more second concepts, and one or more second taxonomical relationships between the one or more second concepts; correlating the first ontology with the second ontology based on the one or more first concepts of the first ontology and the one or more second concepts of the second ontology; based on the first ontology, the second ontology, and the correlating the first ontology with the second ontology, generating a knowledge graph of the first API and the second API; obtaining a natural language user query provided by a user; converting the natural language user query to a semantic user query using natural language understanding; searching the knowledge graph using the semantic user query to identify an API call as a response to the natural language user query; executing the API call using the knowledge graph and the natural language user query to provide a result for the natural language user query; and providing the result to the user.
14. The system of claim 13, wherein the semantic triples of the first subset of semantic triples are selected as first objects and the semantic triples of the second subset of semantic triples are selected as second objects and wherein the operations further comprise: obtaining a first open API specification (OAS) associated with the first API and wherein the first ontology is further based on the first OAS; obtaining a second OAS associated with the second API and wherein the second ontology is further based on the second OAS; using the first OAS, generating first instances of the first objects, the first instances being examples of respective first objects; and using the second OAS, generating second instances of the second objects, the second instances being examples of respective second objects, wherein the generating the knowledge graph of the first API and the second API comprises generating the knowledge graph of the first API and the second API based on the first ontology, the second ontology, the first instances, the second instances, and the correlating the first ontology with the second ontology.
15. The system of claim 13, wherein each semantic triple of the first plurality of semantic triples includes a subject, a predicate and an object and wherein selecting the first subset of semantic triples from the first plurality of semantic triples comprises selecting the first subset of semantic triples based on a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple.
16. The system of claim 15, wherein the selecting the first subset of semantic triples comprises selecting the first subset of semantic triples in response to a frequency of occurrence in the first API documentation and the second API documentation of a respective predicate of a respective semantic triple satisfying a first threshold.
17. The system of claim 13, wherein the correlating the first ontology with the second ontology comprises using an unsupervised learning process to find similarities between the one or more first concepts and the one or more second concepts.
</claims>
</document>
