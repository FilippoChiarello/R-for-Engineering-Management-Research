<document>

<filing_date>
2019-12-10
</filing_date>

<publication_date>
2020-06-11
</publication_date>

<priority_date>
2018-12-10
</priority_date>

<ipc_classes>
G05B13/02,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
CALTECH (CALIFORNIA INSTITUTE OF TECHNOLOGY)
</assignee>

<inventors>
ANANDKUMAR, ANIMASHREE
CHUNG, SOON-JO
O'CONNELL, MICHAEL
SHI, GUANYA
SHI, XICHEN
YUE, YISONG
</inventors>

<docdb_family_id>
70971630
</docdb_family_id>

<title>
Systems and Methods for Robust Learning-Based Control During Forward and Landing Flight Under Uncertain Conditions
</title>

<abstract>
Systems and methods for learning based control in accordance with embodiments of the invention are illustrated. One embodiment includes a method for training an adaptive controller. The method includes steps for receiving a set of training data that includes several training samples, wherein each training sample includes a state and a true uncertain effect value. The method includes steps for computing an uncertain effect value based on the state, computing a set of one or more losses based on the true uncertain effect value and the computed uncertain effect value, and updating the adaptive controller based on the computed set of losses.
</abstract>

<claims>
1. A method for training an adaptive controller, the method comprising: receiving a set of training data comprising a plurality of training samples, wherein each training sample comprises a state and a true uncertain effect value; computing an uncertain effect value based on the state; computing a set of one or more losses based on the true uncertain effect value and the computed uncertain effect value; and updating the adaptive controller based on the computed set of losses.
2. The method of claim claim 1, wherein the true uncertain effect value is a disturbance force caused by at least one of the group consisting of ground effects and wind conditions.
3. The method of claim claim 1, wherein the adaptive controller comprises a set of one or more deep neural network (DNNs).
4. The method of claim claim 3, wherein updating the adaptive controller comprises backpropagating the computed set of losses through the set of DNNs.
5. The method of claim claim 3, wherein updating the adaptive controller comprises updating at least one layer of the set of DNNs using spectrally normalized weight matrices.
6. The method of claim claim 3, wherein updating the adaptive controller comprises updating each layer of the set of DNNs using spectrally normalized weight matrices to constrain the Lipschitz constant of the set of DNNs.
7. The method of claim claim 1, wherein computing the set of losses comprises computing at least one of a group consisting of a position tracking error and a prediction error.
8. The method of claim claim 1, wherein the desired state comprises at least one of the group consisting of an attitude, a global position, and a velocity.
9. The method of claim claim 1, wherein computing an uncertain effect value of an environment comprises determining a set of kernel functions that approximate the uncertain effect value.
10. The method of claim claim 1, wherein: the adaptive controller comprises a set of one or more deep neural networks (DNNs) with Rectified Linear Units (ReLU) activation; computing an uncertain effect value of an environment comprises determining a set of kernel functions that approximate the uncertain effect value utilizing the set of DNNs; and updating the adaptive controller comprises updating each layer of the set of DNNs using spectrally normalized weight matrices to constrain the Lipschitz constant of the set of DNNs.
11. A method for online adaptation of an adaptive controller, the method comprising: receiving a set of inputs comprising a desired state for a quadrotor; predicting uncertain effects using a model comprising a plurality of layers; generating control inputs based on the predicted uncertain effects; receiving updated state; computing a set of one or more losses based on the updated state and the desired state; and updating a subset of the plurality of layers of the model based on the computed loss.
12. The method of claim claim 11, wherein the uncertain effects comprise a disturbance force caused by at least one of the group consisting of ground effects and wind conditions.
13. The method of claim claim 11, wherein the model comprises a set of one or more deep neural networks (DNNs), wherein updating the model comprises backpropagating the computed set of losses through the set of DNNs.
14. The method of claim claim 13, wherein updating the model comprises updating weights for only one layer of the set of DNNs.
15. The method of claim claim 14, wherein updating weights for the only one layer comprises using spectrally normalized weight matrices.
16. The method of claim claim 13, wherein updating the model comprises updating each layer of the set of DNNs using spectrally normalized weight matrices to constrain the Lipschitz constant of the set of DNNs.
17. The method of claim claim 11, wherein computing the set of losses comprises computing at least one of a group consisting of a position tracking error and a prediction error.
18. The method of claim claim 11, wherein the input comprises a desired state for the quadrotor and a current state for the quadrotor, wherein the state for the quadrotor comprises at least one of the group consisting of an attitude, a global position, and a velocity.
19. The method of claim claim 11, wherein predicting uncertain effects comprises determining a set of kernel functions that approximate the uncertain effects.
20. The method of claim claim 11, wherein: the model comprises a set of one or more deep neural networks (DNNs) with Rectified Linear Units (ReLU) activation; predicting an uncertain effects comprises determining a set of kernel functions that approximate the uncertain effect value utilizing the set of DNNs; and updating the adaptive controller comprises updating each layer of the set of DNNs using spectrally normalized weight matrices to constrain the Lipschitz constant of the set of DNNs.
</claims>
</document>
