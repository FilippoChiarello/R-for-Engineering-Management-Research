<document>

<filing_date>
2018-08-23
</filing_date>

<publication_date>
2020-10-27
</publication_date>

<priority_date>
2017-08-29
</priority_date>

<ipc_classes>
G06F17/27,G06F21/56,G06F40/205,G06N20/00
</ipc_classes>

<assignee>
TARGET BRANDS
</assignee>

<inventors>
GAUSTAD, EVAN
</inventors>

<docdb_family_id>
65435940
</docdb_family_id>

<title>
Computer security system with malicious script document identification
</title>

<abstract>
In some implementations, a method performed by data processing apparatuses includes receiving a new script document in a scripting language that has not yet been classified; identifying features of the new script document, wherein at least some of the features are script-language commands contained in the new script document; generating first feature-data for the new script document, the first feature-data comprising measures of frequency of occurrences of the features within the new script document; and assigning a classification to the new script document based on a comparison of the first feature-data with training data that comprises second feature-data for known-malicious script documents and third feature-data for known-benign script documents.
</abstract>

<claims>
1. A method for classifying unknown scripts as either benign or malicious performed by data processing apparatuses, the method comprising: receiving a new script document in a scripting language that has not yet been classified; identifying features of the new script document, wherein at least some of the features are script-language commands contained in the new script document, wherein identifying features of the new script document comprises: identifying all instances of reserve words specified by a language of the new script document; and generating, for each reserve word of the new script document, a count of a number of instances of the reserve word in the new script document; generating first feature-data for the new script document, the first feature data comprising measures of frequency of occurrences of the features within the new script document, wherein generating the first feature-data for the new script document comprises dividing each count by a total number of reserve words in the new script document; assigning a classification to the new script document based on a comparison of the first feature-data with training data that comprises second feature-data for known-malicious script documents and third feature-data for known-benign script documents; and responsive to assigning a classification of malicious to the new script document, performing a corrective action to the new script document, wherein the corrective action comprises at least one of the group consisting of deleting the new script document, quarantining the new script document, and transmitting a report about the new script document.
2. The method of claim 1, wherein generating the first feature-data for the new script document comprises creating a plurality of metrics that each measure a different feature of the new script document.
3. The method of claim 1, the method further comprising: accessing a corpus of known-malicious script documents from a malware reporting service; and generating the second feature-data for known-malicious script documents using the corpus of known-malicious script documents.
4. The method of claim 1, the method further comprising: generating an index value for the new script document, the index value comprising at least some of the features of the new script document.
5. The method of claim 4, wherein the index value comprises a plurality of the features that have the highest corresponding measures of frequency.
6. The method of claim 4, wherein the index value is a string of characters created by concatenating names of a plurality of the features that have the highest corresponding measures of frequency.
7. The method of claim 1, further comprising: generating first feature scores for each of the features identified in the new script document based on a comparison of the first feature-data with features contained in a corpus of scripting documents in the scripting language, wherein the classification is assigned to the new script document further based on a comparison of the first feature scores with training data that comprises second feature scores for the known-malicious script documents and third feature scores for the known-benign script documents.
8. The method of claim 7, wherein the first feature scores indicate a significance of each of the features relative to both the new script document and the corpus of scripting documents.
9. The method of claim 1, wherein the features identified in the new script document include one or more of the following that have been genericized: named variables, named functions, and named parameters.
10. The method of claim 1, wherein the features identified in the new script document include one or more functional blocks of code contained in the new script document.
11. The method of claim 1, wherein the features identified in the new script document include one or more of the following script-level features in the new script document: a number of lines of code, a number of comments, a number of functions, a number of shell or system-level instructions, and an entropy calculation.
12. The method of claim 1, wherein the features identified in the new script document include metadata associated with the new script document including one or more of the following: header information from an email message containing the new script document, metadata from another document containing the new script document, sender information, recipient information.
13. The method of claim 1, further comprising: identifying metadata features of the new script document, accessing a metadata classification model that is generated based on training data including metadata from the known-benign script documents and the known-malicious script document; assigning a metadata-based classification to the new script document based on a comparison of the metadata features with the metadata classification model; and determining a combined classification for the new script document based on the classification and the metadata-based classification.
14. The method of claim 13; wherein the combined classification is determined based on corresponding confidence scores for the classification and the metadata-based classification.
15. The method of claim 1, wherein the corrective action comprises deleting the new script document.
16. The method of claim 1, wherein the corrective action comprises quarantining the new script document.
17. The method of claim 1, wherein the corrective action comprises transmitting the report about the new script document.
18. A method for classifying unknown scripts as either benign or malicious performed by data processing apparatuses, the method comprising: receiving a new script document that has not been classified as malicious or benign; identifying features of the new script document, wherein at least some of the features are script-language commands that are present in the new script document, wherein identifying features of the new script document comprises: identifying all instances of reserve words specified by a language of the new script document; and generating, for each reserve word of the new script document, a count of a number of instances of the reserve word in the new script document; generating first feature-data for the new script document, the first feature data comprising measures of frequency of occurrences of the features within the new script document, wherein generating the first feature-data for the new script document comprises dividing each count by a total number of reserve words in the new script document; determining a significance-value for each of the features by comparing the first feature-data with training data that comprises second feature-data for known malicious script documents and third feature-data for known-benign script documents; selecting a proper-subset of the features that have the highest corresponding significance-value; generating an index value for the new script document, the index value comprising the selected features; and providing a search interface configured to permit searching and identification of different scripts using similar malware attacks based on the index value.
19. The method of claim 18, wherein the index value is a string of characters created by concatenating names of the selected features.
20. A computer system for classifying unknown scripts as either benign or malicious comprising: a data processing apparatuses including one or more processors, memory, and a storage device storing instructions that, when executed, cause the one or more processors to perform operations comprising: receiving a new script document in a scripting language that has not yet been classified; identifying features of the new script document, wherein at least some of the features are script-language commands contained in the new script document, wherein identifying features of the new script document comprises: identifying all instances of reserve words specified by a language of the new script document; and generating, for each reserve word of the new script document, a count of a number of instances of the reserve word in the new script document; generating first feature-data for the new script document, the first feature-data comprising measures of frequency of occurrences of the features within the new script document, wherein generating the first feature-data for the new script document comprises dividing each count by a total number of reserve words in the new script document; assigning a classification to the new script document based on a comparison of the first feature-data with training data that comprises second feature-data for known-malicious script documents and third feature-data for known-benign script documents; and responsive to assigning a classification of malicious to the new script document, performing a corrective action to the new script document, wherein the corrective action comprises at least one of the group consisting of deleting the new script document, quarantining the new script document, and transmitting a report about the new script document.
</claims>
</document>
