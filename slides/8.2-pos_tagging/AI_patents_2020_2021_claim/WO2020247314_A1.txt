<document>

<filing_date>
2020-06-01
</filing_date>

<publication_date>
2020-12-10
</publication_date>

<priority_date>
2019-06-06
</priority_date>

<ipc_classes>
G06F8/41
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
DIAMANT, RON
HEATON, RICHARD JOHN
HUANG, RANDY RENFU
ZHOU YU
VIVEKRAJA, Vignesh
</inventors>

<docdb_family_id>
71833434
</docdb_family_id>

<title>
REDUCING COMPUTATION IN NEURAL NETWORKS USING SELFMODIFYING CODE
</title>

<abstract>
In various implementations, provided are systems and methods for reducing neural network processing. A compiler may generate instructions from source code for a neural network having a repeatable set of operations. The instructions may include a plurality of blocks. The compiler may add an overwrite instruction to the plurality of blocks that, when executed by one or more execution engines, triggers an overwrite action. The overwrite action causes the instructions of subsequent blocks to be overwritten with NOP instructions. The overwrite action is triggered only when a condition is satisfied.
</abstract>

<claims>
WHAT IS CLAIMED IS:
1. A method comprising:
generating, by a compiler for a neural network, a plurality of blocks of instructions from source code, wherein each block of instructions includes a set of instructions that are common to each block, and wherein the set of instructions are performed up to a number of iterations based on a condition;
generating an overwrite instruction for a block of instructions in the plurality of blocks, wherein execution of the overwrite instruction triggers an overwrite action that causes the instructions of a subsequent block of the plurality of blocks to be overwritten with no operation (NOP) instructions; and
adding the overwrite instruction to the block of instructions.
2. The method of claim 1, wherein the overwrite action causes a direct memory access (DMA) engine to overwrite the instructions of the subsequent block with the NOP instructions.
3. The method of any of claims 1-2, wherein the overwrite instruction is added at an end of the block of instructions.
4. The method of any of claims 1-3, wherein execution of the overwrite instruction triggers the overwrite action when the condition is satisfied.
5. The method of any of claims 1-4, wherein the set of instructions corresponds to a repeatable set of operations performed in a node or a layer of the neural network.
6. The method of any of claims 1-5, further comprising: generating an evaluation instruction that, when executed, causes a determination of whether the condition is satisfied; and
adding the evaluation instruction to the block of instructions.
7. The method of any of claims 1-6, wherein the overwrite action causes the evaluation instruction to be overwritten with a NOP instruction in the subsequent block.
8. The method of any of claims 1-7, further comprising: identifying, by the compiler, a repeatable set of operations in the source code for the neural network, wherein the overwrite instruction is generated in response to identifying the repeatable set of operations.
9. The method of any of claims 1-8, wherein the compiler adds the overwrite instruction to each of the plurality of blocks.
10. A non-transitory computer-readable storage medium comprising instructions that, when executed by a processor, cause the processor to perform operations comprising:
generating, by a compiler for a neural network, a plurality of blocks of instructions from source code, wherein each block of instructions includes a set of instructions that are common to each block, and wherein the set of instructions are performed up to a number of iterations based on a condition;
generating an overwrite instruction for a block of instructions in the plurality of blocks, wherein execution of the overwrite instruction triggers an overwrite action that causes the instructions of a subsequent block of the plurality of blocks to be overwritten with no operation (NOP) instructions; and
adding the overwrite instruction to the block of instructions.
11. The non-transitory computer-readable storage medium of claim 10, wherein the overwrite action causes a direct memory access (DMA) engine to overwrite the instructions of the subsequent blocks with the NOP instructions.
12. The non-transitory computer-readable storage medium of any of claims 10-11, wherein each block of instructions further includes an evaluation instruction added by the compiler to determine whether the condition is satisfied.
13. The non-transitory computer-readable storage medium of any of claims 10-12, wherein the evaluation instruction precedes the overwrite instruction in each block of instructions.
14. The non-transitory computer-readable storage medium of any of claims 10-13, wherein the overwrite action causes the evaluation instruction of the subsequent blocks to be overwritten with a NOP instruction.
15. A system comprising:
one or more processors; and a computer-readable medium comprising instructions that, when executed by the one or more processors, cause the one or more processors to perform operations comprising:
generating, by a compiler for a neural network, a plurality of blocks of instructions from source code, wherein each block of instructions includes a set of instructions that are common to each block, and wherein the set of instructions are performed up to a number of iterations based on a condition;
generating an overwrite instruction for a block of instructions in the plurality of blocks, wherein execution of the overwrite instruction triggers an overwrite action that causes the instructions of a subsequent block of the plurality of blocks to be overwritten with no operation (NOP) instructions; and
adding the overwrite instruction to the block of instructions.
</claims>
</document>
