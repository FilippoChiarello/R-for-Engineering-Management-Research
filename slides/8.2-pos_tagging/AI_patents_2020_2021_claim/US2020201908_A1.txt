<document>

<filing_date>
2018-12-19
</filing_date>

<publication_date>
2020-06-25
</publication_date>

<priority_date>
2018-12-19
</priority_date>

<ipc_classes>
G06F16/901,G06F16/906,G06N20/00
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
MA, YIMING
ZHOU, MINGZHOU
ZHANG, XUHONG
LU, WEI
</inventors>

<docdb_family_id>
71098535
</docdb_family_id>

<title>
COMPACT ENTITY IDENTIFIER EMBEDDINGS
</title>

<abstract>
The disclosed embodiments provide a system for processing data. During operation, the system applies a first set of hash functions to a first entity identifier (ID) for a first entity to generate a first set of hash values. Next, the system produces a first set of intermediate vectors from the first set of hash values and a first set of lookup tables by matching each hash value in the first set of hash values to an entry in a corresponding lookup table in the first set of lookup tables. The system then performs an element-wise aggregation of the first set of intermediate vectors to produce a first embedding. Finally, the system outputs the first embedding for use by a machine learning model.
</abstract>

<claims>
1. A method, comprising: applying, by one or more computer systems, a first set of hash functions to a first entity identifier (ID) for a first entity to generate a first set of hash values; producing, by the one or more computer systems, a first set of intermediate vectors from the first set of hash values and a first set of lookup tables by matching each hash value in the first set of hash values to an entry in a corresponding lookup table in the first set of lookup tables; performing, by the one or more computer systems, an element-wise aggregation of the first set of intermediate vectors to produce a first embedding; and outputting the first embedding for use by a machine learning model.
2. The method of claim 1, further comprising: generating, by the machine learning model based on the first embedding and additional input, output that reflects a preference of the first entity for a second entity represented by the additional input.
3. The method of claim 2, further comprising: training the machine learning model to predict an outcome associated with the first entity and the second entity based on the first embedding and the additional input.
4. The method of claim 3, wherein training the machine learning model to predict the outcome associated with the first entity and the second entity based on the first embedding and the additional input comprises: updating, based on the outcome, parameters in the machine learning model for generating the first embedding from the first entity ID.
5. The method of claim 4, wherein training the machine learning model to predict the outcome associated with the first entity and the second entity based on the first embedding and the additional input further comprises: updating, based on the outcome, additional parameters in the machine learning model for generating a second embedding from a second entity ID for the second entity.
6. The method of claim 3, wherein training the machine learning model to predict the outcome associated with the first entity and the second entity based on the first embedding and the additional input comprises: updating, based on the outcome, parameters for calculating the output from the embedding and the additional input.
7. The method of claim 2, further comprising: applying a second set of hash functions to a second entity ID for the second entity to produce a second set of hash values; producing a second set of intermediate vectors from the second set of hash values and a second set of lookup tables associated with the second set of hash values; and combining the second set of intermediate vectors into a second embedding representing the additional input.
8. The method of claim 2, wherein the additional input comprises features associated with the second entity.
9. The method of claim 1, wherein the first entity comprises at least one of: a member; a job; a company; and a content item.
10. The method of claim 1, wherein the element-wise aggregation comprises an element-wise maximum of the set of intermediate vectors.
11. A system, comprising: one or more processors; and memory storing instructions that, when executed by the one or more processors, cause the system to: apply a first set of hash functions to a first entity identifier (ID) for a first entity to generate a first set of hash values; produce a first set of intermediate vectors from the first set of hash values and a first set of lookup tables by matching each hash value in the first set of hash values to an entry in a corresponding lookup table in the first set of lookup tables; perform an element-wise aggregation of the first set of intermediate vectors to produce a first embedding; and output the first embedding for use by a machine learning model.
12. The system of claim 11, wherein the memory further stores instructions that, when executed by the one or more processors, cause the system to: generate, by the machine learning model based on the first embedding and additional input, output that reflects a preference of the first entity for a second entity represented by the additional input.
13. The system of claim 12, wherein the memory further stores instructions that, when executed by the one or more processors, cause the system to: train the machine learning model to predict an outcome associated with the first entity and the second entity based on the first embedding and the additional input.
14. The system of claim 13, wherein training the machine learning model to predict the outcome associated with the first entity and the second entity based on the first embedding and the additional input comprises: updating, based on the outcome, parameters in the machine learning model for generating the first embedding from the first entity ID and generating a second embedding from a second entity ID for the second entity.
15. The method of claim 13, wherein training the machine learning model to predict the outcome associated with the first entity and the second entity based on the first embedding and the additional input comprises: updating, based on the outcome, parameters for calculating the output from the embedding and the additional input.
16. The system of claim 12, wherein the memory further stores instructions that, when executed by the one or more processors, cause the system to: apply a second set of hash functions to a second entity ID for the second entity to produce a second set of hash values; produce a second set of intermediate vectors from the second set of hash values and a second set of lookup tables associated with the second set of hash values; and combine the second set of intermediate vectors into a second embedding representing the additional input.
17. The system of claim 12, wherein the additional input comprises features associated with the second entity.
18. The system of claim 11, wherein the element-wise aggregation comprises an element-wise maximum of the set of intermediate vectors.
19. A non-transitory computer-readable storage medium storing instructions that when executed by a computer cause the computer to perform a method, the method comprising: applying a first set of hash functions to a first entity identifier (ID) for a first entity to generate a first set of hash values; producing a first set of intermediate vectors from the first set of hash values and a first set of lookup tables by matching each hash value in the first set of hash values to an entry in a corresponding lookup table in the first set of lookup tables; performing an element-wise aggregation of the first set of intermediate vectors to produce a first embedding; and outputting the first embedding for use by a machine learning model.
20. The non-transitory computer-readable storage medium of claim 19, the method further comprising: applying a second set of hash functions to a second entity ID for a second entity to produce a second set of hash values; producing a second set of intermediate vectors from the second set of hash values and a second set of lookup tables associated with the second set of hash values; combining the second set of intermediate vectors into a second embedding; and generating, by the machine learning model based on the first embedding and the second embedding, output that reflects a preference of the first entity for the second entity.
</claims>
</document>
