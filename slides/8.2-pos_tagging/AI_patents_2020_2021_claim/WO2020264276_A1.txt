<document>

<filing_date>
2020-06-26
</filing_date>

<publication_date>
2020-12-30
</publication_date>

<priority_date>
2019-06-28
</priority_date>

<ipc_classes>
B60W50/04,G05B17/00,G06F30/20
</ipc_classes>

<assignee>
ZOOX
</assignee>

<inventors>
O'MALLEY, Bryan Matthew
</inventors>

<docdb_family_id>
74061915
</docdb_family_id>

<title>
SYNTHETIC SCENARIO GENERATOR BASED ON ATTRIBUTES
</title>

<abstract>
A vehicle can capture data that can be converted into a synthetic scenario for use in a simulator. Objects can be identified in the data and attributes associated with the objects can be determined. The data can be used to generate a synthetic scenario of a simulated environment. The scenarios can include simulated objects that traverse the simulated environment and perform actions based on the attributes associated with the objects, the captured data, and/or interactions within the simulated environment. In some instances, the simulated objects can be filtered from the scenario based on attributes associated with the simulated objects and can be instantiated and/or destroyed based on triggers within the simulated environment. The scenarios can be used for testing and validating interactions and responses of a vehicle controller within the simulated environment.
</abstract>

<claims>
What is claimed is:
1. A method comprising:
receiving log data that is generated by a vehicle traversing an environment; generating, based at least in part on the log data, scenario data comprising a simulated environment;
generating, based at least in part on the scenario data, an instantiation region that is associated with a simulated object in the simulated environment;
instantiating, based at least in part the instantiation region and a position of a simulated vehicle, the simulated object;
determining a waypoint associated with the simulated object;
determining a simulation cost associated with the waypoint;
controlling, based at least in part on a simulated object controller and the waypoint, the simulated object; and
controlling, based at least in part on an autonomous vehicle controller, the simulated vehicle.
2. The method of claim 1, wherein instantiating the simulated object comprises:
determining the position of the simulated vehicle; and
determining that the position is within the instantiation region.
3. The method of claims 1 or 2, wherein controlling the simulated object comprises:
generating a candidate trajectory associated with the simulated object;
determining a candidate cost associated with a difference between the waypoint and the candidate trajectory; and
modifying the candidate trajectory to minimize the candidate cost.
4. The method of claim 3, further comprising:
determining an attribute associated with the simulated vehicle; and wherein generating the candidate trajectory is based at least in part on the attribute.
5. The method of claim 4, wherein the attribute comprises at least one of: a vehicle position;
a vehicle velocity;
a vehicle acceleration; or
a vehicle action.
6. The method of any one of claims 3 to 5, wherein the difference is a first difference, and wherein the waypoint is associated with a simulated object attribute comprising at least one of:
an object position;
an object velocity;
an object acceleration; or
an object arrival time, and
wherein determining the candidate cost comprises:
determining a second difference between the simulated object attribute and the candidate trajectory.
7. The method of any one of claims 1 to 6, wherein the position is a first position, the method further comprising:
determining a second position associated with the simulated vehicle;
generating, based at least in part on the log data, a destruction region that is associated with the simulated object; and
destroying, based at least in part on the destruction region and the second position, the simulated object.
8. A computer program product comprising coded instructions that, when run on a computer, implement a method as claimed in any one of claims 1 to 7.
9. A system comprising:
one or more processors; and
one or more non-transitory computer-readable media storing instructions executable by the one or more processors, wherein the instructions, when executed, cause the system to perform operations comprising:
receiving data that is based at least in part on sensor data captured by a vehicle traversing an environment;
generating, based at least in part on the data, a simulated scenario comprising a simulated environment;
determining, based at least in part on the data, a region that is associated with a simulated object in the simulated environment;
instantiating, based at least in part the region and a position of a simulated vehicle, the simulated object;
determining a waypoint associated with the simulated object;
controlling, based at least in part on a simulated object controller and the waypoint, the simulated object; and
controlling, based at least in part on a vehicle controller, the simulated vehicle.
10. The system of claim 9, wherein instantiating the simulated object comprises:
determining the position associated with the simulated vehicle; and determining that the position is within the region.
11. The system of claims 9 or 10, wherein controlling the simulated object comprises:
generating a candidate trajectory associated with the simulated object;
determining a candidate cost that indicates a difference between the waypoint and the candidate trajectory; and
modifying the candidate trajectory to reduce the candidate cost.
12. The system of claim 11, the operations further comprising:
determining an attribute associated with the simulated vehicle; and generating the candidate trajectory is based at least in part on the attribute; wherein the attribute comprises at least one of:
a vehicle position;
a vehicle velocity;
a vehicle acceleration; or
a vehicle action.
13. The system of claims 11 or 12, wherein:
the difference is a first difference;
the waypoint is associated with a simulated object attribute comprising at least one of:
an object position;
an object velocity;
an object acceleration; or
an object arrival time, and
determining the candidate cost comprises:
determining a second difference between the simulated object attribute and the candidate trajectory.
14. The system of any one of claims 9 to 13, wherein the region is a first region, the operations further comprising:
determining a second region that is associated with the simulated object; and destroying, based at least in part on the second region, the simulated object.
15. The system of claim 14, wherein the position is a first position, and wherein determining the second region comprises:
determining at least one of a:
a second position of the simulated vehicle;
a third position of the simulated object; or
a classification associated with the simulated object.
</claims>
</document>
