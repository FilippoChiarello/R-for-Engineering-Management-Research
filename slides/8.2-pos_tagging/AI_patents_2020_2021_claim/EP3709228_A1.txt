<document>

<filing_date>
2020-03-03
</filing_date>

<publication_date>
2020-09-16
</publication_date>

<priority_date>
2019-03-11
</priority_date>

<ipc_classes>
G06N20/00
</ipc_classes>

<assignee>
NXP SEMICONDUCTORS
</assignee>

<inventors>
FRIEDBERGER, SIMON JOHANN
BOS, JOPPE WILLEM
Veshchikov, Nikita
Ermans, Brian
Kuipers, Christiaan
Verneuil, Vincent
van Vredendaal, Christine
</inventors>

<docdb_family_id>
69770523
</docdb_family_id>

<title>
METHOD AND DATA PROCESSING SYSTEM FOR MAKING MACHINE LEARNING MODEL MORE RESISTENT TO ADVERSARIAL EXAMPLES
</title>

<abstract>
A method and data processing system for making a machine learning model more resistant to adversarial examples are provided. In the method, an input for a machine learning model is provided. A randomly generated mask is added to the input to produce a modified input. The modified input is provided to the machine learning model. The randomly generated mask negates the effect of a perturbation added to the input for causing the input to be an adversarial example. The method may be implemented using the data processing system.
</abstract>

<claims>
1. A method comprising: receiving an input; adding a randomly generated mask to the input to produce a modified input; and providing the modified input to the machine learning model, wherein the randomly generated mask is added to the input to negate an effect of a perturbation added to the input, the perturbation resulting in the input being misclassified.
2. The method of claim 1, wherein the machine learning model is for image classification, and the randomly generated mask is added to the input so that the modified input is different from the input by a predetermined scaling factor.
3. The method of claim 1 or 2, wherein adding the randomly generated mask to the input further comprises adding the randomly generated mask so that the modified input is less than a predetermined error difference from the input.
4. The method of any preceding claim, wherein adding the randomly generated mask further comprises adding a cryptographic cipher for encrypting the input using a fixed key, wherein the encrypted input, as adjusted by a scaling factor, is used to generate the modified input.
5. The method of any preceding claim, wherein the randomly generated mask is further characterized as being generated using a pseudo-random number generator.
6. The method of claim 5, wherein the pseudo-random number generator is based on a seed, the seed depending on a cryptographic hash function of the input, the cryptographic hash function being concatenated with entropy data, and the hash function and entropy data combination is scaled by a scaling factor before being added to the input.
7. The method of any preceding claim, wherein the machine learning model is trained for classifying images, and wherein the randomly generated mask changes a predetermined number of pixels of the image.
8. The method of any preceding claim, wherein the randomly generated mask further comprises an output of a cryptographic hash function adjusted by a scaling factor.
9. The method of any preceding claim, wherein the randomly generated mask includes a cryptographic function of the input, wherein an output of the cryptographic function of the input is operated on by a scaling factor to produce a scaled output, and the scaled output is added to the input to produce the modified input.
10. A data processing system comprising: a memory for storing a machine learning model and a mask generator; and a processor coupled to the memory, the processor for implementing the machine learning model and the mask generator, wherein the machine learning model processing an input during inference operation, wherein the mask generator for generating a scaled randomly generated mask, the scaled randomly generated mask for modifying the input to the machine learning model, wherein the scaled randomly generated mask is added to the input for negating an effect of a perturbation of the input, and wherein the perturbation of the input causes the machine learning model to provide a wrong answer in response to the input.
11. The data processing system of claim 10, wherein the scaled randomly generated mask comprises random noise.
12. The data processing system of claim 10 or 11, wherein the scaled randomly generated mask is produced by encrypting the input using a cryptographic cipher, the cryptographic cipher based on a key.
13. The data processing system of any of claims 10 to 12, wherein the randomly generated mask further comprises a pseudo-random number generator and a seed, and wherein the seed is generated using a hash function of the input.
</claims>
</document>
