<document>

<filing_date>
2019-10-08
</filing_date>

<publication_date>
2020-05-13
</publication_date>

<priority_date>
2018-11-09
</priority_date>

<ipc_classes>
G06F9/30
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
ADELMAN, MENACHEM
CHARNEY, MARK J.
GRADSTEIN, AMIT
HEINECKE, ALEXANDER F.
RUBANOVICH, SIMON
SADE, RAANAN
SPERBER, ZEEV
VALENTINE, ROBERT
</inventors>

<docdb_family_id>
65631158
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR PERFORMING 16-BIT FLOATING-POINT MATRIX DOT PRODUCT INSTRUCTIONS
</title>

<abstract>
Disclosed embodiments relate to computing dot products of nibbles in tile operands. In one example, a processor includes decode circuitry to decode a tile dot product instruction having fields for an opcode, a destination identifier to identify a M by N destination matrix, a first source identifier to identify a M by K first source matrix, and a second source identifier to identify a K by N second source matrix, each of the matrices containing doubleword elements, and execution circuitry to execute the decoded instruction to perform a flow K times for each element (m, n) of the specified destination matrix to generate eight products by multiplying each nibble of a doubleword element (M,K) of the specified first source matrix by a corresponding nibble of a doubleword element (K,N) of the specified second source matrix, and to accumulate and saturate the eight products with previous contents of the doubleword element.
</abstract>

<claims>
1. A processor comprising: fetch circuitry to fetch an instruction having fields to specify an opcode and locations of a M by N destination matrix having single-precision elements, a M by K first source matrix, and a K by N second source matrix, the first and second source matrices having elements comprising a pair of 16-bit floating-point values, the opcode to indicate execution circuitry is to, for each element (m, n) of the destination matrix, convert K pairs of elements from row m of the first source matrix and K pairs of elements from column n of the second source matrix to single-precision, generate even products of even elements from the first and second source matrices (tiles) and separately generate odd products of converted odd elements from the first and second source matrices (tiles), and then accumulate those products separately, one sum of the even products and one sum of the odd products, with previous contents of the element; decode circuitry to decode the fetched instruction; and execution circuitry to respond to the decoded instruction as per the opcode.
2. The processor of claim 1, wherein the 16-bit floating-point format is either bfloat 16 or binary 16, the format to be specified by the instruction.
3. The processor of any one of claims 1-2, wherein M, N, and K are either specified by the instruction or are to be programmed using a matrix configuration instruction before fetching the instruction.
4. The processor of any one of claims 1-3, wherein the execution circuitry is further to saturate execution results, as necessary.
5. The processor of any one of claims 1-4, wherein the instruction is further to specify a writemask comprising M x N bits, each bit to control whether to mask a corresponding element of the destination matrix, wherein masked elements of the destination matrix are to either be zeroed or merged.
6. The processor of any one of claims 1-5, wherein the source and destination matrix locations are each in one of a collection of registers and a plurality of memory locations to represent a matrix.
7. A method comprising: fetching, using fetch circuitry, an instruction having fields to specify an opcode and locations of a M by N destination matrix having single-precision elements, a M by K first source matrix, and a K by N second source matrix, the first and second source matrices having elements comprising a pair of 16-bit floating-point values, the opcode to indicate execution circuitry is to, for each element (m, n) of the destination matrix, convert K pairs of elements from row m of the first source matrix and K pairs of elements from column n of the second source matrix to single-precision, generate even products of even elements from the first and second source matrices (tiles) and separately generate odd products of odd elements from the first and second source matrices (tiles), and then accumulate those products separately, one sum of the even products and one sum of the odd products, with previous contents of the element; decoding, using decode circuitry, the fetched instruction; and responding, with execution circuitry, to the decoded instruction as per the opcode.
8. The method of claim 7, wherein the 16-bit floating-point format is either bfloat 16 or binary 16, the format to be specified by the instruction.
9. The method of any one of claims 7-8, wherein M, N, and K are either specified by the instruction or are to be programmed using a matrix configuration instruction before fetching the instruction.
10. The method of any one of claims 7-9, wherein the execution circuitry is further to saturate execution results, as necessary.
11. The method of any one of claims 7-10, wherein the instruction is further to specify a writemask comprising M x N bits, each bit to control whether to mask a corresponding element of the destination matrix, wherein masked elements of the destination matrix are to either be zeroed or merged.
12. A system comprising a memory and a processor, the processor comprising: fetch circuitry to fetch an instruction having fields to specify an opcode and locations of a M by N destination matrix having single-precision elements, a M by K first source matrix, and a K by N second source matrix, the first and second source matrices having elements comprising a pair of 16-bit floating-point values, the opcode to indicate execution circuitry is to, for each element (m, n) of the destination matrix, convert K pairs of elements from row m of the first source matrix and K pairs of elements from column n of the second source matrix to single-precision, generate even products of even elements from the first and second source matrices (tiles) and separately generate odd products of odd elements from the first and second source matrices (tiles), and then accumulate those products separately, one sum of the even products and one sum of the odd products, with previous contents of the element; decode circuitry to decode the fetched instruction; and execution circuitry to respond to the decoded instruction as per the opcode.
13. The system of claim 12, wherein the 16-bit floating-point format is either bfloat 16 or binary 16, the format to be specified by the instruction.
14. The system of any one of claims 12-13, wherein M, N, and K are either specified by the instruction or are to be programmed using a matrix configuration instruction before fetching the instruction.
15. Machine-readable storage including machine-readable instructions, when executed, to implement a method or realize an apparatus as claimed in any preceding claim.
</claims>
</document>
