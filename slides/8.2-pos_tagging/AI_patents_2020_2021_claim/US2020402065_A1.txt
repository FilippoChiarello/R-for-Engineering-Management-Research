<document>

<filing_date>
2019-06-21
</filing_date>

<publication_date>
2020-12-24
</publication_date>

<priority_date>
2019-06-21
</priority_date>

<ipc_classes>
G06Q20/20,G06Q20/32,G06Q20/40
</ipc_classes>

<assignee>
BANK OF AMERICA CORPORATION
</assignee>

<inventors>
KAPUR, MONIKA
SANGHVI, SITEN
DELSON, KEVIN A.
BOWLING, JOHN RYAN
SLOANE, BRANDON
DAVIS, RYAN
FAIRCHILD, ALBENA N.
</inventors>

<docdb_family_id>
74038883
</docdb_family_id>

<title>
FEDERATED EDGE-NODE AUTHORIZATION SYSTEM
</title>

<abstract>
Apparatus and methods for a federated edge-node computing system are provided. The federated system may allow customers to work in offline mode (e.g., during a disaster). Local data stored on edge-nodes may be used to process offline transactions. Offline transactions may include money transfers and merchant payments using mobile wallets. A plurality of nodes may form a consortium. The consortium may be formed based on geographic proximity of nodes. Member of the consortium may locally store geographically relevant data for authorizing offline transactions.
</abstract>

<claims>
1. A method for resilient operation of a federated computer system, the method comprising: at a cloud computing environment, receiving a first payment authorization request from an edge-node; in response to receiving the payment request, pushing to the edge-node a fragment of a central ledger stored in the cloud computing environment; encrypting the fragment; storing the encrypted fragment locally on the edge-node; the edge-node detecting a time-out of a second payment authorization request transmitted to the cloud computing environment; accessing the encrypted fragment and authorizing the second payment request based on the encrypted fragment; in response to authorizing the second payment request based on the encrypted fragment, releasing goods associated with the second payment request; and synchronizing the first payment request and the second payment request with the central ledger.
2. The method of claim 1 further comprising locating the fragment pushed to the edge-node based on a geographic location of the edge-node and geographic information associated with the first fragment.
3. The method of claim 1, wherein the edge-node is a first edge-node, the method further comprising: detecting a time-out of a payment authorization request submitted by a second edge-node to the cloud computing environment; accessing the encrypted fragment stored locally on the first edge-node and authorizing the second payment request based on the encrypted fragment; and in response to authorizing the second payment request based on the encrypted fragment, releasing the goods associated with the second payment request.
4. The method of claim 1 further comprising receiving the payment request from a customer mobile device via near field communication.
5. The method of claim 4 further comprising: authenticating the payment request by validating a biometric credential using the customer mobile device; and receiving confirmation from the customer mobile device that the payment request has been authenticated.
6. The method of claim 1 further comprising synchronizing payment requests authorized based on the encrypted fragment with the central ledger stored in the cloud computing environment.
7. A federated computer system comprising a group of edge-nodes configured to communicate with a cloud computing environment and authorize payment requests to debit a customer account based on a central ledger and, when the cloud computing environment is inaccessible to the group of edge-nodes: the group of edge-nodes autonomously forms an authorization consortium; the group of edge-nodes apply a consensus protocol to elect: a first consortium member to provide recording-keeping functionality for the consortium; and a second consortium member to provide payment request authorization functionality for the consortium; wherein the second consortium member is configured to: locate a fragment of the central ledger stored locally on a third consortium member, the fragment comprising information associated with the customer account; authorize the payment request based on the information in the fragment; transmit the fragment and an authorization decision based on the fragment to the first consortium member; and trigger a release of goods.
8. The federated computer system of claim 7, wherein the cloud computing environment is determined to be inaccessible to the group of edge-nodes when a threshold number of edge-nodes in the group are each unable to establish a communication path to the cloud computing environment within a predetermined time period.
9. The federated computer system of claim 8, wherein each member of the authorization consortium is configured to attempt to establish the communication path to the cloud computing environment before releasing the goods in response to receiving the authorization decision based on the fragment.
10. The federated computer system of claim 7, wherein the authorization consortium is formed based on a geographic location of: a customer device that initiates the payment request; and edge-nodes included in the group and located within a predetermined distance of the customer device.
11. The federated computer system of claim 7, wherein when the second consortium member cannot locate the fragment of the central ledger, the second consortium member is configured to authorize the payment request when: the goods associated with the payment request are a high frequency staple good; and a value associated with the goods is less than a predetermined limit associated with the customer account; wherein, the high frequency staple good and the value are determined based on information stored locally on a member of the authorization consortium accessible to the second consortium member.
12. A federated computing system that provides a technical solution to a communication disruption among components of the federated computing system, the federated computing system comprising: a cloud computing environment comprising: a central ledger; and payment request authorization software configured to authorize, based on the central ledger, a payment request to debit a customer account; a first edge-node configured to: receive the payment request; transmit the payment request to the cloud computing environment; when the cloud computing environment acknowledges receipt of the payment request within a predetermined time period: wait to receive authorization from the payment request authorization software; and in response to receiving authorization for the payment request from the cloud computing environment, release goods associated with the payment request; and when the cloud computing environment fails to acknowledge receipt of the payment request within the predetermined time period: locate a second edge-node storing a fragment of the central ledger, the fragment comprising a cached balance associated with the customer account; authorize the payment request based on the cached balance; and release the goods in response to authorizing the payment request based on the cached balance.
13. The federated computer system of claim 12 wherein when the when the cloud computing environment fails to acknowledge receipt of the payment request within a predetermined time period, the first edge-node is configured record authorization of the payment request based on the cached balance by transmitting the fragment and the authorization based on the cached balance to a third edge-node.
14. The federated computer system of claim 13, wherein, the third edge-node is configured to store the fragment and the authorization based on the cached balance in a distributed ledger.
15. The federated computer system of claim 14, wherein the cloud computing environment is configured to synchronize the central ledger with the distributed ledger.
16. The federated computer system of claim 12, wherein: the cloud computing environment imposes a first set of restrictions when authorizing the payment request based on the central ledger; and the first edge-node is configured to impose a second set of restrictions when authorizing the payment request based on the cached balance.
17. The federated computer system of claim 16, wherein the second set of restrictions comprises a limit on a value of the goods.
18. The federated computer system of claim 16, wherein the second set of restrictions comprises a limit on a number of payment requests that may be authorized based on the cached balance.
19. The federated computer system of claim 16, wherein the second set of restrictions comprises a limit on a geographic location of the first edge-node.
20. The federated computer system of claim 12, wherein when the first edge-node cannot locate the fragment of the central ledger, the first edge-node is configured to authorize the payment request when: the goods are a high frequency staple good; and a value associated with the goods is less than a predetermined limit associated with the customer account; wherein, the high frequency staple good and the value are determined based on payment attributes stored locally on the first edge-node.
</claims>
</document>
