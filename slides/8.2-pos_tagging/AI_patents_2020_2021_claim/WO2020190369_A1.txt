<document>

<filing_date>
2020-01-23
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2019-03-15
</priority_date>

<ipc_classes>
G06F13/40,H01L25/11
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
FINLEY, ERIC
GEORGE VARGHESE
JAHAGIRDAR, SANJEEV
KOKER, ALTUG
MASTRONARDE, JOSH
RAJWANI, IQBAL
STRIRAMASSARMA, LAKSHMINARAYANAN
TESHOME, MELAKU
VEMULAPALLI, Vikranth
CHENEY, Lance
MATAM, Naveen
XAVIER, Binoj
</inventors>

<docdb_family_id>
69743905
</docdb_family_id>

<title>
DISAGGREGATION OF SOC ARCHITECTURE
</title>

<abstract>
Embodiments described herein provide techniques to disaggregate an architecture of a system on a chip integrated circuit into multiple distinct chiplets that can be packaged onto a common chassis. In one embodiment, a graphics processing unit or parallel processor is composed from diverse silicon chiplets that are separately manufactured. A chiplet is an at least partially packaged integrated circuit that includes distinct units of logic that can be assembled with other chiplets into a larger package. A diverse set of chiplets with different IP core logic can be assembled into a single device.
</abstract>

<claims>
What is claimed is:
1. A general-purpose graphics processor comprising:
a base die including an interconnect fabric; and
one or more chiplets coupled with the base die and the interconnect fabric via an interconnect structure, the interconnect structure to enable electrical communication between the one or more chiplets and the interconnect fabric, the one or more chiplets including one or more distinct and at least partially packaged integrated circuits.
2. The general-purpose graphics processor as in claim 1, wherein the one or more chiplets include a first chiplet and a second chiplet, the first chiplet is coupled with the base die and connected to the interconnect fabric via a first interconnect structure, and the second chiplet is coupled with the base die and connected to the interconnect fabric via a second interconnect structure.
3. The general-purpose graphics processor as in claim 1 or 2, wherein the first chiplet includes functional units configured to perform general-purpose graphics processing operations.
4. The general-purpose graphics processor as in claim 1 or 2, wherein the second chiplet includes functional units configured to perform media encode or decode operations.
5. The general-purpose graphics processor as in claim 1 or 2, wherein the second chiplet includes a network processor and a physical network interface.
6. The general-purpose graphics processor as in claim 1 or 2, wherein the one or more chiplets additionally include a third chiplet, the third chiplet including memory cells associated with a memory device, and the first chiplet, second chiplet, and third chiplet are independently power gated
7. The general-purpose graphics processor as in claim 6, wherein the third chiplet is
connected with a fourth chiplet via an interconnect bridge within the base die.
8. The general-purpose graphics processor as in claim 6, wherein the memory device is a cache memory.
9. The general-purpose graphics processor as in claim 1 , wherein the base die includes a cache memory and the cache memory is connected to the interconnect fabric.
10. The general-purpose graphics processor as in claim 9, wherein the cache memory is configured as a processorwide cache.
11. A method comprising:
generating a data at a first functional unit within a chiplet or base die of a processor;
transmitting the data to an interconnect fabric via a first fabric interface node; transporting the data across multiple clock domains within the processor;
receiving the data at a second fabric interface node;
transmitting the data to a second functional unit within the chiplet or base die of the processor; and
performing an operation at the second functional unit based on received data.
12. The method as in claim 11, additionally comprising associating the data with a virtual channel of the interconnect fabric and forwarding or switching the data based on the virtual channel.
13. The method as in claim 12, additionally comprising:
diverging the virtual channel at the first fabric interface node;
transporting data of the virtual channel across the multiple clock domains using multiple physical links; and
converging the virtual channel at the second fabric interface node.
14. The method as in claim 12, wherein the virtual channel is a first virtual channel and the method additionally comprises:
converging the first virtual channel at the first fabric interface node with a second virtual channel;
transporting the first virtual channel and the second virtual channel across the multiple clock domains using a single physical link; and diverging the first virtual channel at the second virtual channel at the second fabric interface node.
15. A nontransitory machine-readable medium storing instructions which, when executed by one or more processors, cause the one or more processors to perform a method as in any one of claims 11-14.
16. One or more non-transitory machine-readable media storing data which, when read by one or more machines, causes the one or more machines to manufacture one or more integrated circuits to perform operations of the method as in any one of claims 11-14.
17. A data processing system comprising:
a general-purpose graphics processor comprising a base die including an interconnect fabric and multiple chiplets coupled with the base die and the interconnect fabric via multiple interconnect structures, the multiple interconnect structures to enable electrical communication between the multiple chiplets and the interconnect fabric, wherein the interconnect fabric is to receive a message or signal from a first fabric interface node associated with a first chiplet of the multiple chiplets and relay the message or signal to a second fabric interface node associated with a second chiplet of the multiple chiplets.
18. The data processing system as in claim 17, wherein the interconnect fabric is to transmit messages or signals via multiple virtual channels over multiple physical links of the interconnect fabric.
19. The data processing system as in claim 17 or 18, wherein the interconnect fabric is to transmit data for a single virtual channel across multiple physical links of the interconnect fabric.
20. The data processing system as in claim 17 or 18, wherein the interconnect fabric is to transmit data for multiple virtual channels across a single physical link of the interconnect fabric.
21. The data processing system as in claim 17, wherein a physical link of the multiple
physical links is power gated when the physical link is idle.
</claims>
</document>
