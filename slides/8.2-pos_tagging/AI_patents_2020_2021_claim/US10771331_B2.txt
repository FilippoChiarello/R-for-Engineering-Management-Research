<document>

<filing_date>
2018-11-07
</filing_date>

<publication_date>
2020-09-08
</publication_date>

<priority_date>
2018-11-07
</priority_date>

<ipc_classes>
G06F15/16,H04L12/24,H04L29/08,H04L29/12
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
GAGNON, KEVIN
MERMOUD, GRÉGORY
SAVALLE, PIERRE-ANDRÉ
VASSEUR, JEAN-PHILIPPE
</inventors>

<docdb_family_id>
70459155
</docdb_family_id>

<title>
Closed loop control for fixing network configuration issues to aid in device classification
</title>

<abstract>
In one embodiment, a device receives traffic telemetry data captured by a plurality of networks and used by device classification services in the networks to classify endpoints in the networks with device types. The device compares the telemetry data from a particular one of the networks to the telemetry data from the other networks to identify one or more traffic characteristics that are missing from the telemetry data for one or more endpoints of the particular network. The device identifies a networking entity in the particular network that is common to the one or more endpoints for which the one or more characteristics are missing. The device determines a configuration change for the networking entity by comparing a current configuration of the entity to those of one or more entities in the other networks. The device initiates implementation of the determined configuration change for the entity in the particular network.
</abstract>

<claims>
1. A method comprising: receiving, at a device, traffic telemetry data captured by a plurality of networks and used by device classification services in the networks to classify endpoints in the networks with device types; forming, by the device, a matrix of traffic characteristics and associated endpoints from the traffic telemetry data; determining, by the device, that one or more entries of the matrix are empty, the one or more empty entries of the matrix corresponding to one or more traffic characteristics that are missing from the traffic telemetry data for one or more endpoints of a particular network; identifying, by the device, a networking entity in the particular network that is common to the one or more endpoints for which the one or more traffic characteristics are missing; determining, by the device, a configuration change for the networking entity by comparing a current configuration of the networking entity to those of one or more networking entities in the other networks; and initiating, by the device, implementation of the determined configuration change for the networking entity in the particular network.
2. The method as in claim 1, further comprising: using matrix completion to add one or more entries to the matrix, wherein the added one or more entries correspond to the missing one or more traffic characteristics.
3. The method as in claim 2, wherein forming the matrix of traffic characteristics and associated endpoints from the traffic telemetry data comprises: applying a binary mask to the traffic characteristics used to form the matrix, wherein the binary mask uses binary values to indicate whether traffic of a given endpoint in the matrix exhibited a given traffic characteristic.
4. The method as in claim 3, wherein using matrix completion to add one or more entries to the matrix comprises: matching the traffic characteristics for the given endpoint to a pattern of traffic characteristics exhibited by other endpoints, wherein the pattern of traffic characteristics includes the missing one or more traffic characteristics.
5. The method as in claim 1, further comprising: monitoring, by the device, whether the implemented configuration change to the networking entity prevented device type classifications for the one or more endpoints from oscillating.
6. The method as in claim 1, wherein initiating, by the device, implementation of the determined configuration change for the networking entity in the particular network comprises: providing, by the device, an indication of the configuration change to a user interface.
7. The method as in claim 1, wherein the one or more missing traffic characteristics comprise a Hypertext Transfer Protocol (HTTP) feature, a Dynamic Host Configuration Protocol (DHCP) feature, an organizationally unique identifier (OUI), a Link Layer Discovery Protocol (LLDP) feature, or manufacturer usage description (MUD) information.
8. The method as in claim 1, wherein determining the configuration change for the networking entity by comparing the current configuration of the networking entity to those of one or more networking entities in the other networks comprises: forming a mapping of one or more configuration parameters to the missing one or more traffic characteristics.
9. An apparatus, comprising: one or more network interfaces to communicate with a network; a processor coupled to the network interfaces and configured to execute one or more processes; and a memory configured to store a process executable by the processor, the process when executed configured to: receive traffic telemetry data captured by a plurality of networks and used by device classification services in the networks to classify endpoints in the networks with device types; form a matrix of traffic characteristics and associated endpoints from the traffic telemetry data; determine that one or more entries of the matrix are empty, the one or more empty entries of the matrix corresponding to one or more traffic characteristics that are missing from the traffic telemetry data for one or more endpoints of a particular network; identify a networking entity in the particular network that is common to the one or more endpoints for which the one or more traffic characteristics are missing; determine a configuration change for the networking entity by comparing a current configuration of the networking entity to those of one or more networking entities in the other networks; and initiate implementation of the determined configuration change for the networking entity in the particular network.
10. The apparatus as in claim 9, wherein the process when executed is further configured to: using matrix completion to add one or more entries to the matrix, wherein the added one or more entries correspond to the missing one or more traffic characteristics.
11. The apparatus as in claim 10, wherein the apparatus forms the matrix of traffic characteristics and associated endpoints from the traffic telemetry data by: applying a binary mask to the traffic characteristics used to form the matrix, wherein the binary mask uses binary values to indicate whether traffic of a given endpoint in the matrix exhibited a given traffic characteristic.
12. The apparatus as in claim 11, wherein the apparatus uses matrix completion to add one or more entries to the matrix by: matching the traffic characteristics for the given endpoint to a pattern of traffic characteristics exhibited by other endpoints, wherein the pattern of traffic characteristics includes the missing one or more traffic characteristics.
13. The apparatus as in claim 9, wherein the process when executed is further configured to: monitor whether the implemented configuration change to the networking entity prevented device type classifications for the one or more endpoints from oscillating.
14. The apparatus as in claim 9, wherein the apparatus initiates implementation of the determined configuration change for the networking entity in the particular network by: providing an indication of the configuration change to a user interface.
15. The apparatus as in claim 9, wherein the one or more missing traffic characteristics comprise a Hypertext Transfer Protocol (HTTP) feature, a Dynamic Host Configuration Protocol (DHCP) feature, an organizationally unique identifier (OUI), a Link Layer Discovery Protocol (LLDP) feature, or manufacturer usage description (MUD) information.
16. The apparatus as in claim 9 wherein the apparatus determines the configuration change for the networking entity by comparing the current configuration of the networking entity to those of one or more networking entities in the other networks by: forming a mapping of one or more configuration parameters to the missing one or more traffic characteristics.
17. A tangible, non-transitory, computer-readable medium storing program instructions that cause a device to execute a process comprising: receiving, at the device, traffic telemetry data captured by a plurality of networks and used by device classification services in the networks to classify endpoints in the networks with device types; forming, by the device, a matrix of traffic characteristics and associated endpoints from the traffic telemetry data; determining, by the device, that one or more entries of the matrix are empty, the one or more empty entries of the matrix corresponding to one or more traffic characteristics that are missing from the traffic telemetry data for one or more endpoints of a particular network; identifying, by the device, a networking entity in the particular network that is common to the one or more endpoints for which the one or more traffic characteristics are missing; determining, by the device, a configuration change for the networking entity by comparing a current configuration of the networking entity to those of one or more networking entities in the other networks; and initiating, by the device, implementation of the determined configuration change for the networking entity in the particular network.
18. The computer-readable medium as in claim 17, wherein the process further comprises: using matrix completion to add one or more entries to the matrix, wherein the added one or more entries correspond to the missing one or more traffic characteristics.
19. The computer-readable medium as in claim 18, wherein forming the matrix of traffic characteristics and associated endpoints from the traffic telemetry data comprises: applying a binary mask to the traffic characteristics used to form the matrix, wherein the binary mask uses binary values to indicate whether traffic of a given endpoint in the matrix exhibited a given traffic characteristic.
20. The computer-readable medium as in claim 17, wherein the process further comprises: monitoring, by the device, whether the implemented configuration change to the networking entity prevented device type classifications for the one or more endpoints from oscillating.
</claims>
</document>
