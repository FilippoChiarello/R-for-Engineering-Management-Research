<document>

<filing_date>
2016-06-30
</filing_date>

<publication_date>
2020-04-07
</publication_date>

<priority_date>
2015-12-16
</priority_date>

<ipc_classes>
G06F16/22,G06F17/30,G06F9/50,G06F9/54,G06N20/00,G06N99/00
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
TUNG, TERESA
ZHU, QIAN
DUGGAN, DESMOND
SUN, WENJIA
KANG, JAEYOUNG CHRISTOPHER
</inventors>

<docdb_family_id>
57406047
</docdb_family_id>

<title>
Machine for development and deployment of analytical models
</title>

<abstract>
A machine provides a system and interface to allow domain experts and other users to develop, deploy, and iterate on analytical models. The machine facilitates building, deploying, and/or training analytical models by, e.g., exposing analytical model configuration parameters to a user while abstracting model building and model deployment activities. The machine can also determine resource loads or execution times for various analytical models and can schedule model execution accordingly. The machine also provides a dynamically reconfigurable user interface for controlling the system.
</abstract>

<claims>
1. A method comprising: in a system architecture comprising model builder circuitry and model deployment circuitry: providing, by user interface circuitry, an analytical model control user interface to a user; building a first analytical model by: receiving, by the user interface circuitry, a creation instruction entered via the user interface to have the model builder circuitry create an analytical model; accepting, by the user interface circuitry, an algorithm type selection of an analytical model algorithm type for the first analytical model through the analytical model user interface; receiving, by the user interface circuitry, a training data designation of training data through the user interface circuitry; with the model builder circuitry, training the first analytical model on the training data to create a first trained analytical model; and storing the first trained analytical model in a model storage database; and deploying the first analytical model by: receiving, by the model deployment circuitry via the user interface circuitry, a deployment selection of the first trained analytical model for deployment; retrieving, by the model deployment circuitry, the first trained analytical model from the model storage database responsive to the deployment selection; determining, by the model deployment circuitry, a first model code type of the first trained analytical model; verifying, by the model deployment circuitry, that the first trained analytical model conforms to pre-determined compatibility requirements applicable to the first model code type; determining, by the model deployment circuitry, a first compatible run time environment for the first model code type from among multiple different available run time environments; deploying, by the model deployment circuitry, the first trained analytical model on the first compatible run time environment for processing incoming data and to generate run time results; and receiving, by a results storage database, the run time results from the first compatible run time environment after deploying the first trained analytical model on the first compatible run time environment; deploying a second trained analytical model to replace the first trained analytical model by: receiving, by the model deployment circuitry from the first compatible run time environment, a first error rate for the first trained analytical model; comparing, by the model deployment circuitry, the first error rate with a second error rate of the second trained analytical model; determining, by the model deployment circuitry, that the first error rate is higher than the second error rate; deploying, by the model deployment circuitry, the second trained analytical model on the first compatible run time environment instead of the first trained analytical model, responsive to determining that the first error rate is higher than the second error rate; and undeploying the first trained analytical model in response to determining that the first error rate is higher than the second error rate; and deploying a third trained analytical model in addition to the first or second trained analytical model by: accessing the first trained analytical model and first coefficients or the second trained analytical model and second coefficients from the model storage database; accessing the third trained analytical model and third coefficients from the model storage database; determining a third model code type of the third trained analytical model, the third model code type being different from the first model code type or a second model code type associated with the second trained analytical model; determining a second compatible run time environment for the third model code type from among the multiple available run time environments, the second compatible run time environment being different from the first compatible run time environment; wherein the first trained analytical model with the first coefficients or the second analytical model with the second coefficients having been deployed to the first compatible run time environment; and deploying the third trained analytical model with the third coefficients to the second compatible run time environment.
2. The method of claim 1 further comprising: receiving, by the model deployment circuitry, an instruction to deploy the first trained analytical model on the first compatible run time environment; converting, by the model deployment circuitry, the instruction to deploy the first trained analytical model into a command-line argument for the first compatible run time environment; and transmitting, via the communication interface, the command-line argument to the first compatible run time environment.
3. The method of claim 1 further comprising: determining, by resource allocation circuitry, a resource load, an execution time, or both, for the first trained analytical model using historical data for execution of the first trained analytical model; determining by the resource allocation circuitry, a resource load capability of the first compatible run time environment; determining by the resource allocation circuitry an execution frequency for the first trained analytical model on the first compatible run time environment based on the resource load, the execution time for the first trained analytical model, the resource load capability of the first compatible run time environment, or any combination thereof; and scheduling, by the resource allocation circuitry, an execution of the first trained analytical model on the first compatible run time environment at a frequency less than or equal to the execution frequency.
4. The method of claim 1 further comprising: determining, by the model deployment circuitry, that the first trained analytical model includes dependencies supporting the first model code type; and determining, by the model deployment circuitry, that the dependencies within the first trained analytical model do not conflict.
5. The method of claim 1 further comprising: outputting, by the model deployment circuitry, the first error rate via the communication interface.
6. A machine comprising: user interface circuitry in communication with a run time environment, the user interface circuitry configured to: provide an analytical model control user interface; receive an instruction to have model builder circuitry create a first analytical model through user interaction with the analytical model control user interface; accept a selection of the analytical model algorithm type for the first analytical model through the analytical model control user interface; accept a designation of training data through the analytical model control user interface; and accept from the user a selection of a first trained analytical model via the analytical model control user interface for deployment; a memory system configured to: store the first trained analytical model in a model storage database; store run time results in a results storage database; the model builder circuitry configured to: receive the designation of training data from the user interface circuitry; train the first analytical model on the training data to create a first trained analytical model; and cause the first trained analytical model to be stored in the model storage database; and model deployment circuitry configured to: receive the selection of the first trained analytical model from the user interface circuitry; retrieve the first trained analytical model from the model storage database; determine a first model code type of the first trained analytical model; verify that the first trained analytical model conforms to pre-determined compatibility requirements applicable to the first model code type; determine a first compatible run time environment for the first model code type from among multiple different available run time environments; deploy the first trained analytical model on the first compatible run time environment for processing incoming data and to generating run time results; designate the results storage database as a location for storage of the run time results; receive from the first compatible run time environment a first error rate for the first trained analytical model; compare the first error rate with a second error rate of a second trained analytical model; determine that the first error rate is higher than the second error rate; deploy the second trained analytical model on the first compatible run time environment instead of the first trained analytical model, responsive to determining that the first error rate is higher than the second error rate; undeploy the first trained analytical model in response to determining that the first error rate is higher than the second error rate; access the first trained analytical model and first coefficients or the second trained analytical model and second coefficients from the model storage database; access a third trained analytical model and third coefficients from the model storage database; determine a third model code type of the third trained analytical model, the third model code type being different from the first model code type or a second model code type associated with the second trained analytical model; determine a second compatible run time environment for the third model code type from among the multiple available run time environments, the second compatible run time environment being different from the first compatible run time environment; wherein the first trained analytical model with the first coefficients or the second analytical model with the second coefficients having been deployed to the first compatible run time environment; and deploy the third trained analytical model with the third coefficients to the second compatible run time environment; and wherein the memory system is further configured to receive the run time results from the first compatible run time environment after deploying the first trained analytical model on the first compatible run time environment.
7. The machine of claim 6 wherein the model deployment circuitry is further configured to: receive an instruction to deploy the first trained analytical model on the first compatible run time environment via the communication interface; convert the instruction to deploy the first trained analytical model into a command-line argument for the first compatible run time environment; and transmit, via the communication interface, the command-line argument to the first compatible run time environment.
8. The machine of claim 6 further comprising resource allocation circuitry, the resource allocation circuitry configured to: determine a resource load, an execution time, or both, for the first trained analytical model using historical data for execution of the first trained analytical model; determine a resource load capability of the run time environment; determine an execution frequency for the first trained analytical model on the run time environment based on the resource load, the execution time for the first trained analytical model, the resource load capability of the run time environment, or any combination thereof; and schedule an execution of the first trained analytical model on the run time environment at a frequency less than or equal to the execution frequency.
9. The machine of claim 6 wherein the model deployment circuitry is further configured to: determine that the first trained analytical model includes dependencies supporting the first model code type; and determine that the dependencies within the first trained analytical model do not conflict.
10. The machine of claim 6 wherein the model deployment circuitry is further configured to: output the first error rate via the communication interface.
11. A method comprising: in a system architecture comprising model deployment circuitry: deploying a first trained analytical model by: receiving, via a communication interface, an instruction to have model deployment circuitry access the first trained analytical model; determining, by the model deployment circuitry, a first model code type of the first trained analytical model; verifying, by the model deployment circuitry, that the first trained analytical model conforms to pre-determined compatibility requirements applicable to the first model code type; determining, by the model deployment circuitry, that the first trained analytical model includes all dependencies required for the first model code type; determining, by the model deployment circuitry, that the dependencies within the first trained analytical model do not conflict; determining, by the model deployment circuitry, a first compatible run time environment for the model code type from among multiple different available run time environments; deploying, by the model deployment circuitry, the first trained analytical model on the first compatible run time environment for processing incoming data and generating run time results; and receiving, by a results storage database, the run time results from the first compatible run time environment after deploying the first trained analytical model on the first compatible run time environment; outputting the run time results via the communication interface; receiving, by the model deployment circuitry from the first compatible run time environment, a first error rate for the first trained analytical model; outputting, by the model deployment circuitry, the first error rate via the communication interface; comparing, by the model deployment circuitry, the first error rate with a second error rate of a second trained analytical model; determining, by the model deployment circuitry, that the first error rate is higher than the second error rate; and deploying, by the model deployment circuitry, the second trained analytical model on the first compatible run time environment instead of the first trained analytical model, responsive to determining that the first error rate is higher than the second error rate; and undeploying the first trained analytical model in response to determining that the first error rate is higher than the second error rate; accessing the first trained analytical model and first coefficients or the second trained analytical model and second coefficients from the model storage database; accessing the third trained analytical model and third coefficients from the model storage database; determining a third model code type of the third trained analytical model, the third model code type being different from the first model code type or a second model code type associated with the second trained analytical model; determining a second compatible run time environment for the third model code type from among the multiple available run time environments, the second compatible run time environment being different from the first compatible run time environment; wherein the first trained analytical model with the first coefficients or the second analytical model with the second coefficients having been deployed to the first compatible run time environment; and deploying the third trained analytical model with the third coefficients to the second compatible run time environment.
12. The method of claim 11 further comprising: receiving, by the model deployment circuitry, an instruction to deploy the first trained analytical model on the first compatible run time environment; converting, by the model deployment circuitry, the instruction to deploy the first trained analytical model into a command-line instruction for the first compatible run time environment; and transmitting, via the communication interface, the command-line instruction to the first compatible run time environment.
</claims>
</document>
