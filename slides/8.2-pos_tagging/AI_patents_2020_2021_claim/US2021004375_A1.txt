<document>

<filing_date>
2020-07-01
</filing_date>

<publication_date>
2021-01-07
</publication_date>

<priority_date>
2019-07-03
</priority_date>

<ipc_classes>
G06F16/2455
</ipc_classes>

<assignee>
NETFLIX
</assignee>

<inventors>
Correia Kung, Fabio
Dhillon, Sargun
</inventors>

<docdb_family_id>
74065358
</docdb_family_id>

<title>
DYNAMIC TRANSACTION COALESCING
</title>

<abstract>
The disclosed computer-implemented method includes establishing a coalescing service configured to combine queries received at the coalescing service. The method further includes instantiating, within the coalescing service, multiple execution windows to which the received queries are to be assigned, where each execution window has an assigned deadline within which to execute. The method also includes analyzing a first query among the received queries to identify characteristics of the first query. The method then includes assigning the first query to a first execution window among the execution windows according to the identified characteristics. Then, upon detecting the occurrence of a specified trigger for at least one of the queries in the first execution window, the method includes executing those queries, including the first query, that are assigned to the first execution window. Various other methods, systems, and computer-readable media are also disclosed.
</abstract>

<claims>
1. A computer-implemented method comprising: establishing a coalescing service configured to combine queries received at the coalescing service; instantiating, within the coalescing service, a plurality of execution windows to which the received queries are to be assigned, each execution window having an assigned deadline within which to execute; analyzing at least a first query among the received queries to identify one or more characteristics of the first query; assigning the first query to a first execution window among the plurality of execution windows according to the identified characteristics; and upon detecting the occurrence of a specified trigger for at least one of the queries in the first execution window, executing those queries, including the first query, that are assigned to the first execution window.
2. The computer-implemented method of claim 1, wherein each of the queries that were assigned to the first execution window before the occurrence of the specified trigger are executed during execution of the first execution window.
3. The computer-implemented method of claim 1, wherein the specified trigger comprises at least one of: reaching the deadline assigned to the first execution window; reaching a specified number of queries assigned to the first execution window; receiving a specified type of query; or receiving a query with a specified deadline.
4. The computer-implemented method of claim 3, wherein the deadline assigned to the first execution window is established as a default trigger if other triggers for other queries are not detected.
5. The computer-implemented method of claim 1, wherein each execution window has a current state that is changeable by the coalescing service based on detecting the occurrence of the specified trigger.
6. The computer-implemented method of claim 1, wherein each execution window has an identifier that uniquely identifies the execution window within the established coalescing service.
7. The computer-implemented method of claim 1, wherein the deadline assigned to each execution window is variable and is determined by the established coalescing service.
8. The computer-implemented method of claim 1, wherein the identified characteristics of the first query comprise at least one of: type of query, type of information being queried, criticality of query, type of database being queried, size of query, or latency tolerance.
9. The computer-implemented method of claim 1, wherein the received queries are assigned to execution windows based on one or more portions of knowledge about a backend system to which the queries are sent upon execution of the execution window.
10. The computer-implemented method of claim 9, wherein the one or more portions of knowledge about the backend system are inferred based on one or more interactions with the backend system.
11. The computer-implemented method of claim 9, wherein the one or more portions of knowledge about the backend system comprise at least one of: backend latency requirements, backend partitions, maximum number of queries per token bucket, or location of backend servers.
12. The computer-implemented method of claim 11, wherein queries satisfied by data stored on a specified backend partition are assigned to the same execution window.
13. A system comprising: at least one physical processor; and physical memory comprising computer-executable instructions that, when executed by the physical processor, cause the physical processor to: establish a coalescing service configured to combine queries received at the coalescing service; instantiate, within the coalescing service, a plurality of execution windows to which the received queries are to be assigned, each execution window having an assigned deadline within which to execute; analyze at least a first query among the received queries to identify one or more characteristics of the first query; assign the first query to a first execution window among the plurality of execution windows according to the identified characteristics; and upon detecting the occurrence of a specified trigger for at least one of the queries in the first execution window, execute those queries, including the first query, that are assigned to the first execution window.
14. The system of claim 13, wherein the queries are received from a plurality of different agents, each agent being configured to execute a specified workload.
15. The system of claim 14, wherein at least a portion of the received queries are received as elastic network interfaces (ENIs) are updated for one or more of the agents.
16. The system of claim 15, wherein the ENIs for the agents are updated automatically upon the occurrence of the specified trigger.
17. The system of claim 13, further comprising detecting the occurrence of one or more errors upon executing the queries assigned to the first execution window.
18. The system of claim 17, further comprising performing one or more remediation steps to remediate the detected errors.
19. The system of claim 18, wherein the one or more remediation steps comprise at least one of resubmitting the queries in the first execution window or splitting up the queries in the first execution window for subsequent resubmission.
20. A non-transitory computer-readable medium comprising one or more computer-executable instructions that, when executed by at least one processor of a computing device, cause the computing device to: establish a coalescing service configured to combine queries received at the coalescing service; instantiate, within the coalescing service, a plurality of execution windows to which the received queries are to be assigned, each execution window having an assigned deadline within which to execute; analyze at least a first query among the received queries to identify one or more characteristics of the first query; assign the first query to a first execution window among the plurality of execution windows according to the identified characteristics; and upon detecting the occurrence of a specified trigger for at least one of the queries in the first execution window, execute those queries assigned to the first execution window including the first query.
</claims>
</document>
