<document>

<filing_date>
2020-06-05
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2016-03-25
</priority_date>

<ipc_classes>
H04L12/24,H04L29/06
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
MERMOUD, GRÉGORY
SARTRAN, LAURENT
SAVALLE, PIERRE-ANDRÉ
Vasseur, Jean-Philippe
</inventors>

<docdb_family_id>
58489479
</docdb_family_id>

<title>
HIERARCHICAL MODELS USING SELF ORGANIZING LEARNING TOPOLOGIES
</title>

<abstract>
In one embodiment, a device obtains characteristics of a first anomaly detection model executed by a first distributed learning agent in a network. The device receives a query from a second distributed learning agent in the network that requests identification of a similar anomaly detection to that of a second anomaly detection model executed by the second distributed learning agent. The device identifies, after receiving the query from the second distributed learning agent, the first anomaly detection model as being similar to that of the second anomaly detection model, based on the characteristics of the first anomaly detection model. The device causes the first anomaly detection model to be sent to the second distributed learning agent for execution.
</abstract>

<claims>
1. A method comprising: obtaining, by a device, characteristics of a first anomaly detection model executed by a first distributed learning agent in a network; receiving, at the device, a query from a second distributed learning agent in the network that requests identification of a similar anomaly detection to that of a second anomaly detection model executed by the second distributed learning agent; identifying, by the device and after receiving the query from the second distributed learning agent, the first anomaly detection model as being similar to that of the second anomaly detection model, based on the characteristics of the first anomaly detection model; and causing, by the device, the first anomaly detection model to be sent to the second distributed learning agent for execution.
2. The method as in claim 1, wherein the characteristics of the first anomaly detection model are indicative of a volume of network traffic encountered by the first distributed learning agent.
3. The method as in claim 1, wherein the characteristics of the first anomaly detection model are indicative of applications or protocols associated with network traffic encountered by the first distributed learning agent.
4. The method as in claim 1, wherein the characteristics of the first anomaly detection model comprise an accuracy measure or a confidence measure for the first anomaly detection model.
5. The method as in claim 1, wherein causing the first anomaly detection model to be sent to the second distributed learning agent for execution comprises: receiving, at the device, a request for the first anomaly detection model; and sending, by the device, the first anomaly detection model to the second distributed learning agent.
6. The method as in claim 1, wherein causing the first anomaly detection model to be sent to the second distributed learning agent for execution comprises: sending, by the device, a reply to the second distributed learning agent indicative of the first anomaly detection model being similar to the second anomaly detection model, wherein the second distributed learning agent sends a request for the first anomaly detection model in response to the reply.
7. The method as in claim 1, wherein the device is a supervisory and control agent that oversees operations of the first distributed learning agent and of the second distributed learning agent.
8. The method as in claim 1, wherein the device is the first distributed learning agent and comprises a router or switch.
9. The method as in claim 1, wherein causing the first anomaly detection model to be sent to the second distributed learning agent for execution comprises: computing a cost function associated with sending the first anomaly detection model to the second distributed learning agent for execution based on its similarity to the second anomaly detection model and on a bandwidth impact of sending the first anomaly detection model to the second distributed learning agent.
10. The method as in claim 1, further comprising: using the characteristics of the first anomaly detection model to train a statistical clustering model, wherein the first anomaly detection model is identified as being similar to that of the second anomaly detection model using the statistical clustering model.
11. An apparatus, comprising: one or more network interfaces to communicate with a network; a processor coupled to the one or more network interfaces and configured to execute one or more processes; and a memory configured to store a process that is executable by the processor, the process when executed configured to: obtain characteristics of a first anomaly detection model executed by a first distributed learning agent in a network; receive a query from a second distributed learning agent in the network that requests identification of a similar anomaly detection to that of a second anomaly detection model executed by the second distributed learning agent; identify, after receiving the query from the second distributed learning agent, the first anomaly detection model as being similar to that of the second anomaly detection model, based on the characteristics of the first anomaly detection model; and cause the first anomaly detection model to be sent to the second distributed learning agent for execution.
12. The apparatus as in claim 11, wherein the characteristics of the first anomaly detection model are indicative of a volume of network traffic encountered by the first distributed learning agent.
13. The apparatus as in claim 11, wherein the characteristics of the first anomaly detection model are indicative of applications or protocols associated with network traffic encountered by the first distributed learning agent.
14. The apparatus as in claim 11, wherein the characteristics of the first anomaly detection model comprise an accuracy measure or a confidence measure for the first anomaly detection model.
15. The apparatus as in claim 11, wherein the apparatus causes the first anomaly detection model to be sent to the second distributed learning agent for execution by: receiving a request for the first anomaly detection model; and sending the first anomaly detection model to the second distributed learning agent.
16. The apparatus as in claim 11, wherein the apparatus causes the first anomaly detection model to be sent to the second distributed learning agent for execution by: sending a reply to the second distributed learning agent indicative of the first anomaly detection model being similar to the second anomaly detection model, wherein the second distributed learning agent sends a request for the first anomaly detection model in response to the reply.
17. The apparatus as in claim 11, wherein the apparatus is a supervisory and control agent that oversees operations of the first distributed learning agent and of the second distributed learning agent.
18. The apparatus as in claim 11, wherein the apparatus is the first distributed learning agent and comprises a router or switch.
19. The apparatus as in claim 11, wherein causing the first anomaly detection model to be sent to the second distributed learning agent for execution comprises: computing a cost function associated with sending the first anomaly detection model to the second distributed learning agent for execution based on its similarity to the second anomaly detection model and on a bandwidth impact of sending the first anomaly detection model to the second distributed learning agent.
20. A tangible, non-transitory, computer-readable medium storing program instructions that cause a device in a network to execute a process comprising: obtaining, by the device, characteristics of a first anomaly detection model executed by a first distributed learning agent in a network; receiving, at the device, a query from a second distributed learning agent in the network that requests identification of a similar anomaly detection to that of a second anomaly detection model executed by the second distributed learning agent; identifying, by the device and after receiving the query from the second distributed learning agent, the first anomaly detection model as being similar to that of the second anomaly detection model, based on the characteristics of the first anomaly detection model; and causing, by the device, the first anomaly detection model to be sent to the second distributed learning agent for execution.
</claims>
</document>
