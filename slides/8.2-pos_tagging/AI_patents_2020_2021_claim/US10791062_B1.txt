<document>

<filing_date>
2017-11-14
</filing_date>

<publication_date>
2020-09-29
</publication_date>

<priority_date>
2017-11-14
</priority_date>

<ipc_classes>
H04L12/801,H04L12/835
</ipc_classes>

<assignee>
AMAZON TECHNOLOGIES
</assignee>

<inventors>
RAMAMURTHY, PRATAP
</inventors>

<docdb_family_id>
72615103
</docdb_family_id>

<title>
Independent buffer memory for network element
</title>

<abstract>
Technology is described for forwarding packets from a network element to a buffer node. A packet may be received at the network element. The network element may determine that packets stored in the buffer memory exceed a defined threshold for data size. The packet may be forwarded from the network element to the buffer node in a service provider environment for storage of the packet at the buffer node. The network element may receive the packet from the buffer node.
</abstract>

<claims>
1. A system, comprising: at least one processor; at least one memory device including a data store to store a plurality of data and instructions that, when executed, cause the system to: detect, at a network element in a service provider environment, that a data size of packets stored in a buffer memory of the network element exceeds a defined threshold; send, from the network element to a control node in the service provider environment, a request to forward packets from the network element to a buffer node in the service provider environment; receive, at the network element and from the control node, an indication of a buffer node assigned by the control node to store packets sent from the network element; forward a packet from the network element to the buffer node for storage of the packet at the buffer node, wherein the buffer node acts as an external buffer memory for the network element, and the buffer node includes an adjustable number of computing instances in the service provider environment depending on a current level of network traffic that flows through the network element; send a request from the network element to the buffer node to retrieve the packet from the buffer node; and receive the packet at the network element from the buffer node.
2. The system of claim 1, wherein the plurality of data and instructions, when executed, cause the system to: detect that the data size of packets stored in the buffer memory of the network element is less than the defined threshold; notify the control node that the data size of the packets stored in the buffer memory is less than the defined threshold; send a request to the control node to shut down the buffer node; and store subsequent packets received at the network element in the buffer memory of the network element.
3. The system of claim 1, wherein the plurality of data and instructions, when executed, cause the system to forward the packet to the buffer node via a dedicated port or a prioritized port of the network element that is selected for use when the data size of the packets stored in the buffer memory exceeds the defined threshold.
4. The system of claim 1, wherein the plurality of data and instructions, when executed, cause the system to: determine that the packet received at the network element is associated with an increased priority level; and as a result of the determining, forward the packet to the buffer node.
5. A method, comprising: receiving a packet at a network element; determining that packets stored in a buffer memory of the network element exceed a defined threshold for data size; forwarding the packet from the network element to a buffer node in a service provider environment for storage of the packet at the buffer node, wherein the buffer node acts as an external buffer memory for the network element, and the buffer node includes an adjustable number of computing instances in the service provider environment depending on a current level of network traffic that flows through the network element; and receiving the packet at the network element from the buffer node.
6. The method of claim 5, further comprising: requesting a control node in the service provider environment to assign a buffer node in the computing service environment to store packets received from the network element; and receiving, from the control node, an indication of the buffer node assigned by the control node to store packets received from the network element.
7. The method of claim 5, further comprising selecting, at the network element, the buffer node in the service provider environment for storage of the packet at the buffer node when the packets stored in the buffer memory exceeds the defined threshold for data size.
8. The method of claim 5, further comprising sending a request from the network element to the buffer node to retrieve the packet from the buffer node.
9. The method of claim 5, further comprising receiving the packet automatically from the buffer node after the defined period of time without an explicit request from the network element to retrieve the packet from the buffer node.
10. The method of claim 5, further comprising selecting one of multiple buffer nodes in the service provider environment to forward the packet when the packets stored in the buffer memory exceeds the defined threshold for data size, wherein a number of buffer nodes that store packets for the network element is increased or decreased depending on a congestion level of the network element.
11. The method of claim 5, wherein the network element is located within a same geographical region as the buffer node.
12. The method of claim 5, wherein the network element is selected from a group consisting of: a physical network switch, a physical router, or a firewall.
13. The method of claim 5, wherein the network element is selected from a group consisting of: a virtual network switch, or a virtual network router.
14. The method of claim 5, wherein the packet, when received from the buffer node, includes a flag indicating that the packet was previously sent from the network element to the buffer node.
15. A non-transitory machine readable storage medium having instructions embodied thereon, the instructions being executable by one or more processors to perform acts comprising: receiving, at a buffer node running in a service provider environment, a packet from a network element for storage in the buffer node, wherein the buffer node acts as an external buffer memory for the network element when a data size of packets stored in a buffer memory of the network element exceeds a defined threshold, and the buffer node includes an adjustable number of computing instances in the service provider environment depending on a current level of network traffic that flows through the network element; storing the packet received from the network element at the buffer node; receiving, at the buffer node, a request to return the packet to the network element; and sending the packet from the buffer node to the network element.
16. The non-transitory machine readable storage medium of claim 15, the acts further comprising deleting packets at the buffer node when the packets are not requested to be returned back to the network element within a time limit.
17. The non-transitory machine readable storage medium of claim 16, wherein the time limit for deleting the packet is based on a type of packet, wherein the type of packet is selected from a group consisting of: a user datagram protocol (UDP) packet, a transmission control protocol (TCP) packet, an increased priority packet, or a reduced priority packet.
18. The non-transitory machine readable storage medium of claim 15, wherein the buffer node is launched by a control node in the service provider environment when packets stored in a buffer memory of the network element exceed a defined threshold for memory size.
19. The non-transitory machine readable storage medium of claim 15, wherein the buffer node is launched by a control node in the service provider environment based on an expected traffic pattern in the service provider environment.
20. The non-transitory machine readable storage medium of claim 15, wherein the buffer node acts as an external buffer memory for multiple network elements in the service provider environment.
</claims>
</document>
