<document>

<filing_date>
2019-11-11
</filing_date>

<publication_date>
2020-05-14
</publication_date>

<priority_date>
2018-11-09
</priority_date>

<ipc_classes>
G06F11/34,G06F21/60,G06F8/71,G06F8/75,G06N20/00,G06Q20/12
</ipc_classes>

<assignee>
MANHATTAN ENGINEERING COMPANY
</assignee>

<inventors>
SMITH, ADAM
LOZANO, JUAN
HUNG, DANIEL
UPADHYAYA, TARAK
</inventors>

<docdb_family_id>
70550494
</docdb_family_id>

<title>
DEPLOYMENT MODELS
</title>

<abstract>
A system and method may be provided for performing code analysis on a system of remote computer nodes. Input data may be collected on a local computer system along with a request for code analysis. The input data and request may be transmitted to a network of remote nodes. The network of remote nodes may perform the code analysis task using the input data. The results of the analysis may be returned back to the local computer.
</abstract>

<claims>
1. A computer-implemented method comprising: collecting input data from a local computer, the input data including at least one of source code, recorded actions in an editor, recorded actions in a terminal, recorded actions in a web browser, or recorded actions in an emulator; receiving a request for code analysis; transmitting the input data and the request for code analysis to one or more remote nodes; performing, by the one or more remote nodes, analysis on the input data; receiving analysis results from the one or more remote nodes.
2. The computer-implemented method of claim 1, wherein the collected input data includes data about a current file opened by a user and a current cursor position, selection range, or click location in the current file.
3. The computer-implemented method of claim 1, wherein the collected input data includes information about recorded actions in the editor, the information including data about at least one of edits, selects, an open action on a file, or a tab switch event.
4. The computer-implemented method of claim 3, wherein the collected input data is stored on the one or more remote nodes and is used by the one or more remote nodes to perform the analysis.
5. The computer-implemented method of claim 1, wherein the collected input data includes information about input or output in the terminal.
6. The computer-implemented method of claim 5, wherein the collected input data is stored on the one or more remote nodes and is used by the one or more remote nodes to perform the analysis.
7. The computer-implemented method of claim 1, wherein the collected input data further includes an indication of a current directory or a value of one or more environment variables.
8. The computer-implemented method of claim 1, wherein the collected input data includes information about input or output in the web browser.
9. The computer-implemented method of claim 1, wherein the collected input data includes information about input or output in the emulator.
10. The computer-implemented method of claim 1, further comprising: listening for a system event to determine when the source code has changed; in response to determining that the source code has changed, transmitting the source code to the one or more remote nodes.
11. The computer-implemented method of claim 1, further comprising: storing a local cache; determining that the content of the source code is different from the content of a copy of the source code in the local cache and, in response, transmitting the source code to the one or more remote nodes.
12. The computer-implemented method of claim 1, further comprising: recording a series of actions in the editor; identifying a series of events within a time range; discarding the events that occur within the time range and retaining only a beginning event and an ending event that begin and end the series of events.
13. The computer-implemented method of claim 1, further comprising: calculating a diff of a first version of data with a second version of data; transmitting the result of the diff to the one or more remote nodes and not transmitting all of the first version of data to the one or more remote nodes.
14. The computer-implemented method of claim 1, further comprising: presenting configuration options to a user, the configuration options allowing selection of data sources or event types for monitoring and transmission to the one or more remote nodes.
15. The computer-implemented method of claim 1, further comprising: receiving an indication of a character sequence for removal; removing the character sequence from the input data prior to sending the input data to the one or more remote nodes.
16. The computer-implemented method of claim 1, further comprising: using a predefined pattern to identify a character sequence for removal; removing the character sequence from the input data prior to sending the input data to the one or more remote nodes.
17. The computer-implemented method of claim 1, further comprising: using a machine learning model to predict that a character sequence is sensitive; removing the character sequence from the input data prior to sending the input data to the one or more remote nodes.
18. The computer-implemented method of claim 1, further comprising: encrypting the input data prior to transmission to the one or more remote nodes.
19. The computer-implemented method of claim 1, further comprising: receiving, by the one or more remote nodes, the input data; determining, by the one or more remote nodes, a set of tasks to perform the requested code analysis; assigning, by the one or more remote nodes, the set of tasks to a plurality of worker nodes.
20. The computer-implemented method of claim 1, further comprising: determining, by the local computer, a set of tasks to perform the requested code analysis; assigning, by the local computer, the set of tasks to a plurality of worker nodes.
21. The computer-implemented method of claim 1, further comprising: receiving, by a first worker node in the one or more remote nodes, the input data; processing, by the first worker node, the input data to produce intermediate data; transmitting, by the first worker node, the intermediate data to a second worker node; processing, by the second worker node, the intermediate data to produce an analysis output.
22. The computer-implemented method of claim 1, wherein the analysis performed by the one or more remote nodes is based on data from a data source, wherein the data source comprises at least a portion of a publicly accessible codebase.
23. The computer-implemented method of claim 1, wherein the analysis performed by the one or more remote nodes is based on data from a data source, wherein the data source comprises at least a portion of a codebase of an individual user.
24. The computer-implemented method of claim 1, further comprising: monitoring input from a user; prefetching analysis results from the network of remote nodes based on detecting in the monitored input a triggering event.
25. The computer-implemented method of claim 1, further comprising: storing confidential input data of a plurality of users on the one or more remote nodes; monitoring the frequency of queries to the one or more remote nodes; using the frequency of queries to determine the confidentiality status of input data stored on the one or more remote nodes; returning results to users that are determined to be non-confidential.
26. The computer-implemented method of claim 1, further comprising: computing a compensation amount for one or more owners of the one or more remote nodes; transmitting an electronic payment of the compensation amount to the one or more owners of the one or more remote nodes.
27. The computer-implemented method of claim 1, further comprising: determining a compensation for a user of the local computer based on sharing of data from the local computer to the one or more remote nodes.
28. The computer-implemented method of claim 1, further comprising: debiting a user of the local computer based on the amount of processing performed by the one or more remote nodes; crediting the user of the local computer based on sharing of data from the local computer to the one or more remote nodes.
29. The computer-implemented method of claim 1, further comprising: using differential privacy, by the local computer, to determine data that will not expose confidential data on the local computer when the data is transmitted to the one or more remote nodes; transmitting the data to the one or more remote nodes.
30. The computer-implemented method of claim 1, further comprising: using differential privacy, by the one or more remote nodes, to determine data that will not expose confidential data on the local computer when the code analysis is performed on the data or when the data is shared with other clients.
</claims>
</document>
