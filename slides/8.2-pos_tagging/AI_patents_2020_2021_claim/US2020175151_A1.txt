<document>

<filing_date>
2018-12-04
</filing_date>

<publication_date>
2020-06-04
</publication_date>

<priority_date>
2018-12-04
</priority_date>

<ipc_classes>
G06F11/36,G06F21/12,G06F21/51,G06N20/00
</ipc_classes>

<assignee>
BOEING COMPANY
</assignee>

<inventors>
SANDERS-REED, JOHN NEWELL
</inventors>

<docdb_family_id>
68762409
</docdb_family_id>

<title>
COMPUTER SYSTEM INTEGRITY THROUGH A COMBINATION OF CERTIFIABLE AND QUALIFIABLE SOFTWARE
</title>

<abstract>
A method of improving integrity of a computer system includes executing certifiable and qualifiable software applications. The certifiable software application is composed of static program instructions executed sequentially to process input data to produce an output, and the qualifiable software application uses a model iteratively built using a machine learning algorithm to process the input data to produce a corresponding output. The certifiable software application is certifiable for the computer system according to a certification standard, and the qualifiable software application being non-certifiable for the computer system according to the certification standard. The method also includes cross-checking the output by comparison with the corresponding output to verify the output, and thereby improve integrity of the computer system. And the method includes generating an alert that the output is unverified when the comparison indicates that the output differs from the corresponding output by more than a threshold.
</abstract>

<claims>
1. A computer system comprising: a memory configured to store computer-readable program code; and processing circuitry configured to access the memory, and execute the computer-readable program code to cause the computer system to at least: execute a certifiable software application composed of static program instructions executed sequentially to process input data to produce an output on which the computer system is configured to operate, the certifiable software application being certifiable for the computer system according to a certification standard; execute a qualifiable software application during execution of the certifiable software application, the qualifiable software application using a model iteratively built using a machine learning algorithm to process the input data to produce a corresponding output, the qualifiable software application being non-certifiable for the computer system according to the certification standard; cross-check the output from the certifiable software application by comparison with the corresponding output from the qualifiable software application to verify the output from the certifiable software application, and thereby improve integrity of the computer system; and generate an alert that the output from the certifiable software application is unverified when the comparison indicates that the output differs from the corresponding output by more than a threshold.
2. The computer system of claim 1, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the memory stores further computer-readable program code that the processing circuitry is configured to execute to cause the computer system to further at least: operate on the output on which the computer system is configured to operate, and exclusive of the corresponding output from the qualifiable software application.
3. The computer system of claim 1, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the memory stores further computer-readable program code that the processing circuitry is configured to execute to cause the computer system to further at least: produce a combined output from the output and the corresponding output; and operate on the combined output.
4. The computer system of claim 3, wherein the computer system being caused to execute the certifiable software application, and execute the qualifiable software application, further includes the computer system being caused to produce respective figures of merit for the output and the corresponding output, and wherein the computer system being caused to produce the combined output includes being caused to Kalman filter the output and the corresponding output weighted by the respective figures of merit.
5. The computer system of claim 1, wherein the memory stores further computer-readable program code that the processing circuitry is configured to execute to cause the computer system to further at least: execute a third software application as the certifiable software application and the qualifiable software application are executed, the third software application being a second certifiable or qualifiable software application, the third software application being executed to process the input data to produce a second corresponding output, wherein the computer system being caused to cross-check the output includes being caused to cross-check the output from the certifiable software application by comparison with the corresponding output and the second corresponding output, and wherein the computer system being caused to generate the alert includes being caused to generate the alert that the output from the certifiable software is unverified when the comparison indicates that the output differs from both the corresponding output and the second corresponding output by more than the threshold.
6. The computer system of claim 1, wherein the computer system is an avionics system of an aircraft moving toward a hub that defines a target for the aircraft, the certifiable software application is a certifiable object detection application, and the qualifiable software application is a qualifiable object detection application, wherein the computer system being caused to execute the certifiable software application includes being caused to execute the certifiable object detection application to process an image of the hub to produce an output in which the target is detected in the image, wherein the computer system being caused to execute the qualifiable software application includes being caused to execute the qualifiable object detection application to process the image of the hub to produce a corresponding output in which the target is detected in the image, and wherein the computer system being caused to cross-check the output includes being caused to cross-check the output by comparison with the corresponding output to verify the output from the certifiable object detection application.
7. The computer system of claim 6, wherein the output from the certifiable object detection application is verified when the comparison indicates that the output differs from the corresponding output by no more than the threshold that decreases with distance between the aircraft and the hub.
8. A method of improving integrity of a computer system, the method comprising the computer system: executing a certifiable software application composed of static program instructions executed sequentially to process input data to produce an output on which the computer system is configured to operate, the certifiable software application being certifiable for the computer system according to a certification standard; executing a qualifiable software application during execution of the certifiable software application, the qualifiable software application using a model iteratively built using a machine learning algorithm to process the input data to produce a corresponding output, the qualifiable software application being non-certifiable for the computer system according to the certification standard; cross-checking the output from the certifiable software application by comparison with the corresponding output from the qualifiable software application to verify the output from the certifiable software application, and thereby improve integrity of the computer system; and generating an alert that the output from the certifiable software application is unverified when the comparison indicates that the output differs from the corresponding output by more than a threshold.
9. The method of claim 8, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the method further comprises the computer system: operating on the output on which the computer system is configured to operate, and exclusive of the corresponding output from the qualifiable software application.
10. The method of claim 8, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the method further comprises the computer system: producing a combined output from the output and the corresponding output; and operating on the combined output.
11. The method of claim 10, wherein executing the certifiable software application, and executing the qualifiable software application, further include producing respective figures of merit for the output and the corresponding output, and wherein producing the combined output includes Kalman filtering the output and the corresponding output weighted by the respective figures of merit.
12. The method of claim 8 further comprising: executing a third software application as the certifiable software application and the qualifiable software application are executed, the third software application being a second certifiable or qualifiable software application, the third software application being executed to process the input data to produce a second corresponding output, wherein cross-checking the output includes cross-checking the output from the certifiable software application by comparison with the corresponding output and the second corresponding output, and wherein generating the alert includes generating the alert that the output from the certifiable software is unverified when the comparison indicates that the output differs from both the corresponding output and the second corresponding output by more than the threshold.
13. The method of claim 8, wherein the computer system is an avionics system of an aircraft moving toward a hub that defines a target for the aircraft, the certifiable software application is a certifiable object detection application, and the qualifiable software application is a qualifiable object detection application, wherein executing the certifiable software application includes executing the certifiable object detection application to process an image of the hub to produce an output in which the target is detected in the image, wherein executing the qualifiable software application includes executing the qualifiable object detection application to process the image of the hub to produce a corresponding output in which the target is detected in the image, and wherein cross-checking the output includes cross-checking the output by comparison with the corresponding output to verify the output from the certifiable object detection application.
14. The method of claim 13, wherein the output from the certifiable object detection application is verified when the comparison indicates that the output differs from the corresponding output by no more than the threshold that decreases with distance between the aircraft and the hub.
15. A computer-readable storage medium that is non-transitory and has computer-readable program code stored therein that in response to execution by processing circuitry, causes a computer system to at least: execute a certifiable software application composed of static program instructions executed sequentially to process input data to produce an output on which the computer system is configured to operate, the certifiable software application being certifiable for the computer system according to a certification standard; execute a qualifiable software application during execution of the certifiable software application, the qualifiable software application using a model iteratively built using a machine learning algorithm to process the input data to produce a corresponding output, the qualifiable software application being non-certifiable for the computer system according to the certification standard; cross-check the output from the certifiable software application by comparison with the corresponding output from the qualifiable software application to verify the output from the certifiable software application, and thereby improve integrity of the computer system; and generate an alert that the output from the certifiable software application is unverified when the comparison indicates that the output differs from the corresponding output by more than a threshold.
16. The computer-readable storage medium of claim 15, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the computer-readable storage medium has further computer-readable program code stored therein that in response to execution by the processing circuitry causes the computer system to further at least: operate on the output on which the computer system is configured to operate, and exclusive of the corresponding output from the qualifiable software application.
17. The computer-readable storage medium of claim 15, wherein the output from the certifiable software application is verified when the comparison indicates that the output differs from the corresponding output from the qualifiable software application by no more than the threshold, and the computer-readable storage medium has further computer-readable program code stored therein that in response to execution by the processing circuitry causes the computer system to further at least: produce a combined output from the output and the corresponding output; and operate on the combined output.
18. The computer-readable storage medium of claim 17, wherein the computer system being caused to execute the certifiable software application, and execute the qualifiable software application, further includes the computer system being caused to produce respective figures of merit for the output and the corresponding output, and wherein the computer system being caused to produce the combined output includes being caused to Kalman filter the output and the corresponding output weighted by the respective figures of merit.
19. The computer-readable storage medium of claim 15, having further computer-readable program code stored therein that in response to execution by the processing circuitry causes the computer system to further at least: execute a third software application as the certifiable software application and the qualifiable software application are executed, the third software application being a second certifiable or qualifiable software application, the third software application being executed to process the input data to produce a second corresponding output, wherein the computer system being caused to cross-check the output includes being caused to cross-check the output from the certifiable software application by comparison with the corresponding output and the second corresponding output, and wherein the computer system being caused to generate the alert includes being caused to generate the alert that the output from the certifiable software is unverified when the comparison indicates that the output differs from both the corresponding output and the second corresponding output by more than the threshold.
20. The computer-readable storage medium of claim 15, wherein the computer system is an avionics system of an aircraft moving toward a hub that defines a target for the aircraft, the certifiable software application is a certifiable object detection application, and the qualifiable software application is a qualifiable object detection application, wherein the computer system being caused to execute the certifiable software application includes being caused to execute the certifiable object detection application to process an image of the hub to produce an output in which the target is detected in the image, wherein the computer system being caused to execute the qualifiable software application includes being caused to execute the qualifiable object detection application to process the image of the hub to produce a corresponding output in which the target is detected in the image, and wherein the computer system being caused to cross-check the output includes being caused to cross-check the output by comparison with the corresponding output to verify the output from the certifiable object detection application.
21. The computer-readable storage medium of claim 20, wherein the output from the certifiable object detection application is verified when the comparison indicates that the output differs from the corresponding output by no more than the threshold that decreases with distance between the aircraft and the hub.
</claims>
</document>
