<document>

<filing_date>
2019-10-07
</filing_date>

<publication_date>
2020-12-15
</publication_date>

<priority_date>
2016-12-06
</priority_date>

<ipc_classes>
G06F16/2457,G06F16/248,G06F16/25,G06F16/332,G06F16/84,G06F16/9535,G06F16/958,H04L29/08
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
CLARK, MITCHELL
HSU, KEVIN
KHAITAN, PRIYANKA
WEI, HAICHAO
</inventors>

<docdb_family_id>
62243215
</docdb_family_id>

<title>
Dialog system for transitioning between state diagrams
</title>

<abstract>
Systems and methods are provided for receiving and processing a query to determine an intent of the query, and analyzing the intent of the query to determine that the intent of the query is associated with a use case state diagram. Systems and methods further provide for traversing a plurality of nodes in the user case state diagram to generate a value for each relevant node, performing an operation associated with the query using the generated values, and providing the results of the operation to a computing device.
</abstract>

<claims>
1. A method comprising: determining, by a server computer, that an intent of a first query received from a user via a computing device is associated with a first use case state diagram of a plurality of predetermined use case state diagrams, wherein the first use case state diagram comprises a plurality of nodes to traverse to satisfy a query; traversing the first use case state diagram by generating and storing a value for each node traversed in the first use case state diagram based on available data or data requested from the computing device; during traversal of the first use case state diagram, receiving response data in response to data requested from the computing device; determining that the response data is a second query with an intent associated with a second use case state diagram of the plurality of predetermined use case state diagrams; traversing the second use case state diagram to provide a response to the second query; receiving a third query from the computing device; processing the third query to determine an intent of the third query; determining that the intent of the third query is associated with the first use case state diagram, wherein generated values for a plurality of nodes of the first use case state diagram continue to persist in memory; determining a node where the user left off in the first use case diagram based on the generated values; and continuing traversing the first user case diagram from the node where the user left off in the first user case diagram to provide a response to the third query.
2. The method of claim 1, wherein the value for a node of the first state diagram is stored in volatile memory instead of a permanent storage device.
3. The method of claim 1, wherein each node of the first use case state diagram comprises a key value pair and wherein the key in the key-value pair is a question or request for information associated with the node and wherein the value is the data associated with an answer or received data requested.
4. The method of claim 3, wherein traversing the first use case diagram comprises, for each node in a flow of the first use case state diagram: determining whether data is available to determine a value for the node; based on a determination that data is available to determine a value for the node the value for the node based on the data, and storing the value in the key-value pair for the node; based on a determination that data is not available to determine a value for the node, generating a request message to request the data from the computing device, receiving the data from the computing device, generating the value for the node based on the data received from the computing device, and storing the value in the key-value pair for the node.
5. The method of claim 3, further comprising: performing an operation associated with the first query using the key-value pairs of the plurality of nodes that contain generated values to provide the response to the third query.
6. The method of claim 5, further comprising: deleting the generated values stored in nodes of the first use case state diagram after providing the response to the third query.
7. The method of claim 1, wherein the plurality of nodes comprise conditional nodes and non-conditional nodes.
8. The method of claim 1, wherein each node of the plurality of nodes comprises a unique identifier to identify each node.
9. The method of claim 1, wherein each node of the plurality of nodes comprises a plurality of keys.
10. A server computer comprising: a memory that stores instructions; and one or more processors configured by the instructions to perform operations comprising: determining that an intent of a first query received from a user via a computing device is associated with a first use case state diagram of a plurality of predetermined use case state diagrams, wherein the first use case state diagram comprises a plurality of nodes to traverse to satisfy a query; traversing the first use case state diagram by generating and storing a value for each node traversed in the first use case state diagram based on available data or data requested from the computing device; during traversal of the first use case state diagram, receiving response data in response to data requested from the computing device; determining that the response data is a second query with an intent associated with a second use case state diagram of the plurality of predetermined use case state diagrams; traversing the second use case state diagram to provide a response to the second query; receiving a third query from the computing device; processing the third query to determine an intent of the third query; determining that the intent of the third query is associated with the first use case state diagram, wherein generated values for a plurality of nodes of the first use case state diagram continue to persist in memory; determining a node where the user left off in the first use case diagram based on the generated values; and continuing traversing the first user case diagram from the node where the user left off in the first user case diagram to provide a response to the third query.
11. The server computer of claim 10, wherein the value for a node of the first state diagram is stored in volatile memory instead of a permanent storage device.
12. The server computer of claim 10, wherein each node of the first use case state diagram comprises a key value pair and wherein the key in the key-value pair is a question or request for information associated with the node and wherein the value is the data associated with an answer or received data requested.
13. The server computer of claim 12, wherein traversing the first use case diagram comprises, for each node in a flow of the first use case state diagram: determining whether data is available to determine a value for the node; based on a determination that data is available to determine a value for the node the value for the node based on the data, and storing the value in the key-value pair for the node; based on a determination that data is not available to determine a value for the node, generating a request message to request the data from the computing device, receiving the data from the computing device, generating the value for the node based on the data received from the computing device, and storing the value in the key-value pair for the node.
14. The server computer of claim 12, the operations further comprising: performing an operation associated with the first query using the key-value pairs of the plurality of nodes that contain generated values to provide the response to the third query.
15. The server computer of claim 14, the operations further comprising: deleting the generated values stored in nodes of the first use case state diagram after providing the response to the third query.
16. The server computer of claim 10, wherein the plurality of nodes comprise conditional nodes and non-conditional nodes.
17. The server computer of claim 10, wherein each node of the plurality of nodes comprises a unique identifier to identify each node.
18. The server computer of claim 10, wherein each node of the plurality of nodes comprises a plurality of keys.
19. A non-transitory computer-readable medium comprising instructions stored thereon that are executable by at least one processor to cause a computing device to perform operations comprising: determining that an intent of a first query received from a user via a computing device is associated with a first use case state diagram of a plurality of predetermined use case state diagrams, wherein the first use case state diagram comprises a plurality of nodes to traverse to satisfy a query; traversing the first use case state diagram by generating and storing a value for each node traversed in the first use case state diagram based on available data or data requested from the computing device; during traversal of the first use case state diagram, receiving response data in response to data requested from the computing device; determining that the response data is a second query with an intent associated with a second use case state diagram of the plurality of predetermined use case state diagrams; traversing the second use case state diagram to provide a response to the second query; receiving a third query from the computing device; processing the third query to determine an intent of the third query; determining that the intent of the third query is associated with the first use case state diagram, wherein generated values for a plurality of nodes of the first use case state diagram continue to persist in memory; determining a node where the user left off in the first use case diagram based on the generated values; and continuing traversing the first user case diagram from the node where the user left off in the first user case diagram to provide a response to the third query.
20. The non-transitory computer-readable medium of claim 19, the operations further comprising: deleting the generated values stored in nodes of the first use case state diagram after providing the response to the third query.
</claims>
</document>
