<document>

<filing_date>
2020-05-01
</filing_date>

<publication_date>
2020-11-05
</publication_date>

<priority_date>
2019-05-02
</priority_date>

<ipc_classes>
G06F30/30
</ipc_classes>

<assignee>
SIFIVE
</assignee>

<inventors>
CHEN HAN
</inventors>

<docdb_family_id>
73017743
</docdb_family_id>

<title>
GENERATION OF DYNAMIC DESIGN FLOWS FOR INTEGRATED CIRCUITS
</title>

<abstract>
Systems and methods are disclosed for to generation of dynamic design flows for integrated circuits. For example, a method may include accessing a design flow configuration data structure, wherein the design flow configuration data structure is encoded in a tool control language; based on the design flow configuration data structure, selecting multiple flowmodules from a set of flowmodules, wherein each flowmodule provides an application programming interface, in the tool control language, to a respective electronic design automation tool; based on the design flow configuration data structure, generating a design flow as a directed acyclic graph including the selected flowmodules as vertices; and generating an output integrated circuit design data structure, based on one or more input integrated circuit design data structures, using the design flow to control the respective electronic design automation tools of the selected flowmodules.
</abstract>

<claims>
1. A method compri sing :
accessing a design flow configuration data structure, wherein the design flow configuration data structure is encoded in a tool control language;
based on the design flow configuration data structure, selecting multiple flowmodules from a set of flowmodules, wherein each flowmodule in the set of flowmodules provides an application programming interface, in the tool control language, to a respective electronic design automation tool;
based on the design flow configuration data structure, generating a design flow as a directed acyclic graph including the selected flowmodules as vertices;
generating an output integrated circuit design data structure, based on one or more input integrated circuit design data structures, using the design flow to control the respective electronic design automation tools of the selected flowmodules; and
transmitting, storing, or displaying the output integrated circuit design data structure.
2. The method of claim 1, in which generating the design flow comprises:
generating, based on the design flow configuration data structure, a first design flow; generating a current integrated circuit design data structure, based on one or more input integrated circuit design data structures, using the first design flow;
determining one or more parameters of the current integrated circuit design data structure;
inputting the one or more parameters to a machine learning module to obtain one or more feedback parameters as output of the machine learning module; and
generating, based on the one or more feedback parameters, a next design flow.
3. The method of claim 2, wherein the one or more parameters of the current integrated circuit design data structure include estimates of power, performance, and area for an integrated circuit described by the current integrated circuit design data structure.
4. The method of any of claims 1 to 3, comprising:
generating a graphical representation of the directed acyclic graph of the design flow; and
transmitting, storing, or displaying the graphical representation.
5. The method of any of claims 1 to 4, wherein the design flow includes a vertex corresponding to a task for hypertext markup language generation, comprising:
generating a hypertext markup language data structure, based on the output integrated circuit design data structure, using the design flow; and
transmitting, storing, or displaying the hypertext markup language data structure.
6. The method of any of claims 1 to 5, wherein the design flow is encoded as a make file.
7. The method of any of claims 1 to 5, wherein the design flow is encoded as a make++ file.
8. The method of any of claims 1 to 7, wherein the output integrated circuit design data structure includes a physical design data structure for an integrated circuit.
9. The method of any of claims 1 to 7, wherein the output integrated circuit design data structure includes a GDSII file for an integrated circuit.
10. The method of any of claims 1 to 9, wherein a respective electronic design automation tool of one of the selected flowmodules is a source synthesis tool, a respective electronic design automation tool of one of the selected flowmodules is a place and route tool, and a respective electronic design automation tool of one of the selected flowmodules is a static timing analysis tool.
11. The method of any of claims 1 to 10, wherein the one or more input integrated circuit design data structures include a register-transfer level data structure.
12. The method of any of claims 1 to 11, wherein the design flow configuration data structure is part of a design parameters data structure, comprising:
accessing the design parameters data structure, wherein the design parameters data structure includes values of design parameters of an integrated circuit design;
responsive to a command identifying the design parameters data structure, generating a register-transfer level data structure for an integrated circuit based on the design parameters data structure;
responsive to the command identifying the design parameters data structure, generating a software development kit for the integrated circuit based on the register-transfer level data structure;
wherein the multiple flowmodules are selected responsive to the command identifying the design parameters data structure;
wherein the design flow is generated responsive to the command identifying the design parameters data structure;
wherein the output integrated circuit design data structure includes a physical design data structure for the integrated circuit that is generated, responsive to the command identifying the design parameters data structure, based on the register-transfer level data structure.
responsive to the command identifying the design parameters data structure, generating a test plan for an integrated circuit based on the design parameters data structure and acceptance criteria;
responsive to the command identifying the design parameters data structure, invoking tests for the integrated circuit based on the test plan, the register-transfer level data structure, the software development kit, and the physical design data structure to obtain a set of test results; and
transmitting, storing, or displaying a design data structure based on the registertransfer level data structure, the software development kit, the physical design data structure, and the test results.
13. The method of any of claims 1 to 12, comprising:
transmitting a physical design specification based on the physical design data structure to a server to invoke manufacturing of the integrated circuit.
14. The method of any of claims 1 to 12, comprising:
manufacturing the integrated circuit;
installing the integrated circuit in a system configured to operate the integrated circuit responsive to commands received via communications with a cloud server; and
transmitting a login for accessing and controlling the integrated circuit.
15. A system comprising:
a network interface;
a memory; and
a processor, wherein the memory includes instructions executable by the processor to cause the system to:
access a design flow configuration data structure, wherein the design flow configuration data structure is encoded in a tool control language;
based on the design flow configuration data structure, select multiple flowmodules from a set of flowmodules, wherein each flowmodule in the set of flowmodules provides an application programming interface, in the tool control language, to a respective electronic design automation tool;
based on the design flow configuration data structure, generate a design flow as a directed acyclic graph including the selected flowmodules as vertices; and
generate an output integrated circuit design data structure, based on one or more input integrated circuit design data structures, using the design flow to control the respective electronic design automation tools of the selected flowmodules.
16. The system of claim 15, wherein the memory includes instructions executable by the processor to cause the system to:
generate, based on the design flow configuration data structure, a first design flow; generate a current integrated circuit design data structure, based on one or more input integrated circuit design data structures, using the first design flow;
determine one or more parameters of the current integrated circuit design data structure;
input the one or more parameters to a machine learning module to obtain one or more feedback parameters as output of the machine learning module; and
generate, based on the one or more feedback parameters, a next design flow.
17. The system of claim 16, wherein the one or more parameters of the current integrated circuit design data structure include estimates of power, performance, and area for an integrated circuit described by the current integrated circuit design data structure.
18. The system of any of claims 15 to 17, wherein the memory includes instructions executable by the processor to cause the system to:
generate a graphical representation of the directed acyclic graph of the design flow; and
transmit, store, or display the graphical representation.
19. The system of any of claims 15 to 18, wherein the design flow is encoded as a make file.
20. The system of any of claims 15 to 18, wherein the design flow is encoded as a make++ file.
21. The system of any of claims 15 to 20, wherein the output integrated circuit design data structure includes a physical design data structure for an integrated circuit.
22. The system of any of claims 15 to 20, wherein the output integrated circuit design data structure includes a GDSII file for an integrated circuit.
23. The system of any of claims 15 to 22, wherein a respective electronic design automation tool of one of the selected flowmodules is a source synthesis tool, a respective electronic design automation tool of one of the selected flowmodules is a place and route tool, and a respective electronic design automation tool of one of the selected flowmodules is a static timing analysis tool.
24. The system of any of claims 15 to 23, wherein the one or more input integrated circuit design data structures include a register-transfer level data structure.
25. The system of any of claims 15 to 24, wherein the design flow configuration data structure is part of a design parameters data structure, and the memory includes instructions executable by the processor to cause the system to:
access the design parameters data structure, wherein the design parameters data structure includes values of design parameters of an integrated circuit design;
responsive to a command identifying the design parameters data structure, generate a register-transfer level data structure for an integrated circuit based on the design parameters data structure;
responsive to the command identifying the design parameters data structure, generate a software development kit for the integrated circuit based on the register-transfer level data structure;
wherein the multiple flowmodules are selected responsive to the command identifying the design parameters data structure;
wherein the design flow is generated responsive to the command identifying the design parameters data structure;
wherein the output integrated circuit design data structure includes a physical design data structure for the integrated circuit that is generated, responsive to the command identifying the design parameters data structure, based on the register-transfer level data structure.
responsive to the command identifying the design parameters data structure, generate a test plan for an integrated circuit based on the design parameters data structure and acceptance criteria; and
responsive to the command identifying the design parameters data structure, invoke tests for the integrated circuit based on the test plan, the register-transfer level data structure, the software development kit, and the physical design data structure to obtain a set of test results.
26. The system of any of claims 15 to 25, wherein the memory includes instructions executable by the processor to cause the system to:
transmit a physical design specification based on the physical design data structure to a server to invoke manufacturing of the integrated circuit.
</claims>
</document>
