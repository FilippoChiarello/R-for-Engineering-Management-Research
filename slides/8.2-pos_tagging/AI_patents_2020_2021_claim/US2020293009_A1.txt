<document>

<filing_date>
2019-03-11
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-11
</priority_date>

<ipc_classes>
B60W50/00,G05B13/04
</ipc_classes>

<assignee>
MITSUBISHI ELECTRIC RESEARCH LABORATORIES
</assignee>

<inventors>
DI CAIRANO, STEFANO
HESPANHOL, PEDRO
QUIRYNEN, RIEN
</inventors>

<docdb_family_id>
72423312
</docdb_family_id>

<title>
Model Predictive Control of Systems with Continuous and Discrete Elements of Operations
</title>

<abstract>
A controller for controlling a system with continuous and discrete elements of operation accepts measurements of a current state of the system, solves a mixed-integer model predictive control (MI-MPC) problem subject to state constraints on the state of the system to produce control inputs to the system, and submits the control inputs to the system thereby changing the state of the system. To solve the MI-MPC, the controller transforms the state constraints into state-invariant control constraints on the control inputs to the system, such that any combination of values for the control inputs, resulting in a sequence of values for the state variables that satisfy the state constraints, also satisfy the state-invariant control constraints, and solve the MI-MPC problem subject to the state constraints and the state-invariant control constraints.
</abstract>

<claims>
1. A controller for controlling a system with continuous and discrete elements of operation, wherein at least a subset of the control inputs for controlling the system are discrete variables assuming values belonging to a discrete set of values, comprising: a processor configured to accept measurements of a current state of the system, solve a mixed-integer model predictive control (MI-MPC) problem for each control step to produce control inputs to the system, and submit the control inputs to the system thereby changing the state of the system, wherein the processor solves the MI-MPC problem subject to state constraints on a state of the system, wherein for a current control step the processor is configured to transform the state constraints into state-invariant control constraints on the control inputs to the system, such that any combination of values for the control inputs, resulting in a sequence of values for the state variables that satisfy the state constraints, also satisfy the state-invariant control constraints; and solve the MI-MPC problem subject to the state constraints and the state-invariant control constraints.
2. The controller of claim 1, wherein the processor, to solve the MI-MPC problem subject to the state-invariant control constraints is configured to select multiple combinations of different values for at least a subset of the control inputs with tightened control bounds values that satisfy the state-invariant control constraints; solve an integer-relaxed optimization problem for each combination of different values for at least the subset of the control inputs to produce a set of solutions optimizing a performance metric according to an objective function of the MI-MPC problem; and select a solution of the MI-MPC problem from the set of solutions corresponding to an optimal value of the performance metric.
3. The controller of claim 1, wherein the processor is configured to solve the MI-MPC problem with a branch-and-bound method that searches for a solution of an MPC problem within a search space defined by relaxation of the discrete set of values into a partition of continuous search space that satisfies the state-invariant control constraints.
4. The controller of claim 3, wherein the branch-and-bound method iteratively partitions the search space until the solution of the MPC problem belonging to the discrete set of values is found, wherein the state-invariant control constraints tighten the search space to reduce the number of MPC problems that need to be solved in order to find an optimal solution, and wherein each relaxed MPC problem is solved subject to the state constraints.
5. The controller of claim 3, wherein at least some of the state-invariant control constraints are coupled with each other for some or all time instances of a control horizon of the MPC problem, wherein the processor decouples the state-invariant control constraints to form the search space.
6. The controller of claim 5, wherein the processor decouples the state-invariant control constraints for different time instances of the control horizon using a domain propagation method that iteratively tightens a set of conservative bound values for each of the control inputs, representing the decoupled state-invariant control constraints, given an initial set of control bounds as well as the state-invariant control constraints that are coupled with each other for some or all time instances of a control horizon of the MPC problem.
7. The controller of claim 3, wherein the branch-and-bound method iteratively partitions the search space into a nested tree of regions including a first region and a second region nested in a common region, and wherein the processor is configured to solve the MPC problem for a first partition of the search space defined by the first region to produce a first solution; solve the MPC problem for a second partition of the search space defined by the second region to produce a second solution; compare both the first and the second solution with the currently known bound to the optimal objective value; prune either the first, the second or both regions from the nested tree of regions when their performance metric is less optimal than the currently known bound to the optimal objective value; update the currently known bound value to the optimal objective in case either the first or the second partition results in a discrete feasible solution to the MI-MPC problem; and select and partition one remaining region into multiple nested regions and solve MPC problems for at least some of the multiple nested regions until the optimal solution belonging to the discrete set of values is found.
8. The controller of claim 3, wherein the branch-and-bound method iteratively partitions the search space into a nested tree of regions to find an optimal solution of the MPC problem within the search space that belongs to the discrete set of values, wherein, to perform an iteration, the processor is configured to solve the MPC problem for a leaf region of the nested tree defining a partition of the search space to find a solution of the MPC problem for the nested region; compare the solution of the MPC problem for the leaf region with the currently known best discrete feasible solution of the MI-MPC problem for the nested tree of regions; update the best bound value for the discrete feasible solution of the MI-MPC problem for the nested tree of regions with the solution of the MPC problem for the leaf region, if the solution of the MPC problem for the leaf region is discrete feasible and more optimal than the currently known best discrete feasible solution of the MI-MPC problem for the nested tree of regions; and prune the leaf region from the nested tree of regions if the performance metric for the solution of the MPC problem for the leaf region is less optimal than the currently known best discrete feasible MI-MPC solution.
9. The controller of claim 8, wherein the branch-and-bound method uses a tree propagation to initialize the solution of the MI-MPC problem and the corresponding nested tree of regions for the current control step with a one-step ahead time prediction from the solution of the MI-MPC problem and the corresponding nested tree of regions determined for a previous control time step.
10. The controller of claim 9, wherein the processor, to initialize the branch-and-bound method using the tree propagation is configured to initialize a current nested tree of regions of the current control time step, wherein the initialized current nested tree of regions defines branching variables and corresponding pseudo-cost information for each of the discrete variables, with an order of the branching variables and pseudo-cost information from the solution of the MI-MPC problem and a corresponding previous nested tree of regions determined for the previous control time step; shift an index of the branched variables by one stage in a control horizon of the MPC problem for the current control time step along a solution path in the previous nested tree of regions determined for the previous control time step; remove the branched variables from the current nested tree of regions that are associated with a stage that falls outside of the horizon for the current control time step, after shifting the index of the branched variables; remove the branched variables from the current nested tree of regions for which the values are already integer feasible in a relaxed MPC solution; remove the branched variables from the current nested tree of regions for which the pseudo-cost information indicates insufficient branching during previous control time steps.
11. The controller of claim 9, wherein the processor is further configured to warm start a current solution for each MPC solution in the current nested tree of regions, based on previous MPC solutions from the previous control time steps.
12. The controller of claim 2, wherein the processor is further configured to perform a post-solve method after solving the MPC problem for at least one combination of values for at least the subset of the discrete control inputs if the corresponding MPC solution is not yet integer feasible for all discrete control inputs and if the performance metric for the solution of the MPC problem is more optimal than the currently known best discrete feasible MI-MPC solution, wherein for performing the post-solve method the processor is configured to: perform a subset of iterations of an optimization of a dual of the MPC problem for a search region, in which one of the discrete control input variables that is not yet integer feasible is selected and constrained to be equal to one of its discrete set of values; prune the search region, if the performance metric after the subset of iterations of the optimization of the dual of the MPC problem is less optimal than a current best discrete feasible MI-MPC solution; and fix the discrete control input variable to a particular integer value if the regions corresponding to all other possible integer values for this discrete control input variable have already been pruned.
13. The controller of claim 12, wherein each MPC problem for a combination of values for at least the subset of the discrete control inputs is solved using an active-set method and the post-solve method corresponds to a subset of dual active-set iterations that can reuse a matrix factorization or a low-rank updated version of the matrix factorization for a system matrix when solving a linear system of optimality conditions corresponding to the dual of the MPC problem.
14. The controller of claim 1, wherein the controlled system is a vehicle, and wherein the controller determines an input to the vehicle based on the mixed-integer control solution, wherein the input to the vehicle includes one or a combination of an acceleration of the vehicle, an engine torque of the vehicle, brake torques, and a steering angle, and the discrete optimization variables are used to model one or a combination of discrete control decisions, switching in the system dynamics, gear shifting, and obstacle avoidance constraints.
15. A vehicle including the controller of claim 1.
16. The controller of claim 1, wherein the control system is a spacecraft, and wherein the controller determines an input to the spacecraft based on the mixed-integer control solution, wherein the input to the spacecraft actuates one or a combination of thrusters and momentum exchange devices, and the discrete optimization variables are used to model one or a combination of discrete control decisions, switching in the system dynamics, integer values for the thruster commands, and obstacle avoidance constraints.
17. The predictive controller of claim 1, wherein the control system is a vapor compression system, and wherein the controller determines an input to the vapor compression system based on the mixed-integer control solution, wherein the input to the vapor compression system includes one or a combination of an indoor unit fan speed, an outdoor unit fan speed, a compressor rotational speed, an expansion valve position, and a flow reversing valve position, and the discrete optimization variables are used to model one or a combination of discrete control decisions, switching in the system dynamics, and integer values for the commands that are sent to the valves and/or to the fans.
18. A method for controlling a system with continuous and discrete elements of operation, wherein at least a subset of the control inputs for controlling the system are discrete variables assuming values belonging to a discrete set of values, wherein the method uses a processor coupled with stored instructions implementing the method, wherein the instructions, when executed by the processor carry out steps of the method, comprising: accepting measurements of a state of the system; solving a mixed-integer model predictive control (MI-MPC) problem subject to state constraints on the state of the system to produce control inputs to the system; and submitting the control inputs to the system thereby changing the state of the system, wherein solving the MI-MPC problem comprises: transforming the state constraints into state-invariant control constraints on the control inputs to the system, such that any combination of values for the control inputs, resulting in a sequence of values for the state variables that satisfy the state constraints, also satisfy the state-invariant control constraints; and solving the MI-MPC problem subject to the state constraints and the state-invariant control constraints.
19. The method of claim 18, wherein the MI-MPC problem is solved with a branch-and-bound method that searches for a solution of an MPC problem within a search space defined by relaxation of the discrete set of values into a partition of continuous search space that satisfies the state-invariant control constraints.
20. A non-transitory computer readable storage medium embodied thereon a program executable by a processor for performing a method, the method comprising: accepting measurements of a state of the system; solving a mixed-integer model predictive control (MI-MPC) problem subject to state constraints on the state of the system to produce control inputs to the system; and submitting the control inputs to the system thereby changing the state of the system, wherein solving the MI-MPC problem comprises: transforming the state constraints into state-invariant control constraints on the control inputs to the system, such that any combination of values for the control inputs, resulting in a sequence of values for the state variables that satisfy the state constraints, also satisfy the state-invariant control constraints; and solving the MI-MPC problem subject to the state constraints and the state-invariant control constraints.
</claims>
</document>
