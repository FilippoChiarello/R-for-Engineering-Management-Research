<document>

<filing_date>
2019-03-14
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-14
</priority_date>

<ipc_classes>
G06F3/06,G06F9/48,G06F9/50,G06K9/62,G06N20/00,H04L29/08
</ipc_classes>

<assignee>
DELL PRODUCTS
</assignee>

<inventors>
KHOSROWPOUR, FARZAD
VICHARE, NIKHIL
</inventors>

<docdb_family_id>
72289868
</docdb_family_id>

<title>
USING MACHINE LEARNING TO IMPROVE INPUT/OUTPUT PERFORMANCE OF AN APPLICATION
</title>

<abstract>
In some examples, a computing device may determine that a selected application is executing and gather, over a predetermined time interval, data associated with operations being performed to the input/output stack by the selected application. After gathering the data, a classifier may analyze the data and determine a particular workload type from a predefined set of workload types associated with the selected application. The computing device may select a particular profile from a plurality of predefined profiles based at least in part on the particular workload type, and modify, based on the particular profile, a plurality of parameters to create a plurality of modified parameters. The modified parameters may reduce an execution time of performing the operations to the input/output stack.
</abstract>

<claims>
1. A method comprising: determining, by one or more processors of a computing device, that a selected application is performing operations to an input/output stack of the computing device; gathering, by the one or more processors and over a predetermined interval of time, data associated with the selected application performing the operations to the input/output stack; performing, by the one or more processors, an analysis of the data after gathering the data; determining, by a classifier executed by the one or more processors and based at least in part on the analysis, a particular workload type from a predefined set of workload types that is associated with the selected application; selecting, by the one or more processors, a particular profile from a plurality of predefined profiles based at least in part on the particular workload type; and modifying, by the one or more processors and based on the particular profile, a plurality of parameters to create a plurality of modified parameters to reduce an execution time of performing the operations to the input/output stack.
2. The method of claim 1, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises: modifying a process priority associated with the application to a highest priority; modifying a power plan of the operating system to a high-performance power plan; modifying a hyperthreading feature associated with the one or more processors; disabling a core parking feature associated with the one or more processors; disabling a compression feature to compress data stored in the random-access memory; and modifying a page combining feature of the operating system to remove duplicates of content stored in the random-access memory.
3. The method of claim 1, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises: modifying a vertical synchronization feature associated with synchronizing a frame rate output of the selected application with a monitor refresh rate of a display device associated with the computing device; and modifying a pre-fetch feature associated with the one or more processors to store frequently accessed data in a random-access memory of the computing device.
4. The method of claim 1, further comprising: displaying a user interface; and receiving, via the user interface, a user selection of a particular application of a plurality of applications to create the selected application.
5. The method of claim 1, wherein the predetermined interval of time comprises one of fifteen minutes, thirty minutes, forty-five minutes, or sixty minutes.
6. The method of claim 1, wherein the input/output stack comprises: a file system used by the computing device; a random-access memory used by the computing device; a logical storage used by the operating system; a cache allocated in the random-access memory by the operating system; a pagefile used by the operating system; and physical storage accessible to the operating system.
7. The method of claim 1, further comprising: ordering, according to frequency of occurrence, the operations performed by the selected application to the input/output stack; determining a subset of the operations comprising a plurality of most frequently performed operations performed by the selected application to the input/output stack; comparing the subset of the operations to frequent operations associated with each of the predefined set of workload types; and determining that the subset of the operations associated with the selected application matches the frequent operations associated with the particular workload type.
8. A computing device comprising: one or more processors; and one or more non-transitory computer readable media storing instructions executable by the one or more processors to perform operations comprising: determining that a selected application is performing operations to an input/output stack of the computing device; gathering, over a predetermined interval of time, data associated with the selected application performing the operations to the input/output stack; performing an analysis of the data after gathering the data; determining, by a classifier and based at least in part on the analysis, a particular workload type from a predefined set of workload types that is associated with the selected application; selecting a particular profile from a plurality of predefined profiles based at least in part on the particular workload type; and modifying, based on the particular profile, a plurality of parameters to create a plurality of modified parameters, the modified parameters reducing an execution time of performing the operations to the input/output stack.
9. The computing device of claim 8, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises at least one of: modifying a process priority associated with the application to a highest priority; modifying a power plan of the operating system to a high-performance power plan; modifying a hyperthreading feature associated with the one or more processors; disabling a core parking feature associated with the one or more processors; disabling a compression feature to compress data stored in the random-access memory; or modifying a page combining feature of the operating system to remove duplicates of content stored in the random-access memory.
10. The computing device of claim 8, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises at least one of: modifying a vertical synchronization feature associated with synchronizing a frame rate output of the selected application with a monitor refresh rate of a display device associated with the computing device; or modifying a pre-fetch feature associated with the one or more processors to store frequently accessed data in a random-access memory of the computing device.
11. The computing device of claim 8, further comprising: displaying a user interface; and receiving, via the user interface, a user selection of a particular application of a plurality of applications to create the selected application.
12. The computing device of claim 8, wherein the input/output stack comprises: a file system used by the computing device; a random-access memory used by the computing device; a logical storage used by the operating system; a cache allocated in the random-access memory by the operating system; a pagefile used by the operating system; and physical storage accessible to the operating system.
13. The computing device of claim 8, further comprising: ordering, according to frequency of occurrence, the operations performed by the selected application to the input/output stack; determining a subset of the operations comprising a plurality of most frequently performed operations performed by the selected application to the input/output stack; comparing the subset of the operations to frequent operations associated with each of the predefined set of workload types; and determining that the subset of the operations associated with the selected application matches the frequent operations associated with the particular workload type.
14. One or more non-transitory computer readable media storing instructions executable by one or more processors to perform operations comprising: determining that a selected application is performing operations to an input/output stack of the computing device; gathering, over a predetermined interval of time, data associated with the selected application performing the operations to the input/output stack; performing an analysis of the data after gathering the data; determining, by a classifier and based at least in part on the analysis, a particular workload type from a predefined set of workload types that is associated with the selected application; selecting a particular profile from a plurality of predefined profiles based at least in part on the particular workload type; and modifying, based on the particular profile, a plurality of parameters to create a plurality of modified parameters, the modified parameters reducing an execution time of performing the operations to the input/output stack.
15. The one or more non-transitory computer readable media of claim 14, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises at least one of: modifying a process priority associated with the application to a highest priority; modifying a power plan of the operating system to a high-performance power plan; modifying a hyperthreading feature associated with the one or more processors; disabling a core parking feature associated with the one or more processors; disabling a compression feature to compress data stored in the random-access memory; or modifying a page combining feature of the operating system to remove duplicates of content stored in the random-access memory.
16. The one or more non-transitory computer readable media of claim 14, wherein modifying the plurality of parameters to create the plurality of modified parameters comprises at least one of: modifying a vertical synchronization feature associated with synchronizing a frame rate output of the selected application with a monitor refresh rate of a display device associated with the computing device; or modifying a pre-fetch feature associated with the one or more processors to store frequently accessed data in a random-access memory of the computing device.
17. The one or more non-transitory computer readable media of claim 14, further comprising: displaying a user interface; and receiving, via the user interface, a user selection of a particular application of a plurality of applications to create the selected application.
18. The one or more non-transitory computer readable media of claim 14, wherein the classifier is trained using multiple hardware platforms, multiple storage configurations, multiple workloads, and the predefined plurality of profiles to classify a workload based on input/output operations performed by a particular application and identify a profile to increase performance of the input/output operations.
19. The one or more non-transitory computer readable media of claim 14, wherein the input/output stack comprises: a file system used by the computing device; a random-access memory used by the computing device; a logical storage used by the operating system; a cache allocated in the random-access memory by the operating system; a pagefile used by the operating system; and physical storage accessible to the operating system.
20. The one or more non-transitory computer readable media of claim 14, wherein the operations further comprise: ordering, according to frequency of occurrence, the operations performed by the selected application to the input/output stack; determining a subset of the operations comprising a plurality of most frequently performed operations performed by the selected application to the input/output stack; comparing the subset of the operations to frequent operations associated with each of the predefined set of workload types; and determining that the subset of the operations associated with the selected application matches the frequent operations associated with the particular workload type.
</claims>
</document>
