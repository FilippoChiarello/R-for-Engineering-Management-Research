<document>

<filing_date>
2018-04-16
</filing_date>

<publication_date>
2020-10-13
</publication_date>

<priority_date>
2013-08-06
</priority_date>

<ipc_classes>
G06F11/20,G06F12/0871,G06F16/00,G06F16/172,G06F16/23,G06F16/907,G06F17/30,G06F21/50,G06F3/06,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
WALMART APOLLO
</assignee>

<inventors>
FRERKING, JOHN RANDY
JACKSON, RICHARD
</inventors>

<docdb_family_id>
63246374
</docdb_family_id>

<title>
Caching system and method
</title>

<abstract>
Disclosed is a caching system for processing web-based service requests. The caching system includes one or more pluralities of servers coupled to one or more online common storage. Each one of the plurality of servers processes caching service requests from one or more clients coupled to the plurality of servers. Each one of the plurality of servers is capable of operating in an active/single mode, and active/active mode, or an active/standby mode. A timestamp exchange process is used to update or eliminate outdated database records.
</abstract>

<claims>
1. An online caching system comprising: a first server resident at a first site, wherein the first server is communicatively coupled to a client, and wherein the first server processes a caching service request from the client; a first online storage communicatively coupled to the first server, wherein the first server stores a first database record comprising a key/value data in the first online storage; a second server resident at a second site, wherein the second server is communicatively coupled to the first server by a dark port, wherein the dark port is not available to the client for communication; and a second online storage communicatively coupled to the second server, wherein the second server stores a second database record comprising the key/value data in the second online storage; wherein the first server deletes the first database record in response to determining that both a) a first timestamp of the first database record and stored in the first online storage has expired, and b) a second timestamp of the second database record and stored in the second online storage has expired.
2. The online caching system of claim 1, wherein the second server deletes the second database record in response to determining that both a) the first timestamp has expired, and b) the second timestamp has expired.
3. The online caching system of claim 1, wherein the first server and the second server are each operable in either an active/active mode, or an active/standby mode.
4. The online caching system of claim 1, wherein the key/value data is associated with the caching service request.
5. The online caching system of claim 1, wherein the second server stores the second database record in the second online storage in response to receiving the caching service request from the first server.
6. A method of processing a caching service request from a client, the method comprising: caching a first database record in a first online storage, wherein the first database record comprises a key/value data associated with the caching service request and a first timestamp; caching a second database record in a second online storage, wherein the second database record comprises the key/value data and a second timestamp; determining, by the first server, that the first timestamp has expired; sending a timestamp update request from the first server to the second server via a dark port, wherein the dark port is not available to the client for communication; receiving, by the first server, an indication that the second timestamp has expired; and deleting the first database record and the second database record in response to determining that both the first timestamp and the second timestamp have expired.
7. The method of claim 6, further comprising sending, by the first server, the caching service request to the second server.
</claims>
</document>
