<document>

<filing_date>
2019-10-29
</filing_date>

<publication_date>
2020-05-07
</publication_date>

<priority_date>
2018-11-01
</priority_date>

<ipc_classes>
G06F9/50
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
IFTIMIE, SORIN
</inventors>

<docdb_family_id>
68766825
</docdb_family_id>

<title>
MACHINE LEARNING BASED CAPACITY MANAGEMENT AUTOMATED SYSTEM
</title>

<abstract>
Described herein is an automated capacity management system and method. Input information regarding current conditions of the computing system, and, user data requirements are received. Capacity is predicted based upon at least some of the received input information using a machine trained capacity model. Demand is predicted upon at least some of the received input using a machine trained demand model. Logic is applied to determine one or more mitigation actions to be taken with respect to the computing system in accordance with the predicted capacity and predicted demand. An action based upon the one or more determined mitigation actions is then performed.
</abstract>

<claims>
1. An automated capacity management system, comprising:
a computer comprising a processor and a memory having computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to:
receive input information regarding current conditions of the computing system, and, user data requirements;
predict capacity based upon at least some of the received input information using a machine trained capacity model;
predict demand based upon at least some of the received input using a machine trained demand model;
apply logic to determine one or more mitigation actions to be taken with respect to the computing system in accordance with the predicted capacity and predicted demand; and
perform an action based upon the one or more determined mitigation actions.
2. The system of claim 1, wherein the one or more determined mitigation actions comprise at least one of a rule for pre-production validation, an offer restriction, a quota threshold pre-production value, a defragmentation signal, an out for repair
order/recommendation, or a cluster buildout order/recommendation.
3. The system of claim 1, wherein the received input information further comprises an anticipated future condition of the computing system.
4. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to:
receive feedback with respect to a response of the computing system to the action taken; and,
update the capacity model in accordance with the received feedback.
5. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to:
receive feedback with respect to a response of the computing system to the action taken; and,
update the demand model in accordance with the received feedback.
6. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to:
receive feedback with respect to a response of the computing system to the action taken; and,
update the logic based upon the received feedback.
7. The system of claim 1, wherein at least one of the capacity model or the demand model is trained using one or more machine learning algorithms including a linear regression algorithm, a logistic regression algorithm, a decision tree algorithm, a support vector machine (SVM) algorithm, a Naive Bayes algorithm, a K-nearest neighbors (KNN) algorithm, a K-means algorithm, a random forest algorithm, a dimensionality reduction algorithm, an Artificial Neural Network (ANN) and/or a Gradient Boost & Adaboost algorithm.
8. The system of claim 1, wherein the action performed comprises at least one of taking the one or more determined mitigation actions or requesting user approval before taking the one or more determined mitigation actions.
9. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to:
train the capacity model in an unsupervised manner; and
train the demand model in an unsupervised manner.
10. A method of automatically managing capacity of a computing system, comprising: receiving input information regarding current conditions of the computing system, and, user data requirements;
predicting capacity based upon at least some of the received input information using a machine trained capacity model;
predicting demand based upon at least some of the received input using a machine trained demand model;
applying logic to determine one or more mitigation actions to be taken with respect to the computing system in accordance with the predicted capacity and predicted demand; and
performing an action based upon the one or more determined mitigation actions.
11. The method of claim 10, further comprising:
receiving feedback with respect to a response of the computing system to the action taken; and,
updating at least one of the capacity model, the demand model, or the logic in accordance with the received feedback.
12. The method of claim 10, wherein the capacity model is trained using one or more machine learning algorithms including a linear regression algorithm, a logistic regression algorithm, a decision tree algorithm, a support vector machine (SVM) algorithm, a Naive Bayes algorithm, a K-nearest neighbors (KNN) algorithm, a K-means algorithm, a random forest algorithm, a dimensionality reduction algorithm, an Artificial Neural Network (ANN) and/or a Gradient Boost & Adaboost algorithm.
13. The method of claim 10, wherein the demand model is trained using one or more machine learning algorithms including a linear regression algorithm, a logistic regression algorithm, a decision tree algorithm, a support vector machine (SVM) algorithm, a Naive Bayes algorithm, a K-nearest neighbors (KNN) algorithm, a K-means algorithm, a random forest algorithm, a dimensionality reduction algorithm, an Artificial Neural Network (ANN) and/or a Gradient Boost & Adaboost algorithm.
14. A computer storage media storing computer-readable instructions that when executed cause a computing device to:
receive input information regarding current conditions of the computing system, and, user data requirements;
predict capacity based upon at least some of the received input information using a machine trained capacity model;
predict demand based upon at least some of the received input using a machine trained demand model;
apply logic to determine one or more mitigation actions to be taken with respect to the computing system in accordance with the predicted capacity and predicted demand; and
perform an action based upon the one or more determined mitigation actions.
15. The computer storage media of claim 14 storing further computer-readable instructions that when executed cause the computing device to:
receive feedback with respect to a response of the computing system to the action taken; and,
update at least one of the capacity model, the demand model, or the logic in accordance with the received feedback.
</claims>
</document>
