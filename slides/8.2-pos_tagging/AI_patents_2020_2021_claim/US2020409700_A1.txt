<document>

<filing_date>
2019-06-28
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-06-28
</priority_date>

<ipc_classes>
G06F9/30,G06T1/20
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
CHITLUR, NAGABHUSHAN
TRIPLETT, JOSH
Yiannacouras, Peter
Sripada, Radhakrishna
Kondapally, Kalyan
</inventors>

<docdb_family_id>
74044511
</docdb_family_id>

<title>
EXECUTION UNIT ACCELERATOR
</title>

<abstract>
A processor to facilitate acceleration of instruction execution is disclosed. The processor includes a plurality of execution units (EUs), each including an instruction decode unit to decode an instruction into one or more operands and opcode defining an operation to be performed at an accelerator, a register file having a plurality of registers to store the one or more operands and an accelerator having programmable hardware to retrieve the one or more operands from the register file and perform the operation on the one or more operands.
</abstract>

<claims>
1. A processor to facilitate acceleration of instruction execution, comprising: a plurality of execution units (EUs), each including: an instruction decode unit to decode an instruction into one or more operands and opcode defining an operation to be performed at an accelerator; a register file having a plurality of registers to store the one or more operands; and an accelerator having one or more micro programmable gate arrays (uFPGAs) to retrieve the one or more operands from the register file and perform the operation on the one or more operands, wherein the one or more uFPGAs are programmed to perform operations associated with one or more graphics application programming interfaces (APIs).
2. The processor of claim 1, wherein the accelerator updates a target register in the register file with a result of the performed operation.
3. (canceled)
4. The processor of claim 1, wherein the one or more uFPGAs comprise: one or more Adaptive Logic Modules; and a memory.
5. The processor of claim 1, wherein one or more operations are programmed into the one or more uFPGAs via a compiler directive.
6. The processor of claim 1, wherein the operations are programmed into the one or more uFPGAs are prefetched from a compiler.
7. A method to facilitate acceleration of instruction execution, comprising: receiving an instruction at an execution unit; decoding the instruction into opcode defining one or more operations to be performed at one or more micro programmable gate arrays (uFPGAs) in the execution unit, wherein the one or more uFPGAs are programmed to perform operations associated with one or more graphics application programming interfaces (APIs); and performing the one or more operations at the one or more uFPGAs.
8. The method of claim 7, further comprising updating a target register in a register file with a result of the performed operation.
9. (canceled)
10. The method of claim 7, wherein the one or more uFPGAs comprise: one or more Adaptive Logic Modules; and a memory.
11. At least one non-transitory computer readable medium having instructions stored thereon, which when executed by one or more processors, cause the processors to: receive an instruction; decode the instruction into opcode defining one or more operations to be performed at one or more micro programmable gate arrays (uFPGAs) in an execution unit, wherein the one or more uFPGAs are programmed to perform operations associated with one or more graphics application programming interfaces (APIs); and perform the one or more operations at the one or more uFPGAs.
12. The computer readable medium of claim 11, having instructions stored thereon, which when executed by one or more processors, further cause the processors to update a target register in a register file with a result of the performed operation.
13. (canceled)
14. The computer readable medium of claim 11, wherein the one or more uFPGAs comprise: one or more Adaptive Logic Modules; and a memory.
15. A graphics processing unit (GPU), comprising: a plurality of execution units (EUs), each including: an instruction decode unit to decode an instruction into one or more operands and opcode defining an operation to be performed; one or more integer units to perform integer operations on the one or more operands; one or more floating point units to perform floating point operations on the one or more operands; and one or more accelerators having one or more micro programmable gate arrays (uFPGAs) to perform programmable operations on the one or more operands, wherein the one or more uFPGAs are programmed to perform operations associated with one or more graphics application programming interfaces (APIs).
16. The GPU of claim 15, further comprising a register file having a plurality of registers to store the one or more operands.
17. (canceled)
18. The GPU of claim 15, wherein the one or more uFPGAs comprise: one or more Adaptive Logic Modules; and a memory.
19. The GPU of claim 17, wherein one or more operations are programmed into the one or more uFPGAs via a compiler directive.
20. The GPU of claim 17, wherein the one or more uFPGAs are programmed via one or more hardware libraries.
</claims>
</document>
