<document>

<filing_date>
2019-12-12
</filing_date>

<publication_date>
2020-07-30
</publication_date>

<priority_date>
2019-01-30
</priority_date>

<ipc_classes>
G06N20/00,G06N3/08,G06Q10/08,H04W4/021,H04W4/029
</ipc_classes>

<assignee>
WALMART APOLLO
</assignee>

<inventors>
FU, MINGANG
ZHANG, SHENGYANG
KANDHADAI VASANTHAM, MADHAVAN
</inventors>

<docdb_family_id>
71731447
</docdb_family_id>

<title>
AUTOMATIC DETERMINATION OF PICKUP WAIT TIMES
</title>

<abstract>
A system including one or more processors and one or more non-transitory computer-readable media storing computing instructions configured to run on the one more processors and perform training a machine learning model based on historical input data for pickups by users that occurred during a historical time period and output data comprising actual wait times that occurred for the pickups by the users; receiving an order from a user for a pickup from a physical store during a selected time slot of a selected date; adding the order to a queue of assembled checked-in orders; determining an estimated arrival time based on geo-tracking; generating an estimated wait time using the machine learning model, as trained, and can be based on input data; and sending the estimated wait time to at least one of the physical store or the mobile device of the user. Other embodiments are disclosed.
</abstract>

<claims>
1. A system comprising: one or more processors; and one or more non-transitory computer-readable media storing computing instructions configured to run on the one more processors and perform: training a machine learning model based on historical input data for pickups by users that occurred during a historical time period and output data comprising actual wait times that occurred for the pickups by the users; receiving an order from a user for a pickup from a physical store during a selected time slot of a selected date; after items for the order have been picked and assembled at the physical store, sending a notification to the user that the order is ready to be picked up by the user; receiving a check-in message from a mobile device of the user; adding the order to a queue of assembled checked-in orders for the physical store; determining an estimated arrival time based on geo-tracking of the mobile device of the user; generating an estimated wait time using the machine learning model, as trained, and based on input data comprising the estimated arrival time, order information for each assembled checked-in order in the queue of assembled checked-in orders, historical information about the user, historical information about the physical store, and dynamic wait time data for the physical store; and sending the estimated wait time to at least one of the physical store or the mobile device of the user.
2. The system of claim 1, wherein the estimated wait time comprises a range of time periods within a predetermined confidence interval.
3. The system of claim 2, wherein the predetermined confidence interval is approximately 90%.
4. The system of claim 1, wherein the order for the pickup is a grocery order for a grocery pickup.
5. The system of claim 1, wherein the order information comprises: a quantity of orders in the queue of assembled checked-in orders; a quantity of bags in the each assembled checked-in order in the queue of assembled checked-in orders; whether the order is a delivery; and whether the order is an express order.
6. The system of claim 1, wherein: the historical information about the user comprises: a historical average wait time for the user; and a historical check-in percentage for the user; and the historical information about the physical store comprises: a historical average wait time for the physical store; and a historical average quantity of pickup associates for the physical store.
7. The system of claim 1, wherein the dynamic wait time data for the physical store comprises: an average hourly wait time at the physical store for each time slot that occurred before the selected time slot during the selected date; an average daily wait time at the physical store on each day of a week ending on a day immediately preceding the selected date; and an average day-of-the-week wait time at the physical store on each occurrence of a weekday corresponding to the selected date over a previous four-week period.
8. The system of claim 1, wherein: the physical store comprises multiple pickup lanes.
9. The system of claim 1, wherein: the machine learning model comprises a gradient boosting model.
10. The system of claim 1, wherein the computing instructions are further configured to perform: determining that the estimated wait time exceeds a predetermined threshold; and sending a message to the user with a suggested later arrival time.
11. A method being implemented via execution of computing instructions configured to run at one or more processors and stored at one or more non-transitory computer-readable media, the method comprising: training a machine learning model based on historical input data for pickups by users that occurred during a historical time period and output data comprising actual wait times that occurred for the pickups by the users; receiving an order from a user for a pickup from a physical store during a selected time slot of a selected date; after items for the order have been picked and assembled at the physical store, sending a notification to the user that the order is ready to be picked up by the user; receiving a check-in message from a mobile device of the user; adding the order to a queue of assembled checked-in orders for the physical store; determining an estimated arrival time based on geo-tracking of the mobile device of the user; generating an estimated wait time using the machine learning model, as trained, and based on input data comprising the estimated arrival time, order information for each assembled checked-in order in the queue of assembled checked-in orders, historical information about the user, historical information about the physical store, and dynamic wait time data for the physical store; and sending the estimated wait time to at least one of the physical store or the mobile device of the user.
12. The method of claim 11, wherein the estimated wait time comprises a range of time periods within a predetermined confidence interval.
13. The method of claim 12, wherein the predetermined confidence interval is approximately 90%.
14. The method of claim 11, wherein the order for the pickup is a grocery order for a grocery pickup.
15. The method of claim 11, wherein the order information comprises: a quantity of orders in the queue of assembled checked-in orders; a quantity of bags in the each assembled checked-in order in the queue of assembled checked-in orders; whether the order is a delivery; and whether the order is an express order.
16. The method of claim 11, wherein: the historical information about the user comprises: a historical average wait time for the user; and a historical check-in percentage for the user; and the historical information about the physical store comprises: a historical average wait time for the physical store; and a historical average quantity of pickup associates for the physical store.
17. The method of claim 11, wherein the dynamic wait time data for the physical store comprises: an average hourly wait time at the physical store for each time slot that occurred before the selected time slot during the selected date; an average daily wait time at the physical store on each day of a week ending on a day immediately preceding the selected date; and an average day-of-the-week wait time at the physical store on each occurrence of a weekday corresponding to the selected date over a previous four-week period.
18. The method of claim 11, wherein: the physical store comprises multiple pickup lanes.
19. The method of claim 11, wherein: the machine learning model comprises a gradient boosting model.
20. The method of claim 11 further comprising: determining that the estimated wait time exceeds a predetermined threshold; and sending a message to the user with a suggested later arrival time.
</claims>
</document>
