<document>

<filing_date>
2018-08-03
</filing_date>

<publication_date>
2020-12-01
</publication_date>

<priority_date>
2018-08-03
</priority_date>

<ipc_classes>
G06F16/23,G06F16/25,G06F21/60,H04L9/08,H04L9/32
</ipc_classes>

<assignee>
AMERICAN EXPRESS TRAVEL RELATED SERVICES COMPANY
</assignee>

<inventors>
KUMAR, ASHISH
FERENCZI, ANDRAS L.
BALARAMAN, BALAJI
CHANDRASHEKAR, SHIVAKUMAR
DIKHIT, JITENDRA SINGH
</inventors>

<docdb_family_id>
69228791
</docdb_family_id>

<title>
Blockchain-enabled datasets shared across different database systems
</title>

<abstract>
A system for integrating blockchain-enabled shared datasets across databases having varying formats and structures is disclosed. The system may include various entity systems in communication via a peer-to-peer network. A first entity system may receive a dataset update request to update the shared dataset. The first entity system may broadcast the dataset update request across the network, and one or more entity systems connected to the network may consent to the dataset update request. The consenting entity systems may broadcast the consented dataset update request to the other entity systems connected to the network. Each entity system may update its local copy of the shared dataset with the consented dataset update request. Each entity system may comprise a mapping module configured to reformat the consented dataset update request into a format that can be stored in a local data structure.
</abstract>

<claims>
1. A computer-based system, comprising: a first integration platform comprising at least one computing device having a processor and a tangible, non-transitory memory, the first integration platform being in data communication with a peer-to-peer network comprising a second integration platform, the first integration platform and the second integration platform being configured to write to a distributed ledger upon a consensus agreement, and the first integration platform and the second integration platform each comprising a smart contract configured to control dataflow for different updates to the distributed ledger; and at least one application stored in the tangible, non-transitory memory and executable by the at least one computing device, wherein, in response to execution by the at least one computing device, cause the at least one computing device to at least: receive a dataset update request comprising instructions to update a shared dataset in the distributed ledger, wherein the shared dataset is stored in a first data structure in the first integration platform according to a first data format; broadcast the dataset update request to the second integration platform in the peer-to-peer network, wherein in response to receiving the dataset update request the second integration platform is configured to consent to the dataset update request based at least in part on the consensus agreement; receive a consented dataset update request, wherein the consented dataset update request is formatted in a second data format; invoke, via the smart contract executed by the at least one computing device, a mapping module to determine that the second data format of the consented dataset update request fails to match the first data format of the first data structure; and reformat the consented dataset update request to comprise the first data format.
2. The computer-based system of claim 1, wherein, when executed, the at least one application further causes the at least one computing device to at least write the consented dataset update request to the shared dataset in the first data structure.
3. The computer-based system of claim 1, wherein in response to consenting to the dataset update request, the second integration platform broadcasts the consented dataset update request over the peer-to-peer network.
4. The computer-based system of claim 3, wherein the second integration platform writes the consented dataset update request to the shared dataset in a second data structure associated with the second integration platform.
5. The computer-based system of claim 1, wherein, when executed, the at least one application further causes the at least one computing device to at least sign, via a cryptography module invoked via the smart contract, the dataset update request using a public key associated with the first integration platform.
6. The computer-based system of claim 1, wherein the consensus agreement comprises at least one of proof of work, proof of stake, practical byzantine fault tolerance, or delegated proof of stake.
7. The computer-based system of claim 1, wherein the consensus agreement requires consent from all integration platforms in the peer-to-peer network.
8. A method comprising: receiving, by at least one computing device of a first integration platform, a dataset update request comprising instructions to update a shared dataset of a distributed ledger, wherein the shared dataset is stored in a first data structure in the first integration platform according to a first data format, the first integration platform is in data communication with a peer-to-peer network comprising a second integration platform, the first integration platform and the second integration platform are configured to write to the distributed ledger upon a consensus agreement, and the first integration platform and the second integration platform comprise a smart contract configured to control dataflow for different updates to the distributed ledger; broadcasting, by the at least one computing device of the first integration platform in electronic communication with the peer-to-peer network, the dataset update request to the second integration platform in the peer-to-peer network, wherein in response to receiving the dataset update request the second integration platform is configured to consent to the dataset update request based at least in part on the consensus agreement; receiving, by the at least one computing device of the first integration platform, a consented dataset update request, wherein the consented dataset update request is formatted in a second data format; invoking, via the smart contract executed by the at least one computing device of the first integration platform, a mapping module to determine that the second data format of the consented dataset update request fails to match the first data format of the first data structure; and reformatting the consented dataset update request to comprise the first data format.
9. The method of claim 8, further comprising writing, by the at least one computing device of the first integration platform, the consented dataset update request to the shared dataset in the first data structure.
10. The method of claim 8, wherein, in response to consenting to the dataset update request, the second integration platform broadcasts the consented dataset update request over the peer-to-peer network.
11. The method of claim 10, wherein the second integration platform writes the consented dataset update request to the shared dataset in a second data structure associated with the second integration platform.
12. The method of claim 8, further comprising signing, by the at least one computing device of the first integration platform and via a cryptography module invoked by the smart contract, the dataset update request using a public key associated with the first integration platform.
13. The method of claim 8, wherein the consensus agreement comprises at least one of proof of work, proof of stake, practical byzantine fault tolerance, or delegated proof of stake.
14. The method of claim 8, wherein the consensus agreement requires consent from all integration platforms in the peer-to-peer network.
15. An article of manufacture including a non-transitory, tangible computer readable storage medium having instructions stored thereon that, in response to execution by a first integration platform in data communication with a peer-to-peer network comprising a second integration platform, cause the first integration platform to perform operations comprising: receiving, by the first integration platform, a dataset update request comprising a request to update a shared dataset to a distributed ledger, wherein the shared dataset is stored in a first data structure in the first integration platform according to a first data format, the first integration platform is configured to write updates to the distributed ledger upon a consensus agreement with at least the second integration platform of the peer-to-peer network; and the first integration platform comprises a smart contract configured to control dataflow for different updates to the distributed ledger; broadcasting, by the fit integration platform in electronic communication with the peer-to-peer network, the dataset update request to the second integration platform in the peer-to-peer network, wherein in response to receiving the dataset update request the second integration platform is configured to consent to the dataset update request based at least in part on the consensus agreement; receiving, by the first integration platform, a consented dataset update request, wherein the consented dataset update request is formatted in a second data format; invoking, via the smart contract executed by the first integration platform, a mapping module to determine that the second data format of the consented dataset update request fails to match the first data format of the first data structure; and reformatting the consented dataset update request to comprise the first data format.
16. The article of manufacture of claim 15, wherein in response to execution by the first integration platform, the instructions further cause the first integration platform to at least write the consented dataset update request to the shared dataset in the first data structure.
17. The article of manufacture of claim 15, wherein in response to consenting to the dataset update request, the second integration platform broadcasts the consented dataset update request over the peer-to-peer network.
18. The article of manufacture of claim 17, wherein the second integration platform writes the consented dataset update request to the shared dataset in a second data structure associated with the second integration platform.
19. The article of manufacture of claim 15, wherein in response to execution by the first integration platform, the instructions further cause the first integration platform to at least sign, via a cryptography module invoked by the smart contract, the dataset update request using a public key associated with the first integration platform.
20. The article of manufacture of claim 15, wherein the consensus agreement comprises at least one of proof of work, proof of stake, practical byzantine fault tolerance, delegated proof of stake, or requires consent from all integration platforms in the peer-to-peer network.
</claims>
</document>
