<document>

<filing_date>
2020-04-02
</filing_date>

<publication_date>
2020-10-08
</publication_date>

<priority_date>
2019-04-04
</priority_date>

<ipc_classes>
G06F9/455,G06F9/50
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
DESMOUCEAUX, YOANN
ENGUEHARD, MARCEL PAUL SOSTHÃˆNE
SAMAIN, JACQUES OLIVIER
</inventors>

<docdb_family_id>
70465457
</docdb_family_id>

<title>
SYSTEM AND METHOD OF DETECTING APPLICATION AFFINITY USING NETWORK TELEMETRY
</title>

<abstract>
Systems, methods, and computer-readable storage media are provided for using service affinity for application placement. A method includes evaluating, using a netflow module within an orchestrator, flows coming in and out of deployed services within a multi-node network to yield an evaluation. Based on the evaluation, the method includes determining an affinity between respective services of the deployed services to yield a traffic matrix and, based on the traffic matrix, at a placement module, determining on which nodes within the multi-node network to place one or more applications. Determining the affinity can be performed at at least a first level and a second level. The first level can include an individual container or virtual machine level and the second level can include a service description level.
</abstract>

<claims>
1. A method comprising: evaluating, utilizing a netflow module within an orchestrator, flows coming in and out of deployed services within a multi-node network to yield an evaluation; based on the evaluation, determining an affinity between respective services of the deployed services to yield a traffic matrix; and based on the traffic matrix, at a placement module, determining on which nodes within the multi-node network to place one or more services.
2. The method of claim 1, wherein determining the affinity is performed at at least a first level and a second level.
3. The method of claim 2, wherein the first level comprises an individual container or virtual machine level and the second level comprises a service description level.
4. The method of any preceding claim, wherein the traffic matrix comprises a weighted graph representing inter-service dependencies.
5. The method of any preceding claim, wherein determining on which nodes within the multi-node network to place one or more applications further comprises migrating a service after placement based on the evaluation.
6. The method of any preceding claim, further comprising placing a first service and a second service on a same node based on an evaluation that indicates a strong affinity between the first service and the second service.
7. The method of any preceding claim, wherein the placement module determines on which nodes within the multi-node network to place one or more services further based on usage metrics.
8. The method of claim 7, wherein the usage metrics comprise one or more of processor usage, memory usage and bandwidth data.
9. The method of any preceding claim, wherein the placement module further determines on which nodes within the multi-node network to place one or more services according to an application of one or more of a linear solver, a genetic algorithm, a machine learning algorithm, a predictive algorithm, and historical information.
10. An apparatus, comprising: a processor; the apparatus being arranged to:
evaluate, utilizing a netflow module within an orchestrator, flows coming in and out of deployed services within a multi-node network to yield an evaluation; based the evaluation, determine an affinity between respective services of the deployed services to yield a traffic matrix; and based on the traffic matrix, at a placement module, determine on which nodes within the multi-node network to place one or more services.
11. The system of claim 10, wherein determining the affinity is performed at at least a first level and a second level.
12. The system of claim 11, wherein the first level comprises an individual container or virtual machine level and the second level comprises a service description level.
13. The system of any of claims 10 to 12, wherein the traffic matrix comprises a weighted graph representing inter-service dependencies.
14. The system of any of claims 10 to 13, wherein determining on which nodes within the multi-node network to place one or more applications further comprises migrating a service after placement based on the evaluation.
15. The system of any of claims 10 to 14, wherein the computer-readable device stores additional instructions which, when executed by the processor, cause the processor to perform operations comprising: placing a first service and a second service on a same node based on an evaluation that indicates a strong affinity between the first service and the second service.
16. The system of any of claims 10 to 15, wherein the placement module determines on which nodes within the multi-node network to place one or more services further based on usage metrics.
17. The system of claim 16, wherein the usage metrics comprise one or more of processor usage, memory usage and bandwidth data.
18. The system of any of claims 10 to 17, wherein the placement module further determines on which nodes within the multi-node network to place one or more services according to an application of one or more of a linear solver, a genetic algorithm, a machine learning algorithm, a predictive algorithm, and historical information.
19. A computer-readable device storing instructions which, when executed by a processor, cause the processor to perform operations comprising: evaluating, utilizing a netflow module within an orchestrator, flows coming in and out of deployed services within a multi-node network to yield an evaluation;
based on the evaluation, determining an affinity between respective services of the deployed services to yield a traffic matrix; and
based on the traffic matrix, at a placement module, determining on which nodes within the multi-node network to place one or more services.
20. The computer-readable device of claim 19, wherein determining the affinity is performed at least a first level and a second level.
</claims>
</document>
