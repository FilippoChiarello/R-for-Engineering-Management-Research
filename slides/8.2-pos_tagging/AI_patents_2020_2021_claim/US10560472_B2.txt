<document>

<filing_date>
2019-05-08
</filing_date>

<publication_date>
2020-02-11
</publication_date>

<priority_date>
2017-06-30
</priority_date>

<ipc_classes>
G06F16/27,G06F21/56,G06N20/00,G06N5/04,H04L29/06,H04L9/06
</ipc_classes>

<assignee>
SPARKCOGNITION
</assignee>

<inventors>
MCLANE, LUCAS
CAPELLMAN, JARRED
</inventors>

<docdb_family_id>
64738474
</docdb_family_id>

<title>
Server-supported malware detection and protection
</title>

<abstract>
A method includes receiving a first file attribute from a computing device. The method also includes determining whether a classification for a file is available from a first cache of the server based on the first file attribute. The method includes sending the first file attribute from the server to a second server to determine whether the classification for the file is available at a base prediction cache of the second server. The method includes receiving a notification at the server from the second server that the classification for the file is unavailable at the base prediction cache. The method includes, in response to receiving the notification, determining the classification for the file by performing an analysis of a second file attribute based on a trained file classification model. The method includes sending the classification to the computing device and sending at least the classification to the base prediction cache.
</abstract>

<claims>
1. A method comprising: receiving, at a server, a first file attribute from a computing device, the first file attribute associated with a file; determining whether a classification for the file is available from a first cache of the server based on the first file attribute, the classification indicating whether the file is benign or malicious; subsequent to determining that the classification for the file is unavailable at the first cache, sending the first file attribute from the server to a second server to determine whether the classification for the file is available at a base prediction cache of the second server, wherein the base prediction cache stores data corresponding to a plurality of file attributes analyzed by a plurality of servers associated with the second server; subsequent to sending the first file attribute to the second server, receiving a notification at the server from the second server that the classification for the file is unavailable at the base prediction cache; in response to receiving the notification, determining the classification for the file by performing, at the server, an analysis of a second file attribute based on a trained file classification model, wherein the second file attribute is associated with the file, and wherein the second file attribute is distinct from the first file attribute and distinct from an entirety of the file; sending the classification to the computing device; and sending at least the classification to the base prediction cache of the second server.
2. The method of claim 1, further comprising receiving the second file attribute from the computing device.
3. The method of claim 2, wherein the first cache corresponds to an enterprise prediction cache.
4. The method of claim 1, wherein the second server is coupled to a plurality of enterprise servers associated with a plurality of enterprises, each of the plurality of enterprise servers configured, in response to determining that a particular classification for a particular file is unavailable at a respective local prediction cache, to query the second server for the particular classification prior to executing a respective local trained classification model to determine the particular classification.
5. The method of claim 1, wherein the first file attribute includes a secure hash algorithm (SHA) hash value determined from the file.
6. The method of claim 1, further comprising updating data stored in the first cache based on a classification model received from the second server, wherein the classification model includes data corresponding to the classification.
7. The method of claim 6, wherein the server is associated with a first enterprise, and wherein the classification model is distinct from a second classification model received at a second enterprise from the second server.
8. The method of claim 1, wherein the second file attribute comprises at least one of: one or more n-gram vectors indicating occurrences of character pairs in printable characters representing content of the file, and a sequence of entropy indicators, each entropy indicator of the sequence of entropy indicators corresponding to a portion of the file.
9. The method of claim 1, wherein the second file attribute comprises an entropy indicator n-gram vector, the entropy indicator n-gram vector indicating occurrences of a plurality of n-grams in a sequence of entropy indicators representing the file, a first entropy indicator of the sequence corresponding to a first bin name associated with a first range of entropy values, a second entropy indicator of the sequence corresponding to a second bin name associated with a second range of entropy values, each of the plurality of n-grams comprising a combination of multiple bin names, wherein n is an integer greater than or equal to two.
10. The method of claim 1, further comprising: receiving, at the server, a third file attribute from a third computing device, the third file attribute associated with a second file received by the third computing device; and sending, from the server to the third computing device, a second classification indicating whether the second file is benign or malicious, wherein permission to access the second file or execute the second file at the third computing device is based on the second classification, and wherein the second classification is determined from the first cache without querying the second server regarding the third file attribute.
11. A processor-readable storage device storing instructions that, when executed, cause a processor to perform operations comprising: receiving, at a server, a first file attribute from a computing device, the first file attribute associated with a file; determining whether a classification for the file is available from a first cache of the server based on the first file attribute, the classification indicating whether the file is benign or malicious; subsequent to determining that the classification for the file is unavailable at the first cache, sending the first file attribute from the server to a second server to determine whether the classification for the file is available at a base prediction cache of the second server, wherein the base prediction cache stores data corresponding to a plurality of file attributes analyzed by a plurality of servers associated with the second server; receiving the classification at the server from the second server responsive to sending the first file attribute to the second server and responsive to the classification for the file being available at the base prediction cache; and sending the classification to the computing device.
12. The processor-readable storage device of claim 11, wherein the server is associated with a first enterprise.
13. The processor-readable storage device of claim 11, wherein the first file attribute includes a secure hash algorithm (SHA) value determined from the file.
14. The processor -readable storage device of claim 11, wherein the second server is coupled to a plurality of enterprise servers associated with a plurality of enterprises, each of the plurality of enterprise servers configured, in response to determining that a particular classification for a particular file is unavailable at a respective local prediction cache, to query the second server for the particular classification prior to executing a respective local trained classification model to determine the particular classification.
15. The processor -readable storage device of claim 14, wherein the first cache corresponds to an enterprise prediction cache.
16. The processor-readable storage device of claim 14, wherein the operations further comprise updating data stored in the first cache based on a classification model received from the second server.
17. A server comprising: a memory storing instructions; a first cache; and a processor configured to execute the instructions from the memory to perform operations including: receiving a first file attribute from a computing device, the first file attribute associated with a file; determining whether a classification for the file is available from the first cache based on the first file attribute, the classification indicating whether the file is benign or malicious; subsequent to determining that the classification for the file is unavailable at the first cache, sending the first file attribute to a second server to determine whether the classification for the file is available at a base prediction cache of the second server, wherein the base prediction cache stores data corresponding to a plurality of file attributes analyzed by a plurality of servers associated with the second server; subsequent to sending the first file attribute to the second server, receiving a notification from the second server that the classification for the file is unavailable at the base prediction cache; in response to receiving the notification, determining the classification for the file by performing an analysis of a second file attribute based on a trained file classification model, wherein the second file attribute is associated with the file, and wherein the second file attribute is distinct from the first file attribute and distinct from an entirety of the file; sending the classification to the computing device; and sending at least the classification to the base prediction cache.
18. The server of claim 17, wherein the second server is coupled to a plurality of enterprise servers associated with a plurality of enterprises, each of the plurality of enterprise servers configured, in response to determining that a particular classification for a particular file is unavailable at a respective local prediction cache, to query the second server for the particular classification prior to executing a respective local trained classification model to determine the particular classification.
19. The server of claim 17, wherein the first file attribute includes a secure hash algorithm (SHA) value.
20. The server of claim 19, wherein the second file attribute comprises an entropy indicator n-gram vector, the entropy indicator n-gram vector indicating occurrences of a plurality of n-grams in a sequence of entropy indicators representing the file, a first entropy indicator of the sequence corresponding to a first bin name associated with a first range of entropy values, a second entropy indicator of the sequence corresponding to a second bin name associated with a second range of entropy values, each of the plurality of n-grams comprising a combination of multiple bin names, wherein n is an integer greater than or equal to two.
</claims>
</document>
