<document>

<filing_date>
2018-10-30
</filing_date>

<publication_date>
2020-04-30
</publication_date>

<priority_date>
2018-10-30
</priority_date>

<ipc_classes>
G06K9/62
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
KOSEKI AKIRA
MORIMURA TETSURO
TAKASE, TOSHIRO
YANAGISAWA, HIROKI
</inventors>

<docdb_family_id>
70325386
</docdb_family_id>

<title>
IMPLEMENTING ARTIFICIAL INTELLIGENCE AGENTS TO PERFORM MACHINE LEARNING TASKS USING PREDICTIVE ANALYTICS TO LEVERAGE ENSEMBLE POLICIES FOR MAXIMIZING LONG-TERM RETURNS
</title>

<abstract>
A method for implementing artificial intelligence agents to perform machine learning tasks using predictive analytics to leverage ensemble policies for maximizing long-term returns includes obtaining a set of inputs including a set of ensemble policies and a meta-policy parameter, selecting an action for execution within the system environment using a meta-policy function determined based in part on the set of ensemble policies and the meta-policy function parameter, causing the artificial intelligence agent to execute the selected action within the system environment, and updating the meta-policy function parameter based on the execution of the selected action.
</abstract>

<claims>
1. A system for implementing artificial intelligence agents to perform machine learning tasks using predictive analytics to leverage ensemble policies for maximizing long-term returns, comprising: an artificial intelligence agent; a memory device for storing program code; and at least one processor device operatively coupled to the memory device and configured to execute program code stored on the memory device to: obtain a set of inputs including a set of ensemble policies and a meta-policy parameter; select an action for execution within the system environment using a meta-policy function determined based in part on the set of ensemble policies and the meta-policy function parameter; cause the artificial intelligence agent to execute the selected action within the system environment; and update the meta-policy function parameter based on the execution of the selected action.
2. The system of claim 1, wherein each policy in the set of ensemble polices has an internal state that can be represented as a state vector having a fixed length.
3. The system of claim 1, wherein the set of inputs further includes state vectors, state value, initial sufficient statistics, an initial baseline, a statistics forgetting rate, a baseline learning rate, a meta-policy parameter learning rate, and a training length.
4. The system of claim 3, wherein the at least one processor device is further configured to execute program code stored on the memory device to update the initial baseline and the initial sufficient statistics based on the execution of the selected action.
5. The system of claim 1, wherein the at least one processor device is further configured to execute program code stored on the memory device to: obtain an observation and reward in a system environment; and update a history based on the observation and the reward.
6. The system of claim 5, wherein the meta-policy function is further based on the updated history.
7. The system of claim 1, wherein the at least one processor device is further configured to execute program code stored on the memory device to return the updated meta-policy function parameter as output for selecting a future action for execution within the system environment.
8. A computer-implemented method for implementing artificial intelligence agents to perform machine learning tasks using predictive analytics to leverage ensemble policies for maximizing long-term returns, comprising: obtaining a set of inputs including a set of ensemble policies and a meta-policy parameter; selecting an action for execution within the system environment using a meta-policy function determined based in part on the set of ensemble policies and the meta-policy function parameter; causing an artificial intelligence agent to execute the selected action within the system environment; and updating the meta-policy function parameter based on the execution of the selected action.
9. The method of claim 8, wherein each policy in the set of ensemble polices has an internal state that can be represented as a state vector having a fixed length.
10. The method of claim 8, wherein the set of inputs further includes state vectors, state value, initial sufficient statistics, an initial baseline, a statistics forgetting rate, a baseline learning rate, a meta-policy parameter learning rate, and a training length.
11. The method of claim 10, wherein the at least one processor device is further configured to execute program code stored on the memory device to update the initial baseline and the initial sufficient statistics based on the execution of the selected action.
12. The method of claim 8, wherein the at least one processor device is further configured to execute program code stored on the memory device to: obtain an observation and reward in a system environment; and update a history based on the observation and the reward.
13. The method of claim 12, wherein the meta-policy function is further based on the updated history.
14. The method of claim 8, wherein the at least one processor device is further configured to execute program code stored on the memory device to return the updated meta-policy function parameter as output for selecting a future action for execution within the system environment.
15. A computer program product comprising a non-transitory computer readable storage medium having program instructions embodied therewith, the program instructions executable by a computer to cause the computer to perform a method for implementing artificial intelligence agents to perform machine learning tasks using predictive analytics to leverage ensemble policies for maximizing long-term returns, the method performed by the computer comprising: obtaining a set of inputs including a set of ensemble policies and a meta-policy parameter; selecting an action for execution within the system environment using a meta-policy function determined based in part on the set of ensemble policies and the meta-policy function parameter; causing an artificial intelligence agent to execute the selected action within the system environment; and updating the meta-policy function parameter based on the execution of the selected action.
16. The computer program product of claim 15, wherein each policy in the set of ensemble polices has an internal state that can be represented as a state vector having a fixed length.
17. The computer program product of claim 15, wherein the set of inputs further includes state vectors, state value, initial sufficient statistics, an initial baseline, a statistics forgetting rate, a baseline learning rate, a meta-policy parameter learning rate, and a training length.
18. The computer program product of claim 17, wherein the at least one processor device is further configured to execute program code stored on the memory device to update the initial baseline and the initial sufficient statistics based on the execution of the selected action.
19. The computer program product of claim 15, wherein the at least one processor device is further configured to execute program code stored on the memory device to: obtain an observation and reward in a system environment; and update a history based on the observation and the reward; wherein the meta-policy function is further based on the updated history.
20. The computer program product of claim 15, wherein the at least one processor device is further configured to execute program code stored on the memory device to return the updated meta-policy function parameter as output for selecting a future action for execution within the system environment.
</claims>
</document>
