<document>

<filing_date>
2018-05-31
</filing_date>

<publication_date>
2020-09-15
</publication_date>

<priority_date>
2018-05-31
</priority_date>

<ipc_classes>
G06F3/0488,G06F3/0489,G06F9/451
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
DERKS, PATRICK JOSEPH
BROWN, SHAWN MICHAEL
DRAGE, JAMES DAVID PETER
BENAT, MAX MICHAEL
CHIU, SAMMY
SCHENONE, SCOTT DAVID
DEAKINS, JASON MICHAEL
ANDERSON, BRET PAUL
GURLEY, DARCIE ALISON
</inventors>

<docdb_family_id>
66810858
</docdb_family_id>

<title>
Transitioning between interface modes based on stored state information
</title>

<abstract>
A technique is described herein for managing the manner in which a computing device transitions from one user interface (UI) mode to another. The technique stores state information that describes prior states of UI features that have appeared in previous UI presentations, with respect to different UI modes. When transitioning from a first UI presentation (associated with a first UI mode) to a second UI presentation (associated with a second UI mode), the technique leverages the state information to restore one or more aspects of a prior-encountered state associated with the second UI mode.
</abstract>

<claims>
1. One or more computing devices for presenting a user interface (UI) experience, comprising: hardware logic circuitry, the hardware logic circuitry corresponding to: (a) one or more hardware processors that perform operations by executing machine-readable instructions stored in a memory, and/or (b) one or more other hardware logic components that perform the operations using a task-specific collection of logic gates, the operations including: presenting a first UI presentation using at least one first output device, the first UI presentation providing a first set of one or more UI features, provided in a manner that conforms to a first UI mode, a user interacting with the first UI mode using at least one first input device; receiving one or more input signals, indicating that a state-change event has occurred to change a state of at least one UI feature in the first set associated with the first UI presentation; updating the first UI presentation provided by said at least one first output device based on said one or more input signals; updating first-mode state information in a data store based on said one or more input signals, the first-mode state information describing respective states of UI features that were provided by previous presentations conforming to the first UI mode; determining, based on one or more other input signals, to transition to a second UI mode; in response to said determining, retrieving second-mode state information from the data store, the second-mode state information describing respective states of UI features that were provided by previous presentations conforming to the second UI mode; and presenting a second UI presentation using at least one second output device, the second UI presentation providing a second set of one or more UI features that conform to the second UI mode, the user interacting with the second UI mode using at least one second input device, said presenting of the second UI presentation being based at least on the second-mode state information, said presenting of the second UI presentation involving, for a feature Z in the second set, restoring the feature Z to a state based on a state at which another feature Z′ was previously placed in a UI presentation conforming to the second UI mode, the feature Z and the feature Z′ being related but not being produced by a same instantiation of a same program resource.
2. The one or more computing devices of claim 1, wherein a set of output devices defined by said at least one second output device and a set of output devices defined by said at least one first output device include at least one common output device.
3. The one or more computing devices of claim 1, wherein a set of output devices defined by said at least one second output device includes at least one member that is not present in a set of output devices defined by said at least one first output device.
4. The one or more computing devices of claim 1, wherein said updating of the first-mode state information comprises: updating mode-specific state information that pertains to only the first UI mode; and updating general state information that pertains to two or more UI modes.
5. The one or more computing devices of claim 1, wherein the UI feature Z in the second set corresponds to a graphical object instance presented on at least one display device, and wherein said presenting of the second UI presentation involves restoring the graphical object instance to a position and/or size of a previously-presented graphical object instance associated with the UI feature Z′.
6. The one or more computing devices of claim 1, wherein another UI feature in the second set is produced by a same instantiation of a same program resource as a counterpart UI feature in the first set.
7. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves, for another UI feature in the second set, restoring the other UI feature to a state at which a same instance of the other UI feature was previously placed in a UI presentation conforming to the second UI mode.
8. The one or more computing devices of claim 1, wherein the UI features Z and Z′ are related because the UI features Z and Z′ are generated by the same program resource, but are not produced by the same instantiation of the program resource.
9. The one or more computing devices of claim 1, wherein the UI features Z and Z′ are related because the UI features Z and Z′ pertain to a same content item.
10. The one or more computing devices of claim 1, wherein the UI features Z and Z′ are related because the UI features Z and Z′ pertain to a same category of program resources, and/or a same category of content items.
11. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves, for the UI feature Z in the second set, restoring the UI feature Z to a state based on a consideration of how plural other UI features, including the UI feature Z′, have been previously placed in UI presentations conforming to the second UI mode on prior occasions, the UI feature Z and the plural other UI features being related to each other.
12. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves, for the UI feature Z in the second set, restoring the UI feature Z to a state based on a consideration of second-mode state information pertaining to at least a current user.
13. The one or more computing devices of claim 11, wherein the operations include restoring the UI feature Z in the second set to a state based on a most popular placement among plural prior placements of the plural other UI features, or an average of the plural prior placements.
14. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves, for the UI feature Z in the second set, restoring the UI feature Z to a state based on a consideration of second-mode state information pertaining to plural users.
15. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves, for the UI feature Z in the second set, restoring the UI feature Z to a state by identifying second-mode state information in the data store that is most relevant to the UI feature Z.
16. The one or more computing devices of claim 1, wherein said presenting of the second UI presentation involves presenting at least one UI feature in the second set that has no counterpart instance in the first UI presentation.
17. The one or more computing devices of claim 1, wherein the operations further include, for the UI feature Z in the second set: identifying context information pertinent to presentation of the UI feature Z in the second UI presentation, at least some of the context information pertaining to the second-mode state information; mapping the context information into output instructions; and presenting the UI feature Z in the second UI presentation based on the output instructions.
18. A method for presenting a UI experience, comprising: presenting a first UI presentation using at least one first output device, the first UI presentation providing a first set of one or more UI features, provided in a manner that conforms to a first UI mode, a user interacting with the first UI mode using at least one first input device; receiving one or more input signals, indicating that a state-change event has occurred to change a state of at least one UI feature in the first set associated with the first UI presentation; updating the first UI presentation provided by said at least one first output device based on said one or more input signals; updating first-mode state information in a data store based on said one or more input signals, the first-mode state information describing respective states of UI features that were provided by previous presentations conforming to the first UI mode; transitioning to a second UI mode in response to a triggering event; retrieving second-mode state information from the data store, the second-mode state information describing respective states of UI features that were provided by previous presentations conforming to the second UI mode; and presenting a second UI presentation using at least one second output device, the second UI presentation providing a second set of one or more UI features that conform to the second UI mode, the user interacting with the second UI mode using at least one second input device, said presenting of the second UI presentation being based at least on the second-mode state information, wherein the second-mode state information includes a hierarchy of state information items having varying respective degrees of relevance to a placement of a UI feature Z in the second set in the second UI presentation, any of the state information items being capable of being used to determine placement of the UI feature Z in the second UI presentation, wherein said presenting the second UI presentation involves identifying a most relevant state information item from the hierarchy, and utilizing at least the most relevant state information item in placing the UI feature Z in the second UI presentation, wherein the feature Z is an instantiated window produced by a program resource, and wherein the most relevant state information item describes a last placement of the same instantiated window in a UI presentation conforming to the second UI mode.
19. The method of claim 18, wherein a next most relevant state information item describes a last placement of another instance of a window produced by the program resource in a UI presentation conforming to the second UI mode.
20. A computer-readable storage medium for storing computer-readable instructions, the computer-readable instructions, when executed by one or more hardware processors, providing: a first UI-presentation component configured to: present a first UI presentation using at least one first output device, the first UI presentation providing a first set of one or more UI features, provided in a manner that conforms to a first UI mode, a user interacting with the first UI mode using at least one first input device; receive one or more input signals, indicating that a state-change event has occurred to change a state of at least one UI feature in the first set associated with the first UI presentation; update the first UI presentation provided by said at least one first output device based on said one or more input signals; and update first-mode state information in a data store based on said one or more input signals, the first-mode state information describing respective states of UI features that were provided by previous presentations conforming to the first UI mode; a mode-selection component configured to determine, based on one or more other input signals, to transition to a second UI mode; and a second UI-presentation component configured, upon transfer to the second UI mode, to: retrieve second-mode state information from the data store, the second-mode state information describing respective states of UI features that were provided by previous presentations conforming to the second UI mode; and present, in a presenting operation, a second UI presentation using at least one second output device, the second UI presentation providing a second set of one or more UI features that conform to the second UI mode, the user interacting with the second UI mode using at least one second input device, the second UI-presentation component being configured to present the second UI presentation based at least on the second-mode state information, for at least one case, a UI feature in the second set corresponds to a same instantiation of a same program resource as a counterpart UI feature in the first set, and for another case, said presenting of the second UI presentation involves, for a UI feature Z in the second set, restoring the UI feature Z to a state based on a state at which another UI feature Z′ was previously placed in a UI presentation conforming to the second UI mode, the UI feature Z and the UI feature Z′ being related but not being produced by a same instantiation of a same program resource.
</claims>
</document>
