<document>

<filing_date>
2019-02-22
</filing_date>

<publication_date>
2020-06-09
</publication_date>

<priority_date>
2018-02-03
</priority_date>

<ipc_classes>
G01C21/34,G06Q50/30,H04W4/029
</ipc_classes>

<assignee>
DRIVER PARTNERS
</assignee>

<inventors>
COAKLEY, HERBY
RAJCOK, MATTHEW
</inventors>

<docdb_family_id>
67475626
</docdb_family_id>

<title>
Automation technology for on-demand drivers
</title>

<abstract>
A method and system may be used to manage one or more rideshare applications for drivers to increase automation and reduce the need for manual input. Information and settings of the one or more rideshare applications may be managed. Some management that may be provided includes filtering trip requests or automatically turning rideshare applications on or off.
</abstract>

<claims>
1. A computer-implemented method for operating a plurality of rideshare applications comprising: monitoring, by an on-demand driving aggregation platform, a first rideshare application and a second rideshare application for ride requests; receiving, by the on-demand driving aggregation platform, a first ride request from the first rideshare application; accepting the first ride request in order to initiate a trip; checking the activation status of the second rideshare application; determining that the second rideshare application is active; disabling the second rideshare application during the trip to prevent a second ride request from the second rideshare application from being received; wherein during the trip, computing an estimated time to drop off, when the estimated time to drop off is below a threshold, activating the second rideshare application to allow the second ride request from the second rideshare application to be received.
2. The computer-implemented method of claim 1, further comprising: determining one or more characteristics of the trip from the first ride request; comparing the characteristics of the trip to a plurality of filters; determining whether to accept the first ride request based on the filters.
3. The computer-implemented method of claim 1, further comprising: determining one or more characteristics of the trip from the first ride request; inputting the one or more characteristics of the trip into an optimization model, the optimization model outputting a recommendation to accept or reject the first ride request; accepting the first ride request in accordance with the recommendation of the optimization model.
4. The computer-implemented method of claim 3, wherein the one or more characteristics of the trip input to the optimization model include a location of a driver, a location of a pick-up point, an identifier of the first rideshare application, and an identity of a rideshare service level, and a surge price.
5. The computer-implemented method of claim 4, wherein the optimization model is a machine learning model and the optimization model is trained on training examples comprising training inputs comprising data about a plurality of trips and training labels comprising desired outputs.
6. The computer-implemented method of claim 1, further comprising: the on-demand driving aggregation platform running on a mobile device in a vehicle and the first and second rideshare applications running on a remote device that is separate from the mobile device; transmitting, by the mobile device, GPS coordinates to the remote device; emulating, by the remote device, a user location to the first and second rideshare applications based on the GPS coordinates; generating, by the remote device, the first ride request and transmitting it to the mobile device.
7. The computer-implemented method of claim 1, further comprising: receiving user configuration of a plurality of common filters for filtering ride requests; filtering ride requests from the first rideshare application and the second rideshare application based on the common filters.
8. The computer-implemented method of claim 1, further comprising: determining one or more characteristics of the trip from the first ride request; using a trained bonus model to generate a bonus prediction, the bonus prediction comprising a prediction of the bonus associated with the trip based on the characteristics of the trip; inputting the bonus prediction into an optimization model, the optimization model outputting a recommendation to accept or reject the first ride request; accepting the first ride request in accordance with the recommendation of the optimization model.
9. The computer-implemented method of claim 1, further comprising: storing earnings data from each trip from the first ride sharing application and the second ride sharing application; displaying aggregated statistics about driver earnings based on the stored earnings data.
10. A non-transitory computer-readable medium comprising instructions for: monitoring, by an on-demand driving aggregation platform, a first rideshare application and a second rideshare application for ride requests; receiving, by the on-demand driving aggregation platform, a first ride request from the first rideshare application; accepting the first ride request in order to initiate a trip; checking the activation status of the second rideshare application; determining that the second rideshare application is active; disabling the second rideshare application during the trip to prevent a second ride request from the second rideshare application from being received; wherein during the trip, computing an estimated time to drop off, when the estimated time to drop off is below a threshold, activating the second rideshare application to allow the second ride request from the second rideshare application to be received.
11. The non-transitory computer-readable medium of claim 10, further comprising instructions for: determining one or more characteristics of the trip from the first ride request; comparing the characteristics of the trip to a plurality of filters; determining whether to accept the first ride request based on the filters.
12. The non-transitory computer-readable medium of claim 10, further comprising instructions for: determining one or more characteristics of the trip from the first ride request; inputting the one or more characteristics of the trip into an optimization model, the optimization model outputting a recommendation to accept or reject the first ride request; accepting the first ride request in accordance with the recommendation of the optimization model.
13. The non-transitory computer-readable medium of claim 12, wherein the one or more characteristics of the trip input to the optimization model include a location of a driver, a location of a pick-up point, an identifier of the first rideshare application, and an identity of a rideshare service level, and a surge price.
14. The non-transitory computer-readable medium of claim 13, wherein the optimization model is a machine learning model and the optimization model is trained on training examples comprising training inputs comprising data about a plurality of trips and training labels comprising desired outputs.
15. The non-transitory computer-readable medium of claim 10, further comprising instructions for: the on-demand driving aggregation platform running on a mobile device in a vehicle and the first and second rideshare applications running on a remote device that is separate from the mobile device; transmitting, by the mobile device, GPS coordinates to the remote device; emulating, by the remote device, a user location to the first and second rideshare applications based on the GPS coordinates; generating, by the remote device, the first ride request and transmitting it to the mobile device.
16. The non-transitory computer-readable medium of claim 10, further comprising instructions for: receiving user configuration of a plurality of common filters for filtering ride requests; filtering ride requests from the first rideshare application and the second rideshare application based on the common filters.
17. The non-transitory computer-readable medium of claim 10, further comprising instructions for: determining one or more characteristics of the trip from the first ride request; using a trained bonus model to generate a bonus prediction, the bonus prediction comprising a prediction of the bonus associated with the trip based on the characteristics of the trip; inputting the bonus prediction into an optimization model, the optimization model outputting a recommendation to accept or reject the first ride request; accepting the first ride request in accordance with the recommendation of the optimization model.
18. The non-transitory computer-readable medium of claim 10, further comprising instructions for: storing earnings data from each trip from the first ride sharing application and the second ride sharing application; displaying aggregated statistics about driver earnings based on the stored earnings data.
</claims>
</document>
