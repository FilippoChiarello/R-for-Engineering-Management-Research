<document>

<filing_date>
2019-04-12
</filing_date>

<publication_date>
2020-10-15
</publication_date>

<priority_date>
2019-04-12
</priority_date>

<ipc_classes>
G06F11/10,G06F12/0804,G11C29/52
</ipc_classes>

<assignee>
PURE STORAGE
</assignee>

<inventors>
MAO, YUHONG
SEARS, RUSSELL
</inventors>

<docdb_family_id>
72747954
</docdb_family_id>

<title>
HARDWARE RAID 5 OF NVRAM DUMP
</title>

<abstract>
A method of operating a storage unit having non-volatile random-access memory (NVRAM) and solid-state memory is provided. The method includes transferring contents of the NVRAM to the solid-state memory, in response to detecting a power loss. The method includes during the transferring, having each of a plurality of channels in parallel, reading one or more of a plurality of logical unit numbers (LUNs) each corresponding to a portion of the NVRAM, performing an XOR of data of each of the one or more of the plurality of LUNs with data of a preceding LUN, and writing results of the XOR to the solid-state memory.
</abstract>

<claims>
1. A method of operating a storage unit having non-volatile random-access memory (NVRAM) and solid-state memory, the method comprising: transferring contents of the NVRAM to the solid-state memory, in response to detecting a power loss; and during the transferring, having each of a plurality of channels in parallel, reading one or more of a plurality of logical unit numbers (LUNs) each corresponding to a portion of the NVRAM, performing an XOR of data of each of the one or more of the plurality of LUNs with data of a preceding LUN, and writing results of the XOR to the solid-state memory.
2. The method of claim 1, further comprising: during the transferring, having each of the plurality of channels in parallel read the preceding LUN, so that, in total, the plurality of channels reads the NVRAM twice.
3. The method of claim 1, further comprising: assigning a subset of LUNs of the NVRAM to each of the plurality of channels.
4. The method of claim 1, wherein having each of the plurality of channels in parallel write the results of the XOR to the solid-state memory comprises implementing a RAID 5 scheme on the plurality of LUNs.
5. The method of claim 1, further comprising: rebuilding the plurality of LUNs sequentially from either an initial LUN or backward from a final LUN.
6. The method of claim 1, wherein: a parity value is all zeros; having one of the plurality of channels write a first result of the XOR to the solid-state memory comprises having the one of the plurality of channels write a first LUN to the solid-state memory; and having a further one of the plurality of channels write a final result of the XOR to the solid-state memory comprises having the further one of the plurality of channels write a final LUN to the solid-state memory.
7. The method of claim 1, further comprising: operating a state machine, in each of the plurality of channels, for the reading and the writing.
8. A tangible, non-transitory, computer-readable media having instructions thereupon which, when executed by a processor, cause the processor to: transferring contents of the NVRAM to the solid-state memory, in response to detecting power loss; and have each of a plurality of command slots, in parallel, during the transferring, reading one or more data chunks each corresponding to a portion of the NVRAM, perform an XOR of data of each of the one or more data chunks with data of a preceding data chunk, and writing results of the XOR to the solid-state memory.
9. The computer-readable media of claim 8, wherein the instructions are further to cause the processor to: have each of the plurality of command slots, in parallel, read the preceding data chunk, so that, in total, the plurality of command slots reads the NVRAM twice during the transferring.
10. The computer-readable media of claim 8, wherein the instructions are further to cause the processor to: assign a subset of data chunks of the NVRAM to each of the plurality of command slots.
11. The computer-readable media of claim 8, wherein to have each of the plurality of command slots in parallel write the results of the XOR to the solid-state memory comprises implementing a RAID 5 scheme on the data chunks.
12. The computer-readable media of claim 8, wherein the instructions are further to cause the processor to: rebuild data chunks of the NVRAM sequentially from either an initial data chunk or backward from a final data chunk.
13. The computer-readable media of claim 8, wherein the instructions are further to cause the processor to: operate a state machine in a thread, in each of the plurality of command slots, for the reading of the NVRAM and the writing to the solid-state memory.
14. A storage unit, comprising: non-volatile random-access memory (NVRAM); solid-state memory; and one or more processors or logic to: transferring contents of the NVRAM to the solid-state memory, responsive to detecting power loss; and for the transferring, operate a plurality of channels in parallel to each read one or more of a plurality of logical unit numbers (LUNs) each corresponding to a portion of the NVRAM, perform an XOR of data of each of the one or more of the plurality of LUNs with data of a preceding LUN, and write results of the XOR to the solid-state memory.
15. The storage unit of claim 14, wherein the one or more processors or logic are further to: have each of the plurality of channels read both an LUN and the preceding LUN for the XOR, so that, in total, the plurality of channels reads the NVRAM twice during the transferring.
16. The storage unit of claim 14, wherein the one or more processors or logic are further to: assign, to each of the plurality of channels, a subset of LUNs of the NVRAM.
17. The storage unit of claim 14, wherein having each of the plurality of channels in parallel write the results of the XOR to the solid-state memory comprises implementing a RAID 5 scheme on the plurality of LUNs.
18. The storage unit of claim 14, wherein the one or more processors or logic are further to: rebuild the plurality of LUNs from the solid-state memory, sequentially from either an initial LUN or backward from a final LUN, to restore the NVRAM.
19. The storage unit of claim 14, wherein: a parity value is all zeros; and for the NVRAM dump, a first result of the XOR comprises a first LUN XOR the parity value, which equals the first LUN, and a final result of the XOR comprises the parity value XOR a final LUN, which equals the final LUN.
20. The storage unit of claim 14, further comprising: a plurality of state machines, wherein the one or more processors or logic are further to operate at least one of the plurality of state machines in each of the plurality of channels, for the transferring.
</claims>
</document>
