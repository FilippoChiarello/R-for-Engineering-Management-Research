<document>

<filing_date>
2019-04-09
</filing_date>

<publication_date>
2020-11-10
</publication_date>

<priority_date>
2019-04-09
</priority_date>

<ipc_classes>
G06F8/71,G06F8/76,G06N20/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
GARRETT, TYNAN J.
LYONS, MICHAEL PETER
HICKS, ANDREW
PEDRONE, MILES C.
</inventors>

<docdb_family_id>
72749300
</docdb_family_id>

<title>
Portability analyzer
</title>

<abstract>
Assessing portability of source code based on predictions from a learning model trained with historical outputs from a portability analyzer. A request is received as input to assess portability of source code from a source environment to at least one target environment. The learning model is applied to the source code to predict a level of portability of the source code to the at least one target environment. Results from a portability analyzer that are based on the level of portability predicted by the learning model include a confidence measure associated with one or more portions of the source code indicating the ease of portability of the one or more portions of the source code to each of the at least one target environments.
</abstract>

<claims>
1. A computer-implemented method for assessing portability of source code, comprising: receiving, by a processor, as input a request to assess portability of the source code, the source code being written in a first programming language, from the first programming language to a second programming language, wherein the first programming language is distinct from the second programming language; applying a machine learning model to the source code to predict a level of portability of the source code to the second programming language; and providing results from a portability analyzer based on the level of portability predicted by the machine learning model, wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to the second programming language.
2. The computer-implemented method of claim 1 wherein the second programming language is one of a plurality of programming languages, and wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to each of the plurality of programming languages.
3. The computer-implemented method of claim 1 wherein the source code is application software.
4. The computer-implemented method of claim 1 wherein each of a plurality of portions of the source code is associated with a corresponding confidence measure.
5. The computer-implemented method of claim 1 wherein the confidence measure is a score.
6. The computer-implemented method of claim 1 further comprising training the machine learning model with historical outputs from a portability analyzer.
7. The computer-implemented method of claim 1 further comprising generating an insights log comprising the confidence measures indicating the ease of portability for each of a plurality of portions of the source code to the second programming language via each of a plurality of tools for porting the source code.
8. The computer-implemented method of claim 1 wherein a portion of the source code is associated with a confidence measure corresponding with a high level of portability and another portion of the source code is associated with a confidence measure indicating a low level of portability.
9. The computer-implemented method of claim 1 further comprising utilizing the results to schedule porting of the source code to the second programming language.
10. A computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a computer processor to cause the computer processor to perform a method for assessing portability of source code, comprising: receiving as input a request to assess portability of the source code, the source code being written in a first programming language, from the first programming language to a second programming language, wherein the first programming language is distinct from the second programming language; applying a machine learning model to the source code to predict a level of portability of the source code to the second programming language; and providing results from a portability analyzer based on the level of portability predicted by the machine learning model, wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to the second programming language.
11. The computer program product of claim 10 wherein the second programming language is one of a plurality of programming languages, and wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to each of the plurality of programming languages.
12. The computer program product of claim 10 wherein a portion of the source code is associated with a confidence measure corresponding with a high level of portability and another portion of the source code is associated with a confidence measure indicating a low level of portability.
13. The computer program product of claim 10 wherein the method further comprises utilizing the results to schedule resources for porting the source code to the second programming language.
14. A system comprising: a memory having computer readable instructions; and one or more processors for executing the computer readable instructions, the computer readable instructions controlling the one or more processors to perform operations comprising: receiving as input a request to assess portability of the source code, the source code being written in a first programming language, from the first programming language to a second programming language, wherein the first programming language is distinct from the second programming language; applying a machine learning model to the source code to predict a level of portability of the source code to the second programming language; and providing results from a portability analyzer based on the level of portability predicted by the machine learning model, wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to the second programming language.
15. The system of claim 14 wherein the second programming language is one of a plurality of programming languages, and wherein the results comprise a confidence measure associated with one or more portions of the source code for indicating ease of portability of the one or more portions of the source code to each of the plurality of programming languages.
16. The system of claim 14 wherein a portion of the source code is associated with a confidence measure corresponding with a high level of portability and another portion of the source code is associated with a confidence measure indicating a low level of portability.
17. The system of claim 14 wherein the method further comprises utilizing the results to schedule resources for porting the source code to the second programming language.
</claims>
</document>
