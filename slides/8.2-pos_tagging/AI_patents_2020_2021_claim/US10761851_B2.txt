<document>

<filing_date>
2018-12-21
</filing_date>

<publication_date>
2020-09-01
</publication_date>

<priority_date>
2017-12-22
</priority_date>

<ipc_classes>
G06F13/00,G06F3/06,G06F9/30,G06F9/38
</ipc_classes>

<assignee>
ALIBABA GROUP
</assignee>

<inventors>
CHEN JIAN
JIANG, XIAOWEI
HAN, LIANG
</inventors>

<docdb_family_id>
66951237
</docdb_family_id>

<title>
Memory apparatus and method for controlling the same
</title>

<abstract>
The present disclosure provides a memory apparatus comprising a first set of storage blocks operating as a set of read storage blocks in a first computation layer and as a set of write storage blocks in a second computation layer, where the second computation layer follows the first computation layer. The memory apparatus also comprises a second set of storage blocks operating as a set of write storage blocks in the first computation layer and as a set of read storage blocks in the second computation layer.
</abstract>

<claims>
1. A memory apparatus of at least one core, the memory apparatus comprising: a first set of storage blocks configured to operate as a set of read storage blocks in a first computation layer and as a set of write storage blocks in a second computation layer, wherein the second computation layer follows the first computation layer; a second set of storage blocks configured to operate as a set of write storage blocks in the first computation layer and as a set of read storage blocks in the second computation layer; a first read port communicatively coupled to each storage block of the first and second set of storage blocks and configured to receive operands from a first read storage block of the set of read storage blocks and to provide the received operands to at least one processing unit of the at least one core; a second read port communicatively coupled to each storage block of the first and second set of storage blocks and configured to receive one or more operands from a second read storage block of the set of read storage blocks and to provide the received one or more operands to the at least one processing unit of the at least one core; and a first write port communicatively coupled to each storage block of the first and second set of storage blocks and configured to provide one or more operands to a first write storage block of the set of write storage blocks for storing.
2. The memory apparatus of claim 1, further comprising: a second write port communicatively coupled to each storage block of the first and second set of storage blocks and configured to provide operands to a second write storage block of the set of write storage blocks for storing.
3. The memory apparatus of claim 1, wherein the first set of storage blocks includes first and second storage blocks and, within the first computational layer: first and second storage blocks of the first set of storage blocks are configured to operate in a computational mode such that the first and second storage blocks of the first set of storage blocks are configured to read, to the at least one processing unit via the first and second read ports, respectively, the operands to be used in a computation to be executed in the first computational layer.
4. The memory apparatus of claim 1, wherein the second set of storage blocks includes a first storage block and a second storage block and within the first computational layer: the first storage block of the second set of storage blocks is configured to operate in a result mode such the first storage block of the second set of storage blocks is configured to write, within the first storage block, a result of the executed computation in the first computational layer.
5. The memory apparatus of claim 2, wherein within the first computational layer: the second storage block, of the first set of storage blocks, is configured to operate in a preload mode such that the second storage block is configured to write, within the second storage block, a preload operand to be used in a computation to be executed in a second computational layer.
6. The memory apparatus of claim 3, wherein at least one of the computational mode, the result mode and the preload mode are dynamically assigned to the first and second storage blocks of the first and second set of storage blocks, at the beginning of each computational layer.
7. The memory apparatus of claim 3, wherein during the second computational layer: the second set of storage blocks are configured to operate in the computational mode such that the second set of storage blocks are configured to read operands, which were written by the second set of storage blocks within the first computational layer, to the at least one processing unit to execute a computation of the second computational layer.
8. The memory apparatus of claim 3, wherein during the second computational layer: the first storage block, of the first set of storage blocks, is configured to operate in the result mode such that the first storage block is configured to write, within the first storage block, a result of an executed computation in the second computational layer.
9. The memory apparatus of claim 3, wherein during the second computational layer: the second storage block, of the first set of storage blocks, is configured to operate in a preload mode such that the second storage block is configured to write a preload operand within the second storage block, wherein the preload operand is to be used in a computation to be executed in a third computational layer.
10. The memory apparatus of claim 1, wherein each storage block of the first and second set of storage blocks are a single read/write Static Random Access Memory (1R/W SRAM).
11. The memory apparatus of claim 2, wherein each storage block of the first and second set of storage blocks are communicatively coupled to the first and second write ports via a respective N-to-1 multiplexer and are communicatively coupled to the first and second read ports via a respective M-to-1 multiplexer, where N is the number of storage blocks within the memory apparatus and M is the number of write ports in the memory apparatus.
12. The memory apparatus of claim 1, wherein the core includes a Single Instruction Multiple Data (SIMD) architecture.
13. A method for controlling a memory apparatus, the method comprising: for a first computational layer: selecting a first set of storage blocks to operate as a set of read storage blocks that enable providing operands to at least one processing unit via read ports of the memory apparatus, and selecting a second set of storage blocks to operate as a set of write storage blocks that enable receiving operands for storage via write ports of the memory apparatus; and in a second computational layer that follows the first computational layer: selecting the first set of storage blocks to operate as the set of write storage blocks, and selecting the second set of storage blocks to operate as the set of read storage blocks.
14. The method of claim 13, further comprising generating instructions to control an operational mode of the first and second sets of storage blocks of the memory apparatus for each computational layer, wherein the instructions set the operational mode of the first and second sets of storage blocks.
15. The method of claim 14, wherein the instructions further set the operational mode of the first and second sets of the storage blocks dynamically at the start of each computational layer.
16. The method of claim 14, wherein the instructions for setting the operational mode further comprises: setting the operational mode of the first set of storage blocks to a computational mode such that the first set of storage blocks are configured to read, operands to be used in a computation, via the at least one processing unit, to be executed in the first computational layer.
17. The method of claim 14, wherein the second set of storage blocks comprises a first storage block and a second storage block, and wherein the instructions for setting the operational mode further comprises: setting the operational mode of a first storage block, of the second set of storage blocks, to a result mode such that the first storage block is configured to write, within the first storage block, a result of the executed computation in the first computational layer.
18. The method of claim 14, wherein the first set of storage blocks comprises a first storage block and a second storage block, and wherein the instructions for setting the operational mode further comprises: setting the operational mode of a second storage block, in the first set of storage blocks, to a preload mode such that the second storage block is configured to write a preload operand, within the second storage block, to be used in a computation to be executed in the second computational layer.
19. The method of claim 14, wherein instructions for setting the operational mode further comprises: setting the second set of storage blocks to operate in the computational mode such that the second set of storage blocks are configured to read operands, which were written by the second set of storage blocks within the first computational layer, to the at least one processing unit to execute a computation of the second computational layer.
20. The method of claim 14, wherein instructions for setting the operational mode further comprises: setting the operational mode of the first storage block, of the first set of storage blocks, to the result mode such that the first storage block is configured to write, within the first storage block, a result of an executed computation in the second computational layer.
21. The method of claim 14, wherein instructions for setting the operational mode further comprises: setting the operational mode of the second storage block, of the first set of storage blocks, to the preload mode such that the second storage block is configured to write, within the second storage block, a preload operand to be used in the computation to be executed in the third computational layer.
22. A system comprising: an accelerator comprising a memory apparatus associated with a at least one processing unit, the memory apparatus comprising: a first set of storage blocks, a second set of storage blocks, a set of read ports each communicatively coupled to each storage block of the first and second set of storage blocks, and a set of write ports each communicatively coupled to each storage block of the first and second set of storage blocks; and a host unit configured to compile computer code into a plurality of instructions that: for a first computational layer: select the first set of storage blocks to operate as a set of read storage blocks that enable providing operands to the at least one processing unit via the set of read ports, and select the second set of storage blocks to operate as a set of write storage blocks that enable receiving operands for storage via the set of write ports; and for a second computational layer that follows the first computation layer: select the first set of storage blocks to operate as the set of write storage blocks, and select the second set of storage blocks to operate as the set of read storage blocks.
23. A non-transient computer readable medium that stores a set of instructions that is executable by a memory apparatus to cause the memory apparatus to perform: for a first computational layer: selecting a first set of storage blocks to operate as a set of read storage blocks that enable providing operands to at least one processing unit via read ports of the memory apparatus, and selecting a second set of storage blocks to operate as a set of write storage blocks that enable receiving operands for storage via write ports of the memory apparatus; and in a second computational layer that follows the first computational layer: selecting the first set of storage blocks to operate as the set of write storage blocks, and selecting the second set of storage blocks to operate as the set of read storage blocks.
24. The computer readable medium of claim 23, wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: controlling an operational mode of the first and second sets of storage blocks for each computational layer; and setting the operational mode of the first and second sets of storage blocks based on the received instructions.
25. The computer readable medium of claim 24, wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of the first set of storage blocks to a computational mode such that the first set of storage blocks are configured to read, operands to be used in a computation, via the at least one processing unit, to be executed in the first computational layer.
26. The computer readable medium of claim 24, wherein the second set of storage blocks comprises a first storage block and a second storage block, and wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of a first storage block, of the second set of storage blocks, to a result mode such the first storage block is configured to write, within the first storage block, a result of the executed computation in the first computational layer.
27. The computer readable medium of claim 24, wherein the first set of storage blocks comprises a first storage block and a second storage block, and wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of a second storage block, in the first set of storage blocks, to a preload mode such that the second storage block is configured to write a preload operand, within the second storage block, to be used in a computation to be executed in the second computational layer.
28. The computer readable medium of claim 24, wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of the second set of storage blocks to operate in the computational mode such that the second set of storage blocks are configured to read operands, which were written by the second set of storage blocks within the first computational layer, to the at least one processing unit to execute a computation of the second computational layer.
29. The computer readable medium of claim 24, wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of the first storage block, of the first set of storage blocks, to the result mode such that the first storage block is configured to write, within the first storage block, a result of an executed computation in the second computational layer.
30. The computer readable medium of claim 24, wherein the set of instructions that is executable by the memory apparatus to cause the memory apparatus to perform: setting the operational mode of the second storage block, of the first set of storage blocks, to the preload mode such that the second storage block is configured to write, within the second storage block, a preload operand to be used in the computation to be executed in the third computational layer.
31. A method for controlling a memory apparatus, the method comprising: for a first computation layer: operating a first set of storage blocks as a set of read storage blocks that enable providing operands to processing units via read ports of the memory apparatus, and operating a second set of storage blocks as a set of write storage blocks that enable receiving operands for storage via write ports of the memory apparatus; and for a second computation layer that follows the first computation layer: operating the first set of storage blocks as the set of write storage blocks, and operating the second set of storage blocks as the set of read storage blocks.
32. The method of claim 31, further comprising receiving instructions, from a compiler, to control an operational mode of the first and second sets of storage blocks for each computational layer; and setting the operational mode of the first and second sets of storage blocks based on the received instructions.
33. The method of claim 32, wherein the receiving and setting occurs dynamically at the start of each computational layer.
34. The method of claim 32, wherein the setting further comprises: setting the operational mode of the first set of storage blocks to a computational mode such that the first set of storage blocks are configured to read, operands to be used in a computation, via the at least one processing unit, to be executed in the first computational layer.
35. The method of claim 32, wherein the second set of storage blocks comprises a first storage block and a second storage block, and wherein the setting further comprises: setting the operational mode of a first storage block, of the second set of storage blocks, to a result mode such that the first storage block is configured to write, within the first storage block, a result of the executed computation in the first computational layer.
36. The method of claim 32, wherein the first set of storage blocks comprises a first storage block and a second storage block, and wherein the setting further comprises: setting the operational mode of a second storage block, in the first set of storage blocks, to a preload mode such that the second storage block is configured to write a preload operand, within the second storage block, to be used in a computation to be executed in the second computational layer.
37. The method of claim 32, wherein the setting further comprises: setting the second set of storage blocks to operate in the computational mode such that the second set of storage blocks are configured to read operands, which were written by the second set of storage blocks within the first computational layer, to the at least one processing unit to execute a computation of the second computational layer.
38. The method of claim 32, wherein the setting further comprises: setting the operational mode of the first storage block, of the first set of storage blocks, to the result mode such that the first storage block is configured to write, within the first storage block, a result of an executed computation in the second computational layer.
39. The method of claim 32, wherein the setting further comprises: setting the operational mode of the second storage block, of the first set of storage blocks, to the preload mode such that the second storage block is configured to write, within the second storage block, a preload operand to be used in the computation to be executed in the third computational layer.
</claims>
</document>
