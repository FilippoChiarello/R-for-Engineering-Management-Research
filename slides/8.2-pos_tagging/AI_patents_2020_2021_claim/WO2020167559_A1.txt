<document>

<filing_date>
2020-02-05
</filing_date>

<publication_date>
2020-08-20
</publication_date>

<priority_date>
2019-02-12
</priority_date>

<ipc_classes>
G06F40/253,G06F40/295,G06F40/56,G06N3/04,G06N3/08,G06N5/02
</ipc_classes>

<assignee>
LIVE OBJECTS
</assignee>

<inventors>
DASGUPTA, SUDIPTO
RAGHAVENDRA, KAMESH
</inventors>

<docdb_family_id>
69778996
</docdb_family_id>

<title>
GENERATION OF PROCESS MODELS IN DOMAINS WITH UNSTRUCTURED DATA
</title>

<abstract>
A computing server configured to process data of a domain from heterogeneous data sources. A domain may store data and schema, domain knowledge ontology such as resource description framework, and unstructured data. The computing server may extract objects from the unstructured data. The computing server may convert the extracted named entities and activities to word embeddings and input the word embeddings to a machine learning model to generate an activity time sequence. The machine learning model may be a long short-term memory. A process model may be generated from the time sequence. The computing server may identify outliers in the process model based on metrics defined by the domain. The computing server may convert transactions without outliers as word embeddings and generate signatures of the transactions using cosine similarity. The computing server may augment the results with the domain knowledge ontology.
</abstract>

<claims>
1. A computer-implemented method, comprising:
receiving a master data schema of a domain and a transaction data schema of the domain;
identifying named entities in unstructured data of the domain based on the master data schema and the transaction data schema, at least one of the identified named entity corresponding to values stored in the master data schema or the transaction data schema;
identifying activities associated with the named entities, at least one of the identified activities extracted from the unstructured data;
labeling the activities with timestamps to generate an activity time sequence that arranges labeled activities in accordance with the timestamps; generating one or more event sequences related to a target process associated with the domain, at least one of the event sequences generated from the activity time sequence;
combining the plurality of event sequences to generate a process model representing the target process, the process model comprising data representing a directed and branched graph, at least a branch in the graph corresponding to the at least one of the event sequences generated from the activity time sequence; and identifying a bottleneck in the target process based on the data representing the
directed and branched graph.
2. The computer-implemented method of claim 1, further comprising:
augmenting the process model with domain knowledge ontology of the domain.
3. The computer-implemented method of claim 1 or claim 2, wherein the activity time sequence is generated by a machine learning model.
4. The computer-implemented method of claim 3, wherein the machine learning model is a long short term memory neural network.
5. The computer-implemented method of any of the claims 1-4, wherein the plurality of event sequences are generated from the unstructured data, transaction data
corresponding to the transaction data schema, and master data corresponding to the master data schema.
6. The computer-implemented method of any of the claims 1-5, further comprising: inputting a version of the process model into a recurrent neural network; and generating, by the recurrent neural network, a predicted next step of the target process.
7. The computer-implemented method of any of the claims 1-6, wherein identifying the bottleneck in the target process comprises:
classifying the process model into a plurality of steps;
determining an average time for the one of the steps based on time spent for
transactions that belong to the target process;
identifying at least one transaction with the one of the steps associated with time spent that deviates from the average time for more than a threshold amount; and marking the one of the steps of the identified at least one transaction as the bottleneck.
8. The computer-implemented method of any of the claims 1-7, wherein identifying the bottleneck in the target process comprises:
receiving a performance index;
classifying the process model into a plurality of steps;
determining an average performance index value for one of the steps for transactions that belong to the target process;
identifying at least one transaction with the one of the steps associated with a
performance index values that deviates from the average performance index for more than a threshold amount; and
marking the one of the steps of the identified at least one transaction as the bottleneck.
9. The computer-implemented method of any of the claims 1-8, further comprising: identifying a plurality of transactions that belong to the target process, a transaction including one or more events of the target process occurred;
classifying the plurality of transactions into a first group comprising transactions
without being marked as having outliers and into a second group comprising transactions being marked as having outliers;
determining signatures of the first group; and
constructing a process variant based on the signatures of the first group.
10. The computer-implemented method of claim 9, wherein an outlier is identified by comparing a vector representing a transaction to a reference vector representing a reference transaction through cosine similarity.
11. The computer-implemented method of any of the claims 1-10, further comprising: generating a process variant from the process model;
receiving a manual input to correct the process variant; and
saving the process variant in the domain.
12. A system, comprising:
a domain storing a master data schema of the domain and a transaction data schema of the domain; and
a computing server comprising a memory and at least one processor, the memory comprising instructions executable by the at least one processor, the instructions, when executed, cause the at least one processor to: receive the master data schema and the transaction data schema; identify named entities in unstructured data of the domain based on the master data schema and the transaction data schema, at least one of the identified named entity corresponding to values stored in the master data schema or the transaction data schema;
identify activities associated with the named entities, at least one of the
identified activities extracted from the unstructured data;
label the activities with timestamps to generate an activity time sequence that arranges labeled activities in accordance with the timestamps;
generate one or more event sequences related to a target process associated with the domain, at least one of the event sequences generated from the activity time sequence;
combine the plurality of event sequences to generate a process model
representing the target process, the process model comprising data representing a directed and branched graph, at least a branch in the graph corresponding to the at least one of the event sequences generated from the activity time sequence; and
identify a bottleneck in the target process based on the data representing the directed and branched graph.
13. The system of claim 12, wherein the instructions, when executed, further cause the at least one processor to:
augment the process model with domain knowledge ontology of the domain.
14. The system of claim 12 or claim 13, wherein the activity time sequence is generated by a machine learning model.
15. The system of any of the claims 12-14, wherein the plurality of event sequences are generated from the unstructured data, transaction data corresponding to the transaction data schema, and master data corresponding to the master data schema.
16. The system of any of the claims 12-15, wherein the instructions that cause the at least one processor to identify the bottleneck in the target process comprises instructions to: receive a performance index;
classify the process model into a plurality of steps;
determine an average performance index value for one of the steps for transactions that belong to the target process;
identify at least one transaction with the one of the steps associated with a
performance index values that deviates from the average performance index for more than a threshold amount; and
mark the one of the steps of the identified at least one transaction as the bottleneck.
17. The system of any of the claims 12-16, wherein the instructions, when executed,
further cause the at least one processor to:
identify a plurality of transactions that belong to the target process, a transaction
including one or more events of the target process occurred;
classify the plurality of transactions into a first group comprising transactions without being marked as having outliers and into a second group comprising transactions being marked as having outliers;
determine signatures of the first group; and
construct a process variant based on the signatures of the first group.
18. The system of claim 17, wherein an outlier is identified by comparing a vector
representing a transaction to a reference vector representing a reference transaction through cosine similarity.
19. A non-transitory computer readable medium for storing computer code comprising instructions, when executed by at least one processor, cause the at least one processor to:
receive a master data schema of a domain and a transaction data schema of the
domain;
identify named entities in unstructured data of the domain based on the master data schema and the transaction data schema, at least one of the identified named entity corresponding to values stored in the master data schema or the transaction data schema;
identify activities associated with the named entities, at least one of the identified activities extracted from the unstructured data;
label the activities with timestamps to generate an activity time sequence that arranges labeled activities in accordance with the timestamps; generate one or more event sequences related to a target process associated with the domain, at least one of the event sequences generated from the activity time sequence;
combine the plurality of event sequences to generate a process model representing the target process, the process model comprising data representing a directed and branched graph, at least a branch in the graph corresponding to the at least one of the event sequences generated from the activity time sequence; and identify a bottleneck in the target process based on the data representing the directed and branched graph.
20. The non-transitory computer readable medium of claim 19, wherein the instructions that cause the at least one processor to identify the bottleneck in the target process comprises instructions to:
receive a performance index;
classify the process model into a plurality of steps;
determine an average performance index value for one of the steps for transactions that belong to the target process;
identify at least one transaction with the one of the steps associated with a
performance index values that deviates from the average performance index for more than a threshold amount; and
mark the one of the steps of the identified at least one transaction as the bottleneck.
</claims>
</document>
