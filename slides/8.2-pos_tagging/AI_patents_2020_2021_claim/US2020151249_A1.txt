<document>

<filing_date>
2018-11-12
</filing_date>

<publication_date>
2020-05-14
</publication_date>

<priority_date>
2018-11-12
</priority_date>

<ipc_classes>
G06F16/2455,G06F16/248,G06F16/93,G06F40/242,G06F40/295,G06F40/30
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
KENKRE, SREYASH
PANDIT, VINAYAKA
SHRIVASTAVA, DISHA
PENUBOTHULA, SANTOSH R. K.
RAMASWAMY, HARISH GURUPRASAD
</inventors>

<docdb_family_id>
70550341
</docdb_family_id>

<title>
Automated constraint extraction and testing
</title>

<abstract>
Methods, systems and computer program products for automatic extraction and testing of constraints are provided herein. A computer-implemented method includes obtaining a first set of documents describing constraints and a second set of documents describing properties of entities, building a first dictionary of entity types and a second dictionary of relations among the entity types, extracting constraint triples representing the set of constraints from the first set of documents, and extracting fact triples from the second set of documents utilizing the first dictionary and the second dictionary. The method also includes receiving a query to evaluate whether at least one of the set of constraints is satisfied, determining whether the at least one constraint is satisfied by evaluating a constraint satisfaction formula utilizing the constraint triples and the fact triples, and providing a response to the query that indicates whether the at least one constraint is satisfied.
</abstract>

<claims>
1. A computer-implemented method, comprising steps of: obtaining (i) a first set of documents describing a set of constraints and (ii) a second set of documents describing properties of instances of a plurality of entities; building (i) a first dictionary of entity types and (ii) a second dictionary of relations among the entity types utilizing the first set of documents; extracting a set of constraint triples representing the set of constraints from the first set of documents, a given constraint triple identifying a relation in the second dictionary that links two of the entity types in the first dictionary; extracting a set of fact triples from the second set of documents utilizing the first dictionary and the second dictionary, a given fact triple identifying a relation from the second dictionary that links an entity instance to an entity type in the first dictionary; receiving a query to evaluate whether at least one of the set of constraints is satisfied; determining whether said at least one constraint is satisfied by evaluating at least one constraint satisfaction formula utilizing the set of constraint triples and the set of fact triples; and providing a response to the query, the response comprising an indication of whether said at least one constraint is satisfied; wherein the steps are carried out by at least one processing device.
2. The computer-implemented method of claim 1, wherein said building the first dictionary comprises canonicalizing entity types in the first set of documents utilizing one or more entity linking techniques.
3. The computer-implemented method of claim 1, wherein said building the second dictionary comprises canonicalizing relations in the first set of documents utilizing one or more embedding methods.
4. The computer-implemented method of claim 1, wherein said extracting the set of constraint triples comprises using a third dictionary of relational terms to determine whether respective ones of the constraint triples comprise necessary, optional and/or negated relationships among entity types.
5. The computer-implemented method of claim 1, wherein said extracting the set of fact triples comprises extracting fact triples having at least one of: (i) a relation of interest; and (ii) an entity instance of interest.
6. The computer-implemented method of claim 5, wherein relations of interest comprise: the relations in the second dictionary; and relations that describe properties of the entity instances.
7. The computer-implemented method of claim 5, wherein entity instances of interest comprise entity instances of the entity types in the first dictionary.
8. The computer-implemented method of claim 1, wherein the constraint satisfaction formula combines two or more of the set of constraint triples utilizing context from the first set of documents, thereby identifying relationships between the two or more constraint triples.
9. The computer-implemented method of claim 8, wherein the constraint satisfaction formula combines the two or more constraint triples as a Boolean formula where each of the two or more constraint triples is a variable of the Boolean formula.
10. The computer-implemented method of claim 8, wherein the relationships between the two or more constraint triples comprise logical AND, OR and NOT statements.
11. The computer-implemented method of claim 1, wherein said evaluating the constraint satisfiability formula comprises, for the given constraint triple: identifying a subset of the fact triples having the same relation as the given constraint triple; and hypernym tracing the subset of fact triples to link entity instances in the subset of fact triples to the entity types of the given constraint triple.
12. The computer-implemented method of claim 11, comprising: marking the given constraint triple as satisfied, responsive to determining that the subset of fact triples includes: a first fact triple having the same relation as the given constraint triple; a second fact triple that links a first entity instance of an object of the second fact triple to an entity type of an object of the given constraint triple using at least one hypernym; and a third fact triple that links a second entity instance of a subject of the third fact triple to an entity type of the subject of the given constraint triple using at least one hypernym.
13. The computer-implemented method of claim 1, wherein the response comprises at least one of: a yes or no indication as to whether said at least one constraint is satisfied; a number of constraints that are satisfied; a list of constraints that are satisfied; and a list of constraints that are not satisfied.
14. A computer program product, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by at least one computing device to cause the at least one computing device to perform steps of: obtaining (i) a first set of documents describing a set of constraints and (ii) a second set of documents describing properties of instances of a plurality of entities; building (i) a first dictionary of entity types and (ii) a second dictionary of relations among the entity types utilizing the first set of documents; extracting a set of constraint triples representing the set of constraints from the first set of documents, a given constraint triple identifying a relation in the second dictionary that links two of the entity types in the first dictionary; extracting a set of fact triples from the second set of documents utilizing the first dictionary and the second dictionary, a given fact triple identifying a relation from the second dictionary that links an entity instance to an entity type in the first dictionary; receiving a query to evaluate whether at least one of the set of constraints is satisfied; determining whether said at least one constraint is satisfied by evaluating at least one constraint satisfaction formula utilizing the set of constraint triples and the set of fact triples; and providing a response to the query, the response comprising an indication of whether said at least one constraint is satisfied.
15. The computer program product of claim 14, wherein said evaluating the constraint satisfiability formula comprises, for the given constraint triple: identifying a subset of the fact triples having the same relation as the given constraint triple; hypernym tracing the subset of fact triples to link entity instances in the subset of fact triples to the entity types of the given constraint triple; and marking the given constraint triple as satisfied responsive to determining that the subset of fact triples includes: a first fact triple having the same relation as the given constraint triple; a second fact triple that links a first entity instance of an object of the second fact triple to an entity type of an object of the given constraint triple using at least one hypernym; and a third fact triple that links a second entity instance of a subject of the third fact triple to an entity type of the subject of the given constraint triple using at least one hypernym.
16. A system comprising: a memory; and at least one processor coupled to the memory and configured for: obtaining (i) a first set of documents describing a set of constraints and (ii) a second set of documents describing properties of instances of a plurality of entities; building (i) a first dictionary of entity types and (ii) a second dictionary of relations among the entity types utilizing the first set of documents; extracting a set of constraint triples representing the set of constraints from the first set of documents, a given constraint triple identifying a relation in the second dictionary that links two of the entity types in the first dictionary; extracting a set of fact triples from the second set of documents utilizing the first dictionary and the second dictionary, a given fact triple identifying a relation from the second dictionary that links an entity instance to an entity type in the first dictionary; receiving a query to evaluate whether at least one of the set of constraints is satisfied; determining whether said at least one constraint is satisfied by evaluating at least one constraint satisfaction formula utilizing the set of constraint triples and the set of fact triples; and providing a response to the query, the response comprising an indication of whether said at least one constraint is satisfied.
17. The system of claim 16, wherein said evaluating the constraint satisfiability formula comprises, for the given constraint triple: identifying a subset of the fact triples having the same relation as the given constraint triple; hypernym tracing the subset of fact triples to link entity instances in the subset of fact triples to the entity types of the given constraint triple; and marking the given constraint triple as satisfied responsive to determining that the subset of fact triples includes: a first fact triple having the same relation as the given constraint triple; a second fact triple that links a first entity instance of an object of the second fact triple to an entity type of an object of the given constraint triple using at least one hypernym; and a third fact triple that links a second entity instance of a subject of the third fact triple to an entity type of the subject of the given constraint triple using at least one hypernym.
18. A computer-implemented method, comprising steps of: receiving a query to evaluate whether at least one of a set of constraints is satisfied, said at least one constraint being associated with a given constraint triple extracted from a first set of documents, the given constraint triple identifying a relation that links two entity types; identifying a subset of a set of fact triples extracted from a second set of documents having the same relation as the given constraint triple; hypernym tracing the subset of fact triples to link entity instances in the subset of fact triples to the entity types of the given constraint triple; marking the given constraint triple as satisfied, responsive to determining that the subset of fact triples includes: a first fact triple having the same relation as the given constraint triple; a second fact triple that links a first entity instance of an object of the second fact triple to an entity type of an object of the given constraint triple using at least one hypernym; and a third fact triple that links a second entity instance of a subject of the third fact triple to an entity type of the subject of the given constraint triple using at least one hypernym; and providing a response to the query, the response comprising an indication of whether said at least one constraint is satisfied; wherein the steps are carried out by at least one processing device.
19. The computer-implemented method of claim 18, wherein said at least one constraint comprises two or more constraint triples associated with a constraint satisfaction formula, the constraint satisfaction formula combining the two or more constraint triples utilizing context from the first set of documents, thereby identifying relationships between the two or more constraint triples.
20. The computer-implemented method of claim 19, wherein the constraint satisfaction formula combines the two or more constraint triples as a Boolean formula where each of the two or more constraint triples is a variable of the Boolean formula.
</claims>
</document>
