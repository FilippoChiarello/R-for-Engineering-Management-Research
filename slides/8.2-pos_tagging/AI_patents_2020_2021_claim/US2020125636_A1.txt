<document>

<filing_date>
2018-10-18
</filing_date>

<publication_date>
2020-04-23
</publication_date>

<priority_date>
2018-10-18
</priority_date>

<ipc_classes>
G06N5/02,G06N99/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
CASTELLI, VITTORIO
PINEL, FLORIAN
PANDIT, SUSHAIN
KWATRA, SHIKHAR
</inventors>

<docdb_family_id>
70280825
</docdb_family_id>

<title>
Cognitive Hierarchical Content Distribution
</title>

<abstract>
Embodiments relate to a system, program product, and method for use with an intelligent computer platform and cognitive processing and associated distribution. The embodiments support a mechanism for dynamically sharing critical and non-critical information responsive to a classification model, such that only relevant information or part of the information is shared. As the classification model is subject to modification, the dynamic sharing mechanism is dynamically updated to reflect such modification. Similarly, as an associated document or file is subject to modification, dynamic processing of the document or file takes place responsive to the classification model. The dynamic classification and document processing employ NLP and ML models to support the associated functionality.
</abstract>

<claims>
1. A computer system comprising: a processing unit operatively coupled to memory; a tool in communication with the processing unit to process a file in view of a classification model, the tool comprising: a content manager to partition file content into two or more atomic units; a classification manager operatively coupled to the content manager, the classification manager to correlate the partitioned content with a classification model, including map the two or more atomic units to the classification model; the content manager to identify a permissive characteristic of the two or more atomic units responsive to the classification model; an amended version of the file created responsive to the classification model and the identified characteristic of the two or more atomic units, the amended version populated with atomic units, and the population limited to atomic units having the identified permissive characteristic.
2. The system of claim 1, wherein the tool further comprising a machine learning (ML) model to interface with the classification manager, including the ML model to dynamically create the amended version of the file responsive to an identified position in the classification model.
3. The system of claim 2, further comprising the classification manager to detect an amendment to the classification model, and to invoke the ML model to dynamically re-calculate a mapping of the two or more atomic unit responsive to the detected classification model amendment.
4. The system of claim 2, wherein the tool further comprising a natural language processing (NLP) tool operatively coupled to the content manager, the NLP tool to detect an amendment to file content, and dynamically interface with the ML model responsive to the detected amendment, including the ML model to evaluate the detected amendment and to classify the amendment with respect to the classification model.
5. The system of claim 4, further comprising the ML model to interface with the NLP tool, including the NLP tool to evaluate the detected amendment for understanding context of the detected amendment and identification and of similar context within the file, and the ML model to classify the detected amendment and similar context responsive to the classification model.
6. The system of claim 2, further comprising the classification manager to classify a file recipient into a category responsive to the classification model and an identification characteristic of the file recipient.
7. A computer program product to process a file in view of a classification model, the computer program product comprising a computer readable storage device having program code embodied therewith, the program code executable by a processing unit to: partition file content into two or more atomic units; correlate the partitioned content with a classification model, including map the two or more atomic units to the classification model; and identify a permissive characteristic of the two or more atomic units responsive to the classification model; an amended version of the file created responsive to the classification model and the identified characteristic of the two or more atomic units, the amended version populated with atomic units, with the amended file version population limited to atomic units having the identified permissive characteristic.
8. The computer program product of claim 7, further comprising further comprising program code to invoke a ML model to dynamically create the amended version of the file responsive to an identified position in the classification model.
9. The computer program product of claim 8, further comprising program code to detect an amendment to the classification model, and to invoke the ML model to dynamically re-calculate a mapping of the two or more atomic unit responsive to the detected classification model amendment.
10. The computer program product of claim 8, further comprising program code to process natural language (NL), including detect an amendment to file content, and dynamically interface with the ML model responsive to the detected amendment, including the ML model having program code to evaluate the detected amendment and to classify the amendment with respect to the classification model.
11. The computer program product of claim 10, further comprising program code to evaluate the detected amendment for understanding context of the detected amendment and identification and of similar context within the file, and the ML model having program code to classify the detected amendment and similar context responsive to the classification model.
12. The computer program product of claim 8, further comprising program code to classify a file recipient into a category responsive to the classification model and an identification characteristic of the file recipient.
13. A method comprising: partitioning file content into two or more atomic units; correlating the partitioned content with a classification model, including mapping the atomic units to the classification model; identifying a permissive characteristic of the atomic units responsive to the classification model; creating an amended version of the file responsive to the classification model, the amended version populated with atomic units, and the amended file population limited to atomic units having the identified permissive characteristic.
14. The method of claim 13, further comprising training a machine learning (ML) model to interface with the classification model, including the trained ML model to dynamically create the amended version of the file responsive to an identified position in the classification model.
15. The method of claim 14, further comprising dynamically invoking the ML model responsive to amending the classification model, the invoked ML model dynamically re-calculating the mapping of the atomic units responsive to the model amendment.
16. The method of claim 14, further comprising a natural language processing (NLP) tool detecting an amendment to file content, and dynamically interfacing with the ML model responsive to the detected amendment, including the ML model evaluating the detected amendment, and classifying the amendment with respect to the classification model.
17. The method of claim 16, further comprising training the ML model to interface with the NLP tool, including the NLP tool evaluating the detected amendment for understanding context of the detected amendment and identification and of similar context within the file, and the ML model classifying the detected amendment and similar context responsive to the classification model.
18. The method of claim 14, further comprising training a classifier to classify a file recipient into a category responsive to the classification model and an identification characteristic of the file recipient.
</claims>
</document>
