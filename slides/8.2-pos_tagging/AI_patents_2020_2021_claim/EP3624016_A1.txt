<document>

<filing_date>
2019-05-06
</filing_date>

<publication_date>
2020-03-18
</publication_date>

<priority_date>
2018-09-17
</priority_date>

<ipc_classes>
G06N3/04,G06N3/08,G06T7/11
</ipc_classes>

<assignee>
STRADVISION
</assignee>

<inventors>
BOO, SUKHOON
CHO, HOJIN
JANG, TAEWOONG
JE, HONGMO
JEONG, KYUNGJOONG
KIM, HAK-KYOUNG
KIM, INSU
KIM, KYE-HYEON
KIM, YONGJOONG
NAM, WOONHYUN
RYU, WOOJU
SUNG, MYUNGCHUL
YEO, DONGHUN
</inventors>

<docdb_family_id>
66333963
</docdb_family_id>

<title>
METHOD AND DEVICE FOR ENCODING IMAGE AND TESTING METHOD AND TESTING DEVICE USING THE SAME
</title>

<abstract>
A method for encoding an image based on convolutional neural network is provided. The method includes steps of: a learning device a learning device including a first to an n-th convolutional layers, (a) obtaining at least one input image; (b) instructing each of at least one of the convolutional layers to (i) apply one or more transposed convolution operations to the input image or an input feature map received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps which have different sizes respectively, and (ii) apply one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps, to thereby generate their corresponding one or more inception feature maps as a first group; and (c) concatenating or element-wise adding the inception feature maps included in the first group to thereby generate its corresponding output feature map.
</abstract>

<claims>
1. A method for encoding an image based on convolutional neural network (CNN), comprising steps of: (a) a learning device, which includes a first to an n-th convolutional layers, obtaining at least one input image; (b) the learning device instructing each of at least one of the convolutional layers to (i) apply one or more transposed convolution operations to the input image or an input feature map received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps which have different sizes respectively, and (ii) apply one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps, to thereby generate their corresponding one or more inception feature maps as a first group; and (c) the learning device concatenating or element-wise adding the inception feature maps included in the first group to thereby generate its corresponding output feature map.
2. The method of Claim 1, wherein, if at least one of the convolutional layers is a k-th convolutional layer, the step of (b) includes steps of: (b-1) the learning device instructing the k-th convolutional layer to apply a first to an m-th transposed convolution operations to the input image or a (k-1)-th feature map received from a (k-1)-th convolutional layer, to thereby generate a first to an m-th transposed feature maps which have a first to an m-th sizes, wherein m is a natural number equal to or greater than 2; and (b-2) the learning device (i) determining a first to an m-th stride sizes by referring to each ratio between a size of the (k-1)-th feature map and each of the first to the m-th transposed feature maps and (ii) applying a first to an m-th convolution filters having the first to the m-th stride sizes and a first to an m-th kernel sizes, respectively, to the first to the m-th transposed feature maps, to thereby generate a first to an m-th inception feature maps as the first group.
3. The method of Claim 1, wherein, at the step of (b), the learning device applies the convolution operations to the input image or the input feature map received from its corresponding previous convolutional layer to thereby generate one or more inception feature maps as a second group, and
wherein, at the step of (c), the learning device concatenates or element-wise adds the inception feature maps of the first group and the inception feature maps of the second group to thereby generate the output feature map.
4. The method of Claim 3, wherein, if at least one of the convolutional layers is a k-th convolutional layer, the step of (b) includes steps of: (b-1) the learning device instructing the k-th convolutional layer to apply a first to an m-th transposed convolution operations to the input image or a (k-1)-th feature map received from a (k-1)-th convolutional layer, to thereby generate a first to an m-th transposed feature maps which have a first to an m-th sizes, wherein m is a natural number equal to or greater than 2; (b-2) the learning device (i) determining a first to an m-th stride sizes by referring to each ratio between a size of the (k-1)-th feature map and each of the first to the m-th transposed feature maps and (ii) applying a first to an m-th convolution filters having the first to the m-th stride sizes and a first to an m-th kernel sizes, respectively, to the first to the m-th transposed feature maps, to thereby generate a first to an m-th inception feature maps as the first group; and (b-3) the learning device applying an (m+1)-th to an (m+n)-th convolution filters, which have an (m+1)-th to an (m+n)-th kernel sizes, to the input image or the (k-1)-th feature map received from the (k-1)-th convolutional layer, to thereby generate an (m+1)-th to an (m+n)-th inception feature maps as the second group.
5. The method of Claim 3, wherein, at the step of (b), the learning device applies one or more max pooling operations, with a different size, to the input image or the input feature map received from its corresponding previous convolutional layer, to thereby generate one or more max pooling feature maps as a third group, and
wherein, at the step of (c), the learning device concatenates or element-wise adds the inception feature maps of the first group, the inception feature maps of the second group and the max pooling feature maps of the third group to thereby generate the output feature map.
6. The method of Claim 1, wherein, at the step of (b), the learning device instructs the first convolutional layer to (i) apply one or more transposed convolution operations to the input image to thereby generate one or more transposed feature maps which have different sizes respectively, and (ii) apply one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps, to thereby generate one or more inception feature maps as the first group.
7. A method for encoding an image based on convolutional neural network (CNN), comprising steps of: (a) a testing device obtaining at least one test image, on condition that (i) a learning device including a first to an n-th convolutional layers has instructed each of at least one of the convolutional layers to apply one or more transposed convolution operations to an input image or an input feature map for training received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps for training which have different sizes respectively; (ii) the learning device has applied one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps for training, to thereby generate their corresponding one or more inception feature maps for training as a first group for training; (iii) the learning device has concatenated or element-wise added the inception feature maps for training included in the first group for training to thereby generate its corresponding output feature map for training; and (iv) the learning device has obtained a CNN output for training based on the output feature map for training and then performs backpropagation by using a segmentation loss obtained by referring to the CNN output for training and its corresponding ground truth (GT); (b) the testing device instructing each of at least one of the convolutional layers to (i) apply the transposed convolution operations to the test image or an input feature map for testing received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps for testing which have different sizes respectively, and (ii) apply the convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps for testing, to thereby generate their corresponding one or more inception feature maps for testing as a first group for testing; and (c) the testing device concatenating or element-wise adding the inception feature maps for testing included in the first group for testing to thereby generate its corresponding output feature map for testing.
8. A learning device for encoding an image based on convolutional neural network (CNN) which includes a first to an n-th convolutional layers, comprising: a communication part for obtaining at least one training image as an input image; and a processor for performing processes of (I) instructing each of at least one of the convolutional layers to (i) apply one or more transposed convolution operations to the input image or an input feature map received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps which have different sizes respectively, and (ii) apply one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps, to thereby generate their corresponding one or more inception feature maps as a first group; and (II) concatenating or element-wise adding the inception feature maps included in the first group to thereby generate its corresponding output feature map.
9. The learning device of Claim 8, wherein, if at least one of the convolutional layers is a k-th convolutional layer, the process of (I) includes processes of: (I-1) instructing the k-th convolutional layer to apply a first to an m-th transposed convolution operations to the input image or a (k-1)-th feature map received from a (k-1)-th convolutional layer, to thereby generate a first to an m-th transposed feature maps which have a first to an m-th sizes, wherein m is a natural number equal to or greater than 2; and
(1-2) (i) determining a first to an m-th stride sizes by referring to each ratio between a size of the (k-1)-th feature map and each of the first to the m-th transposed feature maps and (ii) applying a first to an m-th convolution filters having the first to the m-th stride sizes and a first to an m-th kernel sizes, respectively, to the first to the m-th transposed feature maps, to thereby generate a first to an m-th inception feature maps as the first group.
10. The learning device of Claim 8, wherein, at the process of (I), the processor applies the convolution operations to the input image or the input feature map received from its corresponding previous convolutional layer to thereby generate one or more inception feature maps as a second group, and
wherein, at the process of (II), the processor concatenates or element-wise adds the inception feature maps of the first group and the inception feature maps of the second group to thereby generate the output feature map.
11. The learning device of Claim 10, wherein, if at least one of the convolutional layers is a k-th convolutional layer, the process of (I) includes processes of: (I-1) instructing the k-th convolutional layer to apply a first to an m-th transposed convolution operations to the input image or a (k-1)-th feature map received from a (k-1)-th convolutional layer, to thereby generate a first to an m-th transposed feature maps which have a first to an m-th sizes, wherein m is a natural number equal to or greater than 2; (I-2) (i) determining a first to an m-th stride sizes by referring to each ratio between a size of the (k-1)-th feature map and each of the first to the m-th transposed feature maps and (ii) applying a first to an m-th convolution filters having the first to the m-th stride sizes and a first to an m-th kernel sizes, respectively, to the first to the m-th transposed feature maps, to thereby generate a first to an m-th inception feature maps as the first group; and (I-3) applying an (m+1)-th to an (m+n)-th convolution filters, which have an (m+1)-th to an (m+n)-th kernel sizes, to the input image or the (k-1)-th feature map received from the (k-1)-th convolutional layer, to thereby generate an (m+1)-th to an (m+n)-th inception feature maps as the second group.
12. The learning device of Claim 10, wherein, at the process of (I), the processor applies one or more max pooling operations, with a different size, to the input image or the input feature map received from its corresponding previous convolutional layer, to thereby generate one or more max pooling feature maps as a third group, and
wherein, at the process of (II), the processor concatenates or element-wise adds the inception feature maps of the first group, the inception feature maps of the second group and the max pooling feature maps of the third group to thereby generate the output feature map.
13. The learning device of Claim 8, wherein, at the process of (I), the processor instructs the first convolutional layer to (i) apply one or more transposed convolution operations to the input image to thereby generate one or more transposed feature maps which have different sizes respectively, and (ii) apply one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps, to thereby generate one or more inception feature maps as the first group.
14. A testing device for encoding an image based on convolutional neural network (CNN), comprising: a communication part for acquiring at least one test image, on condition that, (i) a learning device including a first to an n-th convolutional layers has instructed each of at least one of the convolutional layers to apply one or more transposed convolution operations to an input image or an input feature map for training received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps for training which have different sizes respectively; (ii) the learning device has applied one or more convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps for training, to thereby generate their corresponding one or more inception feature maps for training as a first group for training; (iii) the learning device has concatenated or element-wise added the inception feature maps for training included in the first group for training to thereby generate its corresponding output feature map for training; and (iv) the learning device has obtained a CNN output for training based on the output feature map for training and then performs backpropagation by using a segmentation loss obtained by referring to the CNN output for training and its corresponding ground truth (GT); and a processor for performing processes of (I) instructing each of at least one of the convolutional layers to (i) apply the transposed convolution operations to the test image or an input feature map for testing received from its corresponding previous convolutional layer, to thereby generate one or more transposed feature maps for testing which have different sizes respectively, and (ii) apply the convolution operations, with a different stride and a different kernel size, to their corresponding transposed feature maps for testing, to thereby generate their corresponding one or more inception feature maps for testing as a first group for testing; and (II) concatenating or element-wise adding the inception feature maps for testing included in the first group for testing to thereby generate its corresponding output feature map for testing.
</claims>
</document>
