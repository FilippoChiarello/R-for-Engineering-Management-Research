<document>

<filing_date>
2019-08-07
</filing_date>

<publication_date>
2021-01-05
</publication_date>

<priority_date>
2019-08-07
</priority_date>

<ipc_classes>
G06T11/00,G06T11/20,G06T11/60
</ipc_classes>

<assignee>
ADOBE
</assignee>

<inventors>
BATRA, VINEET
PHOGAT, ANKIT
Fisher, Matthew David
</inventors>

<docdb_family_id>
74044959
</docdb_family_id>

<title>
Detecting salient geometric constructs from raster representations of sketches
</title>

<abstract>
A vector representation of a sketch is generated from a raster representation of the sketch. The vector representation is an abstraction of the sketch that captures the intent or desire of the user rather than a faithful reconstruction of what the user actually drew. A sketch includes one or more components. For each component, pixels of the component are clustered into multiple proxies. The multiple proxies are merged together based on their similarities and proximity to each other, resulting in a set of merged proxies. For each component, pixels within each of the merged proxies as well as merged proxies within the component are sorted into a natural drawing order. A set of geometric constructs representing the sketch are then generated by fitting one or more geometric constructs (e.g., circular arcs and line segments) onto the merged proxies.
</abstract>

<claims>
1. In a digital medium environment to detect salient geometric constructs from a raster representation of a sketch, a method implemented by at least one computing device, the method comprising: identifying, by the at least one computing device, at least one component in a raster representation of a sketch; clustering, by the at least one computing device for each component in the raster representation of the sketch, pixels of the component into multiple proxies, each proxy including multiple pixels, the clustering including: assigning seed locations for each of multiple proxies, the seed location for each of the multiple proxies being a different pixel of the component, the pixel of the component at the seed location being assigned to one of the multiple proxies, and growing the multiple proxies by adding pixels of the component to the multiple proxies; merging, by the at least one computing device, ones of the multiple proxies based on their similarities and proximities to each other, resulting in multiple merged proxies; sorting, by the at least one computing device for each component in the raster representation of the sketch and responsive to the multiple proxies being merged for the component, pixels within each of the multiple merged proxies as well as merged proxies within the component into a drawing order, resulting in a set of sorted merged proxies; generating, by the at least one computing device, a set of geometric constructs representing the sketch by fitting one or more geometric constructs onto the sorted merged proxies; and displaying, by the at least one computing device responsive to the set of geometric constructs being generated, a vector representation of the sketch by displaying the set of geometric constructs.
2. The method as recited in claim 1, the clustering including, for each component in the raster representation of the sketch: estimating a number of proxies to include in multiple proxies for the component; and performing multiple iterations of the assigning seed locations for the multiple proxies and the growing the multiple proxies.
3. The method as recited in claim 2, the assigning seed locations including: in an initial iteration of the multiple iterations, assigning a first seed location to a first proxy of the multiple proxies randomly or pseudorandomly, assigning, to additional proxies of the multiple proxies, a seed location that is furthest from all seed location previously assigned in the initial iteration; and in a subsequent iteration of the multiple iterations, assigning, to each of the multiple proxies, a seed location that is a centroid of the proxy.
4. The method as recited in claim 2, further comprising, in a current iteration of the multiple iterations: adding, each time a pixel is assigned to one of the multiple proxies, to a subset of the multiple pixels neighboring pixels of the pixel that have not been assigned to one of the multiple proxies in the current iteration; identifying, for each pixel in the subset, a cost of assigning the pixel to a neighboring proxy of the pixel, the neighboring proxy comprising one of the multiple proxies; and assigning one pixel of the subset to a neighboring proxy of the one pixel, the one pixel having a lowest cost of being assigned to a neighboring proxy of the pixel.
5. The method as recited in claim 1, the merging comprising: merging two neighboring proxies in the multiple proxies of a component in response to the normals of two proxies being within a threshold amount of one another as well as average errors between the proxy normal and local normals of pixels in the proxy being within a threshold amount of one another.
6. The method as recited in claim 1, the merging comprising: merging a first proxy with a second proxy neighboring the first proxy in response to the first proxy having less than a threshold number of pixels and the second proxy having at least the threshold number of pixels.
7. The method as recited in claim 1, the sorting pixels within each of the multiple merged proxies comprising: identifying each pixel in the merged proxy as being included in a set of unsorted pixels; selecting an initial pixel within the merged proxy having a highest number of neighboring pixels that are included in other merged proxies; adding the initial pixel to a set of sorted pixels; identifying, for each pixel in the set of unsorted pixels, a cost of adding the pixel to the set of sorted pixels; for the one pixel having a lowest cost of being added to the set of sorted pixels: adding the one pixel to the set of sorted pixels, and removing the one pixel from the set of unsorted pixels; repeating the identifying the cost, the adding, and the removing for each pixel in the set of unsorted pixels; and maintaining, as a drawing order of the pixels within the merged proxy, a record of the order in which pixels are added to the set of sorted pixels.
8. The method as recited in claim 1, the set of geometric constructs including a set of one or more arcs and one or more straight line segments.
9. In a digital medium environment to detect salient geometric constructs from a raster representation of a sketch, a computing device comprising: a processor; and computer-readable storage media having stored thereon multiple instructions that, responsive to execution by the processor, cause the processor to perform operations including: identifying at least one component in a raster representation of a sketch; generating multiple proxies for each component in the raster representation of the sketch by clustering the pixels of the component into groups, the clustering including: assigning seed locations for each of multiple proxies, the seed location for each of the multiple proxies being a different pixel of the component, the pixel of the component at the seed location being assigned to one of the multiple proxies, and growing the multiple proxies by adding pixels of the component to the multiple proxies; generating multiple merged proxies by merging ones of the multiple proxies based on their similarities and proximities; sorting, for each merged proxy of the multiple merged proxies, pixels within the merged proxy into a drawing order; sorting, for each component in the raster representation of the sketch, the merged proxies within the component into a drawing order, resulting in a set of sorted merged proxies; generating a set of geometric constructs representing the sketch by fitting one or more geometric constructs onto the sorted merged proxies; and displaying, responsive to the set of geometric constructs being generated, a vector representation of the sketch by displaying the set of geometric constructs.
10. The computing device as recited in claim 9, the generating multiple proxies including, for each component in the raster representation of the sketch: estimating a number of proxies to include in multiple proxies for the component; and performing multiple iterations of the assigning seed locations for the multiple proxies and the growing the multiple proxies by adding pixels of the component to the multiple proxies.
11. The computing device as recited in claim 10, the assigning seed locations including: in an initial iteration of the multiple iterations, assigning a first seed location to a first proxy of the multiple proxies randomly or pseudorandomly, assigning, to additional proxies of the multiple proxies, a seed location that is furthest from all seed location previously assigned in the initial iteration; and in a subsequent iteration of the multiple iterations, assigning, to each of the multiple proxies, a seed location that is a centroid of the proxy.
12. The computing device as recited in claim 10, the operations further including, in a current iteration of the multiple iterations: adding, each time a pixel is assigned to one of the multiple proxies, to a subset of the multiple pixels neighboring pixels of the pixel that have not been assigned to one of the multiple proxies in the current iteration; identifying, for each pixel in the subset, a cost of assigning the pixel to a neighboring proxy of the pixel, the neighboring proxy comprising one of the multiple proxies; and assigning one pixel of the subset to a neighboring proxy of the one pixel, the one pixel having a lowest cost of being assigned to a neighboring proxy of the pixel.
13. The computing device as recited in claim 9, the generating multiple merged proxies comprising: merging two neighboring proxies in the multiple proxies of a component in response to the normals of two proxies being within a threshold amount of one another as well as average errors between the proxy normal and local normals of pixels in the proxy being within a threshold amount of one another.
14. The computing device as recited in claim 9, the generating multiple merged proxies comprising: merging a first proxy with a second proxy neighboring the first proxy in response to the first proxy having less than a threshold number of pixels and the second proxy having at least the threshold number of pixels.
15. The computing device as recited in claim 9, the sorting pixels within the multiple merged proxy comprising: identifying each pixel in the merged proxy as being included in a set of unsorted pixels; selecting an initial pixel within the merged proxy having a highest number of neighboring pixels that are included in other merged proxies; adding the initial pixel to a set of sorted pixels; identifying, for each pixel in the set of unsorted pixels, a cost of adding the pixel to the set of sorted pixels; for the one pixel having a lowest cost of being added to the set of sorted pixels: adding the one pixel to the set of sorted pixels, and removing the one pixel from the set of unsorted pixels; repeating the identifying the cost, the adding, and the removing for each pixel in the set of unsorted pixels; and maintaining, as a drawing order of the pixels within the merged proxy, a record of the order in which pixels are added to the set of sorted pixels.
16. The computing device as recited in claim 9, the set of geometric constructs including a set of one or more arcs and one or more straight line segments.
17. A system comprising: a component identification module to identify at least one component in a raster representation of a sketch; means for generating multiple merged proxies for each component in the raster representation of the sketch, one or more of the merged proxies including multiple pixels from multiple different proxies combined based on their similarities and proximities to each other, wherein the means for generating multiple merged proxies assigns seed locations for the multiple proxies, the seed location for each of the multiple proxies being a different pixel of the component, the pixel of the component at the seed location being assigned to one of the multiple proxies and grows the multiple proxies by adding pixels of the component to the multiple proxies; means for sorting pixels within each of the multiple merged proxies as well as merged proxies into a drawing order, resulting in a set of sorted merged proxies; a geometric construct fitting module to generate a set of geometric constructs representing the sketch by fitting one or more geometric constructs onto the sorted merged proxies; and an output module to display, by the at least one computing device, a vector representation of the sketch by displaying the set of geometric constructs.
18. The system as recited in claim 17, wherein the means for generating multiple merged proxies, for each component in the raster representation of the sketch: estimates a number of proxies to include in multiple proxies for the component; and performs multiple iterations of the assigning seed locations for the multiple proxies and the growing the multiple proxies.
19. The system as recited in claim 18, the assigning seed locations including: in an initial iteration of the multiple iterations, assigning a first seed location to a first proxy of the multiple proxies pseudorandomly, assigning, to additional proxies of the multiple proxies, a seed location that is furthest from all seed location previously assigned in the initial iteration; and in a subsequent iteration of the multiple iterations, assigning, to each of the multiple proxies, a seed location that is a centroid of the proxy.
20. The system as recited in claim 17, the set of geometric constructs including a set of one or more arcs and one or more straight line segments.
</claims>
</document>
