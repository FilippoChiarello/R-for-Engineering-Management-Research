<document>

<filing_date>
2016-08-26
</filing_date>

<publication_date>
2020-09-23
</publication_date>

<priority_date>
2015-08-28
</priority_date>

<ipc_classes>
G06F12/08,G06F16/27,G06F17/30,G06F3/06,G06F7/00,G06F9/54
</ipc_classes>

<assignee>
SWIRLDS
</assignee>

<inventors>
BAIRD, LEEMON C., III
</inventors>

<docdb_family_id>
61557412
</docdb_family_id>

<title>
METHODS AND APPARATUS FOR DISTRIBUTED DATABASE WITHIN A NETWORK
</title>

<abstract>
In some embodiments, a method comprises receiving, at a first compute device from a plurality of compute devices that implement a distributed database via a network operatively coupled to a plurality of compute devices, data associated with a first transaction, each compute device from the plurality of compute devices having a separate instance of the distributed database; defining, at a first time, a first transaction order value associated with the first transaction; receiving, from a second compute device from the plurality of compute devices, data associated with a second transaction; storing an indication of a plurality of transactions in the instance of the distributed database at the first compute device, the plurality of transactions including at least the first transaction and the second transaction; selecting, at a second time after the first time, a plurality of transaction order values including at least the first transaction order value and a second transaction order value, the second transaction order value associated with the second transaction; and defining a database state variable based on at least the plurality of transactions and the plurality of transaction order values.
</abstract>

<claims>
1. A method for a first compute device (110) from a plurality of compute devices (110, 120, 130, 140) that implement a leaderless distributed database (100) via a network (105) operatively coupled to the plurality of compute devices (110, 120, 130, 140) each compute device from the plurality of compute devices (110, 120, 130, 140) having a separate instance (114, 124, 134, 144) of the distributed database (100), the method comprising: receiving, at the first compute device (110) from the plurality of compute devices, data associated with a first transaction; defining, at the first compute device (110) and at a first time, a first event including (1) the data associated with the first transaction, and (2) a reference to each event from a first plurality of events, wherein the reference to each event from the first plurality of events indicates that the referenced event from the first plurality of events came before the first event; receiving, at the first compute device (110) and from a second compute device (120) from the plurality of compute devices (110, 120, 130, 140), a second event including (1) data associated with a second transaction, and (2) a reference to each event from a second plurality of events, wherein the reference to each event from the second plurality of events indicates that the referenced event from the second plurality of events came before the second event; storing, at the first compute device (110), an indication of a plurality of transactions in the instance (114) of the distributed database at the first compute device (110), the plurality of transactions including at least the first transaction and the second transaction; calculating, at the first compute device (110) and using a consensus algorithm, an event order for: the first event, the second event, the first plurality of events, and the second plurality of events, wherein the event order is calculated based on a partial order defined by the pattern of references between the events; selecting, at the first compute device (110) at a second time after the first time and based on the event order, a plurality of transaction order values including at least a first transaction order value associated with the first transaction and a second transaction order value associated with the second transaction; and calculating, at the first compute device (110), a database state variable based on at least the plurality of transactions and the plurality of transaction order values, wherein said consensus algorithm implements a deterministic function such that each compute device (110, 120, 130, 140) of the plurality of compute devices calculates the same event order.
2. The method of claim 1, further comprising:
defining, at the first compute device (110) and at a third time after the first time, a third event including (1) a hash of the database state variable, the hash of the database state variable associated with a fourth time prior to the third time, and (2) a set of transactions that affected the database state variable at the fourth time, each transaction from the set of transactions being from the plurality of transactions.
3. The method of claim 1, further comprising:
defining, at the first compute device (110) and at a third time after the first time, a third event including (1) a hash of the database state variable associated with a fourth time prior to the third time, (2) a set of transactions that affected the database state variable at the fourth time, and (3) a share of a threshold signature of the hash of the database state variable at the fourth time, each transaction from the set of transactions being from the plurality of transactions.
4. The method of claim 1, wherein the calculating the database state variable is in response to the selecting the plurality of transaction order values.
5. The method of claim 1, wherein the database state variable is maintained in at least one of a fast clone ArrayList, a fast clone hash table, a fast clone relational database, or a fast clone file system.
</claims>
</document>
