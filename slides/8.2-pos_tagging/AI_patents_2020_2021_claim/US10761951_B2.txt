<document>

<filing_date>
2017-12-28
</filing_date>

<publication_date>
2020-09-01
</publication_date>

<priority_date>
2017-12-28
</priority_date>

<ipc_classes>
G05B19/042,G06F11/00,G06F11/20,G06F117/08,G06F17/50,G06F21/57,G06F30/15,G06F30/34,G06F30/392,H04B1/40
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
GURUMOORTHY, NAGASUBRAMANIAN
POORNACHANDRAN, RAJESH
ZIMMER, VINCENT
</inventors>

<docdb_family_id>
65274096
</docdb_family_id>

<title>
FPGA based functional safety control logic (FFSCL)
</title>

<abstract>
An apparatus to implement functional safety control logic (FSCL) in an autonomous driving system comprises a field-programmable gate array (FPGA) comprising logic elements to be partitioned into a first section to implement one or more safety cores and a second section to implement one or more non-safety cores, a memory to couple to the safety core or to the non-safety core, and a trusted execution environment (TEE) to couple to a remote administrator via a network and to apply a configuration received from the remote administrator to the FPGA. The safety core is to function as an active agent for FSCL during operation, and the non-safety core is to function as a failover agent during operation, and wherein the non-safety core is to perform a liveliness check on the safety core to monitor for a failover and to take over as the active agent in the event of a failover.
</abstract>

<claims>
1. An apparatus to implement functional safety control logic (FSCL), comprising: a field-programmable gate array (FPGA) comprising logic elements to be partitioned into a first section to implement one or more safety cores and a second section to implement one or more non-safety cores; a memory to couple to the safety core or to the non-safety core; and a trusted execution environment (TEE) to couple to a remote administrator via a network and to apply a configuration received from the remote administrator to the FPGA; wherein the safety core is to function as an active agent for FSCL during operation, and the non-safety core is to function as a failover agent during operation, and wherein the non-safety core is to perform a liveliness check on the safety core to monitor for a failover and to take over as the active agent in the event of a failover; and wherein the FPGA includes a soft microcontroller (MCU) trusted execution environment (TEE) agent, and wherein the soft MCU TEE agent is to log the failover, or initiate a policy configured action, or a combination thereof, in response to the failover.
2. The apparatus of claim 1, wherein the non-safety core is to attempt to reset the safety core in response to the failover, and to reestablish the safety core as the active agent if the safety core is successfully reset.
3. The apparatus of claim 1, further comprising one or more additional FPGAs, wherein the additional FPGAs comprises one or more safety cores, or one or more non-safety cores, or a combination thereof.
4. The apparatus of claim 1, wherein the TEE is to obtain geofence or other sensor attributes, FPGA configuration capabilities, FPGA reconfiguration capabilities, provision policies, management for the safety core, management for the non-safety core, or a combination thereof.
5. The apparatus of claim 1, wherein the TEE is to check for an updated configuration for the FPGA from the remote administrator, and to apply a bitstream update received from the remote administrator to the logic elements of the FPGA to reconfigure the FPGA with the updated reconfiguration.
6. The apparatus of claim 1, wherein the TEE is to reconfigure the FPGA dynamically based at least in part on one or more sensory attributes presented to the remote administrator and provided as a reconfiguration to the TEE for the FPGA.
7. The apparatus of claim 1, where at least some FSCL is disposed in the FPGA and decoupled from the TEE such that FSCL register-transfer level (RTL) source code in the FPGA may be evaluated without disclosing code in the TEE.
8. The apparatus of claim 1, wherein the FPGA comprises register-transfer level (RTL) logic configured by the TEE to provide communication between the safety core and the non-safety core such that the RTL logic is tamper resistant.
9. The apparatus of claim 1, wherein the TEE comprises a Converged Security and Management Engine (CMSE) and the FGPA includes an FPGA accelerator, wherein one or more safety functions of the CMSE are to be offloaded to the FPGA accelerator.
10. The apparatus of claim 1, wherein the FPGA is configured to allow the non-safety core to be reconfigured as a safety core in response to a failover.
11. The apparatus of claim 1, wherein the FPGA includes a soft microcontroller (MCU) trusted execution environment (TEE) agent to respond to a failover in a manner that is transparent to a host operating system or kernel, or a combination thereof.
12. The apparatus of claim 1, wherein the TEE is to send failover data to the remote administrator, and to receive an updated configuration from the remote administrator for the FPGA based at least in part on machine learning applied to the failover data from one or more crowdsourced analytics.
13. One or more non-transitory machine-readable media having instructions stored thereon that, if executed, result in: partitioning logical elements of a field-programmable gate array (FPGA) into a first section to implement one or more safety cores and a second section to implement one or more non-safety cores; coupling the FPGA via a trusted execution environment (TEE) to a remote administrator over a network; receiving a configuration for the FPGA from the remote administrator; applying the configuration to the FPGA; and sending failover data to the remote administrator, and receiving an updated configuration from the remote administrator for the FPGA based at least in part on machine learning applied to the failover data from one or more crowdsourced analytics.
14. The one or more non-transitory machine-readable media of claim 13, wherein the instructions, if executed, further result in: operating the safety core as an active agent for functional safety control logic (FSCL); operating the non-safety core as a failover agent; performing a liveliness check on the safety core the non-safety core to monitor for a failover; and setting the non-safety core over as the active agent in the event of a failover.
15. The one or more non-transitory machine-readable media of claim 14, wherein the instructions, if executed, further result in attempting to reset the safety core in response to the failover, and reestablishing the safety core as the active agent if the safety core is successfully reset.
16. The one or more non-transitory machine-readable media of claim 14, wherein the instructions, if executed, further result in logging the failover, or initiating a policy configured action, or a combination thereof, in response to the failover.
17. The one or more non-transitory machine-readable media of claim 13 wherein the instructions, if executed, further result in reconfiguring the FPGA dynamically based at least in part on one or more sensory attributes presented to the remote administrator and in response to reconfiguration received from the remote administrator.
18. The one or more non-transitory machine-readable media of claim 13, wherein the instructions, if executed, further result in reconfiguring the non-safety core as a safety core in response to a failover.
19. The one or more non-transitory machine-readable media of claim 13, wherein the instructions, if executed, further result in responding to a failover in a manner that is transparent to a host operating system or kernel, or a combination thereof.
20. A system to implement functional safety control logic (FSCL), comprising: a field-programmable gate array (FPGA) comprising logic elements to be partitioned into a first section to implement one or more safety cores and a second section to implement one or more non-safety cores; a memory to couple to the safety core or to the non-safety core; a radio-frequency (RF) transceiver; and a trusted execution environment (TEE) to couple to a remote administrator over a network via the RF transceiver, and to apply a configuration received via the RF transceiver from the remote administrator to the FPGA; wherein the safety core is to function as an active agent for FSCL during operation, and the non-safety core is to function as a failover agent during operation, and wherein the non-safety core is to perform a liveliness check on the safety core to monitor for a failover and to take over as the active agent in the event of a failover; and wherein the FPGA includes a soft microcontroller (MCU) trusted execution environment (TEE) agent, and wherein the soft MCE TEE agent is to log the failover, or initiate a policy configured action, or a combination thereof, in response to the failover.
21. The system of claim 20, wherein the non-safety core is to attempt to reset the safety core in response to the failover, and to reestablish the safety core as the active agent if the safety core is successfully reset.
22. The system of claim 20, further comprising one or more additional FPGAs, wherein the additional FPGAs comprises one or more safety cores, or one or more non-safety cores, or a combination thereof.
</claims>
</document>
