<document>

<filing_date>
2020-02-19
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-08
</priority_date>

<ipc_classes>
G06F16/215,G06F16/901
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
IBM DEUTSCHLAND
</assignee>

<inventors>
GIOVANNINI, ANDREA
RUEGER, ERIK
RAVIZZA, STEFAN
GRAF, FLORIAN
FLOETHER, FREDERIK
</inventors>

<docdb_family_id>
69631611
</docdb_family_id>

<title>
LINKING AND PROCESSING DIFFERENT KNOWLEDGE GRAPHS
</title>

<abstract>
A method for linking a first knowledge graph (KG) and a second KG in the presence of a third KG is provided. Content of nodes of the first KG is compared to nodes of the second KG. If a first KG node has a content relationship to a related second KG node, an edge identified by a tuple identifying the first KG and the first KG node and a tuple identifying the second KG and the second KG node is stored in a meta-layer KG. The method comprises comparing content of the nodes from the third KG with the content of nodes from the first and second KG, and in case relationships are identified, more complex tuples establishing this relationship in the meta-layer are stored. Finally, the method also comprises storing at least all nodes and edges of the meta-layer knowledge graph.
</abstract>

<claims>
1. A computer-implemented method for linking a first knowledge graph and a second knowledge graph, in a presence of a third knowledge graph, the knowledge graphs each comprising nodes connected by edges, the method comprising:
comparing content of nodes from a first knowledge graph with content of nodes from a second knowledge graph;
storing, in response to a node of the first knowledge graph, the node having a first node ID, having a content relationship to a related node of the second knowledge graph, the related node having a second node ID, a first edge in a meta-layer knowledge graph wherein the first edge is identified by a first tuple, the first tuple comprising the first node ID and an ID of the first knowledge graph, and a second tuple, the second tuple comprising the second node ID and an ID of the second knowledge graph,
comparing content of the nodes from a third knowledge graph with the content of nodes from the first knowledge graph and the content of the nodes from the second knowledge graph;
determining that a third node, having a third node ID, in the first knowledge graph relates to a fourth node, having a fourth node ID, in the third knowledge graph, and that a fifth node, having a fifth node ID, in the second knowledge graph has a content relationship to a sixth node in the third knowledge graph, wherein the sixth node has a content relationship with the fourth node;
storing, in response to determining, a second edge identifiable by a third tuple comprising the third node ID and the ID of the first knowledge graph and a fourth tuple, the fourth tuple comprising the fifth node ID and the ID of the second knowledge graph in the meta-layer knowledge graph; and
storing at least all nodes and edges of the meta-layer knowledge graph.
2. The method of claim 1, wherein the third knowledge graph is empty.
3. The method of claim 1 or 2, wherein the content relationship between the fourth node and the sixth node in the third knowledge graph is a direct edge.
4. The method of any of the preceding claims, wherein the content relationship between the fourth node and the sixth node in the third knowledge graph is represented by an edge between the fourth node and at least one linking node of the third knowledge graph, and an edge between the linking node and the sixth node.
5. The method of any of the preceding claims, wherein nodes of different knowledge graphs, having a content relationship, comprise identical content.
6. The method of any of the preceding claims, wherein nodes of different knowledge graphs, having a content relationship, are those which content relationship is determined using fuzzy equality.
7. The method of any of the preceding claims, wherein nodes of different knowledge graphs, having a content relationship, are those for which the content of the related nodes are synonyms.
8. The method of any of the preceding claims, wherein the first knowledge graph is managed by a first knowledge graph management tool and the second knowledge graph is managed by a second knowledge graph management tool.
9. The method of claim 8, wherein the second knowledge graph is accessible in a read only mode by the first knowledge graph management tool.
10. The method of any of the preceding claims, wherein the method is executed in regular time intervals.
11. The method of any of the preceding claims, wherein the method is executed in intervals determined based on a change index which is a function of a number of changes in at least one of the first knowledge graph, the second knowledge graph and the third knowledge graph.
12. A system comprising:
a comparison unit, wherein the comparison unit is adapted for comparing content from nodes from a first knowledge graph with content of nodes from a second knowledge graph, and wherein the comparison unit is adapted for comparing content of the nodes from a third knowledge graph with the content from nodes of the first knowledge graph and content of the nodes from the second knowledge graph;
a storage unit, wherein the storage unit is adapted for storing, for a node of the first knowledge graph, the node having a first node ID, having a content relationship to a related node of a second knowledge graph, the related node, having a second node ID, a first edge identified by a first tuple comprising the first node ID and an ID of the first knowledge graph and a second tuple comprising the second node ID and an ID of the second knowledge graph in a meta-layer knowledge graph in a meta-layer data in a meta-layer memory unit;
a processor;
a computer-readable storage medium communicatively coupled to the processor and storing program instructions which, when executed by the processor, are configured to cause the processor to perform a method, the method comprising:
linking a first knowledge graph in a first data structure in a first memory unit and a second knowledge graph in a second data structure in a second memory unit, in a presence of a third knowledge graph in a third data structure in a third memory unit, the knowledge graphs each comprising nodes connected by edges;
determining, by a determination and storage module, a third node, having a third node ID, in the first knowledge graph relates to a fourth node, having a fourth node ID, in the third knowledge graph, and that a fifth node, having a fifth node ID, in the second knowledge graph, has a content relationship to a sixth node having a sixth node ID, in the presence of a content relationship between the fourth node and the sixth node in the third knowledge graph; and
storing, by the determination and storage module, in response to determining, a second edge, the second edge comprising a third tuple, the third tuple comprising the third node ID and the ID of the first knowledge graphs and a fourth tuple, the fourth tuple comprising the fifth node ID and the ID of the second knowledge graph; and
storing, by the determination and storage module, at least all nodes and edges of the meta-layer knowledge graph.
13. The system of claim 12, wherein the third knowledge graph is empty.
14. The system of claim 12 or 13, wherein the content relationship between the fourth node and the sixth node in the third knowledge graph is a direct edge.
15. The system of any of claims 12 to 14, wherein the content relationship between the fourth node and the sixth node in the third knowledge graph is represented by an edge between the fourth node and at least one linking node of the third knowledge graph and an edge between the linking node and the sixth node.
16. The system of any of claims 12 to 15, wherein nodes of different knowledge graphs, having a content relationship, comprise identical content.
17. A computer-implemented method (CIM) comprising:
receiving a plurality of object recognition graph data sets respectively representing a plurality of object recognition graphs including a first graph and a second graph, with each object recognition graph of the plurality of object recognition graphs including: (i) a plurality of object type nodes that respectively represent a type or category of physical objects that may be recognized in image(s), and (ii) a plurality of edges respectively connecting object type nodes of the object recognition graph, with each edge representing a relationship between the pair of object type nodes connected by the edge;
determining that a first object type node of the first graph represents the same type or category of physical objects as a second object type node of the second graph; and
responsive to the determination that the first object type node of the first graph represents the same type or category of physical objects as a second object type node of the second graph, adding a first interlink to a metadata layer data set, with the first interlink indicating that the first object type node represents the same type or category of physical objects as the second object type node of the second graph.
18. The CIM of claim 17 further comprising:
assembling a meta object recognition graph data set representing a meta object recognition graph including: (i) the pluralities of object type nodes from each object recognition graph of the plurality of object recognition graphs, (ii) the pluralities of edges from each object recognition graph of the plurality of object recognition graphs, and (iii) a plurality of interlinks included in the metadata layer data set, with each interlink of the plurality of interlinks connecting a pair of object type nodes respectively from two different object recognition graphs of the plurality of object recognition graphs.
19. The CIM of claim 17 or 18 further comprising:
receiving a first plurality of images from a first social media site;
performing image recognition on the first plurality of images to obtain a first plurality object type(s) and/or category(ies) included in the first plurality of images;
defining the plurality of object type nodes of the first graph based upon the first plurality of object type(s) and/or category(ies);
receiving a second plurality of images from a second social media site;
performing image recognition on the second plurality of images to obtain a second plurality object type(s) and/or category(ies) included in the second plurality of images; and defining the plurality of object type nodes of the second graph based upon the second plurality of object type(s) and/or category(ies).
20. The CIM of any of claims 17 to 19 wherein:
the first plurality of images includes still images and video images; and
the second plurality of images includes still images and video images.
</claims>
</document>
