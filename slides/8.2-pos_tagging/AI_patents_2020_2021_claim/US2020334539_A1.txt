<document>

<filing_date>
2019-12-27
</filing_date>

<publication_date>
2020-10-22
</publication_date>

<priority_date>
2019-04-19
</priority_date>

<ipc_classes>
G06K9/62,G06N20/20,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
SAMSUNG ELECTRONICS COMPANY
</assignee>

<inventors>
DENG, YUE
JIN, HONGXIA
SHEN, YILIN
WANG, YU
</inventors>

<docdb_family_id>
72832574
</docdb_family_id>

<title>
MULTI-MODEL STRUCTURES FOR CLASSIFICATION AND INTENT DETERMINATION
</title>

<abstract>
Intent determination based on one or more multi-model structures can include generating an output from each of a plurality of domain-specific models in response to a received input. The domain-specific models can comprise simultaneously trained machine learning models that are trained using a corresponding local loss metric for each domain-specific model and a global loss metric for the plurality of domain-specific models. The presence or absence of an intent corresponding to one or more domain-specific models can be determined by classifying the output of each domain-specific model.
</abstract>

<claims>
1. A method of training a multi-model structure, comprising: generating a plurality of convex coefficients based on output generated by a plurality of computer-implemented machine learning models in response to receiving training data; and iteratively adjusting, using computer hardware, one or more of the plurality of convex coefficients using a convex coefficient machine learning rule.
2. The method of claim 1, wherein each of the plurality of computer-implemented machine learning models is trained using a corresponding local loss metric and a global loss metric, the training of each of the plurality of computer-implemented machine learning models occurring simultaneously with the iteratively adjusting one or more of the plurality of convex coefficients.
3. The method of claim 2, wherein the global loss metric is determined based on a difference between a correct classification of the training data and an estimated classification of the training data determined by the plurality of computer-implemented machine learning models.
4. The method of claim 3, wherein the estimated classification of the training data comprises a sum of outputs generated by the plurality of computer-implemented machine learning models, each of the outputs weighted by a corresponding one of the plurality of convex coefficients.
5. The method of claim 1, wherein the plurality of computer-implemented models comprise neural networks, and further comprising training each of the neural networks through backpropagation of errors computed based on a local loss metric, the errors based on differences between correct classifications of the training data and estimated classifications of the training data generated by the neural networks.
6. The method of claim 5, wherein the training each of the neural networks is performed concurrently with the iteratively adjusting one or more of the plurality of convex coefficients.
7. The method of claim 5, wherein the local loss metric comprises a cross-entropy metric.
8. The method of claim 1, further comprising determining an accuracy of the plurality of computer-implemented machine learning models based on classifying a set of test data, wherein the set of test data is classified based on a weighted sum of outputs generated by the plurality of computer-implemented machine learning models, each of the outputs weighted by a corresponding one of the plurality of convex coefficients.
9. A system, comprising: a processor configured to initiate operations including: generating an output from each of a plurality of domain-specific models in response to a received input, wherein the domain-specific models are machine learning models simultaneously trained using a corresponding local loss metric for each domain-specific model and a global loss metric for the plurality of domain-specific models; and determining a presence or absence of intent corresponding to each domain-specific model by classifying the output of each domain-specific model.
10. The system of claim 9, wherein the domain-specific models are simultaneously trained by generating an initial plurality of convex coefficients and iteratively adjusting one or more of the plurality of convex coefficients based on a convex coefficient machine learning rule determined using the global loss metric.
11. The system of claim 10, wherein each corresponding local loss metric is determined by a series of error terms, each error term determined by a difference between a model-predicted value and a true value.
12. The system of claim 11, wherein the model-predicted value is a sum of products and wherein each product is the product of an output of a domain-specific model times a convex coefficient corresponding to the domain-specific model.
13. The system of claim 9, wherein each of the plurality of domain-specific models is a neural network.
14. The system of claim 9, wherein the received input comprises at least one of an utterance or an image.
15. The system of claim 9, wherein the received input comprises input from multiple devices of multiple users and wherein at least one domain-specific model comprises a user-specific model.
16. A method, comprising: generating, with computer hardware, an output from each of a plurality of domain-specific models in response to a received input, wherein the domain-specific models are machine learning models simultaneously trained using a corresponding local loss metric for each domain-specific model and a global loss metric for the plurality of domain-specific models; and determining, with the computer hardware, a presence or absence of intent corresponding to each domain-specific model by classifying the output of each domain-specific model.
17. The method of claim 16, wherein the domain-specific models are simultaneously trained by generating an initial plurality of convex coefficients and iteratively adjusting one or more of the plurality of convex coefficients based on a convex coefficient machine learning rule determined using the global loss metric.
18. The method of claim 17, wherein each corresponding local loss metric is determined by a series of error terms, each error term determined by a difference between a model-predicted value and a true value.
19. The method of claim 18, wherein the model-predicted value is a sum of products and wherein each product is the product of an output of a domain-specific model times a convex coefficient corresponding to the domain-specific model.
20. The method of claim 16, wherein each of the plurality of domain-specific models is a neural network.
21. The method of claim 16, wherein the received input comprises at least one of an utterance or an image.
22. The method of claim 16, wherein the received input comprises input from multiple devices of multiple users and wherein at least one domain-specific model comprises a user-specific model.
23. A computer program product comprising one or more computer readable storage media having program instructions collectively stored therein, the program instructions executable by one or more processors to cause the one or more processors to initiate operations comprising: generating an output from each of a plurality of domain-specific models in response to a received input, wherein the domain-specific models are machine learning models simultaneously trained using a corresponding local loss metric for each domain-specific model and a global loss metric for the plurality of domain-specific models; and determining a presence or absence of intent corresponding to each domain-specific model by classifying the output of each domain-specific model.
24. The computer program product of claim 23, wherein the domain-specific models are simultaneously trained by generating an initial plurality of convex coefficients and iteratively adjusting one or more of the plurality of convex coefficients based on a convex coefficient machine learning rule determined using the global loss metric.
25. The computer program product of claim 24, wherein each corresponding local loss metric is determined by series of error terms, each error term determined by a difference between a model-predicted value and a true value.
26. The computer program product of claim 25, wherein the model-predicted value is a sum of products and wherein each product is the product of an output of a domain-specific model times a convex coefficient corresponding to the domain-specific model.
27. The computer program product of claim 23, wherein the received input comprises at least one of an utterance or an image.
</claims>
</document>
