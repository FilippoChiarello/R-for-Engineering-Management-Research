<document>

<filing_date>
2019-01-14
</filing_date>

<publication_date>
2020-07-16
</publication_date>

<priority_date>
2019-01-14
</priority_date>

<ipc_classes>
G06F16/21,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
ORACLE INTERNATIONAL CORPORATION
</assignee>

<inventors>
BROWNSWORD, ANDREW
GOMEZ, MANEL FERNANDEZ
PEINADOR, JUAN FERNANDEZ
REDDEKOPP, ROD
</inventors>

<docdb_family_id>
71516740
</docdb_family_id>

<title>
PARSING OF UNSTRUCTURED LOG DATA INTO STRUCTURED DATA AND CREATION OF SCHEMA
</title>

<abstract>
Herein are techniques for training a parser by categorizing and generalizing messages and abstracting message templates for parsing after training. In an embodiment, a computer generates a message signature based on a message sequence of tokens that were extracted from a training message. The message signature is matched to a cluster signature that represents messages of one of many clusters that have distinct signatures. The training message is added to the cluster. Based on a data type of the cluster signature, a value is extracted from a second message, such as a live message after training. Fuzzy signatures may be probabilistically matched to select a best matching cluster for a message. The value range of a token may be broadened or narrowed by adding or removing candidate data types, by adding or removing literals to a data type, and/or by promoting a narrow data type to a broader data type.
</abstract>

<claims>
1. A method comprising: generating, based on a message sequence of tokens that were extracted from a training message, a message signature; matching the message signature to a cluster signature that represents a plurality of messages of a cluster of a plurality of clusters that have distinct signatures; adding the training message to the cluster; extracting, based on a data type of the cluster signature, a data value from content of a second message; wherein the method is performed by one or more computers.
2. The method of claim 1 wherein: the cluster signature comprises a cluster sequence of tokens that includes a cluster token at a particular position in the cluster sequence; a current token occurs at said particular position in the message sequence of the training message; the data type of the cluster signature comprises the cluster token specifies the data type.
3. The method of claim 1 wherein selecting the cluster signature comprises detecting that the cluster signature and the message signature have a same hash code.
4. A method comprising: training by: calculating a message hash code based on a first sequence of tokens that were extracted from a first message; adding said first message to a cluster of messages that have same said message hash code; and generating, based on said cluster of messages, a cluster signature that describes said cluster of messages; after said training: extracting a second sequence of tokens from a second message; calculating same said message hash code based on said second sequence of tokens; selecting, based on said message hash code, said cluster signature; and parsing, based on a data type of a token of said cluster signature, said second message; wherein the method is performed by one or more computers.
5. The method of claim 4 wherein said first sequence of tokens comprises at least one fuzzy token that specifies a plurality of possible data types for the fuzzy token.
6. The method of claim 5 wherein the at least one fuzzy token comprises a respective association of a respective probability with each type of the plurality of possible data types.
7. The method of claim 6 wherein the plurality of possible data types does not include a respective association of a type with a respective zero probability.
8. The method of claim 1 further comprising extracting, from the first message, a field name of at least one token of the sequence of tokens.
9. The method of claim 1 further comprising calculating a cluster hash code based on at least one of: a same count of tokens in the sequence of tokens of each message in the cluster, a same field name of a token in the sequence of tokens of each message in the cluster, or a same string value consisting of punctuation for a token in the sequence of tokens of each message in the cluster.
10. The method of claim 9 wherein said cluster and a second cluster of messages comprise same said cluster hash code.
11. The method of claim 9 wherein: the method further comprises generating a message signature based on the first sequence of tokens; calculating said message hash code is based on the message signature.
12. The method of claim 11 wherein the cluster signature is said message signature when the cluster of messages contains only the first message.
13. The method of claim 1 wherein: the cluster has a cluster signature that is compatible with the message signatures of the messages of the cluster; adding said first message to the cluster comprises, in response to detecting that the message signature of the first message is incompatible with the cluster signature, adjusting the cluster signature to be a generalization of the message signatures of each of: the first message and the messages of the cluster.
14. The method of claim 1 wherein said plurality of data types comprises a generic type that is compatible with any value.
15. The method of claim 1 wherein said training comprises training a message parser that is selected, based on the first message, from a plurality of message parsers.
16. The method of claim 1 wherein the first message encodes a hierarchical structure such that at least one token of the sequence of tokens comprises a value comprising a second sequence of tokens.
17. The method of claim 1 wherein at least one token of the sequence of tokens comprises at least one of: a) a value and a field name, and/or b) a hash code of the value and/or a hash code of the field name.
18. The method of claim 1 wherein: the cluster signature comprises a sequence of tokens; each token of the sequence of tokens comprises a set of possible data types and respective probabilities; the method further comprises, upon completion of said training, for each token in the sequence of tokens of the cluster signature, removing, from the set of possible data types, all data types except a data type with a highest respective probability.
19. One or more non-transitory computer-readable media storing instructions that, when executed by one or more processors, cause: generating, based on a message sequence of tokens that were extracted from a training message, a message signature; matching the message signature to a cluster signature that represents a plurality of messages of a cluster of a plurality of clusters that have distinct signatures; adding the training message to the cluster; extracting, based on a data type of the cluster signature, a data value from content of a second message.
20. One or more non-transitory computer-readable media storing instructions that, when executed by one or more processors, cause: training by: calculating a message hash code based on a first sequence of tokens that were extracted from a first message; adding said first message to a cluster of messages that have same said message hash code; and generating, based on said cluster of messages, a cluster signature that describes said cluster of messages; after said training: extracting a second sequence of tokens from a second message; calculating same said message hash code based on said second sequence of tokens; selecting, based on said message hash code, said cluster signature; and parsing, based on a data type of a token of said cluster signature, said second message.
</claims>
</document>
