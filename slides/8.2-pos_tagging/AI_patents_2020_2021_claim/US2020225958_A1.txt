<document>

<filing_date>
2020-04-01
</filing_date>

<publication_date>
2020-07-16
</publication_date>

<priority_date>
2018-04-05
</priority_date>

<ipc_classes>
G06F9/38
</ipc_classes>

<assignee>
APPLE
</assignee>

<inventors>
GONION, JEFFRY E.
BAINVILLE, ERIC
ULIEL, TAL
SAZEGARI, PHD, ALI
</inventors>

<docdb_family_id>
68097165
</docdb_family_id>

<title>
Computation Engine with Strided Dot Product
</title>

<abstract>
In an embodiment, a computation engine may perform dot product computations on input vectors. The dot product operation may have a first operand and a second operand, and the dot product may be performed on a subset of the vector elements in the first operand and each of the vector elements in the second operand. The subset of vector elements may be separated in the first operand by a stride that skips one or more elements between each element to which the dot product operation is applied. More particularly, in an embodiment, the input operands of the dot product operation may be a first vector having second vectors as elements, and the stride may select a specified element of each second vector.
</abstract>

<claims>
1. 1-14. (canceled)
15. A circuit comprising: a first input memory storing a first plurality of input vectors, during use; a second input memory storing a second plurality of input vectors, during use; and a compute circuit coupled to the first input memory and the second input memory, wherein the compute circuit is configured, responsive to a first instruction, to multiply selected vector elements of the first plurality of input vectors by the second plurality of input vectors, wherein the selected vector elements are separated in the first plurality of input vectors by a stride associated with the first instruction, and wherein the compute circuit comprises a plurality of multiply accumulate (MAC) circuits, and each of the plurality of MAC circuits is configured to perform one of the multiplications of one of the selected vector elements and a respective vector element of one of the second plurality of input vectors, and wherein a number of the plurality of MAC circuits is equal to a number of vector elements of the first plurality of input vectors multiplied by a number of vector elements of the second plurality of input vectors and divided by the stride.
16. A circuit comprising: a first input memory storing a first plurality of input vectors, during use; a second input memory storing a second plurality of input vectors, during use; and a compute circuit coupled to the first input memory and the second input memory, wherein the compute circuit is configured, responsive to a first instruction, to multiply selected vector elements of the first plurality of input vectors by the second plurality of input vectors, wherein the selected vector elements are separated in the first plurality of input vectors by a stride associated with the first instruction, and wherein the compute circuit comprises a plurality of multiply accumulate (MAC) circuits, and each of the plurality of MAC circuits is configured to perform one of the multiplications of one of the selected vector elements and a respective vector element of one of the second plurality of input vectors, and wherein a number of the plurality of MAC circuits is less than a number of vector elements of the first plurality of input vectors multiplied by a number of vector elements of the second plurality of input vectors and divided by the stride, and wherein the first instruction is completed using multiple iterations in the compute circuit.
17. 17-20. (canceled)
21. The circuit as recited in claim 15 further comprising an output memory storing, during use, a plurality of results corresponding to the first instruction, and wherein the plurality of MAC circuits are configured to sum a current value of a respective one of the plurality of results with a respective multiplication result and write the sum to the output memory.
22. The circuit as recited in claim 21 wherein the stride is based on a first precision of the plurality of results and a second precision of vector elements of the first plurality of input vectors.
23. The circuit as recited in claim 22 wherein the stride is determined from the first precision and the second precision, and wherein the first precision and the second precision are explicitly specified in the first instruction.
24. The circuit as recited in claim 22 wherein the stride is based on a ratio of a maximum value of the first precision and a minimum value of the second precision.
25. The circuit as recited in claim 15 wherein the stride is explicitly specified in the first instruction.
26. The circuit as recited in claim 15 wherein the stride causes a selection of an initial element of each of the second plurality of input vectors.
27. The circuit as recited in claim 16 further comprising an output memory storing, during use, a plurality of results corresponding to the first instruction, and wherein the plurality of MAC circuits are configured to sum a current value of a respective one of the plurality of results with a respective multiplication result and write the sum to the output memory.
28. The circuit as recited in claim 27 wherein the stride is based on a first precision of the plurality of results and a second precision of vector elements of the first plurality of input vectors.
29. The circuit as recited in claim 28 wherein the stride is determined from the first precision and the second precision, and wherein the first precision and the second precision are explicitly specified in the first instruction.
30. The circuit as recited in claim 28 wherein the stride is based on a ratio of a maximum value of the first precision and a minimum value of the second precision.
31. The circuit as recited in claim 16 wherein the stride is explicitly specified in the first instruction.
32. The circuit as recited in claim 16 wherein the stride causes a selection of an initial element of each of the second plurality of input vectors.
33. A system comprising: a processor configured to issue a first instruction to a computation engine; the computation engine coupled to the processor, wherein: the computation engine comprises: a first memory storing, during use, a first plurality of input vectors that include first vector elements, and a second memory storing, during use, a second plurality of input vectors that include second vector elements; and the computation engine further comprises a plurality of multiply accumulate (MAC) circuits, wherein the plurality of MAC circuits are configured to multiply selected first vector elements by second vector elements in response to the first instruction, and wherein the selected first vector elements are identified using a stride corresponding to the first instruction, wherein a number of the plurality of MAC circuits is less than a number of vector elements of the first plurality of input vectors multiplied by a number of vector elements of the second plurality of input vectors and divided by the stride, and wherein the first instruction is completed using multiple iterations in the plurality of MAC circuits.
34. The system as recited in claim 33 further comprising an output memory storing, during use, a plurality of results corresponding to the first instruction, and wherein the plurality of MAC circuits are configured to sum a current value of a respective one of the plurality of results with a respective multiplication result and write the sum to the output memory, and wherein the stride is based on a first precision of the plurality of results and a second precision of vector elements of the first plurality of input vectors.
35. The system as recited in claim 34 wherein the stride is determined from the first precision and the second precision, and wherein the first precision and the second precision are explicitly specified in the first instruction.
36. The system as recited in claim 34 wherein the stride is based on a ratio of a maximum value of the first precision and a minimum value of the second precision.
37. The system as recited in claim 33 wherein the stride is explicitly specified in the first instruction.
38. The system as recited in claim 33 wherein the stride causes a selection of an initial element of each of the second plurality of input vectors.
</claims>
</document>
