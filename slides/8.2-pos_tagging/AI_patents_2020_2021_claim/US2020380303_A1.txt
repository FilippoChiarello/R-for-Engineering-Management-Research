<document>

<filing_date>
2020-06-03
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-06-03
</priority_date>

<ipc_classes>
G06F8/20,G06K9/62,G06N20/00
</ipc_classes>

<assignee>
CEREBRI AI
</assignee>

<inventors>
BELANGER, JEAN JOSEPH
BRIANCON, ALAIN CHARLES
PRASAD, THEJAS NARAYANA
Baig, Mirza Safiullah
Coovrey, Chris Michael
</inventors>

<docdb_family_id>
73549699
</docdb_family_id>

<title>
OBJECT-ORIENTED MACHINE LEARNING GOVERNANCE
</title>

<abstract>
Provided is a process including: writing, with a computing system, a first plurality of classes using object-oriented modelling of modelling methods; writing, with the computing system, a second plurality of classes using object-oriented modelling of governance; scanning, with the computing system, a set of libraries collectively containing both modelling object classes among the first plurality of classes and governance classes among the second plurality of classes to determine class definition information; using, with the computing system, at least some of the class definition information to produce object manipulation functions, wherein the object manipulation functions allow a governance system to access methods and attributes of classes among first plurality of classes or the second plurality of classes to manipulate objects of at least some of the modelling object classes; and using at least some of the class definition information to effectuate access to the object manipulation functions.
</abstract>

<claims>
1. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors effectuate operations comprising: writing, with a computing system, a first plurality of classes using object-oriented modelling of modelling methods; writing, with the computing system, a second plurality of classes using object-oriented modelling of governance; scanning, with the computing system, a set of libraries collectively containing both modelling object classes among the first plurality of classes and governance classes among the second plurality of classes to determine class definition information; using, with the computing system, at least some of the class definition information to produce object manipulation functions, wherein the object manipulation functions allow a governance system to access methods and attributes of classes among first plurality of classes or the second plurality of classes to manipulate objects of at least some of the modelling object classes; and using at least some of the class definition information to effectuate access to the object manipulation functions.
2. The medium of claim 1, wherein: the operations execute quality management of modelling methods for implementation of machine learning design in an object-oriented modeling (OOM) framework.
3. The medium of claim 1, wherein: the modeled governance comprises a set of structures, processes, or policies by which pipeline development, deployment, or use functionality within an organization or set of organizations is directed, managed, or controlled.
4. The medium of claim 1, wherein: the modeled governance comprises a set of structures, processes, and policies by which pipeline development, deployment, and use functionality within an organization or set of organizations is directed, managed, and controlled.
5. The medium of claim 1, wherein: the modeled governance comprises a policy; and the policy comprises a set of rules, controls, or resolutions put in place to dictate model behavior.
6. The medium of claim 1, wherein: the modeled governance comprises a policy; and the policy comprises a set of rules, controls, or resolutions put in place to dictate model versioning.
7. The medium of claim 1, wherein: the modeled governance comprises a set of policors; and meta-policies having detection rules are used to detect conflicts among policors.
8. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors in a computing system effectuate operations to manage compliance governance using modelling methods in a pipeline for implementation of machine learning design in an object-oriented modeling (OOM) framework, the operations comprising: forming, with one or more processors, a first plurality of classes using object-oriented modelling of the modelling methods; forming, with one or more processors, a second plurality of classes using object-oriented modelling of governance compliance methods; scanning, with one or more processors, a class library containing modelling method classes to determine a first part of class definition information; scanning, with one or more processors, a class library containing governance compliance classes to determine a second part of class definition information; and using, with one or more processors, the first part of class definition information of the modeling method class and the second part of class definition information of the management method class to produce object manipulation functions that allow the computing system to access methods and attributes of a governance compliance object to manipulate a method class object.
9. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors in a computing system effectuate operations to measure performance of processing of data constructs in a pipeline using modelling methods for implementation of machine learning design in an object-oriented modeling (OOM) framework, the operations comprising: writing, with the computing system, a first plurality of classes using object-oriented modelling of the modelling methods; writing, with the computing system, a second plurality of classes using object-oriented modelling of quality measurement methods; scanning, with the computing system, a class library containing modelling method classes to determine a first part of class definition information; scanning, with the computing system, another class library containing quality management classes to determine a second part of class definition information; and invoking, with the computing system, the class definition information to produce object manipulation functions that allow the computing system to access methods and attributes of data classes to manipulate a modeling method class.
10. The medium of claim 9, wherein: the quality measurement methods comprise data quality monitoring (DQM), model quality monitoring (MQM), score quality monitoring (SQM), bias quality management (BQM), privacy quality management (PQM), or label quality monitoring (LQM).
11. The medium of claim 9, wherein: the operations comprise object manipulation by allowing reading of attributes, usage of a given modeling method, audit of usage of a given modeling object, reporting attempts to use the given modeling object, or verifying proper licensing.
12. The medium of claim 9, wherein: the operations comprise object manipulation by allowing reading of attributes, usage of a given modeling method, audit of usage of a given modeling object, reporting attempts to use the given modeling object, and verifying proper licensing; and the quality measurement methods comprise data quality monitoring (DQM), model quality monitoring (MQM), score quality monitoring (SQM), bias quality management (BQM), privacy quality management (PQM), and label quality monitoring (LQM).
13. The medium claim 9, wherein: the operations further comprise processing data construct objects based on entity logs; entities captured in the data construct objects comprise: consumers, communications to consumers by an enterprise, communications to an enterprise by consumers, and events that include purchases by consumers from the enterprise and non-purchase interactions by consumers with the enterprise; and the entity logs are obtained from a customer relationship management system of the enterprise.
14. The medium claim 9, wherein: the enterprise is a credit card issuer and a trained predictive machine learning model developed using the object-oriented modeling (OOM) framework is configured to predict whether a consumer will default; the enterprise is a lender and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will borrow; the enterprise is an insurance company and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will file a claim; the enterprise is an insurance company and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will sign-up for insurance; the enterprise is a vehicle seller and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will purchase a vehicle; the enterprise is a seller of goods and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will file a warranty claim; the enterprise is a wireless operator and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer upgrade their cellphone; or the enterprise is bank and the trained predictive machine learning model developed using the OOM framework is configured to predict the change in GDP.
15. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors effectuate operations comprising: obtaining, with one or more processors, for a plurality of entities, datasets, wherein: the datasets comprise a plurality of entity logs; a first subset of the plurality of entity logs are events involving the entities; a first subset of the events are actions by the entities; at least some of the actions are targeted actions; a second subset of the plurality of entity logs are attributes related to the entities; a first subset of the attributes are governance attributes; and the events are distinct from the attributes; forming, with one or more processors, an object-orientated orchestration, the object-orientated orchestration comprising: forming a plurality of objects, wherein each object of the plurality of objects comprises a different set of attributes and events; forming object-oriented labeled datasets based on the event and the attributes of each of the datasets; forming a library of classes, generated by a plurality of object-orientation modelors; and forming a plurality of object-manipulation functions, each function configured to leverage a specific class; receiving a request to determine a set of actions required to achieve a specific targeted action; assigning the specific targeted action to a first subset of classes from the library of classes of the object-oriented orchestration; and determining, with one or more processors, the set of actions required to achieve the specific targeted action using a first subset of the plurality of object-manipulation functions related to the first subset of classes from the library of classes of the object-oriented orchestration.
16. The medium of claim 15, wherein the governance attributes comprises: entity restrictions for at least some of the plurality of entities; entity business protocols for at least some of the plurality of entities; entity policies for at least some of the plurality of entities; entity authorized users for at least some of the plurality of entities; and entity security protocols for at least some of the plurality of entities.
17. The medium of claim 15, wherein: a first subset of the plurality of object-orientation modelors are governance modelors; the governance modelors are configured to form governance classes; and a second subset of the plurality of object-manipulation functions are governance functions, wherein: the governance functions are configured to leverage at least one of the governance classes.
18. The medium of claim 17, wherein: a first subset of the governance modelors are ontology governance modelors; and a second subset of the governance modelors are taxonomy governance modelors.
19. The medium of claim 17, wherein the formation object-orientated orchestration further comprises: forming a first training dataset from the datasets; training, with one or more processors, a first machine-learning model on the first training dataset by adjusting parameters of the first machine-learning model to optimize a first objective function that indicates an accuracy of the governance functions in complying with the governance attributes; and storing, with one or more processors, the adjusted parameters of the trained first machine-learning model in memory.
20. The medium of claim 15, wherein: the governance attributes comprise a plurality of access levels for entity users of at least some of the plurality of entities; and the specific targeted action comprises a plurality of sub-targets, wherein: each of the plurality of sub-targets is assigned with a subset of the plurality of access levels.
21. The medium of claim 15, wherein the plurality of object-manipulation functions comprise: a sequence function used to change a collection of events into a time sequences for processing; a feature function used to gather features of a first object-orientation modelor and then use the features in a second object-orientation modelor; an economic function used to: gather economic objectives and economic constraints of an entity; and employ an allocation algorithm to maximize the objectives; and an ensembling function used to combine a first subset of the library of classes.
22. The medium of claim 21, wherein the plurality of object-manipulation functions are arranged to change orders dynamically based on the specific targeted action.
23. The medium of claim 15, wherein the plurality of object-orientation modelors comprise: ingestion modelors used to control schema drift of the datasets and add version numbers to the datasets; landing modelors used to clean error records in the datasets and update the version numbers of the datasets; curation modelors used to normalize the datasets, by adding primary surrogate keys, and update the version numbers of the datasets; dimensional modelors used to encode the datasets in dimensional star schema and update the version numbers of the datasets; and feature and label modelors used to: change the datasets from dimensional star schema to denormalized flat table; adjust granularity of the datasets; and update the version numbers of the datasets.
24. The medium of claim 15, wherein the datasets comprise: training datasets, used to fit parameters of the object-orientation modelors; validation datasets, used to tune the parameters of the object-orientation modelors; quality assurance datasets, used to test accuracy of the object-orientation modelors; association datasets, used to relate datasets to each other; and targeted action datasets, used to determine the set of actions required to achieve the specific targeted action.
25. The medium of claim 15, wherein: each action from the set of actions is assigned with a score, the score indicating impact level of the action in achieving the specific targeted action.
26. The medium of claim 15, wherein the formation object-orientated orchestration further comprises: forming a first training dataset from the datasets; training a first machine-learning model on the first training dataset by adjusting parameters of the first machine-learning model to optimize a first objective function that indicates an accuracy of the plurality of object-orientation modelors in complying with the governance attributes; and storing the adjusted parameters of the trained first machine-learning model in memory.
</claims>
</document>
