<document>

<filing_date>
2018-09-26
</filing_date>

<publication_date>
2020-03-26
</publication_date>

<priority_date>
2018-09-26
</priority_date>

<ipc_classes>
G06N3/08,G06Q10/06
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
MERHAV, URI
SHACHAM, DAN
CSAR, SEBASTIAN ALEXANDER
</inventors>

<docdb_family_id>
69883469
</docdb_family_id>

<title>
Language Agnostic Machine Learning Model for Title Standardization
</title>

<abstract>
In an example embodiment, a system is provided whereby a machine learning model is trained to predict a standardization for a given raw title. A neural network may be trained whose input is a raw title (such as a query string) and a list of candidate titles (either title identifications in a taxonomy, or English strings), which produces a probability that the raw title and each candidate belong to the same title. The model is able to standardize titles in any language included in the training data without first having to perform language identification or normalization of the title. Additionally, the model is able to benefit from the existence of "loan words" (words adopted from a foreign language with little or no modification) and relations between languages.
</abstract>

<claims>
1. A system comprising: a computer-readable medium having instructions stored thereon, which, when executed by a processor, cause the system to perform operations comprising: obtaining a first set of training data, the first set of training data comprising pairs of job titles and standardized job title identifications; obtaining a second set of training data, the second set of training data comprising pairs of job titles and skills; feeding the first set of training data into a deep convolutional neural network (DCNN) designed to train a prediction model to output a prediction score indicating a likelihood that an input candidate job title matches an input job title identification; feeding the second set of training data into the DCNN in order to retrain the prediction model; feeding a first candidate job title and a plurality of candidate job title identifications into the prediction model, producing a prediction score for each pairing of the first candidate job title and a candidate job title identification; and saving a mapping between the first candidate job title and a candidate job title identification from the plurality of candidate job title identifications having a highest prediction score.
2. The system of claim 1, wherein the feeding the first set of training data into the DCNN comprises: passing the first set of training data to a convolutional layer of the DCNN, the convolutional layer comprising one or more filters having dynamically adjustable weights, the one or more filters configured to filter the first set of training data to produce an output volume for each piece of the first set of training data, the output volume comprising a different feature map for each of the one or more filters; passing the output volume from the convolutional layer through a nonlinearity layer, the nonlinearity layer applying a nonlinearity function to the output volume from the convolutional layer; passing the output volume from the nonlinearity layer through a pooling layer, the pooling layer lowering dimensions of the output volume from the nonlinearity layer; passing the output volume from the pooling layer through a classification layer, the classification layer comprising a specialized convolutional layer having a filter designed to output a prediction score for each piece of the first set of training data based on the output volume from the pooling layer; passing the first set of training data through a loss layer, the loss layer applying a loss function to the first set of training data, resulting in an indication of a level of error in the prediction score for each piece of the first set of training data from the classification layer in comparison to a prediction score from a label for each piece of the first set of training data; determining whether a combination of the levels of error for the first set of training data transgresses a preset threshold; and in response to a determination that the combination of the levels of error transgresses the preset threshold, updating the weights of the one or more filters in the convolutional layers of the DCNN to reduce the combination of the levels of error and repeating the training of the DCNN using a different set of training data.
3. The system of claim 1, wherein the first set of training data is obtained from a taxonomy of title identifications having a stored mapping between the title identifications and titles.
4. The system of claim 1, wherein the first set of training data is obtained from member profiles of members of an online service, the member profiles each being written in at least two languages.
5. The system of claim 1, wherein the first set of training data is obtained from machine-translated titles.
6. The system of claim 1, wherein the first set of training data is obtained from a grouping of titles similar in characters to other titles.
7. The system of claim 1, wherein the second set of training data is obtained from member profiles of members of an online service.
8. A computer-implemented method, comprising: obtaining a first set of training data, the first set of training data comprising pairs of job titles and standardized job title identifications; obtaining a second set of training data, the second set of training data comprising pairs of job titles and skills; feeding the first set of training data into a deep convolutional neural network (DCNN) designed to train a prediction model to output a prediction score indicating a likelihood that an input candidate job title matches an input job title identification; feeding the second set of training data into the DCNN in order to retrain the prediction model; feeding a first candidate job title and a plurality of candidate job title identifications into the prediction model, producing a prediction score for each pairing of the first candidate job title and a candidate job title identification; and saving a mapping between the first candidate job title and a candidate job title identification from the plurality of candidate job title identifications having a highest prediction score.
9. The method of claim 8, wherein the feeding the first set of training data into the DCNN comprises: passing the first set of training data to a convolutional layer of the DCNN, the convolutional layer comprising one or more filters having dynamically adjustable weights, the one or more filters configured to filter the first set of training data to produce an output volume for each piece of the first set of training data, the output volume comprising a different feature map for each of the one or more filters; passing the output volume from the convolutional layer through a nonlinearity layer, the nonlinearity layer applying a nonlinearity function to the output volume from the convolutional layer; passing the output volume from the nonlinearity layer through a pooling layer, the pooling layer lowering dimensions of the output volume from the nonlinearity layer; passing the output volume from the pooling layer through a classification layer, the classification layer comprising a specialized convolutional layer having a filter designed to output a prediction score for each piece of the first set of training data based on the output volume from the pooling layer; passing the first set of training data through a loss layer, the loss layer applying a loss function to the first set of training data, resulting in an indication of a level of error in the prediction score for each piece of the first set of training data from the classification layer in comparison to a prediction score from a label for each piece of the first set of training data; determining whether a combination of the levels of error for the first set of training data transgresses a preset threshold; and in response to a determination that the combination of the levels of error transgresses the preset threshold, updating the weights of the one or more filters in the convolutional layers of the DCNN to reduce the combination of the levels of error and repeating the training of the DCNN using a different set of training data.
10. The method of claim 8, wherein the first set of training data is obtained from a taxonomy of title identifications having a stored mapping between the title identifications and titles.
11. The method of claim 8, wherein the first set of training data is obtained from member profiles of members of an online service, the member profiles each being written in at least two languages.
12. The method of claim 8, wherein the first set of training data is obtained from machine-translated titles.
13. The method of claim 8, wherein the first set of training data is obtained from a grouping of titles similar in characters to other titles.
14. The method of claim 8, wherein the second set of training data is obtained from member profiles of members of an online service.
15. A non-transitory machine-readable storage medium comprising instructions, which when implemented by one or more machines, cause the one or more machines to perform operations comprising: obtaining a first set of training data, the first set of training data comprising pairs of job titles and standardized job title identifications; obtaining a second set of training data, the second set of training data comprising pairs of job titles and skills; feeding the first set of training data into a deep convolutional neural network (DCNN) designed to train a prediction model to output a prediction score indicating a likelihood that an input candidate job title matches an input job title identification; feeding the second set of training data into the DCNN in order to retrain the prediction model; feeding a first candidate job title and a plurality of candidate job title identifications into the prediction model, producing a prediction score for each pairing of the first candidate job title and a candidate job title identification; and saving a mapping between the first candidate job title and a candidate job title identification from the plurality of candidate job title identifications having a highest prediction score.
16. The non-transitory machine-readable storage medium of claim 15, wherein the feeding the first set of training data into the DCNN comprises: passing the first set of training data to a convolutional layer of the DCNN, the convolutional layer comprising one or more filters having dynamically adjustable weights, the one or more filters configured to filter the first set of training data to produce an output volume for each piece of the first set of training data, the output volume comprising a different feature map for each of the one or more filters; passing the output volume from the convolutional layer through a nonlinearity layer, the nonlinearity layer applying a nonlinearity function to the output volume from the convolutional layer; passing the output volume from the nonlinearity layer through a pooling layer, the pooling layer lowering dimensions of the output volume from the nonlinearity layer; passing the output volume from the pooling layer through a classification layer, the classification layer comprising a specialized convolutional layer having a filter designed to output a prediction score for each piece of the first set of training data based on the output volume from the pooling layer; passing the first set of training data through a loss layer, the loss layer applying a loss function to the first set of training data, resulting in an indication of a level of error in the prediction score for each piece of the first set of training data from the classification layer in comparison to a prediction score from a label for each piece of the first set of training data; determining whether a combination of the levels of error for the first set of training data transgresses a preset threshold; and in response to a determination that the combination of the levels of error transgresses the preset threshold, updating the weights of the one or more filters in the convolutional layers of the DCNN to reduce the combination of the levels of error and repeating the training of the DCNN using a different set of training data.
17. The non-transitory machine-readable storage medium of claim 15, wherein the first set of training data is obtained from a taxonomy of title identifications having a stored mapping between the title identifications and titles.
18. The non-transitory machine-readable storage medium of claim 15, wherein the first set of training data is obtained from member profiles of members of an online service, the member profiles each being written in at least two languages.
19. The non-transitory machine-readable storage medium of claim 15, wherein the first set of training data is obtained from machine-translated titles.
20. The non-transitory machine-readable storage medium of claim 15, wherein the first set of training data is obtained from a grouping of titles similar in characters to other titles.
</claims>
</document>
