<document>

<filing_date>
2018-01-11
</filing_date>

<publication_date>
2020-10-20
</publication_date>

<priority_date>
2018-01-11
</priority_date>

<ipc_classes>
G06F16/33,G06F16/332,G06F16/903,G06F16/9032,G06F17/27,G06F40/279,G06F40/30,G06F9/54,G06N20/00,G06N5/04,G06N99/00
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
NITTA, BRYSTON M.
</inventors>

<docdb_family_id>
65036909
</docdb_family_id>

<title>
Adding descriptive metadata to application programming interfaces for consumption by an intelligent agent
</title>

<abstract>
Systems, methods and computer program products are described herein that enable an intelligent agent to automatically discover an application programming interface (API) exposed by a service, to obtain descriptive metadata associated with the API, and to generate, based on the metadata, natural language processing information and/or function call building information associated with at least one functionality of the service. In addition, the intelligent agent is enabled to use the natural language processing information to determine that a user intends to interact with the service based on at least one user input of the user and to use the function call building information to build a function call for interacting with the service based on the at least one user input of the user, and to place the function call to the service on behalf of the user.
</abstract>

<claims>
1. A system for automatically discovering application programming interfaces (APIs) exposed by services, the system comprising: one or more processors; one or more memory devices connected to the one or more processors, the one or more memory devices storing computer program logic for execution by the one or more processors, the computer program logic including: an application programming interface (API) search utility that is configured to discover an API exposed by a service that a natural language processor of the system is not currently trained to recognize, to obtain descriptive metadata associated with the newly discovered API, and to use the descriptive metadata to generate natural language processing information that comprises a mapping between a user input and a functionality of the service; the natural language processor that is configured to determine that a user intends to interact with the service based on the natural language processing information and receiving the user input from the user; a function call builder that is configured to build a function call for interacting with the service based on function call building information associated with the functionality of the service and receiving the user input from the user; and an API invoker that is configured to place the function call to the service on behalf of the user.
2. The system of claim 1, wherein the descriptive metadata comprises one or more of: a plaintext description of the service or the capabilities thereof; or one or more keywords associated with the service.
3. The system of claim 1, wherein the descriptive metadata comprises one or more of structured or unstructured data.
4. The system of claim 1, wherein the API search utility is configured to obtain the descriptive metadata associated with the API by querying the API.
5. The system of claim 1, wherein the API search utility is configured to obtain the descriptive metadata associated with the API by searching one or more of: an API information repository; a software development kit (SDK); a developer resource website; or an API library.
6. The system of claim 1, wherein the API search utility is configured to discover the API in response to a determination that the natural language processor cannot identify a service that the user intends to interact with.
7. The system of claim 1, wherein the API search utility is configured to be executed by a system administrator or automatically on a periodic or intermittent basis.
8. The system of claim 1, wherein the API search utility is further configured to generate the function call building information based on the descriptive metadata.
9. The system of claim 1, wherein the API search utility is further configured to generate the function call building information based on information obtained by searching one or more of: an API information repository; a software development kit (SDK); a developer resource website; or an API library.
10. A system for automatically discovering application programming interfaces (APIs) exposed by services, the system comprising: one or more processors; one or more memory devices connected to the one or more processors, the one or more memory devices storing computer program logic for execution by the one or more processors, the computer program logic including; an application programming interface (API) search utility that comprises: an API identifier that is configured to discover an API that is exposed by a service that a natural language processor of an intelligent agent is not currently trained to recognize; a metadata locator that is configured to obtain descriptive metadata with the newly discovered API; and a metadata processor that is configured to process the descriptive metadata to generate natural language processing Information that comprises a mapping between a user input and a functionality of the service, the natural language processing information being useable by the natural language processor of the intelligent agent to determine that a user has invoked the service.
11. The system claim 10, wherein the metadata locator is configured to obtain the descriptive metadata associated with the API by querying the API.
12. The system of claim 10, wherein the metadata locator is configured to obtain the descriptive metadata associated with the API by searching one or more of: an API information repository; a software development kit (SDK); a developer resource website; or an API library.
13. The system of claim 10, wherein the metadata processor is further configured to store the natural language processing information in a data store accessible by the natural language processor of the intelligent agent.
14. The system of claim 10, wherein the metadata processor is further configured to process the descriptive metadata to generate function call building information, the function call building information being useable by the intelligent agent to build a function call for interacting with the service.
15. The system of claim 10, wherein the metadata processor is further configured to store the function call building information in a data store accessible by a function call builder of the intelligent agent.
16. A method implemented by one or more computing devices of a system for automatically discovering application programming interfaces (APIs) exposed by services: the method comprising: discovering an application programming interface (API) exposed by a service that a natural language processor of the system is not currently trained to recognize; obtaining descriptive metadata associated with the newly discovered API; generating, by using the descriptive metadata, natural language processing information comprising a mapping between a user input and a functionality of the service determining that a user intends to interact with the service based on the natural language processing information and receiving the user input from the user; building a function call for interacting with the service based on functional call building information and receiving the user input from the user; and placing the function call to the service on behalf of the user.
17. The method of claim 16, wherein the descriptive metadata comprises one or more of: a plaintext description of the service or the capabilities thereof; or one or more keywords associated with the service.
18. The method of claim 16, wherein the descriptive metadata comprises one or more of structured or unstructured data.
19. The method of claim 16, wherein obtaining the descriptive metadata associated with the API comprises querying the API.
20. The method of claim 16, wherein obtaining the descriptive metadata associated with the API comprises searching one or more of: an API information repository; a software development kit (SDK); a developer resource website; or an API library.
</claims>
</document>
