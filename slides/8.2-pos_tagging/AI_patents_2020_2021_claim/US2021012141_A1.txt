<document>

<filing_date>
2019-07-11
</filing_date>

<publication_date>
2021-01-14
</publication_date>

<priority_date>
2019-07-11
</priority_date>

<ipc_classes>
G06F17/15,G06K9/00,G06K9/46,G06K9/62,G06T1/60
</ipc_classes>

<assignee>
ARM
</assignee>

<inventors>
RAO, JAYAVARAPU SRINIVASA
</inventors>

<docdb_family_id>
74101822
</docdb_family_id>

<title>
METHOD OF PERFORMING DATA PROCESSING OPERATION
</title>

<abstract>
A computer-implemented method of performing a convolution between an input data array and a kernel to generate an output data array includes decomposing the kernel into a plurality of sub-kernels each having a respective position relative to the kernel and respective in-plane dimensions less than or equal to a target kernel dimension, and for each of the plurality sub-kernels: determining a respective portion of the input data array on the basis of the respective in-plane dimensions of the sub-kernel and the respective position of the sub-kernel relative to the kernel; retrieving the respective portion of the input data array; and performing a convolution between the retrieved respective portion of the input data array and the sub-kernel to generate a respective intermediate data array. The method further includes summing the generated intermediate data arrays to generate at least a portion of the output data array.
</abstract>

<claims>
1. A computer-implemented method of performing a convolution between an input data array and a kernel to generate an output data array, the method comprising: decomposing the kernel into a plurality of sub-kernels each having a respective position relative to the kernel and respective in-plane dimensions less than or equal to a target kernel dimension; and for each of the plurality sub-kernels: determining a respective portion of the input data array on the basis of the respective in-plane dimensions of the sub-kernel and the respective position of the sub-kernel relative to the kernel; retrieving the respective portion of the input data array; and performing a convolution between the retrieved respective portion of the input data array and the sub-kernel to generate a respective intermediate data array, the method further comprising summing the generated intermediate data arrays to generate at least a portion of the output data array.
2. The method of claim 1, wherein: at least one in-plane dimension of the kernel is greater than and indivisible by the target kernel dimension; and at least one of the in-plane dimensions of at least one of the sub-kernels is less than the target kernel dimension.
3. The method of claim 1, wherein the respective in-plane dimensions of at least one of the sub-kernels are different from the respective in-plane dimensions of at least one other of the sub-kernels.
4. The method of claim 1, wherein for each sub-kernel, performing the convolution between the respective portion of the input data array and the sub-kernel to generate the respective intermediate data array comprises performing a plurality of multiply-accumulate operations in parallel.
5. The method of claim 1 comprising, for each of the plurality of sub-kernels: determining a respective target data offset and perimeter data configuration corresponding to the determined respective portion of the input data array; and retrieving the respective portion of the input data array in accordance with the determined respective target data offset and perimeter data configuration.
6. The method of claim 1, comprising determining the respective dimensions of each sub-kernel and the respective position of each sub-kernel relative to the kernel using a set of decomposition rules.
7. The method of claim 1, wherein the input data array corresponds to an image or an input feature map and the output data array corresponds to an output feature map.
8. The method of claim 1, wherein the target kernel dimension is programmable.
9. A data processing system comprising: memory circuitry arranged to store an input data array and a kernel; and processing circuitry configured to: decompose the kernel into a plurality of sub-kernels each having a respective position relative to the kernel and respective in-plane dimensions less than or equal to a target kernel dimension; and for each of the plurality of sub-kernels: determine a respective portion of the input data array on the basis of the respective in-plane dimensions of the sub-kernel and the respective position of the sub-kernel relative to the kernel; retrieve the respective portion of the input data array from the memory circuitry; and perform a convolution between the retrieved respective portion of the input data array and the sub-kernel to generate a respective intermediate data array, wherein the processing circuitry is further configured to sum the generated intermediate data arrays to generate at least a portion of the output data array.
10. The system of claim 9, wherein: at least one in-plane dimension of the kernel is greater than and indivisible by the target kernel dimension; and at least one of the in-plane dimensions of at least one of the sub-kernels is less than the target kernel dimension.
11. The system of claim 9, wherein the respective in-plane dimensions of at least one of the sub-kernels are different from the respective in-plane dimensions of at least one other of the sub-kernels.
12. The system of claim 9, wherein the processing circuitry is arranged to: determine, for each of the plurality of sub-kernels, a respective target data offset and perimeter data configuration corresponding to the determined respective portion of the input data array; and retrieve, for each of the plurality of sub-kernels, the respective portion of the input data array in accordance the determined respective target data offset and perimeter data configuration.
13. The system of claim 12, wherein: the memory circuitry comprises first memory circuitry and second memory circuitry; and the processing circuitry is arranged to: transfer at least part of the input data array from the first memory circuitry and the second memory circuitry; and update, for each of the plurality of sub-kernels, the respective target data offset and perimeter data configuration.
14. The system of claim 13, wherein the first memory circuitry comprises static random-access memory (SRAM) and the second memory circuitry comprises dynamic random-access memory (DRAM).
15. The system of claim 9, wherein the processing circuitry comprises a multiply-accumulate (MAC) array comprising a plurality of accumulators arranged to generate elements of the intermediate data arrays in parallel.
16. The system of claim 15, wherein the accumulators are configured to sum respective corresponding elements of the intermediate data arrays to generate respective elements of the at least portion of the output data array.
17. The system of claim 9, wherein: the memory circuitry is arranged to store a set of decomposition rules; and the processing circuitry is configured to determine the respective in-plane dimensions of each sub-kernel and the respective position of each sub-kernel within the kernel using the set of sub-kernel rules.
18. The system of claim 9, wherein the target kernel dimension is programmable.
19. A non-transitory computer-readable storage medium storing instructions which, when executed by processing circuitry of a computer, cause the computer to perform a convolution between an input data array and a kernel to generate an output data array by: determining a plurality of sub-kernels of the kernel each having a respective position relative to the kernel and respective in-plane dimensions less than or equal to a target kernel dimension; and for each of the plurality sub-kernels: determining a respective portion of the input data array on the basis of the respective dimensions of the sub-kernel and the respective position of the sub-kernel relative to the kernel; retrieving the respective portion of the input data array; and performing a convolution between the retrieved respective portion of the input data array and the sub-kernel to generate a respective intermediate data array, and summing the generated intermediate data arrays to generate at least a portion of the output data array.
20. The non-transitory computer-readable storage medium of claim 19, wherein: at least one in-plane dimension of the kernel is greater than and indivisible by the target kernel dimension; and at least one of the in-plane dimensions of at least one of the sub-kernels is less than the target kernel dimension.
</claims>
</document>
