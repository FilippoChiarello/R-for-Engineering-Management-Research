<document>

<filing_date>
2019-04-26
</filing_date>

<publication_date>
2020-08-04
</publication_date>

<priority_date>
2019-04-26
</priority_date>

<ipc_classes>
G05B19/418,G05B23/02,G06F9/30,G06F9/38,G06F9/48,H04N5/225
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
STICHNOTH JAMES M.
XU, YUANZHONG
MAJNEMER, DAVID ALEXANDER
</inventors>

<docdb_family_id>
68966020
</docdb_family_id>

<title>
Optimizing hardware FIFO instructions
</title>

<abstract>
Methods, systems, and apparatus for scheduling first-in-first-out instructions are described. In one aspect, a method includes receiving data representing code of a program to be executed by a processing unit comprising hardware processors. For each of one or more of the hardware processors, an order of independent groups of first-in-first-out (FIFO) instructions for execution by the hardware processor is identified in the data representing the code of the program. For each independent group of FIFO instructions for execution by the hardware processor, a path length metric that represents how long it will take to reach an end of the program from the independent group of FIFO instructions is determined. A new order of the independent groups of FIFO instructions for execution by the hardware processor is generated based at least on the path length metric for each independent group of FIFO instructions for execution by the hardware processor.
</abstract>

<claims>
1. A method performed by one or more data processing apparatus, the method comprising: receiving data representing code of a program to be executed by a processing unit comprising hardware processors; for each of one or more of the hardware processors: identifying, in the data representing the code of the program, an order of independent groups of first-in-first-out (FIFO) instructions for execution by the hardware processor; determining, for each independent group of FIFO instructions for execution by the hardware processor, a path length metric that represents how long it will take to reach an end of the program from the independent group of FIFO instructions; and generating, based at least on the path length metric for each independent group of FIFO instructions for execution by the hardware processor, a new order of the independent groups of FIFO instructions for execution by the hardware processor; generating updated code for the program based at least on each new order of independent groups of FIFO instructions for the one or more hardware processors; generating, based on the updated code for the program, output code for execution by the hardware processors; and providing the output code to the hardware processors.
2. The method of claim 1, wherein the data representing the code of the program comprises a compiler intermediate representation of source code of the program.
3. The method of claim 1, wherein the output code comprises compiled machine code executable by the one or more hardware processors.
4. The method of claim 1, further comprising generating, based on the data representing the code of the program, a graph that represents a sequence of instructions for the program, wherein generating the new order of the independent groups of FIFO instructions for a given hardware processor comprises re-ordering the independent groups of FIFO instructions in the graph to generate an updated graph.
5. The method of claim 4, wherein generating updated code for the program based at least on each new order of independent group of FIFO instructions for the one or more hardware processors comprises generating an updated sequence of instructions based on the updated graph.
6. The method of claim 1, wherein generating updated code for the program based at least on each new order of independent group of FIFO instructions for the one or more hardware processors comprises: identifying, in the updated graph, instructions that are not identified as being FIFO instructions; for one or more of the identified instructions: selecting an independent group of FIFO instructions based at least on a path length between the independent group of FIFO instructions and the identified instruction in the update graph; and scheduling, in the updated code, the identified instruction with the selected long-latency group.
7. The method of claim 6, wherein multiple hardware processors execute independent groups of FIFO instructions, the method further comprising determining, for at least one of the multiple hardware processors, an order of a set of independent FIFO instructions executed by the at least one hardware processor based on whether the independent groups of FIFO instructions are on a critical path of the program.
8. The method of claim 7, further comprising: determining that a first hardware processor includes multiple independent groups of FIFO instructions; and determining that an independent group of FIFO instructions of a second hardware processor is an instruction to receive data output by one of the multiple independent groups of FIFO instructions of the first hardware processor, wherein generating a new order of the independent groups of FIFO instructions for execution by the first hardware processor comprises moving the one independent group of FIFO instructions of the first hardware processor to execute before one or more other independent groups of FIFO instructions of the first hardware processor in response to determining that the independent group of FIFO instructions of the second hardware processor of the multiple hardware processors is an instruction to receive data output by one of the multiple independent groups of FIFO instructions of the first hardware processor.
9. The method of claim 1, wherein each independent group of FIFO instructions includes one or more input instructions for providing input data to the hardware processor and one or more output instructions for outputting data from the hardware processor based on input data.
10. The method of claim 1, wherein a particular hardware processor of the processing unit is a configurable hardware processor that executes instructions using multiple different configurations, the method further comprising: identifying, in the data representing the code of the program, a set of FIFO instructions that will be executed by the particular hardware processor using a same configuration for the particular hardware processor; and determining a new order, in the updated code for the application, for the set of FIFO instructions such the set of FIFO instructions are executed in a sequence without any intervening FIFO instructions that require a different configuration of the particular hardware processor.
11. The method of claim 1, wherein the one or more hardware processors include multiple processors, the method further comprising: determining, for each of the multiple hardware processors, a performance metric that represents how long it will take the hardware processor to complete all FIFO instructions for the hardware processor; determining an order of evaluation of the multiple hardware processors based on the performance metric for each of the multiple hardware processors; and determining a new order of the independent groups of FIFO instructions for each of the multiple hardware processors one at a time in the determined order of evaluation.
12. A system comprising: a data processing apparatus; and a memory storage apparatus in data communication with the data processing apparatus, the memory storage apparatus storing instructions executable by the data processing apparatus and that upon such execution cause the data processing apparatus to perform operations comprising: receiving data representing code of a program to be executed by a processing unit comprising hardware processors; for each of one or more of the hardware processors: identifying, in the data representing the code of the program, an order of independent groups of first-in-first-out (FIFO) instructions for execution by the hardware processor; determining, for each independent group of FIFO instructions for execution by the hardware processor, a path length metric that represents how long it will take to reach an end of the program from the independent group of FIFO instructions; and generating, based at least on the path length metric for each independent group of FIFO instructions for execution by the hardware processor, a new order of the independent groups of FIFO instructions for execution by the hardware processor; generating updated code for the program based at least on each new order of independent groups of FIFO instructions for the one or more hardware processors; generating, based on the updated code for the program, output code for execution by the hardware processors; and providing the output code to the hardware processors.
13. The system of claim 12, wherein the data representing the code of the program comprises a compiler intermediate representation of source code of the program.
14. The system of claim 12, wherein the output code comprises compiled machine code executable by the one or more hardware processors.
15. The system of claim 12, wherein the operations comprise generating, based on the data representing the code of the program, a graph that represents a sequence of instructions for the program, wherein generating the new order of the independent groups of FIFO instructions for a given hardware processor comprises re-ordering the independent groups of FIFO instructions in the graph to generate an updated graph.
16. The system of claim 15, wherein generating updated code for the program based at least on each new order of independent group of FIFO instructions for the one or more hardware processors comprises generating an updated sequence of instructions based on the updated graph.
17. The system of claim 12, wherein generating updated code for the program based at least on each new order of independent group of FIFO instructions for the one or more hardware processors comprises: identifying, in the updated graph, instructions that are not identified as being FIFO instructions; for one or more of the identified instructions: selecting an independent group of FIFO instructions based at least on a path length between the independent group of FIFO instructions and the identified instruction in the update graph; and scheduling, in the updated code, the identified instruction with the selected long-latency group.
18. The system of claim 17, wherein multiple hardware processors execute independent groups of FIFO instructions, the operations further comprising determining, for at least one of the multiple hardware processors, an order of a set of independent FIFO instructions executed by the at least one hardware processor based on whether the independent groups of FIFO instructions are on a critical path of the program.
19. The system of claim 18, wherein the operations comprise: determining that a first hardware processor includes multiple independent groups of FIFO instructions; and determining that an independent group of FIFO instructions of a second hardware processor is an instruction to receive data output by one of the multiple independent groups of FIFO instructions of the first hardware processor, wherein generating a new order of the independent groups of FIFO instructions for execution by the first hardware processor comprises moving the one independent group of FIFO instructions of the first hardware processor to execute before one or more other independent groups of FIFO instructions of the first hardware processor in response to determining that the independent group of FIFO instructions of the second hardware processor of the multiple hardware processors is an instruction to receive data output by one of the multiple independent groups of FIFO instructions of the first hardware processor.
20. The non-transitory computer storage medium encoded with a computer program, the program comprising instructions that when executed by one or more data processing apparatus cause the one or more data processing apparatus to perform operations comprising: receiving data representing code of a program to be executed by a processing unit comprising hardware processors; for each of one or more of the hardware processors: identifying, in the data representing the code of the program, an order of independent groups of first-in-first-out (FIFO) instructions for execution by the hardware processor; determining, for each independent group of FIFO instructions for execution by the hardware processor, a path length metric that represents how long it will take to reach an end of the program from the independent group of FIFO instructions; and generating, based at least on the path length metric for each independent group of FIFO instructions for execution by the hardware processor, a new order of the independent groups of FIFO instructions for execution by the hardware processor; generating updated code for the program based at least on each new order of independent groups of FIFO instructions for the one or more hardware processors; generating, based on the updated code for the program, output code for execution by the hardware processors; and providing the output code to the hardware processors.
</claims>
</document>
