<document>

<filing_date>
2019-01-31
</filing_date>

<publication_date>
2020-08-06
</publication_date>

<priority_date>
2019-01-31
</priority_date>

<ipc_classes>
H04L12/24
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
BOLTON, STEVEN A.
CAO MINH, CHI
</inventors>

<docdb_family_id>
71837967
</docdb_family_id>

<title>
EVENT-TRIGGERED DISTRIBUTED DATA COLLECTION IN A DISTRIBUTED TRANSACTION MONITORING SYSTEM
</title>

<abstract>
In one embodiment, a method for event-triggered distributed data collection in a distributed transaction monitoring system is disclosed. The method illustratively comprises receiving, by a device, application performance data of an instance of a distributed business transaction from a first agent, the application performance data including a unique identifier associated with the instance and limited to a time window; receiving, by the device, infrastructure performance data of the instance of the distributed business transaction from a second agent, the infrastructure performance data including the unique identifier associated with the instance; grouping, by the device, the application performance data and the infrastructure performance data based on the unique identifier; and identifying, by the device, a performance issue with the instance of the distributed business transaction through an analysis of the grouping of the application performance data and the infrastructure performance data.
</abstract>

<claims>
1. A method, comprising: receiving, by a device, application performance data of an instance of a distributed business transaction from a first agent, the application performance data including a unique identifier associated with the instance and limited to a time window; receiving, by the device, infrastructure performance data of the instance of the distributed business transaction from a second agent, the infrastructure performance data including the unique identifier associated with the instance; grouping, by the device, the application performance data and the infrastructure performance data based on the unique identifier; and identifying, by the device, a performance issue with the instance of the distributed business transaction through an analysis of the grouping of the application performance data and the infrastructure performance data.
2. The method of claim 1, wherein the first agent triggers the second agent to send the infrastructure performance data to the device.
3. The method of claim 2, wherein the first agent triggers the second agent to send the infrastructure performance data to the device in response to the first agent performing an event selected from a group consisting of: an application exception of the distributed business transaction, a deviation from an average execution time of the distributed business transaction, or an initiation of garbage collection by the distributed business transaction.
4. The method of claim 1, wherein the second agent triggers the first agent to send the application performance data to the device.
5. The method of claim 4, wherein the second agent triggers the first agent to send the application performance data to the device in response to the second agent performing an event selected from a group consisting of: an initiation of a container and/or database lifecycle operation, a completion of the container and/or database lifecycle operation, or a usage of memory at a predetermined level.
6. The method of claim 1, wherein the first agent is an application agent running on a physical server.
7. The method of claim 6, wherein the second agent is an infrastructure agent running on the physical server or a different physical server.
8. The method of claim 1, wherein the infrastructure performance data is limited to the time window.
9. The method of claim 1, wherein the application performance data is retained by the first agent in a local circular buffer that is limited to the time window and comprises metrics and/or metadata associated with the instance of the distributed business transaction.
10. The method of claim 1, wherein the application performance data is retained by the second agent in a local circular buffer that is collected automatically and/or based on user-specified configurations and comprises metrics and/or metadata associated with the instance of the distributed business transaction.
11. An apparatus, comprising: one or more network interfaces to communicate with a network; a processor coupled to the network interfaces and configured to execute one or more processes; and a memory configured to store a process executable by the processor, the process when executed operable to: receive application performance data of an instance of a distributed business transaction from a first agent, the application performance data including a unique identifier associated with the instance and limited to a time window; receive infrastructure performance data of the instance of the distributed business transaction from a second agent, the infrastructure performance data including the unique identifier associated with the instance; group the application performance data and the infrastructure performance data based on the unique identifier; and identify a performance issue with the instance of the distributed business transaction through an analysis of the grouping of the application performance data and the infrastructure performance data.
12. The apparatus of claim 11, wherein the first agent triggers the second agent to send the infrastructure performance data.
13. The apparatus of claim 12, wherein the first agent triggers the second agent to send the infrastructure performance data to the device in response to the first agent performing an event selected from a group consisting of: an application exception of the distributed business transaction, a deviation from an average execution time of the distributed business transaction, or an initiation of garbage collection by the distributed business transaction.
14. The apparatus of claim 11, wherein the second agent triggers the first agent to send the application performance data.
15. The apparatus of claim 14, wherein the second agent triggers the first agent to send the application performance data to the device in response to the second agent performing an event selected from a group consisting of: an initiation of a container and/or database lifecycle operation, a completion of the container and/or database lifecycle operation, or a usage of memory at a predetermined level.
16. The apparatus of claim 11, wherein the first agent is an application agent running on a physical server.
17. The apparatus of claim 16, wherein the second agent is an infrastructure agent running on the physical server or a different physical server.
18. The apparatus of claim 11, wherein the application performance data is retained by the first agent in a local circular buffer that is limited to the time window and comprises metrics and/or metadata associated with the instance of the distributed business transaction.
19. The apparatus of claim 11, wherein the application performance data is retained by the second agent in a local circular buffer that is collected automatically and/or based on user-specified configurations and comprises metrics and/or metadata associated with the instance of the distributed business transaction.
20. A tangible, non-transitory, computer-readable medium storing program instructions that cause a device in a network to execute a process comprising: receiving, by a device, application performance data of an instance of a distributed business transaction from a first agent, the application performance data including a unique identifier associated with the instance and limited to a time window; receiving, by the device, infrastructure performance data of the instance of the distributed business transaction from a second agent, the infrastructure performance data including the unique identifier associated with the instance; grouping, by the device, the application performance data and the infrastructure performance data based on the unique identifier; and identifying, by the device, a performance issue with the instance of the distributed business transaction through an analysis of the grouping of the application performance data and the infrastructure performance data.
</claims>
</document>
