<document>

<filing_date>
2018-04-27
</filing_date>

<publication_date>
2020-11-03
</publication_date>

<priority_date>
2018-04-27
</priority_date>

<ipc_classes>
G06F3/06,G06F8/61,G06F8/65,G06N20/00,G06N99/00
</ipc_classes>

<assignee>
NUTANIX
NUTANIX
</assignee>

<inventors>
GUPTA, KARAN
JAIN, AMIT
LI, JIE
KONKA, PAVAN KUMAR
PARTHASARATHY, RANJAN
DIGIOIA, PAUL MICHAEL
SHETTY, AVINASH MANJAYA
YANG, HARRY HAI
GANTI, KRISHNA
XIAO, YANG
</inventors>

<docdb_family_id>
68291144
</docdb_family_id>

<title>
Method and apparatus for data driven and cluster specific version/update control
</title>

<abstract>
A method and apparatus for data driven and cluster specific version/update control. The apparatus includes an automated multi-clusters management apparatus that interfaces with a plurality of remote clusters to provide data driven version/update control on a cluster by cluster basis. Generally, operation includes collection/identification of cluster specific data pertaining to software, hardware, and cluster requirements. The cluster specific data is later compared/analyzed against multi-cluster data pertaining to software releases, hardware characteristics, and known bugs/issues for each. The results of the comparison/analysis can then be ranked according to various metrics to different possible solutions and to differentiate the less desirable results from the more desirable results. Thus, the automated multi-cluster management apparatus provides for selection of versions/updates that is dependent on the cluster specific data. Additionally, the present disclosure provides for scheduling and distribution planning for selected versions/updates.
</abstract>

<claims>
1. A computer-implemented method, comprising: identifying individual candidate release of a software that matches a cluster specific requirement of a computing cluster by matching computing cluster data to release data or matching computing cluster data to a hardware profile; ranking a version of software currently installed on the computing cluster and the individual candidate release based on a metric, wherein the individual candidate release corresponds to a different version of the software currently installed on the computing cluster; and selecting, based on said ranking, either to maintain the version of software currently installed on the computing cluster when the version of software currently installed on the computing cluster is ranked better than the individual candidate release, or to install the individual candidate release to change the version of the software currently installed on the computing cluster when the individual candidate release is ranked better than the version of software currently installed on the computing cluster, wherein the individual candidate released is installed by: scheduling installation of the individual candidate release on a node of the computing cluster over a first time period using a rule; and generating a distribution plan for the individual candidate release, the distribution plan comprising a source and a destination, wherein the source transmits the individual candidate release to the destination.
2. The method of claim 1, wherein a plurality of clusters are located at a plurality different locations and the metric corresponds to two or more clusters of the plurality of clusters.
3. The method of claim 1, wherein the individual candidate release corresponds to a feature requirement, a security requirement, a performance requirement, or current configuration information.
4. The method of claim 1, wherein selecting the individual candidate release to be installed depends on one or more rules generated by a machine learning process.
5. The method of claim 1, wherein the rule is modified by a machine learning process based on a difference between an expected time period for completion and an actual time period for completion of installation of the individual candidate release on a respective computing cluster.
6. The method of claim 1, wherein the individual candidate release is identified by matching corresponding cluster data to release data and a hardware profile to identify a supported release based on at least a rule base.
7. The method of claim 6, wherein the release data comprises a release type, a release feature, a release requirement, or a known bug/issue, and the hardware profile comprises feature compatibility information, performance classification information, or a known bug/issue for a hardware device.
8. The method of claim 1, wherein the ranking of the individual candidate release is adjusted based on a machine learning process and a specific combination of hardware and software in the computing cluster for the individual candidate release.
9. A non-transitory computer readable medium having stored thereon a sequence of instructions which, when executed by a processor performs a set of acts, the set of acts comprising: identifying individual candidate release of a software that matches a cluster specific requirement of a computing cluster by matching computing cluster data to release data or matching computing cluster data to a hardware profile; ranking a version of software currently installed on the computing cluster and the individual candidate release based on a metric, wherein the individual candidate release corresponds to a different version of the software currently installed on the computing cluster; and selecting, based on said ranking, either to maintain the version of software currently installed on the computing cluster when the version of software currently installed on the computing cluster is ranked better than the individual candidate release, or to install the individual candidate release to change the version of the software currently installed on the computing cluster when the individual candidate release is ranked better than the version of software currently installed on the computing cluster, wherein the individual candidate released is installed by: scheduling installation of the individual candidate release on a node of the computing cluster over a first time period using a rule; and— generating a distribution plan for the individual candidate release, the distribution plan comprising a source and a destination, wherein the source transmits the individual candidate release to the destination.
10. The computer readable medium of claim 9, wherein a plurality of clusters are located at a plurality different locations and the metric corresponds to two or more clusters of the plurality of clusters.
11. The computer readable medium of claim 9, wherein the individual candidate release corresponds to a feature requirement, a security requirement, a performance requirement, or current configuration information.
12. The computer readable medium of claim 9, wherein selecting the individual candidate release to be installed depends on one or more rules generated by a machine learning process.
13. The computer readable medium of claim 9, wherein the rule is modified by a machine learning process based on a difference between an expected time period for completion and an actual time period for completion of installation of the individual candidate release on a respective computing cluster.
14. The computer readable medium of claim 9, wherein the individual candidate release is identified by matching corresponding cluster data to release data and a hardware profile to identify a supported release based on at least a rule base.
15. The computer readable medium of claim 14, wherein the release data comprises a release type, a release feature, a release requirement, or a known bug/issue, and the hardware profile comprises feature compatibility information, performance classification information, or a known bug/issue for a hardware device.
16. The computer readable medium of claim 9, wherein the ranking of the individual candidate release is adjusted based on a machine learning process and a specific combination of hardware and software in the computing cluster for the individual candidate release.
17. A system, comprising: a memory for storing a sequence of instructions; and a processor that executes the sequence of instructions to perform a set of acts, the set of acts comprising: identifying individual candidate release of a software that matches a cluster specific requirement of a computing cluster by matching computing cluster data to release data or matching computing cluster data to a hardware profile; ranking a version of software currently installed on the computing cluster and the individual candidate release based on a metric, wherein the individual candidate release corresponds to a different version of the software currently installed on the computing cluster; and selecting, based on said ranking, either to maintain the version of software currently installed on the computing cluster when the version of software currently installed on the computing cluster is ranked better than the individual candidate release, or to install the individual candidate release to change the version of the software currently installed on the computing cluster when the individual candidate release is ranked better than the version of software currently installed on the computing cluster, wherein the individual candidate released is installed by: scheduling installation of the individual candidate release on a node of the computing cluster over a first time period using a rule; and— generating a distribution plan for the individual candidate release, the distribution plan comprising a source and a destination, wherein the source transmits the individual candidate release to the destination.
18. The system of claim 17, wherein a plurality of clusters are located at a plurality different locations and the metric corresponds to two or more clusters of the plurality of clusters.
19. The system of claim 17, wherein the individual candidate releases correspond to a feature requirement, a security requirement, a performance requirement, or current configuration information.
20. The system of claim 17, wherein the individual candidate release is identified by matching corresponding cluster data to release data and a hardware profile to identify a supported release based on at least a rule base.
21. The system of claim 17, wherein selecting the individual candidate release to be installed depends on one or more rules generated by a machine learning process.
22. The system of claim 17, wherein the rule is modified by a machine learning process based on a difference between an expected time period for completion and an actual time period for completion of installation of the individual candidate release on a respective computing cluster.
23. The system of claim 22, wherein the release data comprises a release type, a release feature, a release requirement, or a known bug/issue, and the hardware profile comprises feature compatibility information, performance classification information, or a known bug/issue for a hardware device.
24. The system of claim 17, wherein the ranking of the individual candidate release is adjusted based on a machine learning process and a specific combination of hardware and software in the computing cluster for the individual candidate release.
</claims>
</document>
