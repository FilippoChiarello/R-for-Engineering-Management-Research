<document>

<filing_date>
2020-01-10
</filing_date>

<publication_date>
2020-09-01
</publication_date>

<priority_date>
2019-01-31
</priority_date>

<ipc_classes>
G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
STRADVISION
</assignee>

<inventors>
LEE, HYUNG SOO
SHIN, DONGSOO
KIM, HAK-KYOUNG
CHO, HOJIN
NAM, WOONHYUN
YEO, DONGHUN
KIM, YONGJOONG
RYU, WOOJU
BOO, SUKHOON
JE, HONGMO
SUNG, MYUNGCHUL
JANG, TAEWOONG
JEONG, KYUNGJOONG
KIM, KYE-HYEON
LEE, MYEONG-CHUN
</inventors>

<docdb_family_id>
69190642
</docdb_family_id>

<title>
Learning method and learning device for learning automatic labeling device capable of auto-labeling image of base vehicle using images of nearby vehicles, and testing method and testing device using the same
</title>

<abstract>
A method for learning an automatic labeling device for auto-labeling a base image of a base vehicle using sub-images of nearby vehicles is provided. The method includes steps of: a learning device inputting the base image and the sub-images into previous trained dense correspondence networks to generate dense correspondences; and into encoders to output convolution feature maps, inputting the convolution feature maps into decoders to output deconvolution feature maps; with an integer k from 1 to n, generating a k-th adjusted deconvolution feature map by translating coordinates of a (k+1)-th deconvolution feature map using a k-th dense correspondence; generating a concatenated feature map by concatenating the 1-st deconvolution feature map and the adjusted deconvolution feature maps; and inputting the concatenated feature map into a masking layer to output a semantic segmentation image and instructing a 1-st loss layer to calculate 1-st losses and updating decoder weights and encoder weights.
</abstract>

<claims>
1. A method for learning an automatic labeling device capable of auto-labeling an image of a base vehicle using images of nearby vehicles, comprising steps of: (a) if at least one base image of the base vehicle and a 1-st sub-image to an n-th sub-image of respective one or more nearby vehicles are acquired wherein n is an integer larger than 0, a learning device performing a process of inputting the base image and inputting each of the 1-st sub-image to the n-th sub-image respectively into a 1-st previous trained dense correspondence network to an n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence to an n-th dense correspondence, wherein each of the 1-st dense correspondence to the n-th dense correspondence represents each of locations, on the base image, of each of a dense of the 1-st sub-image to a dense of the n-th sub-image, assuming that each of the dense of the 1-st sub-image to the dense of the n-th sub-image is translated to the base image; (b) the learning device performing (i) a process of inputting the base image and inputting each of the 1-st sub-image to the n-th sub-image respectively into each of a 1-st encoder to an (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map to an (n+1)-th convolution feature map by applying at least one convolution operation to the base image and each of the 1-st sub-image to the n-th sub-image respectively, (ii) a process of inputting each of the 1-st convolution feature map to the (n+1)-th convolution feature map respectively into each of a 1-st decoder to an (n+1)-th decoder, to thereby allow each of the 1-st decoder to the (n+1)-th decoder to respectively output each of a 1-st deconvolution feature map to an (n+1)-th deconvolution feature map by applying at least one deconvolution operation to each of the 1-st convolution feature map to the (n+1)-th convolution feature map respectively, (iii) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map by translating coordinates of a (k+1)-th deconvolution feature map to coordinates of the 1-st deconvolution feature map by referring to a k-th dense correspondence, to thereby generate a 1-st adjusted deconvolution feature map to an n-th adjusted deconvolution feature map, and (iv) a process of generating at least one concatenated feature map by concatenating the 1-st deconvolution feature map, and the 1-st adjusted deconvolution feature map to the n-th adjusted deconvolution feature map; and (c) the learning device performing a process of inputting the concatenated feature map into a masking layer, to thereby allow the masking layer to output at least one semantic segmentation image by applying at least one masking operation to the concatenated feature map, and a process of instructing a 1-st loss layer to calculate one or more 1-st losses by referring to the semantic segmentation image and its corresponding at least one segmentation GT, and updating each of decoder weights of the 1-st decoder to the (n+1)-th decoder and each of encoder weights of the 1-st encoder to the (n+1)-th encoder via backpropagation using the 1-st losses such that the 1-st losses are minimized.
2. The method of claim 1, wherein the learning device instructs each of the 1-st to the n-th previous trained dense correspondence networks to perform (i) a process of inputting the base image into each of 1-st sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps by applying the convolution operation to the base image, (ii) a process of inputting each of the 1-st to the n-th sub-images into each of 2-nd sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps by applying the convolution operation to each of the 1-st to the n-th sub-images respectively, (iii) a process of concatenating each of the 1-st sub-convolution feature maps and each of the 2-nd sub-convolution feature maps, to thereby generate each of the 1-st to the n-th sub-concatenated feature maps, (iv) a process of inputting each of the 1-st to the n-th sub-concatenated feature maps respectively into each of sub-decoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the sub-decoders to respectively generate each of a 1-st to an n-th sub-deconvolution feature maps by applying the deconvolution operation to each of the 1-st to the n-th sub-concatenated feature maps respectively, and (v) a process of inputting each of the 1-st to the n-th sub-deconvolution feature maps respectively into each of regressors respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the regressors to respectively output each of the 1-st to the n-th dense correspondences by applying at least one regression operation to each of the 1-st to the n-th dense correspondences respectively.
3. The method of claim 2, wherein each of the 1-st to the n-th previous trained dense correspondence networks has been learned by a sub-learning device, to respectively output each of the 1-st to the n-th dense correspondences, and wherein, if at least one 1-st training image and at least one 2-nd training image are acquired, the sub-learning device performs (i) a process of inputting the 1-st training image into each of the 1-st sub-encoders, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for training by applying the convolution operation to the 1-st training image respectively, (ii) a process of inputting the 2-nd training image into each of the 2-nd sub-encoders, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for training by applying the convolution operation to the 2-nd training image, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for training and each of the 2-nd sub-convolution feature maps for training, to thereby generate each of sub-concatenated feature maps for training, (iv) a process of inputting each of the sub-concatenated feature maps for training respectively into each of the sub-decoders, to thereby allow each of the sub-decoders to respectively generate each of sub-deconvolution feature maps for training by applying the deconvolution operation to each of the sub-concatenated feature maps for training respectively, (v) a process of inputting each of the sub-deconvolution feature maps for training into each of the regressors, to thereby allow each of the regressors to respectively output each of dense correspondences for training wherein each of the dense correspondence for training represents each of locations, on the 1-st training image, of each of a dense of the 2-nd training image, assuming that the dense of the 2-nd training image is translated to the 1-st training image, and (vi) a process of instructing a 2-nd loss layer to calculate one or more 2-nd losses by referring to the dense correspondences for training and their dense correspondence GTs, and updating each of sub-decoder weights of each of the sub-decoders and each of sub-encoder weights of each of the 1-st sub-encoders and the 2-nd sub-encoders via backpropagation using the 2-nd losses.
4. The method of claim 2, wherein each of the 1-st sub-encoders and each of the 2-nd sub-encoders share their sub-encoder weights.
5. The method of claim 1, wherein each of the 1-st to the n-th dense correspondences includes information representing each pixel of each of the 1-st to the n-th sub-images corresponds to each certain pixel of the base image.
6. The method of claim 5, wherein each of the 1-st to the n-th dense correspondences includes information corresponding to at least one location of at least one externally expanding area of the base image, if each pixel of each of the 1-st to the n-th sub-images fails to correspond to any pixel of the base image.
7. The method of claim 1, wherein the 1-st encoder to the (n+1)-th encoder share their encoder weights, and wherein the 1-st decoder to the (n+1)-th decoder share their decoder weights.
8. A method for testing an automatic labeling device capable of auto-labeling an image of a base vehicle using an image of a nearby vehicle, comprising steps of: (a) on condition that a learning device has performed (1) if at least one base image for training of a base vehicle for training and a 1-st sub-image for training to an n-th sub-image for training of respective one or more nearby vehicles for training are acquired wherein n is an integer larger than 0, a process of inputting the base image for training and inputting each of the 1-st sub-image for training to the n-th sub-image for training respectively into a 1-st previous trained dense correspondence network to an n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence for training to an n-th dense correspondence for training, wherein each of the 1-st dense correspondence for training to the n-th dense correspondence for training represents each of locations, on the base image for training, of each of a dense of the 1-st sub-image for training to a dense of the n-th sub-image for training, assuming that each of the dense of the 1-st sub-image for training to the dense of the n-th sub-image for training is translated to the base image for training, (2) (i) a process of inputting the base image for training and inputting each of the 1-st sub-image for training to the n-th sub-image for training respectively into each of a 1-st encoder to an (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map for training to an (n+1)-th convolution feature map for training by applying at least one convolution operation to the base image for training and each of the 1-st sub-image for training to the n-th sub-image for training respectively, (ii) a process of inputting each of the 1-st convolution feature map for training to the (n+1)-th convolution feature map for training respectively into each of a 1-st decoder to an (n+1)-th decoder, to thereby allow each of the 1-st decoder to the (n+1)-th decoder to respectively output each of a 1-st deconvolution feature map for training to an (n+1)-th deconvolution feature map for training by applying at least one deconvolution operation to each of the 1-st convolution feature map for training to the (n+1)-th convolution feature map for training respectively, (iii) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map for training by translating coordinates of a (k+1)-th deconvolution feature map for training to coordinates of the 1-st deconvolution feature map for training by referring to a k-th dense correspondence for training, to thereby generate a 1-st adjusted deconvolution feature map for training to an n-th adjusted deconvolution feature map for training, and (iv) a process of generating at least one concatenated feature map for training by concatenating the 1-st deconvolution feature map for training, and the 1-st adjusted deconvolution feature map for training to the n-th adjusted deconvolution feature map for training and (3) a process of inputting the concatenated feature map for training into a masking layer, to thereby allow the masking layer to output at least one semantic segmentation image for training by applying at least one masking operation to the concatenated feature map for training, and a process of instructing a 1-st loss layer to calculate one or more 1-st losses by referring to the semantic segmentation image for training and its corresponding at least one segmentation GT, and updating each of decoder weights of the 1-st decoder to the (n+1)-th decoder and each of encoder weights of the 1-st encoder to the (n+1)-th encoder via backpropagation using the 1-st losses such that the 1-st losses are minimized, a testing device, if at least one base image for testing of a base vehicle for testing and a 1-st sub-image for testing to an n-th sub-image for testing of respective one or more nearby vehicles for testing are acquired, performing a process of inputting the base image for testing and inputting each of the 1-st sub-image for testing to the n-th sub-image for testing respectively into the 1-st previous trained dense correspondence network to the n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence for testing to an n-th dense correspondence for testing, wherein each of the 1-st dense correspondence for testing to the n-th dense correspondence for testing represents each of locations, on the base image for testing, of each of a dense of the 1-st sub-image for testing to a dense of the n-th sub-image for testing, assuming that each of the dense of the 1-st sub-image for testing to the dense of the n-th sub-image for testing is translated to the base image for testing; (b) the testing device performing (i) a process of inputting the base image for testing and inputting each of the 1-st sub-image for testing to the n-th sub-image for testing respectively into each of the 1-st encoder to the (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map for testing to an (n+1)-th convolution feature map for testing by applying the convolution operation to the base image for testing and each of the 1-st sub-image for testing to the n-th sub-image for testing respectively, (ii) a process of inputting each of the 1-st convolution feature map for testing to the (n+1)-th convolution feature map for testing respectively into the 1-st decoder to the (n+1)-th decoder, to thereby allow the 1-st decoder to the (n+1)-th decoder to respectively output a 1-st deconvolution feature map for testing to an (n+1)-th deconvolution feature map for testing by applying the deconvolution operation to each of the 1-st convolution feature map for testing to the (n+1)-th convolution feature map for testing respectively, (iii) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map for testing by translating coordinates of a (k+1)-th deconvolution feature map for testing to coordinates of the 1-st deconvolution feature map for testing by referring to a k-th dense correspondence for testing, to thereby generate a 1-st adjusted deconvolution feature map for testing to an n-th adjusted deconvolution feature map for testing, and (iv) a process of generating at least one concatenated feature map for testing by concatenating the 1-st deconvolution feature map for testing, and the 1-st adjusted deconvolution feature map for testing to the n-th adjusted deconvolution feature map for testing; and (c) the testing device performing a process of inputting the concatenated feature map for testing into the masking layer, to thereby allow the masking layer to output at least one semantic segmentation image for testing by applying the masking operation to the concatenated feature map for testing.
9. The method of claim 8, wherein the testing device instructs each of the 1-st to the n-th previous trained dense correspondence networks to perform (i) a process of inputting the base image for testing into each of 1-st sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for testing by applying the convolution operation to the base image for testing, (ii) a process of inputting each of the 1-st to the n-th sub-images for testing into each of 2-nd sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for testing by applying the convolution operation to each of the 1-st to the n-th sub-images for testing respectively, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for testing and each of the 2-nd sub-convolution feature maps for testing, to thereby generate each of the 1-st to the n-th sub-concatenated feature maps for testing, (iv) a process of inputting each of the 1-st to the n-th sub-concatenated feature maps for testing respectively into each of sub-decoders corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the sub-decoders to respectively generate each of a 1-st to an n-th sub-deconvolution feature maps for testing by applying the deconvolution operation to each of the 1-st to the n-th sub-concatenated feature maps for testing respectively, and (v) a process of inputting each of the 1-st to the n-th sub-deconvolution feature maps for testing respectively into each of regressors respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the regressors to respectively output each of the 1-st to the n-th dense correspondences for testing by applying at least one regression operation to each of the 1-st to the n-th dense correspondences for testing respectively.
10. The method of claim 9, wherein each of the 1-st to the n-th previous trained dense correspondence networks has been learned by a sub-learning device, to respectively output each of the 1-st to the n-th dense correspondences for testing, and wherein, if at least one 1-st training image and at least one 2-nd training image are acquired, the sub-learning device performs (i) a process of inputting the 1-st training image into each of the 1-st sub-encoders, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for training by applying the convolution operation to the 1-st training image, (ii) a process of inputting the 2-nd training image into each of the 2-nd sub-encoders, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for training by applying the convolution operation to the 2-nd training image, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for training and each of the 2-nd sub-convolution feature maps for training, to thereby generate each of sub-concatenated feature maps for training, (iv) a process of inputting each of the sub-concatenated feature maps for training into each of the sub-decoders, to thereby allow each of the sub-decoders to respectively generate each of sub-deconvolution feature maps for training by applying the deconvolution operation to each of the sub-concatenated feature maps for training respectively, (v) a process of inputting each of the sub-deconvolution feature maps for training into each of the regressors, to thereby allow each of the regressors to respectively output each of dense correspondences for training wherein each of the dense correspondence represents each of locations, on the 1-st training image, of the dense of the 2-nd training image, assuming that the dense of the 2-nd training image is translated to the 1-st training image, and (vi) a process of instructing a 2-nd loss layer to calculate one or more 2-nd losses by referring to the dense correspondences for training and their dense correspondence GTs, and updating each of sub-decoder weights of each of the sub-decoders and each of sub-encoder weights of each of the 1-st sub-encoders and the 2-nd sub-encoders via backpropagation using the 2-nd losses.
11. The method of claim 9, wherein each of the 1-st sub-encoders and each of the 2-nd sub-encoders share their sub-encoder weight.
12. The method of claim 8, wherein each of the 1-st to the n-th dense correspondences for testing includes information representing each pixel of each of the 1-st to the n-th sub-images for testing corresponds to each certain pixel of the base image for testing.
13. The method of claim 12, wherein each of the 1-st to the n-th dense correspondences for testing includes information corresponding to at least one location of at least one externally expanding area of the base image for testing, if each pixel of each of the 1-st to the n-th sub-images for testing fails to correspond to any pixel of the base image for testing.
14. The method of claim 8, wherein the 1-st encoder to the (n+1)-th encoder share their encoder weight, and wherein the 1-st decoder to the (n+1)-th decoder share their decoder weight.
15. A learning device for learning an automatic labeling device capable of auto-labeling an image of a base vehicle using images of nearby vehicles, comprising: at least one memory that stores instructions; and at least one processor configured to execute the instructions to perform or support another device to perform: (I) if at least one base image of the base vehicle and a 1-st sub-image to an n-th sub-image of respective one or more nearby vehicles are acquired wherein n is an integer larger than 0, a process of inputting the base image and inputting each of the 1-st sub-image to the n-th sub-image respectively into a 1-st previous trained dense correspondence network to an n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence to an n-th dense correspondence, wherein each of the 1-st dense correspondence to the n-th dense correspondence represents each of locations, on the base image, of each of a dense of the 1-st sub-image to a dense of the n-th sub-image, assuming that each of the dense of the 1-st sub-image to the dense of the n-th sub-image is translated to the base image, (II) (i) a process of inputting the base image and inputting each of the 1-st sub-image to the n-th sub-image respectively into each of a 1-st encoder to an (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map to an (n+1)-th convolution feature map by applying at least one convolution operation to the base image and each of the 1-st sub-image to the n-th sub-image respectively, (ii) a process of inputting each of the 1-st convolution feature map to the (n+1)-th convolution feature map respectively into each of a 1-st decoder to an (n+1)-th decoder, to thereby allow each of the 1-st decoder to the (n+1)-th decoder to respectively output each of a 1-st deconvolution feature map to an (n+1)-th deconvolution feature map by applying at least one deconvolution operation to each of the 1-st convolution feature map to the (n+1)-th convolution feature map respectively, (iii) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map by translating coordinates of a (k+1)-th deconvolution feature map to coordinates of the 1-st deconvolution feature map by referring to a k-th dense correspondence, to thereby generate a 1-st adjusted deconvolution feature map to an n-th adjusted deconvolution feature map, and (iv) a process of generating at least one concatenated feature map by concatenating the 1-st deconvolution feature map, and the 1-st adjusted deconvolution feature map to the n-th adjusted deconvolution feature map, and (III) a process of inputting the concatenated feature map into a masking layer, to thereby allow the masking layer to output at least one semantic segmentation image by applying at least one masking operation to the concatenated feature map, and a process of instructing a 1-st loss layer to calculate one or more 1-st losses by referring to the semantic segmentation image and its corresponding at least one segmentation GT, and updating each of decoder weights of the 1-st decoder to the (n+1)-th decoder and each of encoder weights of the 1-st encoder to the (n+1)-th encoder via backpropagation using the 1-st losses such that the 1-st losses are minimized.
16. The learning device of claim 15, wherein the processor instructs each of the 1-st to the n-th previous trained dense correspondence networks to perform (i) a process of inputting the base image into each of 1-st sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps by applying the convolution operation to the base image, (ii) a process of inputting each of the 1-st to the n-th sub-images into each of 2-nd sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps by applying the convolution operation to each of the 1-st to the n-th sub-images respectively, (iii) a process of concatenating each of the 1-st sub-convolution feature maps and each of the 2-nd sub-convolution feature maps, to thereby generate each of the 1-st to the n-th sub-concatenated feature maps, (iv) a process of inputting each of the 1-st to the n-th sub-concatenated feature maps respectively into each of sub-decoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the sub-decoders to respectively generate each of a 1-st to an n-th sub-deconvolution feature maps by applying the deconvolution operation to each of the 1-st to the n-th sub-concatenated feature maps respectively, and (v) a process of inputting each of the 1-st to the n-th sub-deconvolution feature maps respectively into each of regressors respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the regressors to respectively output each of the 1-st to the n-th dense correspondences by applying at least one regression operation to each of the 1-st to the n-th dense correspondences respectively.
17. The learning device of claim 16, wherein each of the 1-st to the n-th previous trained dense correspondence networks has been learned by a sub-learning device, to respectively output each of the 1-st to the n-th dense correspondences, and wherein, if at least one 1-st training image and at least one 2-nd training image are acquired, the sub-learning device performs (i) a process of inputting the 1-st training image into each of the 1-st sub-encoders, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for training by applying the convolution operation to the 1-st training image respectively, (ii) a process of inputting the 2-nd training image into each of the 2-nd sub-encoders, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for training by applying the convolution operation to the 2-nd training image, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for training and each of the 2-nd sub-convolution feature maps for training, to thereby generate each of sub-concatenated feature maps for training, (iv) a process of inputting each of the sub-concatenated feature maps for training respectively into each of the sub-decoders, to thereby allow each of the sub-decoders to respectively generate each of sub-deconvolution feature maps for training by applying the deconvolution operation to each of the sub-concatenated feature maps for training respectively, (v) a process of inputting each of the sub-deconvolution feature maps for training into each of the regressors, to thereby allow each of the regressors to respectively output each of dense correspondences for training wherein each of the dense correspondence for training represents each of locations, on the 1-st training image, of each of a dense of the 2-nd training image, assuming that the dense of the 2-nd training image is translated to the 1-st training image, and (vi) a process of instructing a 2-nd loss layer to calculate one or more 2-nd losses by referring to the dense correspondences for training and their dense correspondence GTs, and updating each of sub-decoder weights of each of the sub-decoders and each of sub-encoder weights of each of the 1-st sub-encoders and the 2-nd sub-encoders via backpropagation using the 2-nd losses.
18. The learning device of claim 16, wherein each of the 1-st sub-encoders and each of the 2-nd sub-encoders share their sub-encoder weights.
19. The learning device of claim 15, wherein each of the 1-st to the n-th dense correspondences includes information representing each pixel of each of the 1-st to the n-th sub-images corresponds to each certain pixel of the base image.
20. The learning device of claim 19, wherein each of the 1-st to the n-th dense correspondences includes information corresponding to at least one location of at least one externally expanding area of the base image, if each pixel of each of the 1-st to the n-th sub-images fails to correspond to any pixel of the base image.
21. The learning device of claim 15, wherein the 1-st encoder to the (n+1)-th encoder share their encoder weights, and wherein the 1-st decoder to the (n+1)-th decoder share their decoder weights.
22. A testing device for testing an automatic labeling device capable of auto-labeling an image of a base vehicle using an image of a nearby vehicle, comprising: at least one memory that stores instructions; and at least one processor configured to execute the instructions to perform or support another device to perform: (I) on condition that a learning device has performed (1) if at least one base image for training of a base vehicle for training and a 1-st sub-image for training to an n-th sub-image for training of respective one or more nearby vehicles for training are acquired wherein n is an integer larger than 0, a process of inputting the base image for training and inputting each of the 1-st sub-image for training to the n-th sub-image for training respectively into a 1-st previous trained dense correspondence network to an n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence for training to an n-th dense correspondence for training, wherein each of the 1-st dense correspondence for training to the n-th dense correspondence for training represents each of locations, on the base image for training, of each of a dense of the 1-st sub-image for training to a dense of the n-th sub-image for training, assuming that each of the dense of the 1-st sub-image for training to the dense of the n-th sub-image for training is translated to the base image for training, (2) (i) a process of inputting the base image for training and inputting each of the 1-st sub-image for training to the n-th sub-image for training respectively into each of a 1-st encoder to an (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map for training to an (n+1)-th convolution feature map for training by applying at least one convolution operation to the base image for training and each of the 1-st sub-image for training to the n-th sub-image for training respectively, (ii) a process of inputting each of the 1-st convolution feature map for training to the (n+1)-th convolution feature map for training respectively into each of a 1-st decoder to an (n+1)-th decoder, to thereby allow each of the 1-st decoder to the (n+1)-th decoder to respectively output each of a 1-st deconvolution feature map for training to an (n+1)-th deconvolution feature map for training by applying at least one deconvolution operation to each of the 1-st convolution feature map for training to the (n+1)-th convolution feature map for training respectively, (iii) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map for training by translating coordinates of a (k+1)-th deconvolution feature map for training to coordinates of the 1-st deconvolution feature map for training by referring to a k-th dense correspondence for training, to thereby generate a 1-st adjusted deconvolution feature map for training to an n-th adjusted deconvolution feature map for training, and (iv) a process of generating at least one concatenated feature map for training by concatenating the 1-st deconvolution feature map for training, and the 1-st adjusted deconvolution feature map for training to the n-th adjusted deconvolution feature map for training and (3) a process of inputting the concatenated feature map for training into a masking layer, to thereby allow the masking layer to output at least one semantic segmentation image for training by applying at least one masking operation to the concatenated feature map for training, and a process of instructing a 1-st loss layer to calculate one or more 1-st losses by referring to the semantic segmentation image for training and its corresponding at least one segmentation GT, and updating each of decoder weights of the 1-st decoder to the (n+1)-th decoder and each of encoder weights of the 1-st encoder to the (n+1)-th encoder via backpropagation using the 1-st losses such that the 1-st losses are minimized, (I-1) if at least one base image for testing of a base vehicle for testing and a 1-st sub-image for testing to an n-th sub-image for testing of respective one or more nearby vehicles for testing are acquired, a process of inputting the base image for testing and inputting each of the 1-st sub-image for testing to the n-th sub-image for testing respectively into the 1-st previous trained dense correspondence network to the n-th previous trained dense correspondence network, to thereby allow each of the 1-st to the n-th previous trained dense correspondence networks to respectively generate each of a 1-st dense correspondence for testing to an n-th dense correspondence for testing, wherein each of the 1-st dense correspondence for testing to the n-th dense correspondence for testing represents each of locations, on the base image for testing, of each of a dense of the 1-st sub-image for testing to a dense of the n-th sub-image for testing, assuming that each of the dense of the 1-st sub-image for testing to the dense of the n-th sub-image for testing is translated to the base image for testing, (II) (II-1) a process of inputting the base image for testing and inputting each of the 1-st sub-image for testing to the n-th sub-image for testing respectively into each of the 1-st encoder to the (n+1)-th encoder, to thereby allow each of the 1-st encoder to the (n+1)-th encoder to respectively output a 1-st convolution feature map for testing to an (n+1)-th convolution feature map for testing by applying the convolution operation to the base image for testing and each of the 1-st sub-image for testing to the n-th sub-image for testing respectively, (II-2) a process of inputting each of the 1-st convolution feature map for testing to the (n+1)-th convolution feature map for testing respectively into the 1-st decoder to the (n+1)-th decoder, to thereby allow the 1-st decoder to the (n+1)-th decoder to respectively output a 1-st deconvolution feature map for testing to an (n+1)-th deconvolution feature map for testing by applying the deconvolution operation to each of the 1-st convolution feature map for testing to the (n+1)-th convolution feature map for testing respectively, (II-3) supposing that an integer k ranges from 1 to n, a process of generating a k-th adjusted deconvolution feature map for testing by translating coordinates of a (k+1)-th deconvolution feature map for testing to coordinates of the 1-st deconvolution feature map for testing by referring to a k-th dense correspondence for testing, to thereby generate a 1-st adjusted deconvolution feature map for testing to an n-th adjusted deconvolution feature map for testing, and (II-4) a process of generating at least one concatenated feature map for testing by concatenating the 1-st deconvolution feature map for testing, and the 1-st adjusted deconvolution feature map for testing to the n-th adjusted deconvolution feature map for testing, and (III) a process of inputting the concatenated feature map for testing into the masking layer, to thereby allow the masking layer to output at least one semantic segmentation image for testing by applying the masking operation to the concatenated feature map for testing.
23. The testing device of claim 22, wherein the processor instructs each of the 1-st to the n-th previous trained dense correspondence networks to perform (i) a process of inputting the base image for testing into each of 1-st sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for testing by applying the convolution operation to the base image for testing, (ii) a process of inputting each of the 1-st to the n-th sub-images for testing into each of 2-nd sub-encoders respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for testing by applying the convolution operation to each of the 1-st to the n-th sub-images for testing respectively, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for testing and each of the 2-nd sub-convolution feature maps for testing, to thereby generate each of the 1-st to the n-th sub-concatenated feature maps for testing, (iv) a process of inputting each of the 1-st to the n-th sub-concatenated feature maps for testing respectively into each of sub-decoders corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the sub-decoders to respectively generate each of a 1-st to an n-th sub-deconvolution feature maps for testing by applying the deconvolution operation to each of the 1-st to the n-th sub-concatenated feature maps for testing respectively, and (v) a process of inputting each of the 1-st to the n-th sub-deconvolution feature maps for testing respectively into each of regressors respectively corresponding to each of the 1-st to the n-th previous trained dense correspondence networks, to thereby allow each of the regressors to respectively output each of the 1-st to the n-th dense correspondences for testing by applying at least one regression operation to each of the 1-st to the n-th dense correspondences for testing respectively.
24. The testing device of claim 23, wherein each of the 1-st to the n-th previous trained dense correspondence networks has been learned by a sub-learning device, to respectively output each of the 1-st to the n-th dense correspondences for testing, and wherein, if at least one 1-st training image and at least one 2-nd training image are acquired, the sub-learning device performs (i) a process of inputting the 1-st training image into each of the 1-st sub-encoders, to thereby allow each of the 1-st sub-encoders to respectively generate each of 1-st sub-convolution feature maps for training by applying the convolution operation to the 1-st training image, (ii) a process of inputting the 2-nd training image into each of the 2-nd sub-encoders, to thereby allow each of the 2-nd sub-encoders to respectively generate each of 2-nd sub-convolution feature maps for training by applying the convolution operation to the 2-nd training image, (iii) a process of concatenating each of the 1-st sub-convolution feature maps for training and each of the 2-nd sub-convolution feature maps for training, to thereby generate each of sub-concatenated feature maps for training, (iv) a process of inputting each of the sub-concatenated feature maps for training into each of the sub-decoders, to thereby allow each of the sub-decoders to respectively generate each of sub-deconvolution feature maps for training by applying the deconvolution operation to each of the sub-concatenated feature maps for training respectively, (v) a process of inputting each of the sub-deconvolution feature maps for training into each of the regressors, to thereby allow each of the regressors to respectively output each of dense correspondences for training wherein each of the dense correspondence represents each of locations, on the 1-st training image, of the dense of the 2-nd training image, assuming that the dense of the 2-nd training image is translated to the 1-st training image, and (vi) a process of instructing a 2-nd loss layer to calculate one or more 2-nd losses by referring to the dense correspondences for training and their dense correspondence GTs, and updating each of sub-decoder weights of each of the sub-decoders and each of sub-encoder weights of each of the 1-st sub-encoders and the 2-nd sub-encoders via backpropagation using the 2-nd losses.
25. The testing device of claim 23, wherein each of the 1-st sub-encoders and each of the 2-nd sub-encoders share their sub-encoder weight.
26. The testing device of claim 22, wherein each of the 1-st to the n-th dense correspondences for testing includes information representing each pixel of each of the 1-st to the n-th sub-images for testing corresponds to each certain pixel of the base image for testing.
27. The method of claim 26, wherein each of the 1-st to the n-th dense correspondences for testing includes information corresponding to at least one location of at least one externally expanding area of the base image for testing, if each pixel of each of the 1-st to the n-th sub-images for testing fails to correspond to any pixel of the base image for testing.
28. The testing device of claim 22, wherein the 1-st encoder to the (n+1)-th encoder share their encoder weight, and wherein the 1-st decoder to the (n+1)-th decoder share their decoder weight.
</claims>
</document>
