<document>

<filing_date>
2019-03-14
</filing_date>

<publication_date>
2020-09-17
</publication_date>

<priority_date>
2019-03-14
</priority_date>

<ipc_classes>
H04L9/08,H04L9/32
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
KUMAR, ARVIND
FETTEROLF, SHAWN PETER
</inventors>

<docdb_family_id>
72423840
</docdb_family_id>

<title>
Generating key material for information security using a Resistive Processing Unit (RPU) accelerator array as a Physically Unclonable Function (PUF)
</title>

<abstract>
Crossbar arrays (e.g., Resistive Processing Unit (RPU) accelerators) are leveraged to create a Physically Unclonable Function (PUF) that exploits variations, such as statistical process variation in manufacture or operation, to generate key material to secure information in a computing environment. One environment is a cloud compute infrastructure whose shared resources are used to process workloads. During RPU accelerator use, the state of the RPU's bits are changed by reproducible inputs, e.g., stochastic pulses applied to change resistive values in the array, and the corresponding changes in the RPU array state captured. These responses, which cannot be reproduced from another device due to random device variations across chips that embody the RPUs, are then used to generate (or facilitate generation of) the cryptographic material. In one embodiment, inputs applied to the RPU accelerator array are generated from a pseudo-random number generator that is otherwise associated with the RPU accelerator.
</abstract>

<claims>
1. A method to secure information in a compute environment having an accelerator configured as an array of analog elements, the accelerator being configured to perform a computation associated with an application, comprising: providing one or more inputs to the array of analog elements, wherein the array comprises Resistive Processing Units (RPUs); detecting one or more outputs from the array of analog elements, wherein at least one input comprises a stochastic pulse train, and wherein an output corresponding to the at least one input represents a state of the array of analog elements induced by the stochastic pulse train; processing the one or more outputs into a data string; and using the data string to secure information in the compute environment; wherein the data string is generated in association with the computation.
2. The method as described in claim 1 wherein the data string is generated before, during or after the computation.
3. The method as described in claim 1 wherein providing the one or more inputs includes initializing the RPUs in at least one row of the array to an initial value, and applying a series of pulses to the RPUs in the at least row to generate the corresponding output.
4. The method as described in claim 3 wherein the series of pulses are received from a source of random or pseudo-random data.
5. The method as described in claim 4 wherein the source is a Pseudo Random Pattern Generator (PRPG) that is associated with the RPU array during the computation.
6. The method as described in claim 1 further including performing an additional obfuscation operation during generation of the data string.
7. The method as described in claim 1 wherein the application is a deep learning application and the computation occurs during a learning phase.
8. Apparatus, comprising: a hardware processor; computer memory holding computer program instructions executed by the hardware processor and configured to secure information in a compute environment having an accelerator configured as an array of analog elements, the accelerator being configured to perform a computation associated with an application, the computer program instructions comprising program code configured to: provide one or more inputs to the array of analog elements, wherein the array comprises Resistive Processing Units (RPUs); detect one or more outputs from the array of analog elements, wherein at least one input comprises a stochastic pulse train, and wherein an output corresponding to the at least one input represents a state of the array of analog elements induced by the stochastic pulse train; process the one or more corresponding outputs into a data string; and use the data string to secure information in the compute environment; wherein the data string is generated in association with the computation.
9. The apparatus as described in claim 8 wherein the computer program code is configured to generate the data string before, during or after the computation.
10. The apparatus as described in claim 8 wherein the program code configured to provide the one or more inputs includes program code configured to initialize the RPUs in at least one row of the array to an initial value, and to apply a series of pulses to the RPUs in the at least row to generate the corresponding output.
11. The apparatus as described in claim 10 wherein the series of pulses are received from a source of random or pseudo-random data.
12. The apparatus as described in claim 11 wherein the source is a Pseudo-Random Pattern Generator (PRPG) that is associated with the RPU array during the computation.
13. The apparatus as described in claim 8 wherein the program code is further configured to perform an additional obfuscation operation during generation of the data string.
14. The apparatus as described in claim 8 wherein the application is a deep learning application and the computation occurs during a learning phase.
15. A computer program product in a non-transitory computer readable medium for use in a data processing system to secure information in a compute environment having an accelerator configured as an array of analog elements, the accelerator being configured to perform a computation associated with an application, the computer program product holding computer program instructions executed in the data processing system and configured to: provide one or more inputs to the array of analog elements, wherein the array comprises Resistive Processing Units (RPUs); detect one or more outputs from the array of analog elements, wherein at least one input comprises a stochastic pulse train, and wherein an output corresponding to the at least one input represents a state of the array of analog elements induced by the stochastic pulse train; process the one or more outputs into a data string; and use the data string to secure information in the compute environment; wherein the data string is generated in association with the computation.
16. The computer program product as described in claim 15 wherein the computer program instructions are configured to generate the data string before, during or after the computation.
17. The computer program product as described in claim 15 wherein the program code configured to provide the one or more inputs includes program code configured to initialize the RPUs in at least one row of the array to an initial value, and to apply a series of pulses to the RPUs in the at least row to generate the corresponding output.
18. The computer program product as described in claim 17 wherein the series of pulses are received from a source of random or pseudo-random data.
19. The computer program product as described in claim 18 wherein the source is a Pseudo-Random Pattern Generator (PRPG) that is associated with the RPU array during the computation.
20. The computer program product as described in claim 15 wherein the program code is further configured to perform an additional obfuscation operation during generation of the data string.
21. The computer program product as described in claim 15 wherein the application is a deep learning application and the computation occurs during a learning phase.
</claims>
</document>
