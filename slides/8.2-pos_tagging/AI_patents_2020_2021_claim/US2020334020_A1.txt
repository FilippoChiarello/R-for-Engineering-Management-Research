<document>

<filing_date>
2020-07-06
</filing_date>

<publication_date>
2020-10-22
</publication_date>

<priority_date>
2016-08-22
</priority_date>

<ipc_classes>
G06F16/14,G06F16/21,G06F16/23,G06F16/25,G06F16/435,G06F17/18,G06F3/042,G06F3/0482,G06F3/06,G06F40/30,G06F8/10,G06F8/34,G06F8/41,G06N20/00,G06N5/02,G06N5/04,G06Q10/06
</ipc_classes>

<assignee>
ORACLE INTERNATIONAL CORPORATION
</assignee>

<inventors>
STOJANOVIC, ALEXANDER SASHA
ALLAN, DAVID
SEETHARAMAN, GANESH
NAMARVAR, HASSAN HEIDARI
</inventors>

<docdb_family_id>
59746364
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR INFERENCING OF DATA TRANSFORMATIONS THROUGH PATTERN DECOMPOSITION
</title>

<abstract>
In accordance with various embodiments, described herein is a system (Data Artificial Intelligence system, Data AI system), for use with a data integration or other computing environment, that leverages machine learning (ML, DataFlow Machine Learning, DFML), for use in managing a flow of data (dataflow, DF), and building complex dataflow software applications (dataflow applications, pipelines). In accordance with an embodiment, the system can provide a service to recommend actions and transformations, on an input data, based on patterns identified from the functional decomposition of a data flow for a software application, including determining possible transformations of the data flow in subsequent applications. Data flows can be decomposed into a model describing transformations of data, predicates, and business rules applied to the data, and attributes used in the data flows.
</abstract>

<claims>
1. A method for use with a data integration or other computing environment comprising: accessing a data flow for each of one or more software applications; processing the data flow for the one or more software applications to generate one or more functional expressions representing the data flow, wherein the one or more functional expressions are generated based on one or more semantic actions or business rules identified in the data flow; identifying a pattern of transformation in the data flow, for the one or more functional expressions generated for each of the one or more software applications, wherein the one or more semantic actions or business rules are used to identify the pattern of transformation in the data flow; and using the pattern of transformation identified in the data flow, providing a recommendation of one or more data transformations for a data flow of another software application.
2. The method of claim 1, wherein the application is a dataflow application.
3. The method of claim 1, wherein the pattern is used in displaying, at a graphical user interface, selected ones of the semantic actions enabled for the accessed data, for selection and use with the accessed data, including automatically providing or updating a list of the selected ones of the semantic actions enabled for the accessed data, during the processing of the accessed data.
4. The method of claim 1, wherein an application represents a top level data flow transformation; an action represents an operator on one or more datasets; and actions reference a base semantic action or function declaratively defined in the system, and can have one or more action parameters.
5. The method of claim 4, wherein action parameters are owned by actions and have specific functional or business types, and represent a specific upstream dataset to be processed.
6. The method of claim 4, wherein a scope resolver is used to resolve the reference to a particular attribute or embedded object.
7. The method of claim 1, wherein the method is performed in a cloud or cloud-based computing environment.
8. A system for providing recommendations of actions and transformations on an input data for use with a data integration or other computing environment, comprising: one or more processors operable to: access a data flow for each of one or more software applications; process the data flow for the one or more software applications to generate one or more functional expressions representing the data flow, wherein the one or more functional expressions are generated based on one or more semantic actions or business rules identified in the data flow; identify a pattern of transformation in the data flow, for the one or more functional expressions generated for each of the one or more software applications, wherein the one or more semantic actions or business rules are used to identify the pattern of transformation in the data flow; and use the pattern of transformation identified in the data flow, providing a recommendation of one or more data transformations for a data flow of another software application.
9. The system of claim 8, wherein the application is a dataflow application.
10. The system of claim 8, wherein the pattern is used in displaying, at a graphical user interface, selected ones of the semantic actions enabled for the accessed data, for selection and use with the accessed data, including automatically providing or updating a list of the selected ones of the semantic actions enabled for the accessed data, during the processing of the accessed data.
11. The system of claim 8, wherein an application represents a top level data flow transformation; an action represents an operator on one or more datasets; and actions reference a base semantic action or function declaratively defined in the system, and can have one or more action parameters.
12. The system of claim 11, wherein action parameters are owned by actions and have specific functional or business types, and represent a specific upstream dataset to be processed.
13. The system of claim 11, wherein a scope resolver is used to resolve the reference to a particular attribute or embedded object.
14. The system of claim 8, wherein the system is provided in a cloud or cloud-based computing environment.
15. A non-transitory computer readable storage medium, including instructions stored thereon which when read and executed by one or more computers cause the one or more computers to perform a method comprising: accessing a data flow for each of one or more software applications; processing the data flow for the one or more software applications to generate one or more functional expressions representing the data flow, wherein the one or more functional expressions are generated based on one or more semantic actions or business rules identified in the data flow; identifying a pattern of transformation in the data flow, for the one or more functional expressions generated for each of the one or more software applications, wherein the one or more semantic actions or business rules are used to identify the pattern of transformation in the data flow; and using the pattern of transformation identified in the data flow, providing a recommendation of one or more data transformations for a data flow of another software application.
16. The non-transitory computer readable storage medium of claim 15, wherein the application is a dataflow application.
17. The non-transitory computer readable storage medium of claim 15, wherein the pattern is used in displaying, at a graphical user interface, selected ones of the semantic actions enabled for the accessed data, for selection and use with the accessed data, including automatically providing or updating a list of the selected ones of the semantic actions enabled for the accessed data, during the processing of the accessed data.
18. The non-transitory computer readable storage medium of claim 15, wherein an application represents a top level data flow transformation; an action represents an operator on one or more datasets; and actions reference a base semantic action or function declaratively defined in the system, and can have one or more action parameters.
19. The non-transitory computer readable storage medium of claim 18, wherein action parameters are owned by actions and have specific functional or business types, and represent a specific upstream dataset to be processed.
20. The non-transitory computer readable storage medium of claim 18, wherein a scope resolver is used to resolve the reference to a particular attribute or embedded object.
</claims>
</document>
