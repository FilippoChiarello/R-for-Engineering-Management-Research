<document>

<filing_date>
2018-09-13
</filing_date>

<publication_date>
2020-09-29
</publication_date>

<priority_date>
2018-09-13
</priority_date>

<ipc_classes>
G06F9/455,G06F9/48,G06N3/02,H04L12/24,H04L29/12
</ipc_classes>

<assignee>
INTUIT
HARI, RAVI
</assignee>

<inventors>
HARI, RAVI
</inventors>

<docdb_family_id>
69772501
</docdb_family_id>

<title>
Dynamic application migration between cloud providers
</title>

<abstract>
A method that involves receiving budget information of a containerized application deployed with a set of containers to a first cloud provider service of a set of cloud provider services; receiving pricing information from each cloud provider service of the set of cloud provider services, wherein the set of cloud provider services includes the first cloud provider service and a second cloud provider service; receiving performance information of the containerized application from the first cloud provider service; generating an output vector from a machine learning model, wherein the machine learning model uses the pricing information and the performance information to generate the output vector; determining a first cloud provider service cost and a second cloud provider service cost based on the output vector and the pricing information; migrating the containerized application from the first cloud provider service to the second cloud provider service.
</abstract>

<claims>
1. A method comprising: receiving budget information of a containerized application deployed with a set of containers to a first cloud provider service of a set of cloud provider services; receiving a set of pricing information from the set of cloud provider services, wherein the set of cloud provider services includes the first cloud provider service and a second cloud provider service; receiving performance information of the containerized application from the first cloud provider service; generating, for the first cloud provider service, a first output vector of a set of output vectors from a first machine learning model of a set of machine learning models, wherein the first machine learning model uses a first pricing information of the set of pricing information and the performance information to generate the first output vector, and wherein the first output vector, the first machine learning model, and the first pricing information are associated with the first cloud provider service of the set of cloud provider services; generating, for the second cloud provider service, a second output vector of the set of output vectors from a second machine learning model of the set of machine learning models, wherein the second machine learning model uses a second pricing information of the set of pricing information and the performance information to generate the second output vector, and wherein the second output vector, the second machine learning model, and the second pricing information are associated with the second cloud provider service of the set of cloud provider services; determining a first cloud provider service cost and a second cloud provider service cost based on the set of output vectors and the set of pricing information; and migrating the containerized application from the first cloud provider service to the second cloud provider service based on the set of output vectors, the first cloud provider service cost, and the second cloud provider service cost by removing a first container from the first cloud provider service and deploying a second container to the second cloud provider service, wherein the first container and the second container each perform a same function.
2. The method of claim 1 further comprising: generating a set of input features from one or more of the budget information, the first pricing information, and the performance information, wherein the input features include a pricing percentage, processor usage percentage, a memory usage percentage, a storage usage percentage, a latency percentage, and a traffic percentage, generating the first output vector by applying the set of input features to a neural network, wherein the neural network is the first machine learning model, wherein the neural network includes an input layer with six input nodes, a set of hidden layers, and an output layer with three output nodes that form the first output vector, wherein a first output node identifies that a first machine instance of a set of machine instances to which the application is deployed is to be swapped to a second machine instance having a lower cost, wherein a second output node identifies that a configuration of the first machine instance is to be updated, wherein a third output node identifies that the set of machine instances is to be autoscaled, wherein the set of hidden layers includes a first hidden layer and a second hidden layer that each include at least five nodes, and wherein the input layer is fully connected to the first hidden layer, the first hidden layer is fully connected to the second hidden layer, and the second hidden layer is fully connected to the output layer.
3. The method of claim 1 further comprising: storing the budget information, first pricing information, and performance information as historical information; and training the first machine learning model with the historical information.
4. The method of claim 1 further comprising: determining the first cloud provider service cost and the second cloud provider service cost based on the set of output vectors and the set of pricing information by applying the set of pricing information to a first updated configuration and a second updated configuration, wherein the first cloud provider service cost and the first updated configuration each correspond to the first cloud provider service, and wherein the second cloud provider service cost and the second updated configuration each correspond to the second cloud provider service; and generating migration instructions by comparing the first cloud provider service cost, the second cloud provider service cost, and a budget goal from the budget information.
5. The method of claim 4 further comprising: migrating the containerized application by executing the migration instructions, wherein the migration instructions include instructions for: deploying a second set of containers to the second cloud provider service to run the containerized application; switching a primary database from the first cloud provider service to the second cloud provider service; and migrate traffic from the first cloud provider service to the second cloud provider service by updating a domain name system entry in a domain name system.
6. The method of claim 1 further comprising: receiving the budget information from a client device, wherein the budget information includes a budget goal of the containerized application; retrieving the set of pricing information by accessing an application program interface of each cloud provider service of the set of cloud provider services, wherein the set of pricing information includes a price for each machine instance type from a list of machine instance types from each cloud provider service of the set of cloud provider services, wherein each machine instance of the set of machine instances corresponds with a same machine instance type of a first list of machine instance types from the first cloud provider service, wherein each machine instance of the set of machine instances hosts a container of the set of containers, and wherein each machine instance type of the list of machine instance types identifies a type of virtual machine; and receiving the performance information from a monitoring service hosted by the first cloud provider service, wherein the performance information includes a processor value, a memory value, a storage value, a latency value, and a traffic value for each container of the set of containers.
7. A system comprising: a memory coupled to a processor; a migration service that executes on the processor, uses the memory, and is configured for: receiving budget information of a containerized application deployed with a set of containers to a set of machine instances to a first cloud provider service of a set of cloud provider services; receiving a set of pricing information from the set of cloud provider services, wherein the set of cloud provider services includes the first cloud provider service and a second cloud provider service; receiving performance information of the containerized application from the first cloud provider service; generating, for the first cloud provider service, a first output vector of a set of output vectors from a first machine learning model of a set of machine learning models, wherein the first machine learning model uses a first pricing information of the set of pricing information and the performance information to generate the first output vector, and wherein the first output vector, the first machine learning model, and the first pricing information are associated with the first cloud provider service of the set of cloud provider services; generating, for the second cloud provider service, a second output vector of the set of output vectors from a second machine learning model of the set of machine learning models, wherein the second machine learning model uses a second pricing information of the set of pricing information and the performance information to generate the second output vector, and wherein the second output vector, the second machine learning model, and the second pricing information are associated with the second cloud provider service of the set of cloud provider services; and determining a first cloud provider service cost and a second cloud provider service cost based on the set of output vectors and the set of pricing information; and migrating the containerized application from the first cloud provider service to the second cloud provider service based on the set of output vectors, the first cloud provider service cost and the second cloud provider service cost by removing a first container from the first cloud provider service and deploying a second container to the second cloud provider service, wherein the first container and the second container each perform a same function.
8. The system of claim 7, wherein the migration service is further configured for: generating a set of input features from one or more of the budget information, the pricing information, and the performance information, wherein the input features include a pricing percentage, processor usage percentage, a memory usage percentage, a storage usage percentage, a latency percentage, and a traffic percentage, generating the first output vector by applying the set of input features to a neural network, wherein the neural network is the first machine learning model, wherein the neural network includes an input layer with six input nodes, a set of hidden layers, and an output layer with three output nodes that form the first output vector, wherein a first output node identifies that a first machine instance of a set of machine instances to which the application is deployed is to be swapped to a second machine instance having a lower cost, wherein a second output node identifies that a configuration of the first machine instance is to be updated, wherein a third output node identifies that the set of machine instances is to be autoscaled, wherein the set of hidden layers includes a first hidden layer and a second hidden layer that each include at least five nodes, and wherein the input layer is fully connected to the first hidden layer, the first hidden layer is fully connected to the second hidden layer, and the second hidden layer is fully connected to the output layer.
9. The system of claim 7, wherein the migration service is further configured for: storing the budget information, first pricing information, and performance information as historical information; and training the first machine learning model with the historical information.
10. The system of claim 7, wherein the migration service is further configured for: determining the first cloud provider service cost and the second cloud provider service cost based on the output vector and the pricing information by applying the pricing information to a first updated configuration and a second updated configuration, wherein the first cloud provider service cost and the first updated configuration each correspond to the first cloud provider service, and wherein the second cloud provider service cost and the second updated configuration each correspond to the second cloud provider service; and generating migration instructions by comparing the first cloud provider service cost, the second cloud provider service cost, and a budget goal from the budget information.
11. The system of claim 10, wherein the migration service is further configured for: migrating the containerized application by executing the migration instructions, wherein the migration instructions include instructions for: deploying a second set of containers to the second cloud provider service to run the containerized application; switching a primary database from the first cloud provider service to the second cloud provider service; and migrate traffic from the first cloud provider service to the second cloud provider service by updating a domain name system entry in a domain name system.
12. The system of claim 7, wherein the migration service is further configured for: receiving the budget information from a client device, wherein the budget information includes a budget goal of the containerized application; retrieving the set of pricing information by accessing an application program interface of each cloud provider service of the set of cloud provider services, wherein the set of pricing information includes a price for each machine instance type from a list of machine instance types from each cloud provider service of the set of cloud provider services, wherein each machine instance of the set of machine instances corresponds with a same machine instance type of a first list of machine instance types from the first cloud provider service, wherein each machine instance of the set of machine instances hosts a container of the set of containers, and wherein each machine instance type of the list of machine instance types identifies a type of virtual machine; and receiving the performance information from a monitoring service hosted by the first cloud provider service, wherein the performance information includes a processor value, a memory value, a storage value, a latency value, and a traffic value for each container of the set of containers.
13. A non-transitory computer readable medium comprising computer readable program code for: receiving budget information of a containerized application deployed with a set of containers to a first cloud provider service of a set of cloud provider services; receiving a set of pricing information from the set of cloud provider services, wherein the set of cloud provider services includes the first cloud provider service and a second cloud provider service; receiving performance information of the containerized application from the first cloud provider service; generating, for the first cloud provider service, a first output vector of a set of output vectors from a first machine learning model of a set of machine learning models, wherein the first machine learning model uses a first pricing information of the set of pricing information and the performance information to generate the first output vector, and wherein the first output vector, the first machine learning model, and the first pricing information are associated with the first cloud provider service of the set of cloud provider services; generating, for the second cloud provider service, a second output vector of the set of output vectors from a second machine learning model of the set of machine learning models, wherein the second machine learning model uses a second pricing information of the set of pricing information and the performance information to generate the second output vector, and wherein the second output vector, the second machine learning model, and the second pricing information are associated with the second cloud provider service of the set of cloud provider services; determining a first cloud provider service cost and a second cloud provider service cost based on the set of output vectors and the set of pricing information; and migrating the containerized application from the first cloud provider service to the second cloud provider service based on the set of output vectors, the first cloud provider service cost, and the second cloud provider service cost by removing a first container from the first cloud provider service and deploying a second container to the second cloud provider service, wherein the first container and the second container each perform a same function.
14. The non-transitory computer readable medium of claim 13, further comprising computer readable program code for: generating a set of input features from one or more of the budget information, the first pricing information, and the performance information, wherein the input features include a pricing percentage, processor usage percentage, a memory usage percentage, a storage usage percentage, a latency percentage, and a traffic percentage, generating the first output vector by applying the set of input features to a neural network, wherein the neural network is the first machine learning model, wherein the neural network includes an input layer with six input nodes, a set of hidden layers, and an output layer with three output nodes that form the output vector, wherein a first output node identifies that a first machine instance of a set of machine instances to which the application is deployed is to be swapped to a second machine instance having a lower cost, wherein a second output node identifies that a configuration of the first machine instance is to be updated, wherein a third output node identifies that the set of machine instances is to be autoscaled, wherein the set of hidden layers includes a first hidden layer and a second hidden layer that each include at least five nodes, and wherein the input layer is fully connected to the first hidden layer, the first hidden layer is fully connected to the second hidden layer, and the second hidden layer is fully connected to the output layer.
15. The non-transitory computer readable medium of claim 13, further comprising computer readable program code for: storing the budget information, first pricing information, and performance information as historical information; and training the first machine learning model with the historical information.
16. The non-transitory computer readable medium of claim 13, further comprising computer readable program code for: determining the first cloud provider service cost and the second cloud provider service cost based on the set of output vectors and the set of pricing information by applying the set of pricing information to a first updated configuration and a second updated configuration, wherein the first cloud provider service cost and the first updated configuration each correspond to the first cloud provider service, and wherein the second cloud provider service cost and the second updated configuration each correspond to the second cloud provider service; generating migration instructions by comparing the first cloud provider service cost, the second cloud provider service cost, and a budget goal from the budget information; and migrating the containerized application by executing the migration instructions, wherein the migration instructions include instructions for: deploying a second set of containers to the second cloud provider service to run the containerized application; switching a primary database from the first cloud provider service to the second cloud provider service; and migrate traffic from the first cloud provider service to the second cloud provider service by updating a domain name system entry in a domain name system.
17. The non-transitory computer readable medium of claim 13, further comprising computer readable program code for: receiving the budget information from a client device, wherein the budget information includes a budget goal of the containerized application; retrieving the set of pricing information by accessing an application program interface of each cloud provider service of the set of cloud provider services, wherein the set of pricing information includes a price for each machine instance type from a list of machine instance types from each cloud provider service of the set of cloud provider services, wherein each machine instance of the set of machine instances corresponds with a same machine instance type of a first list of machine instance types from the first cloud provider service, wherein each machine instance of the set of machine instances hosts a container of the set of containers, and wherein each machine instance type of the list of machine instance types identifies a type of virtual machine; and receiving the performance information from a monitoring service hosted by the first cloud provider service, wherein the performance information includes a processor value, a memory value, a storage value, a latency value, and a traffic value for each container of the set of containers.
</claims>
</document>
