<document>

<filing_date>
2018-08-22
</filing_date>

<publication_date>
2020-10-29
</publication_date>

<priority_date>
2018-08-22
</priority_date>

<ipc_classes>
G06F3/0482,G06F9/451,G06N20/00,G06Q50/30,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
Koonce, Philip
Calvo Lance, Marcos
</inventors>

<docdb_family_id>
69591213
</docdb_family_id>

<title>
AUTOMATICALLY RESOLVING, WITH REDUCED USER INPUTS, A SET OF ACTIVITY INSTANCES FOR A GROUP OF USERS
</title>

<abstract>
Automatically determining, with reduced (or no) input from the users of a group, a set of activity instances that the group of users has interest in performing. A representation of the set of activity instances can be rendered for consideration by a group, and the set of activity instances can be determined even when only limited criteria are specified. Optionally, in response to affirmative user interface input(s) directed to a rendered representation of the set of activity instances, one or more of the activity instances of the set can be confirmed through limited input(s) of one or more users of the group. Further, the automatic determination of the set of activity instances is optionally performed using one or more trained machine learning models that are trained to optimize a likelihood that the users of the group will find the set satisfactory.
</abstract>

<claims>
1. A method implemented by one or more processors, the method comprising: determining that one or more messages of an ongoing multi-user communications session reference a collection of activity types, wherein the determining is based on processing of content of the one or more messages of the ongoing multi-user communications session, wherein a plurality of users is participating in the multi-user communications session via respective client devices, and wherein the collection of activity types includes at least a first activity type and a second activity type; selecting one or more activity instances for each of the activity types of the collection, wherein selecting the one or more activity instances for each of the activity types of the collection is based on preference metrics for each of the users, and wherein the activity instances include multiple activity instances for the first activity type and multiple activity instances for the second activity type; generating a plurality of ordered sets of the activity instances, wherein each of the ordered sets of the activity instances includes a corresponding one of the activity instances for each of the activity types; for each ordered set of the activity instances, of the ordered sets of the activity instances: processing, using a trained machine learning model, respective features of the ordered set of the activity instances to generate a respective feasibility score for the ordered set of the ordered activity instances; selecting a subset of the ordered sets of the activity instances based on the feasibility scores, the subset including at least a given ordered set of the activity instances; causing, in response to the selecting, a representation of the given ordered set of the activity instances to be rendered at the client devices as part of the multi-user communications session; and in response to receiving at least one instance of affirmative user interface input responsive to the representation being rendered: causing each one of the client devices to render a respective interface element that, when selected, causes a respective one of the client devices to interact with at least one remote computer system in confirming at least one of the activity instances of the given ordered set of the activity instances, wherein the respective one of the client devices interacts with the remote computer system in a manner that is tailored to the respective one of the client devices to confirm the at least one activity instance for the respective user of the one of the client devices.
2. The method of claim 1, wherein the respective features for the activity instance of at least one of the activity types that is processed using the trained machine learning model includes a location feature that defines a geographic location for the activity instance.
3. The method of claim 1, wherein the respective features for the activity instance of at least one of the activity types that is processed using the trained machine learning model includes a temporal feature that defines one or more times for the activity instance.
4. The method of claim 1, further comprising: identifying a location metric for at least one of the users; and processing, using the trained machine learning model, the location metric along with the respective features of each of the ordered sets of the activity instances in generating the feasibility scores.
5. The method of claim 3, wherein each of the activity instances defines a respective activity and respective temporal information for the respective activity, and wherein selecting one or more activity instances for each of the activity types comprises: identifying a temporal constraint of one of the users; and excluding a conflicting activity instance from the selected activity instances based on the temporal constraint matching the respective temporal information of the conflicting activity instance.
6. The method of claim 5, wherein the temporal constraint of the one of the users is identified from an electronic calendar of the one of the users.
7. The method of claim 1, wherein the respective interface element that is caused to be rendered by one of the client devices, when selected, causes the one of the client devices to launch, with parameters for the at least one of the activity instances, an application installed on the one of the client devices, and wherein the application, when launched interfaces with the at least one remote computer system, using the parameters, in confirming the at least one of the activity instances of the given ordered set of the activity instances.
8. The method of claim 1, further comprising: determining a supervised feasibility score for the given ordered set of the activity instances, wherein determining the supervised feasibility is based on one or both of: whether at least one of the users performed the given ordered set of the activity instances, and feedback provided by at least one of the users in response to rendering of a prompt that solicits feedback regarding the given ordered set of the activity instances; and further training the machine learning model using a training example that includes training example input that conforms to the respective features for the given ordered set and that includes training example output that conforms to the supervised feasibility score.
9. The method of claim 8, wherein determining the supervised feasibility score is based on whether at least one of the users performed the given ordered set of the activity instances, and further comprising determining whether at least one of the users performed the given ordered set of the activity instances based on location information for at least one of the users.
10. The method of claim 1, further comprising: identifying an indication of a specified activity in the communication thread; and determining an additional activity type for the specified activity, wherein selecting one or more activity instances for each of the activity types of the collection includes selecting one or more activity instances for the additional activity type.
11. The method of claim 10, wherein the activity instances includes the specified activity.
12. The method of claim 1, wherein selecting the one or more activity instances for each of the activity types of the collection includes: generating a plurality of first candidate activity instances based on a first activity type of the activity types of the collection; processing, using a second machine learning model, one or more of the respective features of each of the candidate activity instances and the preference metrics of the users to generate a respective approval score for each of the candidate activity instances, wherein the respective approval score of a given candidate activity instance is indicative of overall approval of the given candidate activity instance by the plurality of users based on the preference metrics of the users; and selecting one or more of the candidate activity instances based on the respective approval scores.
13. A method implemented by one or more processors, the method comprising: determining a collection of activity types based on user interface input of one or more users of a group of users, wherein the collection of activity types includes at least a first activity type and a second activity type; selecting one or more activity instances for each of the activity types of the collection, wherein selecting the one or more activity instances for each of the activity types of the collection is based on preference metrics for each of the users, and wherein the activity instances include multiple activity instances for the first activity type and multiple activity instances for the second activity type; generating a plurality of sets of the activity instances, wherein each of the sets of the activity instances includes a corresponding one of the activity instances for each of the activity types; for each set of the activity instances, of the sets of the activity instances: processing, using a trained machine learning model, respective features of the set of the activity instances to generate a respective feasibility score for the set of the activity instances; selecting a subset of the sets of the activity instances based on the feasibility scores, the subset including at least a given set of the activity instances; causing, in response to the selecting, at least one client device of at least one of the users to render a representation of the given set of the activity instances.
14. The method of claim 13, wherein the user interface input is provided as part of an ongoing communications session between the group of users.
15. The method of claim 14, wherein causing the at least one client device to render the representation of the given set of the activity instances occurs without rendering the representation in a transcript in the ongoing communications session.
16. The method of claim 15, further comprising: receiving affirmative user interface input responsive to the representation being rendered; and in response to receiving affirmative user interface input responsive to the representation being rendered: incorporating the representation, or an additional representation of the given set of the activity instances, into the transcript of the ongoing communications session.
17. The method of claim 13, wherein the respective features for the activity instance of at least one of the activity types that is processed using the trained machine learning model include: a location feature that defines a geographic location for the activity instance, and a temporal feature that defines one or more times for the activity instance.
18. The method of claim 13, further comprising: identifying a location metric for at least one of the users; and processing, using the trained machine learning model, the location metric along with the respective features of each of the ordered sets of the activity instances in generating the feasibility scores.
19. The method of claim 13, further comprising: determining a supervised feasibility score for the given set of the activity instances, wherein determining the supervised feasibility is based on one or both of: whether at least one of the users performed the given set of the activity instances, and feedback provided by at least one of the users in response to rendering of a prompt that solicits feedback regarding the given set of the activity instances; and further training the machine learning model using a training example that includes training example input that conforms to the respective features for the given ordered set and that includes training example output that conforms to the supervised feasibility score.
20. (canceled)
21. (canceled)
</claims>
</document>
