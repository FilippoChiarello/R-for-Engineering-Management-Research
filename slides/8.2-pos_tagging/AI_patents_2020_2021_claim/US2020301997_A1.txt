<document>

<filing_date>
2019-03-22
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2019-03-22
</priority_date>

<ipc_classes>
G06F17/15,G06F17/18
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
SMITH, Matthew James
THARMANANTHAR, Giridharen
DESHMUKH, Jayashree Siddharth
</inventors>

<docdb_family_id>
72516010
</docdb_family_id>

<title>
Fuzzy Cohorts for Provenance Chain Exploration
</title>

<abstract>
Described herein is a provenance chain exploration system and method. Particular journeys of entities are identified from stored provenance chain data using an algorithm. A group of similar journeys (representative journey) can be identified using a clustering algorithm and/or probabilistic algorithm. Information associated with the identified group of similar journeys (representative journey) can be graphically displayed to a user. The user can interactively modify setting(s) associated with identification of journeys and/or identification of group(s) of similar journeys. The graphically displayed information can be modified in accordance with the modified setting(s).
</abstract>

<claims>
1. A provenance chain exploration system, comprising: a computer comprising a processor and a memory having computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to: identify particular journeys of entities from stored provenance chain data using an algorithm; cluster the identified journeys into a group of similar journeys using a clustering algorithm and a clustering threshold; and graphically display information associated with the group of similar journeys to a user.
2. The system of claim 1, wherein the particular journeys are identified based, at least in part, upon received user input specifying at least one of a temporal, a locational filter, or a content based filter to be applied to the stored provenance chain data.
3. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to: receive input from the user identifying a criterion for identifying the particular journeys.
4. The system of claim 1, the memory having further computer-executable instructions stored thereupon which, when executed by the processor, cause the computer to: receive input from the user specifying the clustering threshold.
5. The system of claim 1, wherein the clustering algorithm comprises at least one of a hierarchical algorithm, a k-means algorithm, a distribution-based algorithm, or a density-based algorithm.
6. The system of claim 1, wherein the clustering algorithm comprises weights associated with features of the provenance chain data.
7. The system of claim 6, wherein the at least some of the weights are based, at least in part, upon received user input.
8. The system of claim 1, wherein the information associated with the group of similar journeys is displayed to the user as a multi-dimensional visualization.
9. A method of providing graphical information for provenance chain exploration, comprising: identifying particular journeys of entities from stored provenance chain data using an algorithm; determining a group of similar journeys using a probabilistic algorithm and a threshold probability; and graphically displaying information associated with the group of similar journeys to a user.
10. The method of claim 9, wherein the particular journeys are identified based, at least in part, upon received user input specifying at least one of a temporal or locational filter to be applied to the stored provenance chain data.
11. The method of claim 9, further comprising: retrieving a stored setting for the probabilistic algorithm, wherein the stored setting comprises at least one of a setting pre-stored by a user, a commonly used setting, or historically utilized aggregation criteria.
12. The method of claim 9, further comprising: receiving input from the user specifying the threshold probability.
13. The method of claim 9, wherein the probabilistic algorithm comprises at least one of a linear regression algorithm, a logistic regression algorithm, a decision tree algorithm, a support vector machine (SVM) algorithm, a Naive Bayes algorithm, a K-nearest neighbors (KNN) algorithm, a K-means algorithm, a random forest algorithm, a dimensionality reduction algorithm, and/or a Gradient Boost & Adaboost algorithm.
14. The method of claim 9, wherein the probabilistic algorithm comprises weights associated with features of the provenance chain data.
15. The method of claim 14, wherein the at least some of the weights are based, at least in part, upon received user input.
16. The method of claim 9, wherein the information associated with one or more groups of similar journeys is displayed to the user as a three-dimensional visualization.
17. A computer storage media storing computer-readable instructions that when executed cause a computing device to: identify particular journeys of entities from stored provenance chain data using an algorithm; cluster the identified journeys into a group of similar journeys using a clustering algorithm and a clustering threshold; and graphically display information associated with the group of similar journeys to a user, wherein the information associated with the group of similar journeys is displayed to the user as a three-dimensional visualization.
18. The computer storage media of claim 17, storing further computer-readable instructions that when executed cause a computing device to: receive input from the user specifying the clustering threshold.
19. The computer storage media of claim 17, wherein the clustering algorithm comprises at least one of a hierarchical algorithm, a k-means algorithm, a distribution-based algorithm, or a density-based algorithm.
20. The computer storage media of claim 17, wherein the clustering algorithm comprises weights associated with features of the provenance chain data, and, at least one of the weights is based, at least in part, upon received user input.
</claims>
</document>
