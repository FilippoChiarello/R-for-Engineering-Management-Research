<document>

<filing_date>
2017-12-04
</filing_date>

<publication_date>
2020-06-09
</publication_date>

<priority_date>
2017-12-04
</priority_date>

<ipc_classes>
G06F11/00,G06F11/36,G06N20/00,G06N5/00,G06N5/02,G06N99/00
</ipc_classes>

<assignee>
BANK OF AMERICA CORPORATION
</assignee>

<inventors>
CHAUHAN, SANDEEP KUMAR
MAGHAM, KOTESWARA RAO VENTAKA
</inventors>

<docdb_family_id>
66659186
</docdb_family_id>

<title>
Intelligent batch job testing
</title>

<abstract>
Apparatus and methods for an intelligent batch job testing system are provided. The system may receive a natural language request for batch job testing. The system may generate a graphical representation of a test scenario, based in part on keywords extracted from the natural language request. The graphical representation may include interconnected nodes. The graphical representation may include finite states for one or more of the nodes. The system may generate test cases based on the graphical representation. The system may access batch job data and map the data files using an optimized file layout that corresponds to the batch job data file. Feedback based on test results may be applied to modify test cases and testing protocols to improve testing accuracy.
</abstract>

<claims>
1. A batch job testing system configured to generate and execute batch job test cases based on a natural language test scenario, the batch job testing system comprising a processor configured to: receive a natural language request for a batch job test; generate one or more scenario graphs, each scenario graph comprising a graphical representation of a test scenario, the test scenario based at least in part on a keyword extracted from the natural language request, each scenario graph comprising a plurality of scenario graph nodes; generate one or more test cases, each test ease based at least in part on a scenario graph node and based at least in part on domain data comprising finite states associated with the scenario graph node; map a data file to identify batch job data associated with a test case, the mapping based on an optimized file layout corresponding to a layout of the data file; execute one or more test cases using the batch job data; and based on the execution of the one or more test cases, compile batch job test results.
2. The batch job testing system of claim 1, the batch job testing system further comprising a layout intelligence engine, wherein the layout intelligence engine is configured to: receive an input of one or more sample files, each sample file comprising data and metadata; and based on metadata from the sample files use a machine learning algorithm to generate one or more optimized file layouts.
3. The batch job testing system of claim 1, the batch job testing system further comprising a rule engine, wherein: the rule engine is configured to store decision tree information comprising one or more test case requirements, the test case requirements based on test results associated with a first test case; and the processor is configured to generate a second test case based in part on one or more of the test case requirements.
4. The batch job testing system of claim 1, wherein the processor is further configured to: store a confidence level for a test case, the confidence level based at least in part on first test results associated with a first execution of a test case; and execute a second execution of the test case only when the confidence level exceeds a pre-determined threshold.
5. The batch job testing system of claim 4, wherein the confidence level is modified by a system administrator based on second test results associated with the second execution.
6. The batch job testing system of claim 1, the batch job testing system further comprising a database configured to store executed test cases, executed test scripts and test results associated with the executed test scripts.
7. The batch job testing system of claim 6, wherein the processor is configured to execute a test case by accessing an executed test script stored in the database.
8. The batch job testing system of claim 1, wherein the processor is configured to generate a plurality of scenario graphs corresponding to a single natural language request for a batch job test, each scenario graph comprising a graphical representation of a test scenario.
9. A machine-learning based batch job testing system configured to generate and execute batch job test cases based on a natural language testing request, the batch job testing system comprising: machine-readable storage configured to store an optimized file layout corresponding to a batch job source file, the optimized file layout generated based on sample file metadata using one or more machine-learning algorithms; and a processor configured to: receive a natural language request for a batch job test and identify one or more tokens within the request; based at least in part on one of the tokens, generate a scenario graph, the scenario graph comprising a plurality of scenario graph nodes; based at least in part on a scenario graph node and based at least in part on domain data comprising one or more finite states associated with the scenario graph node, generate one or more test cases; based at least in part on the optimized file layout, map the batch job source file to identify batch job data and execute the one or more cases; and update a rule engine based on test results associated with the one or more executed test cases, the rule engine comprising one or more decision trees corresponding to one or more executed test cases.
10. The batch job testing system of claim 9, wherein the processor is further configured to: store a confidence level for a test case, the confidence level based at least in part on first test results, the first test results associated with a first execution the test case; and execute a second execution of the test case only when the confidence level exceeds a pre-determined threshold.
11. The batch job testing system of claim 10, wherein the confidence level is modified by a system administrator based on second test results, the second test results associated with the second execution.
12. The batch job testing system of claim 9, wherein the test case corresponds to a test script, the test script comprising machine readable code configured to execute the test case in a machine environment.
13. The batch job testing system of claim 12, the system further comprising a database configured to store executed test cases, executed test scripts and test results associated with the executed test scripts.
14. The batch job testing system of claim 9, wherein the processor is configured to generate a plurality of scenario graphs corresponding to a single natural language request for a batch job test, each scenario graph comprising a graphical representation of a test scenario.
15. One or more non-transitory computer-readable media storing computer-executable instructions which, when executed by a processor on a computer system, perform a method for generating and executing batch job test cases based on machine learning, the method comprising: receiving a natural language request for a batch job test; generating a scenario graph, the scenario graph comprising a graphical representation of a test scenario, the test scenario based at least in part on a keyword extracted from the natural language request; generating one or more test cases, each test case based at least in part on the scenario graph; mapping a data file to identify batch job data associated with a test case, the mapping based on an optimized file layout corresponding to a layout of the data file; executing the test case using the batch job data; based on execution of the test case, compiling batch job test results; and updating a machine learning algorithm with one more test case requirements, the test case requirements based at least in part on the batch job test results.
16. The computer-readable media of claim 15, wherein the method further comprises: receiving an input of one or more sample files, each sample file comprising data and metadata; and using a machine learning algorithm, generating one or more optimized file layouts based on metadata from the sample files.
17. The computer-readable media of claim 15, wherein the method further comprises: storing decision tree information comprising test ease requirements, the test case requirements based on first test results associated with a first test case; and generating a second test case based in part on one or more of the test case requirements.
18. The computer-readable media of claim 15, wherein the method further comprises: storing a confidence level for a test case, the confidence level based at least in part on first test results associated with a first execution of a test case; and executing a second execution of the test case only when the confidence level exceeds a pre-determined threshold.
19. The computer-readable media of claim 15, wherein the method further comprises generating a plurality of scenario graphs corresponding to a single natural language request for batch job testing, each scenario graph comprising a graphical representation of a test scenario.
20. The computer-readable media of claim 15, wherein: the scenario graph comprises a plurality of scenario graph nodes; and each test case is based at least in part on a scenario graph node and on domain data comprising a finite state associated with the scenario graph node.
</claims>
</document>
