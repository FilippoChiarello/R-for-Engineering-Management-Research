<document>

<filing_date>
2019-08-05
</filing_date>

<publication_date>
2020-02-20
</publication_date>

<priority_date>
2018-08-20
</priority_date>

<ipc_classes>
G06F8/70,G06K9/62,G06N3/08
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
NANAL, MIHIR
HARSUKHLAL SODHA, RAKESHKUMAR
PATTAJOSHI, SASMITA
</inventors>

<docdb_family_id>
69523157
</docdb_family_id>

<title>
AUTOMATICALLY EVALUATING SOFTWARE PROJECT REQUIREMENTS
</title>

<abstract>
Examples for automatically evaluating a software project requirement are disclosed. In an example, a neural word vector corresponding to a requirement file is generated and the neural word vector based on a score based vector is updated. An output vector comprising a conditional probability distribution of a plurality of answers associated with a plurality of questions identified from the updated neural word vector is generated. Further, a set of input parameters associated with at least one of the software project and the requirement is obtained. Based on the output vector and the set of input parameters, an effort required for completing the requirement may be estimated. A validation score associated with the requirement based on the output vector and a plurality of validation and classification parameters may be determined.
</abstract>

<claims>
1. A computer-implemented method for automatically evaluating a software project requirement, the method comprising: generating a neural word vector corresponding to a requirement file, wherein the requirement file comprises a text description of a requirement associated with the software project; updating the neural word vector based on a score based vector, wherein the score based vector comprises a plurality of words contextually relevant to the neural word vector; providing the updated neural word vector as an input to a neural network engine; generating, by the neural network engine, an output vector comprising a conditional probability distribution of a plurality of answers associated with a plurality of questions identified from the updated neural word vector, the generating comprising determining of a plurality of relationships between a plurality of features of the requirement, the determining comprising passing of data from a first layer and a hidden layer to a second layer of the neural network engine; obtaining a set of input parameters associated with at least one of the software project and the requirement; estimating effort required for completing the requirement based on the output vector and the set of input parameters, the effort being estimated in measurable units; and determining a validation score associated with the requirement based on the output vector and a plurality of validation and classification parameters, wherein the validation score is indicative of a quality of the requirement.
2. The method of claim 1, further comprising: converting the output vector to the updated neural word vector; mapping the updated neural word vector to one or more attributes of the requirement; determining a number of question and answers in the requirement based on the one or more attributes determining a value of each of the plurality of validation and classification parameter based on the number of questions and answers; comparing the classification parameter values with corresponding threshold values; and classifying the requirement into a predetermined category based on the comparing.
3. The method of claim 1, the estimating further comprising: providing the output vector and the set of input parameters as an input to a hidden markov model; dynamically selecting a state having a maximum likelihood; and determining a weighted average of the selected state as the effort required for completing the requirement.
4. The method of claim 3, wherein the hidden markov model comprises three states, and wherein each state of the three states includes a set of three Gaussians.
5. The method of claim 1, wherein the determining of the validation score further comprises: converting the output vector to the updated neural word vector; mapping the updated neural word vector to one or more attributes of the requirement; determining a number of question and answers in the requirement based on the one or more attributes determining a value of each of the plurality of validation and classification parameters based on the number of questions and answers; determining a plurality of probabilities related to the requirement based on one or more of the plurality of validation and classification parameters and a regression operation; and selecting a highest probability from the plurality of probabilities as the validation score for the requirement.
6. The method of claim 1, wherein the updating of the neural word vector further comprises: loading the score based vector from an internal database; calculating a correlation matrix between the neural word vector and the score based vector; and updating the neural word vector based on the correlation matrix.
7. The method of claim 1, wherein the determining of the plurality of relationships between the plurality of features of the requirement comprises implementing a Long Short Term Memory (LSTM) Classifier.
8. A system for automatically evaluating a software project requirement, the system comprising: a processor; a word embedder coupled to the processor to generate a neural word vector corresponding to a requirement file, wherein the requirement file comprises a text description of a requirement associated with the software project; a validation engine coupled to the processor to update the neural word vector based on a score based vector, wherein the score based vector comprises a plurality of words contextually relevant to the neural word vector; a neural network engine coupled to the processor to generate an output vector comprising a conditional probability distribution of a plurality of answers associated with a plurality of questions identified from the updated neural word vector, the generating comprising determining of a plurality of relationships between a plurality of features of the requirement, the determining comprising passing of data from a first layer and a hidden layer to a second layer of the neural network engine; an effort estimation engine coupled to the processor to: obtain a set of input parameters associated with at least one of the software project and the requirement; and estimate effort required for completing the requirement based on the output vector and the set of input parameters, the effort being estimated in measurable units; and a requirement estimation engine coupled to the processor to determine a validation score associated with the requirement based on the output vector and a plurality of validation and classification parameters, wherein the validation score is indicative of a quality of the requirement.
9. The system of claim 8, wherein the effort estimation engine further is to: convert the output vector to the updated neural word vector; map the updated neural word vector to one or more attributes of the requirement; determine a number of question and answers in the requirement based on the one or more attributes determine a value of each of the plurality of validation and classification parameter based on the number of questions and answers; compare the validation and classification parameter values with corresponding threshold values; and classify the requirement into a predetermined category based on the comparing.
10. The system of claim 8, wherein the effort estimation engine further is to: provide the output vector and the set of input parameters as an input to a hidden markov model; select, dynamically, a state having a maximum likelihood; determine a weighted average of the selected state as the effort required for completing the requirement.
11. The system of claim 10, wherein the hidden markov model comprises three states, and wherein each state of the three states includes a set of three Gaussians.
12. The system of claim 8, wherein the requirement estimation engine further is to: convert the output vector to the updated neural word vector; map the updated neural word vector to one or more attributes of the requirement; determine a number of question and answers in the requirement based on the one or more attributes determine a value of each of the plurality of validation and classification parameters based on the number of questions and answers; determine a plurality of probabilities related to the requirement based on one or more of the plurality of validation and classification parameters and a regression operation; and select a highest probability from the plurality of probabilities as the validation score for the requirement.
13. The system of claim 8, wherein the validation engine further is to: load the score based vector from an internal database; calculate a correlation matrix between the neural word vector and the score based vector; and update the neural word vector based on the correlation matrix.
14. The system of claim 8, wherein the neural network engine further is to implement a Long Short Term Memory (LSTM) Classifier for determining of the plurality of relationships between the plurality of features of the requirement.
15. A non-transitory computer readable medium including machine readable instructions that are executable by at least one processor to execute a method comprising: generating a neural word vector corresponding to a requirement file, wherein the requirement file comprises a text description of a requirement associated with the software project; updating the neural word vector based on a score based vector, wherein the score based vector comprises a plurality of words contextually relevant to the neural word vector; providing the updated neural word vector as an input to a neural network engine; generating, by the neural network engine, an output vector comprising a conditional probability distribution of a plurality of answers associated with a plurality of questions identified from the updated neural word vector, the generating comprising determining of a plurality of relationships between a plurality of features of the requirement, the determining comprising passing of data from a first layer and a hidden layer to a second layer of the neural network engine; obtaining a set of input parameters associated with at least one of the software project and the requirement; estimating effort required for completing the requirement based on the output vector and the set of input parameters, the effort being estimated in measurable units; and determining a validation score associated with the requirement based on the output vector and a plurality of validation and classification parameters, wherein the validation score is indicative of a quality of the requirement.
16. The non-transitory computer readable medium of claim 15, the method further comprising: converting the output vector to the updated neural word vector; mapping the updated neural word vector to one or more attributes of the requirement; determining a number of question and answers in the requirement based on the one or more attributes determining a value of each of the plurality of validation and classification parameter based on the number of questions and answers; comparing the classification parameter values with corresponding threshold values; and classifying the requirement into a predetermined category based on the comparing.
17. The non-transitory computer readable medium of claim 15, the estimating further comprising: providing the output vector and the set of input parameters as an input to a hidden markov model; dynamically selecting a state having a maximum likelihood; determining a weighted average of the selected state as the effort required for completing the requirement.
18. The non-transitory computer readable medium of claim 17, wherein the hidden markov model comprises three states, and wherein each state of the three states includes a set of three Gaussians.
19. The non-transitory computer readable medium of claim 15, wherein the determining of the validation score further comprises: converting the output vector to the updated neural word vector; mapping the updated neural word vector to one or more attributes of the requirement; determining a number of question and answers in the requirement based on the one or more attributes determining a value of each of the plurality of validation and classification parameters based on the number of questions and answers; determining a plurality of probabilities related to the requirement based on one or more of the plurality of validation and classification parameters and a regression operation; and selecting a highest probability from the plurality of probabilities as the validation score for the requirement.
20. The non-transitory computer readable medium of claim 15, wherein the updating of the neural word vector further comprises: loading the score based vector from an internal database; calculating a correlation matrix between the neural word vector and the score based vector; and updating the neural word vector based on the correlation matrix.
</claims>
</document>
