<document>

<filing_date>
2019-06-19
</filing_date>

<publication_date>
2020-12-24
</publication_date>

<priority_date>
2019-06-19
</priority_date>

<ipc_classes>
H04L12/24
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
ALBA, ALFREDO
GRUHL, DANIEL
KATO, LINDA H.
KAU, CHRIS
DELUCA, CHAD E.
</inventors>

<docdb_family_id>
74039456
</docdb_family_id>

<title>
DATA CENTER CARTOGRAPHY BOOTSTRAPPING FROM PROCESS TABLE DATA
</title>

<abstract>
One embodiment provides a method including identifying all computing nodes and connections associated with the computing nodes in a data center. For each computing node, running processes are identified using natural language processing (NLP) by: extracting known process entities according to predetermined rules; extracting unknown process entities by: grouping process logs that share process entities and identifying hints in parameters and directory paths; receiving annotations to the hints to identify an application a process is running; and creating a new rule based on the annotations and propagating the new rule to other process logs. A visual representation of the computing nodes and the processes running on the computing nodes is generated.
</abstract>

<claims>
1. A method comprising: identifying all computing nodes and connections associated with the computing nodes in a data center; for each computing node, identifying running processes using natural language processing (NLP) by: extracting known process entities according to predetermined rules; extracting unknown process entities by: grouping process logs from computing nodes that share process entities and identifying hints in parameters and directory paths, wherein the process logs include structured knowledge without semantic knowledge formally encoded; receiving annotations to the hints to identify an application a process is running; and creating a new rule based on the annotations and propagating the new rule to other process logs; and generating a visual representation of the computing nodes and the processes running on the computing nodes.
2. The method of claim 1, wherein a rule comprises a tag set, a type and text, and the structured knowledge in the process logs includes process numbers, port numbers and Internet Protocol (IP) addresses.
3. The method of claim 1, further comprising assigning a tag to each line of a process table.
4. The method of claim 3, further comprising mapping the tags into an ontology of processes.
5. The method of claim 2, wherein the rule is embodied in a rule file having a naming convention of a number and a particular name.
6. The method of claim 1, wherein the visual representation comprises a selection tool for selecting particular applications and services, and manipulating the visual representation based on computing nodes and associated dependencies.
7. The method of claim 1, wherein an annotation comprises a label assigned to the application, and the label adds semantic knowledge to the process logs.
8. A computer program product for generating a visual representation of computing nodes and connections in a data center, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor to cause the processor to: identify, by the processor, all computing nodes and connections associated with the computing nodes in a data center; for each computing node, identify, by the processor, running processes using natural language processing (NLP) by: extract, by the processor, known process entities according to predetermined rules; extract, by the processor, unknown process entities by: group, by the processor, process logs from computing nodes that share process entities and identifying hints in parameters and directory paths, wherein the process logs include structured knowledge without semantic knowledge formally encoded; receive, by the processor, annotations to the hints to identify an application a process is running; and create, by the processor, a new rule based on the annotations and propagating the new rule to other process logs; and generate, by the processor, a visual representation of the computing nodes and the processes running on the computing nodes.
9. The computer program product of claim 8, wherein a rule comprises a tag set, a type and text, and the structured knowledge in the process logs includes process numbers, port numbers and Internet Protocol (IP) addresses.
10. The computer program product of claim 8, wherein the program instructions executable by the processor further to cause the processor to: assign, by the processor, a tag to each line of a process table; and map, by the processor, the tags into an ontology of processes.
11. The computer program product of claim 9, wherein the rule is embodied in a rule file having a naming convention of a number and a particular name.
12. The computer program product of claim 8, wherein the visual representation comprises a selection tool for selecting particular applications and services, and manipulating the visual representation based on computing nodes and associated dependencies.
13. The computer program product of claim 8, wherein an annotation comprises a label assigned to the application, and the label adds semantic knowledge to the process logs.
14. An apparatus comprising: a memory configured to store instructions; and a processor configured to execute the instructions to: identify all computing nodes and connections associated with the computing nodes in a data center; for each computing node, identify running processes using natural language processing (NLP) by: extracting known process entities according to predetermined rules; extracting unknown process entities by: grouping process logs from computing nodes that share process entities and identifying hints in parameters and directory paths, wherein the process logs include structured knowledge without semantic knowledge formally encoded; receiving annotations to the hints to identify an application a process is running; and creating a new rule based on the annotations and propagating the new rule to other process logs; and generate a visual representation of the computing nodes and the processes running on the computing nodes.
15. The apparatus of claim 14, wherein a rule comprises a tag set, a type and text, and the structured knowledge in the process logs includes process numbers, port numbers and Internet Protocol (IP) addresses.
16. The apparatus of claim 14, wherein the processor is further configured to execute the instructions to: assign a tag to each line of a process table.
17. The apparatus of claim 16, wherein the processor is further configured to execute the instructions to: map the tags into an ontology of processes.
18. The apparatus of claim 15, wherein the rule is embodied in a rule file having a naming convention of a number and a particular name.
19. The apparatus of claim 14, wherein the visual representation comprises a selection tool for selecting particular applications and services, and manipulating the visual representation based on computing nodes and associated dependencies.
20. The apparatus of claim 14, wherein an annotation comprises a label assigned to the application, and the label adds semantic knowledge to the process logs.
</claims>
</document>
