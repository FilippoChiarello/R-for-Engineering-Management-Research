<document>

<filing_date>
2017-12-29
</filing_date>

<publication_date>
2020-02-04
</publication_date>

<priority_date>
2017-12-29
</priority_date>

<ipc_classes>
G06N3/04,G10L15/16,G10L15/18,G10L15/22
</ipc_classes>

<assignee>
FACEBOOK
</assignee>

<inventors>
SMELYANSKIY, MIKHAIL
REED, JAMES KENNETH
DIRIL, ABDULKADIR UTKU
ROTEM, NADAV
PARK, JONG SOO
</inventors>

<docdb_family_id>
67058390
</docdb_family_id>

<title>
Systems and methods for employing predication in computational models
</title>

<abstract>
The disclosed method may include (1) determining whether a next operation of a plurality of operations of a computational model is dependent upon a Boolean predication value, (2) based on the next operation not being dependent on the Boolean predication value, performing the next operation, where a state of the computational model is updated as a result of performing the next operation, and (3) based on the next operation being dependent on the Boolean predication value, performing at least one of (a) allowing, based on the Boolean predication value being a first value, the next operation to update the state of the computational model, and (b) preventing, based on the Boolean predication value being a second value different from the first value, the next operation from updating the state of the computational model. Various other methods and systems are also disclosed.
</abstract>

<claims>
1. A method, comprising: setting, using at least one hardware processor, as a result of a previous operation of a plurality of operations of a computational model, a Boolean predication value to a first value or a second value different from the first value, wherein the computational model comprises an artificial neural network (ANN) having conditional logic programmed to simulate a cyclic data flow in a unidirectional computational model; determining, using the at least one hardware processor, whether a next operation of the plurality of operations of the computational model is dependent upon the Boolean predication value, wherein the ANN comprises a directed acyclic graph (DAG) that includes the next operation and the previous operation in an unrolled loop compiled from a recurrent neural network (RNN); allowing, using the at least one hardware processor and based on the next operation not being dependent on the Boolean predication value, the next operation to update a state of the computational model as a result of the next operation being performed; and based on the next operation being dependent on the Boolean predication value: allowing, based on the Boolean predication value being the first value, the next operation to update the state of the computational model; and preventing, based on the Boolean predication value being the second value, the next operation from updating the state of the computational model by skipping an operation of a node in an activation layer of the computational model without circumventing the node.
2. The method of claim 1, wherein the first value is true and the second value is false.
3. The method of claim 1, further comprising: performing the next operation prior to evaluating the Boolean predication value; saving, based on the next operation being dependent on the Boolean predication value, a result of performing the next operation without updating the state of the computational model; and updating, based on the Boolean predication value being the first value, the state of the computational model using the result of performing the next operation.
4. The method of claim 1, further comprising: performing, based on the next operation being dependent on the Boolean predication value, the next operation after determining the Boolean predication value is the first value; or skipping, based on the next operation being dependent on the Boolean predication value, the next operation after determining the Boolean predication value is the second value.
5. The method of claim 1, wherein: the previous operation comprises comparing a weight for an input of a node of the ANN to a comparison value; and the method further comprises: setting the Boolean predication value to the first value based on the weight being greater than or equal to the comparison value; and setting the Boolean predication value to the second value based on the weight being less than the comparison value.
6. The method of claim 1, wherein: the previous operation comprises comparing an input of a node of the ANN to a comparison value; and the method further comprises: setting the Boolean predication value to the first value based on the input being greater than or equal to the comparison value; and setting the Boolean predication value to the second value based on the input being less than the comparison value.
7. The method of claim 1, wherein: the previous operation comprises comparing an output of a node of the ANN to a comparison value; and the method further comprises: setting the Boolean predication value to the first value based on the output being greater than or equal to the comparison value; and setting the Boolean predication value to the second value based on the output being less than the comparison value.
8. The method of claim 1, wherein: the RNN provides natural language processing (NLP) for a spoken language; the unrolled loop retains results over a sequence of tokens of the spoken language; and the Boolean predication value is based on whether an end-of-sequence token is encountered.
9. The method of claim 1, further comprising: based on another operation of the plurality of operations being dependent on the Boolean predication value: allowing, based on the Boolean predication value being the second value, the other operation to update the state of the computational model; and preventing, based on the Boolean predication value being the first value, the other operation from updating the state of the computational model.
10. The method of claim 9, wherein performance of the next operation and the other operation at least partially overlap in time.
11. A hardware processing element, comprising: an operation unit that performs a plurality of operations associated with nodes of a computational model, wherein the computational model comprises an artificial neural network (ANN) having conditional logic programmed to simulate a cyclic data flow in a unidirectional computational model; and a predication unit that: sets, as a result of a previous operation of the plurality of operations, a Boolean predication value to a first value or a second value different from the first value; determines whether a next operation of the plurality of operations is dependent upon the Boolean predication value, wherein the ANN comprises a directed acyclic graph (DAG) that includes the next operation and the previous operation in an unrolled loop compiled from a recurrent neural network (RNN); based on the next operation not being dependent on the Boolean predication value, allows the next operation to update a state of the computational model as a result of the next operation being performed; and based on the next operation being dependent on the Boolean predication value: allows, based on the Boolean predication value being the first value, the next operation to update the state of the computational model; and prevents, based on the Boolean predication value being the second value, the next operation from updating the state of the computational model by skipping an operation of a node in an activation layer of the computational model without circumventing the node.
12. The hardware processing element of claim 11, wherein the next operation comprises at least one of a multiply operation, an accumulate operation, or an activation operation.
13. A system, comprising: a plurality of hardware processing elements that process nodes of a computational model, wherein the computational model comprises an artificial neural network (ANN) having conditional logic programmed to simulate a cyclic data flow in a unidirectional computational model and at least one of the hardware processing elements comprises: an operation unit that performs a plurality of operations associated with the nodes of the computational model; and a predication unit that: sets, as a result of a previous operation of the plurality of operations, a Boolean predication value to a first value or a second value different from the first value; determines whether a next operation of the plurality of operations is dependent upon the Boolean predication value, wherein the ANN comprises a directed acyclic graph (DAG) that includes the next operation and the previous operation in an unrolled loop compiled from a recurrent neural network (RNN); based on the next operation not being dependent on the Boolean predication value, allows the next operation to update a state of the computational model as a result of the next operation being performed; and based on the next operation being dependent on the Boolean predication value: allows, based on the Boolean predication value being the first value, the next operation to update the state of the computational model; and prevents, based on the Boolean predication value being the second value, the next operation from updating the state of the computational model by skipping an operation of a node in an activation layer of the computational model without circumventing the node.
</claims>
</document>
