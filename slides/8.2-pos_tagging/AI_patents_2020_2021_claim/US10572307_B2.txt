<document>

<filing_date>
2017-07-26
</filing_date>

<publication_date>
2020-02-25
</publication_date>

<priority_date>
2017-07-26
</priority_date>

<ipc_classes>
G06F9/48,G06F9/50,G06N20/00,G06N7/00,G06N99/00
</ipc_classes>

<assignee>
BANK OF AMERICA CORPORATION
</assignee>

<inventors>
LEE, JISOO
MCCORMACK, JAMES
SUMAN, SHAKTI
</inventors>

<docdb_family_id>
65038768
</docdb_family_id>

<title>
System and method of training machine learning algorithm to satisfactorily allocate resources for task execution
</title>

<abstract>
In one or more embodiments, one or more systems, processes, and/or methods may receive first task sets that include respective first tasks and one or more of respective first priorities, respective first minimum computing resource allocations, and respective first maximum processing times; receive first satisfaction information associated with processing the first task sets; receive first execution metric information associated with processing the first task sets; determine a first pattern based at least on the first satisfaction information and based at least on the first execution metric information; receive second task sets that include respective second tasks and one or more of respective second priorities, respective second minimum computing resource allocations, and respective second maximum processing times; determine, based at least on the first pattern, computing resources allocations for the second task sets; and determine, based at least on the first pattern, a processing order for the second task sets.
</abstract>

<claims>
1. A system, comprising: one or more processors; a memory medium communicatively coupled to the one or more processors; wherein the memory medium stores instructions that are executable by the one or more processors and that when executed by the one or more processors, cause the system to: receive a first plurality of task sets, comprising a first task set, a second task set, and a third task set, the first task set comprising a first plurality of tasks and first requirements comprising a first plurality of priorities between the first plurality of tasks, a first plurality of minimum computing resource allocation amounts for processing the first plurality of tasks, and a first plurality of maximum processing times to produce output data from the first plurality of tasks, the second task set comprising a second plurality of tasks and second requirements comprising a second plurality of priorities between the second plurality of tasks, a second plurality of minimum computing resource allocation amounts for processing the second plurality of tasks, and a second plurality of maximum processing times to produce output data from the second plurality of tasks, and the third task set comprising a third plurality of tasks and third requirements comprising a third plurality of priorities between the second plurality of tasks, a third plurality of minimum computing resource allocation amounts for processing the third plurality of tasks, and a third plurality of maximum processing times to produce output from the third plurality of tasks; allocate the first task set and the second task set to a first element of computing resources of a plurality of elements of computing resources, wherein the first element of computing resources has a first particular amount of computing resources and is configured to process the first task set before processing the second task set; allocate the third task set to a second element of computing resources, wherein the second element of computing resources has a second particular amount of computing resources and is configured to process the third task set; in response to processing the first, second, and third task sets by the first and second elements, receive information comprising: first information associated with processing the first task set, the first information received from a first computer system that submitted the first task set, in response to the first element processing the first task set, the first information indicating that the processing of the first task set was performed satisfactorily, the first information indicating that the first task set was processed in accordance with the first requirements; second information associated with processing the second task set, the second information received from a second computer system that submitted the second task set, in response to the first element processing the second task set, the second information indicating that the processing of the second task set was performed unsatisfactorily, the second information indicating that the second task set was not processed in accordance with the second requirements; and third information associated with processing the third task set, the third information received from a third computer system that submitted the third task set, in response to the second element processing the third task set, the third information indicating that the processing of the third task set was performed satisfactorily, the third information indicating that the third task set was processed in accordance with the third requirements; receive first execution metric information associated with processing the first plurality of task sets, the first execution metric information comprising, for each task of the first, second, and third plurality of tasks of the first plurality of task sets, a size of the task, an amount of data that the task processed, an amount of data that the task produced, and an amount of time that transpired during execution for the task; train a machine learning algorithm based at least on the information and based at least on the first execution metric information, wherein the machine learning algorithm is configured to determine an order for processing a plurality of future task sets submitted by a plurality of computer systems and to allocate the plurality of future task sets to the plurality of elements of computing resources, to minimize an amount of idle time of the plurality of elements of computing resources and to maximize an amount of information indicating satisfaction with an execution of the plurality of future task sets, received from the plurality of computer systems that submitted the plurality of future task sets in response to processing the plurality of future task sets; subsequently receive a second plurality of task sets, comprising a fourth task set, a fifth task set, and a sixth task set, the fourth task set comprising a fourth plurality of tasks and fourth requirements comprising a fourth plurality of priorities between the fourth plurality of tasks, a fourth plurality of minimum computing resource allocation amounts for processing the fourth plurality of tasks, and a fourth plurality of maximum processing times to produce output data from the fourth plurality of tasks, the fifth task set comprising a fifth plurality of tasks and fifth requirements comprising a fifth plurality of priorities between the fifth plurality of tasks, a fifth plurality of minimum computing resource allocation amounts for processing the fifth plurality of tasks, and a fifth plurality of maximum processing times to produce output data from the fifth plurality of tasks, and the sixth task set comprising a sixth plurality of tasks and sixth requirements comprising a sixth plurality of priorities between the sixth plurality of tasks, a sixth plurality of minimum computing resource allocation amounts for processing the sixth plurality of tasks, and a sixth plurality of maximum processing times to produce output data from the sixth plurality of tasks; determine, based at least on the machine learning algorithm, allocations for the second plurality of task sets to the plurality of elements of computing resources, and a processing order for the second plurality of task sets, wherein the allocations and processing order satisfy a probabilistic measure that the fourth, fifth, and sixth task sets will be processed in accordance with the fourth, fifth, and sixth requirements, respectively; and process the second plurality of task sets according to the determined allocations and the determined processing order.
2. The system of claim 1, wherein the plurality of elements of computing resources comprise graphics processing units.
3. The system of claim 1, wherein the plurality of elements of computing resources comprise field programmable gate arrays.
4. The system of claim 1, wherein the memory medium comprises at least one of an operating system, a virtual machine, and a hypervisor.
5. The system of claim 1, wherein the memory medium further stores instructions that are executable by the one or more processors and that when executed by the one or more processors, cause the system to further: receive a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; determine that the system has finished processing the fourth task set, the fifth task set, and the sixth task set; and in response to determining that the system has finished processing the fourth task set, the fifth task set, and the sixth task set, process the seventh task set.
6. The system of claim 1, wherein the memory medium further stores instructions that are executable by the one or more processors and that when executed by the one or more processors, cause the system to further: receive a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; pause processing the at least one of the fourth task set, the fifth task set, and the sixth task set; after the system pauses processing the at least one of the fourth task set, the fifth task set, and the sixth task set, process the seventh task set; and after the system processes the seventh task set, resume processing the at least one of the fourth task set, the fifth task set, and the sixth task set.
7. The system of claim 1, wherein multiple of the second plurality of tasks are interdependent and are executed in a pipeline-fashion.
8. A method, comprising: receiving a first plurality of task sets, comprising a first task set, a second task set, and a third task set, the first task set comprising a first plurality of tasks and first requirements comprising a first plurality of priorities between the first plurality of tasks, a first plurality of minimum computing resource allocation amounts for processing the first plurality of tasks, and a first plurality of maximum processing times to produce output data from the first plurality of tasks, the second task set comprising a second plurality of tasks and second requirements comprising a second plurality of priorities between the second plurality of tasks, a second plurality of minimum computing resource allocation amounts for processing the second plurality of tasks, and a second plurality of maximum processing times to produce output data from the second plurality of tasks, and the third task set comprising a third plurality of tasks and third requirements comprising a third plurality of priorities between the second plurality of tasks, a third plurality of minimum computing resource allocation amounts for processing the third plurality of tasks, and a third plurality of maximum processing times to produce output from the third plurality of tasks; allocating the first task set and the second task set to a first element of computing resources of a plurality of elements of computing resources, wherein the first element of computing resources has a first particular amount of computing resources and is configured to process the first task set before processing the second task set; allocating the third task set to a second element of computing resources, wherein the second element of computing resources has a second particular amount of computing resources and is configured to process the third task set; in response to processing the first, second, and third task sets by the first and second elements, receiving information comprising: first information associated with processing the first task set, the first information received from a first computer system that submitted the first task set, in response to the first element processing the first task set, the first information indicating that the processing of the first task set was performed satisfactorily, the first information indicating that the first task set was processed in accordance with the first requirements; second information associated with processing the second task set, the second information received from a second computer system that submitted the second task set, in response to the first element processing the second task set, the second information indicating that the processing of the second task set was performed unsatisfactorily, the second information indicating that the second task set was not processed in accordance with the second requirements; and third information associated with processing the third task set, the third information received from a third computer system that submitted the third task set, in response to the second element processing the third task set, the third information indicating that the processing of the third task set was performed satisfactorily, the third information indicating that the third task set was processed in accordance with the third requirements; receiving first execution metric information associated with processing the first plurality of task sets, the first execution metric information comprising, for each task of the first, second, and third plurality of tasks of the first plurality of task sets, a size of the task, an amount of data that the task processed, an amount of data that the task produced, and an amount of time that transpired during execution for the task; training a machine learning algorithm based at least on the information and based at least on the first execution metric information, wherein the machine learning algorithm is configured to determine an order for processing a plurality of future task sets submitted by a plurality of computer systems and to allocate the plurality of future task sets to the plurality of elements of computing resources, to minimize an amount of idle time of the plurality of elements of computing resources and to maximize an amount of information indicating satisfaction with an execution of the plurality of future task sets, received from the plurality of computer systems that submitted the plurality of future task sets in response to processing the plurality of future task sets; subsequently receiving a second plurality of task sets, comprising a fourth task set, a fifth task set, and a sixth task set, the fourth task set comprising a fourth plurality of tasks and fourth requirements comprising a fourth plurality of priorities between the fourth plurality of tasks, a fourth plurality of minimum computing resource allocation amounts for processing the fourth plurality of tasks, and a fourth plurality of maximum processing times to produce output data from the fourth plurality of tasks, the fifth task set comprising a fifth plurality of tasks and fifth requirements comprising a fifth plurality of priorities between the fifth plurality of tasks, a fifth plurality of minimum computing resource allocation amounts for processing the fifth plurality of tasks, and a fifth plurality of maximum processing times to produce output data from the fifth plurality of tasks, and the sixth task set comprising a sixth plurality of tasks and sixth requirements comprising a sixth plurality of priorities between the sixth plurality of tasks, a sixth plurality of minimum computing resource allocation amounts for processing the sixth plurality of tasks, and a sixth plurality of maximum processing times to produce output data from the sixth plurality of tasks; determining, based at least on the machine learning algorithm, allocations for the second plurality of task sets to the plurality of elements of computing resources, and a processing order for the second plurality of task sets, wherein the allocations and processing order satisfy a probabilistic measure that the fourth, fifth, and sixth task sets will be processed in accordance with the fourth, fifth, and sixth requirements, respectively; and processing the second plurality of task sets according to the determined allocations and the determined processing order.
9. The method of claim 8, wherein the plurality of elements of computing resources comprise graphics processing units.
10. The method of claim 8, wherein the plurality of elements of computing resources comprise field programmable gate arrays.
11. The method of claim 8, wherein the memory medium comprises at least one of an operating system, a virtual machine, and a hypervisor.
12. The method of claim 8, further comprising: receiving a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; determining that the system has finished processing the fourth task set, the fifth task set, and the sixth task set; and in response to determining that the system has finished processing the fourth task set, the fifth task set, and the sixth task set, processing the seventh task set.
13. The method of claim 8, further comprising: receiving a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; pausing the processing the at least one of the fourth task set, the fifth task set, and the sixth task set; after the pausing the processing the at least one of the fourth task set, the fifth task set, and the sixth task set, processing the seventh task set; and after the processing the seventh task set, resuming the processing the at least one of the fourth task set, the fifth task set, and the sixth task set.
14. The method of claim 8, wherein multiple of the second plurality of tasks are interdependent and are executed in a pipeline-fashion.
15. A computer-readable non-transient memory medium that comprises instructions executable by one or more processors of a system, wherein when the one or more processors executes the instructions, the instruction cause the system to: receive a first plurality of task sets, comprising a first task set, a second task set, and a third task set, the first task set comprising a first plurality of tasks and first requirements comprising a first plurality of priorities between the first plurality of tasks, a first plurality of minimum computing resource allocation amounts for processing the first plurality of tasks, and a first plurality of maximum processing times to produce output data from the first plurality of tasks, the second task set comprising a second plurality of tasks and second requirements comprising a second plurality of priorities between the second plurality of tasks, a second plurality of minimum computing resource allocation amounts for processing the second plurality of tasks, and a second plurality of maximum processing times to produce output data from the second plurality of tasks, and the third task set comprising a third plurality of tasks and third requirements comprising a third plurality of priorities between the second plurality of tasks, a third plurality of minimum computing resource allocation amounts for processing the third plurality of tasks, and a third plurality of maximum processing times to produce output from the third plurality of tasks; allocate the first task set and the second task set to a first element of computing resources of a plurality of elements of computing resources, wherein the first element of computing resources has a first particular amount of computing resources and is configured to process the first task set before processing the second task set; allocate the third task set to a second element of computing resources, wherein the second element of computing resources has a second particular amount of computing resources and is configured to process the third task set; in response to processing the first, second, and third task sets by the first and second elements, receive information comprising: first information associated with processing the first task set, the first information received from a first computer system that submitted the first task set, in response to the first element processing the first task set, the first information indicating that the processing of the first task set was performed satisfactorily, the first information indicating that the first task set was processed in accordance with the first requirements; second information associated with processing the second task set, the second information received from a second computer system that submitted the second task set, in response to the first element processing the second task set, the second information indicating that the processing of the second task set was performed unsatisfactorily, the second information indicating that the second task set was not processed in accordance with the second requirements; and third information associated with processing the third task set, the third information received from a third computer system that submitted the third task set, in response to the second element processing the third task set, the third information indicating that the processing of the third task set was performed satisfactorily, the third information indicating that the third task set was processed in accordance with the third requirements; receive first execution metric information associated with processing the first plurality of task sets, the first execution metric information comprising, for each task of the first, second, and third plurality of tasks of the first plurality of task sets, a size of the task, an amount of data that the task processed, an amount of data that the task produced, and an amount of time that transpired during execution for the task; train a machine learning algorithm based at least on the information and based at least on the first execution metric information, wherein the machine learning algorithm is configured to determine an order for processing a plurality of future task sets submitted by a plurality of computer systems and to allocate the plurality of future task sets to the plurality of elements of computing resources, to minimize an amount of idle time of the plurality of elements of computing resources and to maximize an amount of information indicating satisfaction with an execution of the plurality of future task sets, received from the plurality of computer systems that submitted the plurality of future task sets in response to processing the plurality of future task sets; subsequently receive a second plurality of task sets, comprising a fourth task set, a fifth task set, and a sixth task set, the fourth task set comprising a fourth plurality of tasks and fourth requirements comprising a fourth plurality of priorities between the fourth plurality of tasks, a fourth plurality of minimum computing resource allocation amounts for processing the fourth plurality of tasks, and a fourth plurality of maximum processing times to produce output data from the fourth plurality of tasks, the fifth task set comprising a fifth plurality of tasks and fifth requirements comprising a fifth plurality of priorities between the fifth plurality of tasks, a fifth plurality of minimum computing resource allocation amounts for processing the fifth plurality of tasks, and a fifth plurality of maximum processing times to produce output data from the fifth plurality of tasks, and the sixth task set comprising a sixth plurality of tasks and sixth requirements comprising a sixth plurality of priorities between the sixth plurality of tasks, a sixth plurality of minimum computing resource allocation amounts for processing the sixth plurality of tasks, and a sixth plurality of maximum processing times to produce output data from the sixth plurality of tasks; determine, based at least on the machine learning algorithm, allocations for the second plurality of task sets to the plurality of elements of computing resources, and a processing order for the second plurality of task sets, wherein the allocations and processing order satisfy a probabilistic measure that the fourth, fifth, and sixth task sets will be processed in accordance with the fourth, fifth, and sixth requirements, respectively; and process the second plurality of task sets according to the determined allocations and the determined processing order.
16. The computer-readable non-transient memory medium of claim 15, wherein the plurality of elements of computing resources comprise graphics processing units.
17. The computer-readable non-transient memory medium of claim 15, wherein plurality of elements of computing resources comprise field programmable gate arrays.
18. The computer-readable non-transient memory medium of claim 15, wherein the memory medium comprises at least one of an operating system, a virtual machine, and a hypervisor.
19. The computer-readable non-transient memory medium of claim 15, wherein the computer-readable non-transient memory medium further stores instructions that are executable by the one or more processors and that when executed by the one or more processors, cause the system to further: receive a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; determine that the system has finished processing the fourth task set, the fifth task set, and the sixth task set; and in response to determining that the system has finished processing the fourth task set, the fifth task set, and the sixth task set, process the seventh task set.
20. The computer-readable non-transient memory medium of claim 15, wherein the computer-readable non-transient memory medium further stores instructions that are executable by the one or more processors and that when executed by the one or more processors, cause the system to further: receive a request to process a seventh task set while the system is processing at least one of the fourth task set, the fifth task set, and the sixth task set, wherein the fourth task set is associated with a first priority, the fifth task set is associated with a second priority, the sixth task set is associated with a third priority, and the seventh task set is associated with a fourth priority that is a higher priority than the first priority, the second priority, and the third priority; pause processing the at least one of the fourth task set, the fifth task set, and the sixth task set; after the system pauses processing the at least one of the fourth task set, the fifth task set, and the sixth task set, process the seventh task set; and after the system processes the seventh task set, resume processing the at least one of the fourth task set, the fifth task set, and the sixth task set.
21. The computer-readable non-transient memory medium of claim 15, wherein multiple of the second plurality of tasks are interdependent and are executed in a pipeline-fashion.
</claims>
</document>
