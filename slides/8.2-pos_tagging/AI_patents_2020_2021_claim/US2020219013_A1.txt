<document>

<filing_date>
2020-03-18
</filing_date>

<publication_date>
2020-07-09
</publication_date>

<priority_date>
2012-11-15
</priority_date>

<ipc_classes>
G06F16/9535,G06F16/957,G06N20/00,G06Q30/02
</ipc_classes>

<assignee>
PUREPREDICTIVE
</assignee>

<inventors>
PHILLIPPS, KELLY D.
WELLMAN, RICHARD W.
</inventors>

<docdb_family_id>
51352025
</docdb_family_id>

<title>
MACHINE LEARNING FACTORY
</title>

<abstract>
Apparatuses, systems, methods, and computer program products are disclosed for a machine learning factory. A receiver module is configured to receive electronically transmitted training data. A function generator module is configured to generate executable program code for a plurality of learned functions from a plurality of different machine learning classes based on training data. A function evaluator module is configured to perform a machine learning evaluation of a plurality of learned functions using test data and configured to maintain evaluation metadata in one or more non-transitory computer readable storage media. A predictive compiler module is configured to compile executable program code from a subset of multiple learned functions to form a machine learning ensemble comprising the subset of multiple learned functions and a rule set synthesized from evaluation metadata to direct different subsets of data through executable program code for different learned functions of the subset of multiple learned functions.
</abstract>

<claims>
1. An apparatus for a machine learning factory, the apparatus comprising: a receiver module configured to receive electronically transmitted training data over a data network using a network interface, the training data for forming a machine learning ensemble customized for the training data; a function generator module configured to pseudo-randomly generate executable program code for a plurality of learned functions from a plurality of different machine learning classes using parallel computing on multiple processors based on the training data, the different machine learning classes selected without regard to a suitability of the plurality of learned functions and of the different machine learning classes for the training data, a total number of the plurality of learned functions selected such that at least a subset of the plurality of learned functions are pseudo-randomly suitable for the training data; a function evaluator module configured to perform a machine learning evaluation of the plurality of learned functions using test data and to maintain evaluation metadata for the plurality of learned functions in one or more non-transitory computer readable storage media, the evaluation metadata comprising one or more of an indicator of a training data set used to generate a learned function and an indicator of one or more decisions made by a learned function during the machine learning evaluation; and a machine learning compiler module configured to compile the executable program code from a subset of multiple learned functions from the plurality of learned functions to form the machine learning ensemble, the machine learning ensemble comprising the subset of multiple learned functions selected and combined based on the evaluation metadata for the plurality of learned functions, and comprising a rule set synthesized from the evaluation metadata to direct data through the multiple learned functions such that executable program code from different learned functions of the machine learning ensemble processes different subsets of the data based on the evaluation metadata and such that executable program code from one or more of the multiple learned functions receives output from executable program code of at least one other learned function of the multiple learned functions as an input.
2. The apparatus of claim 1, further comprising a feature selector module configured to, in response to the function generator module generating the executable program code for the plurality of learned functions, determine a subset of features from the training data for use in the machine learning ensemble based on the evaluation metadata, the machine learning compiler module configured to form the machine learning ensemble using the selected subset of features.
3. The apparatus of claim 2, wherein the feature selector module is configured to iteratively increase a size of the subset of features until a subsequent increase in the size fails to satisfy a feature effectiveness threshold.
4. The apparatus of claim 2, wherein one or more of the features of the training data are selected by a user as required and the feature selector module is configured to select one or more optional features to include in the subset of features with the required one or more features.
5. The apparatus of claim 1, wherein the function evaluator module is configured to perform the machine learning evaluation of the plurality of learned functions using the test data by inputting the test data into the plurality of learned functions to output the one or more decisions.
6. The apparatus of claim 5, wherein the function evaluator module is configured to maintain the evaluation metadata for each evaluated learned function in a metadata library stored on the one or more non-transitory computer readable storage media, the machine learning compiler module configured to include the rule set in the machine learning ensemble, the rule set comprising at least a portion of the evaluation metadata.
7. The apparatus of claim 6, wherein the evaluation metadata further comprises one or more of the training data, classification metadata, convergence metrics, and efficacy metrics for the plurality of learned functions.
8. The apparatus of claim 1, wherein the machine learning compiler module is configured to combine learned functions from the plurality of learned functions to form combined learned functions, the machine learning ensemble comprising at least one combined learned function.
9. The apparatus of claim 8, wherein the function generator module is configured to determine one or more additional learned functions in response to a learned function request, the machine learning compiler module configured to request one or more additional learned functions from the function generator to combine with learned functions from the plurality of learned functions.
10. The apparatus of claim 1, wherein the machine learning compiler module is configured to add one or more layers to at least a portion of the plurality of learned functions to form one or more extended learned functions, at least one of the one or more layers comprising one or more of a Bayes classifier and a Boltzmann machine, the at least one other learned function comprising an extended learned function extended with the one or more of the multiple learned functions.
11. The apparatus of claim 1, wherein the machine learning compiler module is configured to form the machine learning ensemble by organizing the subset of learned functions into the machine learning ensemble, the machine learning ensemble comprising the subset of learned functions and the rule set synthesized from the evaluation metadata for the subset of learned functions.
12. The apparatus of claim 1, further comprising an orchestration module configured to direct workload data through the machine learning ensemble based on the evaluation metadata data to produce a classification for the workload data and a confidence metric for the classification, the evaluation metadata synthesized to form the rule set for the subset of learned functions.
13. The apparatus of claim 1, further comprising an interface module configured to receive an analytics request from a client and to provide an analytics result to the client, the analytics request comprising workload data with similar features to the training data, the analytics result produced by the machine learning ensemble.
14. An apparatus for a machine learning factory, the apparatus comprising: means for generating executable program code for a plurality of learned functions from a plurality of different machine learning classes based on training data without regard to a suitability of the plurality of learned functions and of the different machine learning classes for the training data, the training data received for forming a machine learning ensemble customized for the training data; means for evaluating the plurality of learned functions using test data to generate evaluation metadata stored in one or more non-transitory computer readable storage media, the evaluation metadata indicating an effectiveness of different learned functions at making predictions based on different subsets of the test data; and means for compiling executable program code from a subset of multiple learned functions from the plurality of learned functions to form the machine learning ensemble, the machine learning ensemble comprising the subset of multiple learned functions selected and combined based on the evaluation metadata, and comprising a rule set synthesized from the evaluation metadata to direct different subsets of the workload data through executable program code from different learned functions of the multiple learned functions based on the evaluation metadata.
15. The apparatus of claim 14, further comprising means for synthesizing the evaluation metadata into a rule set for the subset of learned functions, wherein the means for compiling executable code to form the machine learning ensemble further comprises means for including the rule set in the machine learning ensemble.
16. The apparatus of claim 14, wherein the means for compiling executable program code forms the machine learning ensemble by one or more of: combining learned functions from the plurality of learned functions to form a combined learned function; and adding one or more layers to a learned function from the plurality of learned functions to form an extended learned function.
17. A computer program product comprising a non-transitory computer readable storage medium storing computer usable program code executable to perform operations for a machine learning factory, the operations comprising: determining executable program code for a plurality of learned functions from a plurality of different machine learning classes using training data without regard to a suitability of the plurality of learned functions and of the different machine learning classes for the training data, the training data comprising a plurality of features, the training data received for forming a machine learning ensemble customized for the training data; selecting a subset of the features of the training data based on evaluation metadata generated for the plurality of learned functions and stored in one or more non-transitory computer readable storage media, the evaluation metadata comprising an effectiveness metric for a learned function; and compiling executable program code from a subset of multiple learned functions from the plurality of learned functions to form the machine learning ensemble, the machine learning ensemble comprising at least two learned functions from the plurality of learned functions, the at least two learned functions using the selected subset of features, the at least two learned functions selected and combined based on the evaluation metadata, the machine learning ensemble comprising a rule set synthesized from the evaluation metadata to direct data through executable program code from the at least two learned functions so that executable program code from different learned functions process different features of the selected subset of features.
18. The computer program product of claim 17, wherein the operations further comprise evaluating the plurality of learned functions using test data to generate the evaluation metadata.
19. The computer program product of claim 18, wherein evaluating the plurality of learned functions comprises generating a machine learning ensemble for each possible combination of features of the training data and evaluating each generated machine learning ensemble using the test data.
20. The computer program product of claim 17, wherein the operations further comprise iteratively increasing a size of the subset of features until a subsequent increase in the size fails to satisfy a feature effectiveness threshold.
21. The computer program product of claim 17, wherein the operations further comprise identifying one or more of the plurality of features as noisy and excluding the noisy features from the selected subset of features.
22. The computer program product of claim 17, wherein one or more of the features of the training data are selected by a user as required for inclusion in the subset of features.
23. A machine learning ensemble comprising: executable program code for multiple learned functions synthesized from executable program code for a larger plurality of learned functions from a plurality of different machine learning classes, the multiple learned functions selected and combined based on evaluation metadata for an evaluation of the larger plurality of learned functions, wherein the larger plurality of learned functions are generated based on training data without regard to a suitability of the larger plurality of learned functions and of the different machine learning classes for the training data; a metadata rule set synthesized from the evaluation metadata for the plurality of learned functions for directing data through executable program code of different learned functions of the multiple learned functions to produce a result; and an orchestration module configured to direct the data through the executable program code of the different learned functions of the multiple learned functions based on the synthesized metadata rule set to produce the result.
24. The machine learning ensemble of claim 23, further comprising a predictive correlation module configured to correlate one or more features of the multiple learned functions with a confidence metric associated with the result.
25. The machine learning ensemble of claim 24, wherein the predictive correlation module is configured to provide a listing of the one or more features correlated with the result to a client.
</claims>
</document>
