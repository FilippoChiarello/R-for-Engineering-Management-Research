<document>

<filing_date>
2017-12-22
</filing_date>

<publication_date>
2020-12-01
</publication_date>

<priority_date>
2017-12-22
</priority_date>

<ipc_classes>
G06F16/33,G06F16/35,G06N20/00,G06N7/00,G06N99/00
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
GOEPPERT, JOERG
HERTER, KLAUS
MISELDINE, PHILIP
</inventors>

<docdb_family_id>
63637649
</docdb_family_id>

<title>
Intelligent natural language query processor
</title>

<abstract>
A system for answering a natural language query (NLQ) directed to a database system. The system includes a query receiver receives the NLQ and models the NLQ as a tuple of entities including at least a subject entity and an intention entity. The system further includes a service discovery component and a query transformation unit. The service discovery component discovers a specific database system asset for answering the NLQ by evaluating system model descriptions of database system assets against the NLQ. The query transformation unit transforms the NLQ into a native service call for the specific database system asset, and invokes the native service call for callback of the specific database system asset to answer the NLQ.
</abstract>

<claims>
1. A method for answering a natural language query (NLQ) directed to a database system, the method, executed by one or more processors, comprising: receiving at a query processor, a NLQ directed to the database system; modeling, by the query processor, the NLQ as a tuple of entities including at least a subject entity, a criteria entity, and an intention entity, wherein modeling the NLQ includes a semantic analysis of the NLQ, wherein modeling further includes a context enrichment of the NLQ comprising: enriching the NLQ with a unique query identifier and one or more context entities, wherein the one or more context entities are referred to and used to resolve associations between NLQs; and enriching the NLQ with a session identifier, wherein a session is defined by usage of an application over a time period and defined by a context of the session, wherein the session contains one or more NLQs with same subjects or referral to a same query, and wherein the session identifier is defined based on matching subjects; discovering, by the query processor, a specific database system asset for answering the NLQ by evaluating system model descriptions of database system assets against the enriched NLQ, wherein the discovering includes, in response to identifying two or more matching database system assets, providing a request for presentation to a user associated with the NLQ for a selection from the two or more matching database system assets; in response to receiving a selection of the specific database system asset from the two or more matching database system assets, transforming the NLQ into a native service call for the specific database system asset; and invoking, by the query processor, the native service call for callback of the specific database system asset to answer the NLQ.
2. The method of claim 1, wherein evaluating system model descriptions of database system assets against the NLQ includes adding information from natural language documentation associated with the database system assets to the system model descriptions of the database system assets.
3. The method of claim 1, wherein evaluating system model descriptions of database system assets against the NLQ includes using a text classification method for the evaluating the system model descriptions of database system assets against the NLQ.
4. The method of claim 3, wherein using a text classification method includes using a naïve Bayes text classification method.
5. The method of claim 3, wherein using a text classification method includes determining confidence levels of query-asset matchings obtained by text classification and identifying the specific database system asset for answering the NLQ based on the confidence levels of query-asset matchings.
6. The method of claim 1, wherein discovering a specific database system asset for answering the NLQ includes machine learning and using a machine learning result to resolve cases of ambiguous discovery.
7. A computer program product, the computer program product being tangibly embodied on a non-transitory computer-readable storage medium and comprising instructions that, when executed, by one or more processors, are configured to cause at least one computing device to answer a natural language query (NLQ) directed to a database system by: receiving at a query processor, a NLQ directed to the database system; modeling, by the query processor, the NLQ as a tuple of entities including at least a subject entity, a criteria entity, and an intention entity, wherein modeling the NLQ includes a semantic analysis of the NLQ, wherein modeling further includes a context enrichment of the NLQ comprising: enriching the NLQ with a unique query identifier and one or more context entities, wherein the one or more context entities are referred to and used to resolve associations between NLQs; and enriching the NLQ with a session identifier, wherein a session is defined by usage of an application over a time period and defined by a context of the session, wherein the session contains one or more NLQs with same subjects or referral to a same query, and wherein the session identifier is defined based on matching subjects; discovering, by the query processor, a specific database system asset for answering the NLQ by evaluating system model descriptions of database system assets against the enriched NLQ, wherein the discovering includes, in response to identifying two or more matching database system assets, providing a request for presentation to a user associated with the NLQ for a selection from the two or more matching database system assets; in response to receiving a selection of the specific database system asset from the two or more matching database system assets, transforming the NLQ into a native service call for the specific database system asset; and invoking, by the query processor, the native service call for callback of the specific database system asset to answer the NLQ.
8. The computer program product of claim 7, wherein the instructions, when executed, further cause the at least one computing device to: add information from natural language documentation associated with the database system assets to the system model descriptions of the database system assets.
9. The computer program product of claim 7, wherein the instructions, when executed, further cause the at least one computing device to: use a text classification method for the evaluating the system model descriptions of database system assets against the NLQ.
10. The computer program product of claim 9, wherein the instructions, when executed, further cause the at least one computing device to: use a naïve Bayes text classification method for the evaluating the system model descriptions of database system assets against the NLQ.
11. The computer program product of claim 9, wherein the instructions, when executed, further cause the at least one computing device to: determine confidence levels of query-asset matchings obtained by text classification; and identify the specific database system asset for answering the NLQ based on the confidence levels of query-asset matchings.
12. The computer program product of claim 7, wherein the instructions, when executed, further cause the at least one computing device to: use a machine learning result to resolve cases of ambiguous discovery.
13. A system comprising: at least one processor; and at least one memory storing instructions that are executable by the at least one processor, the system including a query processor configured to answer a natural language query (NLQ) directed to a database system, the query processor including: a query receiver configured to receive the NLQ and model the NLQ as a tuple of entities including at least a subject entity, criteria entity, and an intention entity, wherein modeling the NLQ including includes a semantic analysis of the NLQ, wherein modeling further includes a context enrichment of the NLQ comprising: enriching the NLQ with a unique query identifier and one or more context entities, wherein the one or more context entities are referred to and used to resolve associations between NLQs; and enriching the NLQ with a session identifier, wherein a session is defined by usage of an application over a time period and defined by a context of the session, wherein the session contains one or more NLQs with same subjects or referral to a same query, and wherein the session identifier is defined based on matching subjects; a service discovery component configured to discover a specific database system asset for answering the NLQ by evaluating system model descriptions of database system assets against the enriched NLQ, wherein the discovery includes, in response to identifying two or more matching database system assets, providing a request for presentation to a user associated with the NLQ for a selection from the two or more matching database system assets; and a query transformation unit configured to, in response to receiving a selection of the specific database system asset from the two or more matching database system assets, transform the NLQ into a native service call for the specific database system asset, and invoke the native service call for callback of the specific database system asset to answer the NLQ.
14. The system of claim 13, wherein the service discovery component configured to add information from natural language documentation associated with the database system assets to the system model descriptions of the database system assets.
15. The system of claim 13, wherein the service discovery component configured to use a text classification method for the evaluating the system model descriptions of database system assets against the NLQ.
16. The system of claim 15, wherein the service discovery component configured to: determine confidence levels of query-asset matchings obtained by text classification; and identify the specific database system asset for answering the NLQ based on the confidence levels of query-asset matchings.
17. The system of claim 15, wherein the service discovery component configured to: use a machine learning result to resolve cases of ambiguous discovery.
</claims>
</document>
