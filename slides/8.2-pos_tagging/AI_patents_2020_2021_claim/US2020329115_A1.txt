<document>

<filing_date>
2020-06-24
</filing_date>

<publication_date>
2020-10-15
</publication_date>

<priority_date>
2018-04-12
</priority_date>

<ipc_classes>
G06F11/20,G06F16/40,G06F16/907,G06F16/955,G06F16/957,G06F40/30,G06F9/445,G06F9/54,G06N20/00,H04L12/24,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
Pearson Management Services Limited
</assignee>

<inventors>
KHAKI, SUHAIL
WALSH, JAMES
</inventors>

<docdb_family_id>
68160334
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR AUTOMATED CAPABILITY CONSTRAINT GENERATION
</title>

<abstract>
A global architecture (GLP), as disclosed herein, is based on the thin server architectural pattern; it delivers all its services in the form of web services and there are no user interface components executed on the GLP. Each web service exposed by the GLP is stateless, which allows the GLP to be highly scalable. The GLP is further decomposed into components. Each component is a microservice, making the overall architecture fully decoupled. Each microservice has fail-over nodes and can scale up on demand. This means the GLP has no single point of failure, making the platform both highly scalable and available. The GLP architecture provides the capability to build and deploy a microservice instance for each course-recipient-user combination. Because each student interacts with their own microservice, this makes the GLP scale up to the limit of cloud resources availableâ€”i.e. near infinity.
</abstract>

<claims>
1. A system for automatic model configuration, the system comprising: a memory comprising: an asset database comprising a plurality of package-data assets; and a model building module database; at least one server comprising a model building module, the at least one server configured to: identify hardware and software capabilities for content provisioning; identify user constraints based on received user data; identify a set of package-data assets; create a subset of package-data assets via application of at least one filter to the set of package-data assets; modify the subset of package-data assets based on the identified hardware and software capabilities of the microservice-based content provisioning system; and associate the user constraints with the modified subset of package-data assets.
2. The system of claim 1, wherein the hardware and software capabilities for content provisioning are discovered by a capabilities manager of the model building module, wherein the capabilities manager manages a list of the hardware and software capabilities for content provisioning.
3. The system of claim 1, wherein the at least one server is further configured to receive user data.
4. The system of claim 1, wherein the at least one server is further configured to generate a constraint database comprising the user constraints.
5. The system of claim 4, wherein the user constraints comprise: limitations on personally identifiable information; and deliverable package-data assets.
6. The system of claim 5, wherein creating the subset of package-data assets comprises identifying the at least one filter for application to the set of package-data assets.
7. The system of claim 5, wherein the at least one server is further configured to form the model from the modified subset of package-data assets and the associated user constraints.
8. The system of claim 7, wherein the at least one server is further configured to store the model in a database of a model building module.
9. The system of claim 8, wherein the at least one server is further configured to receive the model at a product builder module.
10. The system of claim 9, wherein the at least one server is further configured to organize the package-data assets in the model into a graph-based representation of hierarchical relationships between the package-data assets.
11. A method of automatic model configuration, the method comprising: identifying hardware and software capabilities of a microservice-based content provisioning system; identifying user constraints based on received user data; identifying a set of package-data assets; creating a subset of package-data assets via application of at least one filter to the set of package-data assets; modifying the subset of package-data assets based on the identified hardware and software capabilities of the microservice-based content provisioning system; and associating the user constraints with the modified subset of package-data assets.
12. The method of claim 11, wherein the hardware and software capabilities of the microservice-based content provisioning system are discovered by a capabilities manager of a model building module, wherein the capabilities manager manages a list of the hardware and software capabilities of the microservice-based content provisioning system.
13. The method of claim 11, further comprising receiving user data.
14. The method of claim 11, further comprising generating a constraint database comprising the user constraints.
15. The method of claim 14, wherein the user constraints comprise: limitations on personally identifiable information; and deliverable package-data assets.
16. The method of claim 15, wherein creating the subset of package-data assets comprises identifying the at least one filter for application to the set of package-data assets.
17. The method of claim 15, further comprising forming the model from the modified subset of package-data assets and the associated user constraints.
18. The method of claim 17, further comprising storing the model in a database of a model building module.
19. The method of claim 18, further comprising receiving the model at a product builder module.
20. The method of claim 19, further comprising organizing the package-data assets in the model into a graph-based representation of hierarchical relationships between the package-data assets.
</claims>
</document>
