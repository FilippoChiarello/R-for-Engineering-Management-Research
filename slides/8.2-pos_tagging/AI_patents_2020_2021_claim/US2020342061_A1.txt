<document>

<filing_date>
2019-04-26
</filing_date>

<publication_date>
2020-10-29
</publication_date>

<priority_date>
2019-04-26
</priority_date>

<ipc_classes>
G06F16/36,G06N20/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
KRISHNAMURTHY, LAKSHMINARAYANAN
KAUFMANN, JOSEPH M.
</inventors>

<docdb_family_id>
72921730
</docdb_family_id>

<title>
GENERATION OF DOMAIN THESAURUS
</title>

<abstract>
Embodiments provide a computer implemented method for generating a domain-specific thesaurus on a cognitive system, comprising: receiving data of the domain-specific corpus and a plurality of terms of interest from a user; splitting the data of the domain-specific corpus into a plurality of sentences using natural language processing techniques; for each term in the plurality of terms of interest, retrieving a plurality of candidate sentences containing a corresponding term, from the plurality of sentences; for each candidate sentence, providing a list of synonyms of the corresponding term, wherein the synonyms are contextual alternatives in the corresponding candidate sentence; for each term in the plurality of terms of interest, tracking a frequency of each synonym, and forming a frequency map including all the synonyms of a corresponding term and the frequency of each synonym; and generating a domain-specific thesaurus based on a combination of all the synonyms in the frequency map.
</abstract>

<claims>
1. A computer implemented method for generating a domain-specific thesaurus on a cognitive system, wherein the cognitive system is coupled to a domain-specific corpus, and the domain-specific corpus includes a plurality of documents related to a particular domain, the method comprising: receiving data of the domain-specific corpus and a plurality of terms of interest from a user; splitting the data of the domain-specific corpus into a plurality of sentences using natural language processing techniques; for each term in the plurality of terms of interest, retrieving a plurality of candidate sentences containing a corresponding term, from the plurality of sentences; for each candidate sentence, providing a list of synonyms of the corresponding term, wherein the synonyms are contextual alternatives in the corresponding candidate sentence; for each term in the plurality of terms of interest, tracking a frequency of each synonym, and forming a frequency map including all the synonyms of a corresponding term and the frequency of each synonym; and generating a domain-specific thesaurus based on a combination of all the synonyms in the frequency map.
2. The method as recited in claim 1, further comprising: sorting the frequency map by the frequency of each synonym; removing, one or more synonyms having a frequency less than a predetermined frequency threshold, from the corresponding frequency map; and generating the domain-specific thesaurus by combining remaining synonyms in the frequency map.
3. The method as recited in claim 2, wherein the domain-specific thesaurus is a text file format.
4. The method as recited in claim 3, the step of providing a list of synonyms further comprising: training a synonym finder using at least two ensemble machine learning techniques; and obtaining the list of synonyms using the synonym finder.
5. The method as recited in claim 4, wherein further comprising: training the synonym finder by a distributional semantic ensemble trainer using at least two distributional semantic systems.
6. The method as recited in claim 5, wherein the distributional semantic systems are selected from a group comprising Word2Vec, DiSSect, GLoVE, and Glimpse.
7. The method as recited in claim 4, further comprising: training the synonym finder using crowdsourcing and dependency parsing.
8. A computer program product for generating a domain-specific thesaurus on a cognitive system, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a processor to cause the processor to: receive data of the domain-specific corpus and a plurality of terms of interest from a user; split the data of the domain-specific corpus into a plurality of sentences using natural language processing techniques; for each term in the plurality of terms of interest, retrieve a plurality of candidate sentences containing a corresponding term, from the plurality of sentences; for each candidate sentence, provide a list of synonyms of the corresponding term, wherein the synonyms are contextual alternatives in the corresponding candidate sentence; for each term in the plurality of terms of interest, track a frequency of each synonym, and forming a frequency map including all the synonyms of a corresponding term and the frequency of each synonym; and generate a domain-specific thesaurus based on a combination of all the synonyms in the frequency map.
9. The computer program product as recited in claim 8, wherein the processor is further caused to: sort the frequency map by the frequency of each synonym; remove one or more synonyms having a frequency less than a predetermined frequency threshold, from the corresponding frequency map; and generate the domain-specific thesaurus by combining remaining synonyms in the frequency map.
10. The computer program product as recited in claim 9, wherein the domain-specific thesaurus is a text file format.
11. The computer program product as recited in claim 10, wherein the processor is further caused to train a synonym finder using at least two ensemble machine learning techniques; and obtain the list of synonyms using the synonym finder.
12. The computer program product as recited in claim 11, wherein the processor is further caused to train the synonym finder by a distributional semantic ensemble trainer using at least two distributional semantic systems.
13. The computer program product as recited in claim 12, wherein the distributional semantic systems are selected from a group comprising Word2Vec, DiSSect, GLoVE, and Glimpse.
14. The computer program product as recited in claim 11, wherein the processor is further caused to train the synonym finder using crowdsourcing and dependency parsing.
15. A system for generating a domain-specific thesaurus on a cognitive system, comprising: a processor configured to: receive data of the domain-specific corpus and a plurality of terms of interest from a user; split the data of the domain-specific corpus into a plurality of sentences using natural language processing techniques; for each term in the plurality of terms of interest, retrieve a plurality of candidate sentences containing a corresponding term, from the plurality of sentences; for each candidate sentence, provide a list of synonyms of the corresponding term, wherein the synonyms are contextual alternatives in the corresponding candidate sentence; for each term in the plurality of terms of interest, track a frequency of each synonym, and forming a frequency map including all the synonyms of a corresponding term and the frequency of each synonym; and generate a domain-specific thesaurus based on a combination of all the synonyms in the frequency map.
16. The system as recited in claim 15, wherein the processor is further configured to: sort the frequency map by the frequency of each synonym; remove one or more synonyms having a frequency less than a predetermined frequency threshold, from the corresponding frequency map; and generate the domain-specific thesaurus by combining remaining synonyms in the frequency map.
17. The system as recited in claim 16, wherein the domain-specific thesaurus is a text file format.
18. The system as recited in claim 17, wherein the processor is further configured to: train a synonym finder using at least two ensemble machine learning techniques; and obtain the list of synonyms using the synonym finder.
19. The system as recited in claim 18, wherein the processor is further configured to: train the synonym finder by a distributional semantic ensemble trainer using at least two distributional semantic systems.
20. The system as recited in claim 19, wherein the distributional semantic systems are selected from a group comprising Word2Vec, DiSSect, GLoVE, and Glimpse.
</claims>
</document>
