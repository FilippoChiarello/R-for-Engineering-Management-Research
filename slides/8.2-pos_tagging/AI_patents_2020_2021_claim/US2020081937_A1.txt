<document>

<filing_date>
2019-11-14
</filing_date>

<publication_date>
2020-03-12
</publication_date>

<priority_date>
2017-12-18
</priority_date>

<ipc_classes>
G06F17/16,G06N20/00
</ipc_classes>

<assignee>
MYTHIC
</assignee>

<inventors>
FICK, DAVID
FICK, LAURA
HENRY, MICHAEL
JOHNSON, SCOTT
MORTEN, ANDREW
PARIKH, MALAV
SKRZYNIARZ, SKYLAR
WU, PEI-CI
</inventors>

<docdb_family_id>
66815954
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR MAPPING MATRIX CALCULATIONS TO A MATRIX MULTIPLY ACCELERATOR
</title>

<abstract>
Systems and methods of configuring a fixed memory array of an integrated circuit with coefficients of one or more applications includes identifying a utilization constraint type of the fixed memory array from a plurality of distinct utilization constraint types based on computing attributes of the one or more applications; identifying at least one coefficient mapping technique from a plurality of distinct coefficient mapping techniques that addresses the utilization constraint type; configuring the fixed memory array according to the at least one coefficient mapping technique, wherein configuring the array includes at least setting within the array the coefficients of the one or more applications in an arrangement prescribed by the at least one coefficient mapping technique that optimizes a computational utilization of the fixed memory array.
</abstract>

<claims>
1. A system for configuring a fixed memory array of an integrated circuit with coefficients of one or more applications, the system comprising: a fixed memory array that includes: a fixed number of input ports (M) that operate to receive M input signals; a fixed number of output ports (N) being one or more bits wide that operate to output N output values; a fixed number of memory elements (W) that store coefficients and/or weights of a given application; a multiplexor that is in operable communication with the fixed memory array that operates to select one or more input settings and/or output settings of the fixed memory array, wherein the fixed memory array is configured according to at least one coefficient mapping technique selected from a plurality of distinct coefficient mapping techniques, wherein configuring the fixed memory array includes at least setting within the fixed memory array the coefficients of the one or more applications in an arrangement prescribed by the at least one coefficient mapping technique that optimizes a computational utilization of the fixed memory array.
2. The system according to claim 1, wherein: the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon input ports; and at runtime, one or more of the first region and the second region is executed.
3. The system according to claim 1, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon output ports.
4. The system according to claim 1, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon input ports and uncommon output ports.
5. The system according to claim 1, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array have partially overlapping input regions are and have uncommon output ports; and at runtime, one of the first region and the second region is executed,
6. The system according to claim 1, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of each of the multiple distinct applications of the one or more applications to a plurality of distinct regions of the fixed memory array, wherein the plurality of distinct regions include distinct regions having overlapping input ports and overlapping output ports; at runtime, each of the plurality of distinct regions of the fixed memory array is serially executed by selecting one of the plurality of distinct regions for active execution and disabling an execution of remaining distinct regions of the plurality of distinct regions.
7. The system according to claim 1, wherein the at least one coefficient mapping technique includes: partitioning coefficients of the one or more applications to multiple distinct fixed memory arrays; an input vector is applied to each of the multiple distinct fixed memory arrays; outputs computed by each of the multiple distinct fixed memory arrays are collected; and the outputs of the multiple distinct fixed memory arrays are combined.
8. The system according to claim 1, wherein the fixed memory array is configured to produce positive outputs and produce negative logical outputs based on input signals into the fixed memory array that includes: configuring one or more matrix coefficient input locations within the fixed memory array with a positive line that passes an input signal with a positive sign and a negative line that passes an input signal with a negative sign; and setting a matrix coefficient along each of the positive line and the negative line of the one or more matrix coefficient input locations.
9. The system according to claim 1, wherein the at least one coefficient mapping technique includes: prior to receiving an input vector having more input bits than an input row of the fixed memory array, shifting coefficients of the input row to multiple input rows of the fixed memory array, at runtime, input bits of the input vector are spread over the multiple input rows of the fixed memory array; and outputs of the multiple input rows of the fixed memory array are summed that share a common coefficient value.
10. The system according to claim 1, wherein the at least one input/output handling technique includes: partitioning bits of the input vector having oversized input bits over multiple calculations of the fixed memory array in a serial manner or stepped fashion; outputs of the multiple calculations of the fixed memory array are shifted into an alignment prior to summing output values of the multiple calculations.
11. A method of configuring a fixed memory array of an integrated circuit with coefficients of one or more applications, the method comprising: identifying a utilization constraint type of the fixed memory array from a plurality of distinct utilization constraint types based on computing attributes of the one or more applications; identifying at least one coefficient mapping technique from a plurality of distinct coefficient mapping techniques based on the utilization constraint type; configuring the fixed memory array according to the at least one coefficient mapping technique, wherein configuring the fixed memory array includes at least setting within the fixed memory array the coefficients of the one or more applications in an arrangement prescribed by the at least one coefficient mapping technique that optimizes a computational utilization of the fixed memory array.
12. The method according to claim ii, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon input ports; and at runtime, executing one or more of the first region and the second region.
13. The method according to claim ii, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon output ports.
14. The method according to claim ii, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array are non-overlapping regions and each have uncommon input ports and uncommon output ports.
15. The method according to claim ii, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of a first application of the one or more applications to a first region of the fixed memory array; and map coefficients of a second application of the one or more applications to a second region of the fixed memory array, wherein the first region and the second region of the fixed memory array have partially overlapping input regions are and have uncommon output ports, wherein at runtime, executing one of the first application and the second application.
16. The method according to claim ii, wherein the at least one coefficient mapping technique includes partitioning the fixed memory array to: map coefficients of each of the multiple distinct applications of the one or more applications to a plurality of distinct regions of the fixed memory array, wherein the plurality of distinct regions include distinct regions having overlapping input ports and overlapping output ports; the method further comprises: serially executing each of the plurality of distinct regions of the fixed memory array by selecting one of the plurality of distinct regions for active execution and disabling an execution of remaining distinct regions of the plurality of distinct regions.
17. The method according to claim ii, wherein the at least one coefficient mapping technique includes: partitioning coefficients of the one or more applications to multiple distinct fixed memory arrays; the method further comprises: applying an input vector to each of the multiple distinct fixed memory arrays; collecting outputs computed by each of the multiple distinct fixed memory arrays; and combining the outputs of the multiple distinct fixed memory arrays.
18. The method according to claim 11, further comprising: configuring the fixed memory array to produce positive outputs and produce negative logical outputs based on input signals into the fixed memory array includes: configuring one or more matrix coefficient input locations within the fixed memory array with a positive line that passes an input signal with a positive sign and a negative line that passes an input signal with a negative sign; and setting a matrix coefficient along each of the positive line and the negative line of the one or more matrix coefficient input locations.
19. The method according to claim 11, wherein the at least one coefficient mapping technique includes: prior to receiving bits of an input vector having more input bits than an input row of the fixed memory array, shifting coefficients of the input row to multiple input rows of the fixed memory array, the method further comprising: at runtime, spreading the input bits of the input vector over the multiple input rows of the fixed memory array; and summing outputs of the multiple input rows of the fixed memory array that share a common coefficient value.
20. The method according to claim ii, wherein the at least one input/output handling technique includes: partitioning bits of the input vector having oversized input bits over multiple calculations of the fixed memory array in a serial manner or stepped fashion; the method further comprising: shifting outputs of the multiple calculations of the fixed memory array into an alignment prior to summing output values of the multiple calculations.
</claims>
</document>
