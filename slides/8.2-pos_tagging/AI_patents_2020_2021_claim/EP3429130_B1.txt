<document>

<filing_date>
2018-07-05
</filing_date>

<publication_date>
2020-02-12
</publication_date>

<priority_date>
2017-07-13
</priority_date>

<ipc_classes>
G06F21/56,G06N99/00,H04L12/24,H04L29/06
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
ANDERSON, BLAKE HARRELL
MCGREW, DAVID
SUBHARTHI, PAUL
</inventors>

<docdb_family_id>
62916436
</docdb_family_id>

<title>
OS START EVENT DETECTION, OS FINGERPRINTING, AND DEVICE TRACKING USING ENHANCED DATA FEATURES
</title>

<abstract>
In embodiments, a device in a network tracks changes in a source port or address identifier indicated by network traffic associated with a particular host in the network. The device detects an operating system start event based on the track changes in the source port or address identifier indicated in the traffic data associated with the particular host. The device provides data regarding the detected operating system start event as input to a machine learning-based malware detector. The device causes performance of a mitigation action in the network when the malware detector determines that the particular host is infected with malware.
</abstract>

<claims>
1. A method comprising: tracking (710), by a device in a network, changes in a source port or an Internet Protocol identifier, IP ID, indicated by network traffic associated with a particular host in the network; detecting (715), by the device, an operating system start event based on the tracked changes in the source port or IP ID indicated in the traffic data associated with the particular host; providing (720), by the device, data regarding the detected operating system start event as input to a machine learning-based malware detector; and causing (725), by the device, performance of a mitigation action in the network when the malware detector determines that the particular host is infected with malware.
2. The method according to claim 1, wherein the mitigation action comprises at least one of: blocking the network traffic associated with the particular host, generating an alert regarding the particular host, or capturing copies of packets of the network traffic associated with the particular host.
3. The method according to claim 1 or claim 2, wherein the machine learning-based malware detector comprises a malware classifier.
4. The method according to any preceding claim, wherein detecting the operating system start event based on the tracked changes in the source port or IP ID indicated in the traffic data associated with the particular host comprises:
detecting, by the device, a non-sequential change in the source port or IP ID indicated in the traffic data associated with the particular host.
5. The method according to any preceding claim, further comprising: detecting, by the device, an application associated with the particular host in the network based on a determination that the source port indicated by the traffic associated with the host is outside of an expected range for a given operating system; and providing, by the device, data regarding the detected application as input to the machine learning-based malware detector.
6. The method according to any preceding claim, further comprising: detecting, by the device, an operating system of the particular host in the network based on the source port indicated by the traffic associated with the host; and providing, by the device, data regarding the detected operating system as input to the machine learning-based malware detector.
7. The method according to claim 6, wherein detecting the operating system of the particular host in the network based on the source port indicated by the traffic associated with the host further comprises determining, by the device, a source port offset based on a difference in the source port used by the host for different traffic sessions with the same destination address and destination port, and using, by the device, the determined source port offset to determine the operating system of the particular host.
8. The method according to any preceding claim, further comprising:
detecting, by the device, a movement of the host by associating a first sequence of IP IDs indicated by the network traffic associated with the host with a second sequence of IP IDs indicated by the network traffic associated with the host.
9. The method according to any preceding claim, further comprising:
identifying, by the device, a user agent string or ClientHello field entry from the traffic associated with the network traffic, and providing, by the device, data regarding the identified user agent or ClientHello field entry as input to the machine learning-based malware detector.
10. An apparatus (200), comprising: one or more network interfaces (210) to communicate with a network; a processor (220) coupled to the network interfaces (210) and configured to execute one or more processes; and a memory (240) configured to store a process executable by the processor (220), the process (248) when executed configured to: track changes in a source port or an Internet Protocol identifier, IP ID, indicated by network traffic associated with a particular host in the network; detect an operating system start event based on the tracked changes in the source port or IP ID indicated in the traffic data associated with the particular host; provide data regarding the detected operating system start event as input to a machine learning-based malware detector; and cause performance of a mitigation action in the network when the malware detector determines that the particular host is infected with malware.
11. The apparatus according to claim 10, wherein:
the machine learning-based malware detector comprises a malware classifier.
12. The apparatus according to claim 10 or claim 11, wherein detecting the operating system start event based on the tracked changes in the source port or IP ID indicated in the traffic data associated with the particular host comprises:
detecting a non-sequential change in the source port or IP ID indicated in the traffic data associated with the particular host.
13. The apparatus according to any of claims 10 to 12, wherein the process when executed is further configured to detect an application associated with the particular host in the network based on a determination that the source port indicated by the traffic associated with the host is outside of an expected range for a given operating system, and provide data regarding the detected application as input to the machine learning-based malware detector.
14. The apparatus according to any of claims 10 to 13, wherein the process when executed is further configured to detect an operating system of the particular host in the network based on the source port indicated by the traffic associated with the host; and provide data regarding the detected operating system as input to the machine learning-based malware detector.
15. The apparatus according to claim 14, wherein the apparatus further detects the operating system of the particular host in the network based on the source port indicated by the traffic associated with the host further by determining a source port offset based on a difference in the source port used by the host for different traffic sessions with the same destination address and destination port, and using the determined source port offset to determine the operating system of the particular host.
16. The apparatus according to any of claims 10 to 15, wherein the process when executed is further configured to:
detect a movement of the host by associating a first sequence of IP IDs indicated by the network traffic associated with the host with a second sequence of IP IDs indicated by the network traffic associated with the host.
17. The apparatus according to any of claims 10 to 16, wherein the process when executed is further configured: to identify a user agent string or ClientHello field entry from the traffic associated with the network traffic; and provide data regarding the identified user agent or ClientHello field entry as input to the machine learning-based malware detector.
18. A tangible, non-transitory, computer-readable medium storing program instructions that, when executed by a device, cause the device to perform all steps of the method of any one of claims 1 to 9.
</claims>
</document>
