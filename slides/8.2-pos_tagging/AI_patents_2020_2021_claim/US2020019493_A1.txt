<document>

<filing_date>
2018-10-25
</filing_date>

<publication_date>
2020-01-16
</publication_date>

<priority_date>
2018-06-27
</priority_date>

<ipc_classes>
G06F11/36,G06F8/20,G06F8/30,G06F8/61,G06F8/65,G06F9/44
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
ARJUN, NAIR
DERAWAL, JYOTI
DHIRAJ, SHETTY
MOHANRAM, JAYANTHI
PERBELLINI, PETER
RAMAKRISHNA, CHITKALA
RENUGOPAL, SATISH
</inventors>

<docdb_family_id>
69138334
</docdb_family_id>

<title>
Automating testing and deployment of software code changes
</title>

<abstract>
A device creates tasks to implement a software code change in a software code and to generate new software code, and performs, via a development environment, a unit test on the new software code to generate a unit test result. The device performs, via the development environment, a functional test on the new software code to generate a functional test result, and updates, based on the unit test result and the functional test result, the new software code to generate updated new software code. The device performs, via a quality assurance environment, a regression test on the updated new software code to generate a regression test result, and updates, based on the regression test result, the updated new software code to generate final software code. The device automatically deploys the final software code in a production environment, and performs actions based on deploying the final software code.
</abstract>

<claims>
1. A method, comprising: receiving, by a device, information indicating a request for a software code change associated with software code; creating, by the device, one or more tasks to implement the software code change in the software code and to generate new software code; selecting, by the device, a unit test from a plurality of unit tests, the unit test to be performed on the new software code; performing, by the device and via a development environment, the unit test on the new software code to generate a unit test result; selecting, by the device, a functional test from a plurality of functional tests, the functional test to be performed on the new software code; performing, by the device and via the development environment, the functional test on the new software code to generate a functional test result; updating, by the device and based on the unit test result and the functional test result, the new software code to generate updated new software code; automatically deploying, by the device, the updated new software code in a quality assurance environment; selecting, by the device, a regression test from a plurality of regression tests, the regression test to be performed on the updated new software code; performing, by the device and via the quality assurance environment, the regression test on the updated new software code to generate a regression test result; updating, by the device and based on the regression test result, the updated new software code to generate final software code; automatically deploying, by the device, the final software code in a production environment for execution; and performing, by the device, one or more actions based on deploying the final software code in the production environment.
2. The method of claim 1, further comprising: performing, via the development environment, a code review of the new software code to generate a code review result, and wherein updating the new software code to generate the updated new software code includes: updating the new software code to generate the updated new software code based on the code review result.
3. The method of claim 1, further comprising: performing, via the quality assurance environment, the functional test on the updated new software code to generate another functional test result, and wherein updating the updated new software code to generate the final software code includes: updating the updated new software code to generate the final software code based on the other functional test result.
4. The method of claim 1, wherein performing the one or more actions based on deploying the final software code in the production environment comprises one or more of: causing the final software code to be installed on one or more particular devices; causing the final software code to be executed by the one or more particular devices; providing information associated with execution of the final software code in the production environment; providing information associated with deployment of the final software code in the production environment; causing the final software code to be tested in the production environment to generate production results; or updating the final software code based on the production results.
5. The method of claim 1, further comprising: automatically approving the final software code before deploying the final software code in the production environment.
6. The method of claim 1, wherein the regression test is to determine whether the updated new software code affects other software code in the production environment.
7. The method of claim 1, further comprising: automatically generating one or more notifications associated with one or more of: the unit test result, the functional test result, or the regression test result.
8. A device, comprising: one or more memories; and one or more processors, communicatively coupled to the one or more memories, to: receive information indicating a request for a software code change associated with software code; create one or more tasks to implement the software code change in the software code and to generate new software code; automatically deploy the new software code in a development environment for testing; perform, via the development environment, a unit test on the new software code to generate a unit test result; perform, via the development environment, a functional test on the new software code to generate a functional test result; update, based on the unit test result and the functional test result, the new software code to generate updated new software code; automatically deploy the updated new software code in a quality assurance environment for further testing; perform, via the quality assurance environment, a regression test on the updated new software code to generate a regression test result; update, based on the regression test result, the updated new software code to generate final software code; automatically deploy the final software code in a production environment for execution; and perform one or more actions based on deploying the final software code in the production environment.
9. The device of claim 8, wherein the one or more processors are further to: perform a code review of the new software code to generate a code review result, and wherein the one or more processors, when updating the new software code to generate the updated new software code, are to: update the new software code to generate the updated new software code based on the code review result.
10. The device of claim 8, wherein the unit test includes one or more of: a workflow test, an application lifecycle management test, or a test management tool test.
11. The device of claim 8, wherein the one or more processors, when performing the one or more actions based on deploying the final software code in the production environment, are to one or more of: cause the final software code to be installed on one or more particular devices; cause the final software code to be executed by the one or more particular devices; provide information associated with execution of the final software code in the production environment; provide information associated with deployment of the final software code in the production environment; cause the final software code to be tested in the production environment to generate production results; or update the final software code based on the production results.
12. The device of claim 8, wherein the final software code includes one or more of: an enterprise resource planning application, a web application, or a mobile application.
13. The device of claim 8, wherein the regression test is to determine whether the updated new software code affects other software code in the production environment.
14. The device of claim 8, wherein the one or more processors are further to: automatically generate one or more notifications associated with one or more of: automatically deploying the new software code in the development environment for testing, automatically deploying the updated new software code in the quality assurance environment for further testing, or automatically deploying the final software code in the production environment for execution.
15. A non-transitory computer-readable medium storing instructions, the instructions comprising: one or more instructions that, when executed by one or more processors of a device, cause the one or more processors to: create one or more tasks to implement a software code change in software code and to generate new software code; automatically deploy the new software code in a development environment for testing; perform, via the development environment, unit tests on the new software code to generate unit test results; perform, via the development environment, functional tests on the new software code to generate functional test results; update, based on the unit test results and the functional test results, the new software code to generate updated new software code; automatically deploy the updated new software code in a quality assurance environment for further testing; perform, via the quality assurance environment, regression tests on the updated new software code to generate regression test results; perform, via the quality assurance environment, the functional tests on the updated new software code to generate additional functional test results; update, based on the regression test results and the additional functional test results, the updated new software code to generate final software code; automatically deploy the final software code in a production environment for execution; and perform one or more actions based on deploying the final software code in the production environment.
16. The non-transitory computer-readable medium of claim 15, wherein the instructions further comprise: one or more instructions that, when executed by the one or more processors, cause the one or more processors to: perform, via the development environment, a code review of the new software code to generate code review results; and update the new software code to generate the updated new software code based on the code review results.
17. The non-transitory computer-readable medium of claim 15, wherein the one or more instructions, that cause the one or more processors to perform the one or more actions, cause the one or more processors to one or more of: cause the final software code to be installed on one or more particular devices; cause the final software code to be executed by the one or more particular devices; provide information associated with execution of the final software code in the production environment; provide information associated with deployment of the final software code in the production environment; cause the final software code to be tested in the production environment to generate production results; or update the final software code based on the production results.
18. The non-transitory computer-readable medium of claim 15, wherein the final software code includes one or more of: an enterprise resource planning application, a web application, or a mobile application.
19. The non-transitory computer-readable medium of claim 15, wherein the regression tests are to determine whether the updated new software code affects other software code in the production environment.
20. The non-transitory computer-readable medium of claim 15, wherein the instructions further comprise: one or more instructions that, when executed by the one or more processors, cause the one or more processors to: automatically generate one or more notifications associated with one or more of: the unit test results, the functional test results, the additional functional test results, or the regression test results.
</claims>
</document>
