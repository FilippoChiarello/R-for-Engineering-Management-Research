<document>

<filing_date>
2016-12-31
</filing_date>

<publication_date>
2020-02-18
</publication_date>

<priority_date>
2016-12-31
</priority_date>

<ipc_classes>
G06F12/0862,G06F12/0875,G06F9/30,G06F9/38,G06N3/00,G06N3/04,G06N3/063
</ipc_classes>

<assignee>
VIA ALLIANCE SEMICONDUCTOR COMPANY
</assignee>

<inventors>
HENRY, G. GLENN
HOUCK, KIM C.
PALANGPOUR, PARVIZ
</inventors>

<docdb_family_id>
62711856
</docdb_family_id>

<title>
Neural network unit with segmentable array width rotator
</title>

<abstract>
First/second memories hold rows of N weight/data words. Each of N processing units (PU) of index J have a register, an accumulator having an output, an arithmetic unit that performs an operation thereon to accumulate a result, the first input receives the output of the accumulator, the second input receives a respective first memory weight word, the third input receives a respective data word output by the register, and multiplexing logic receives a respective second memory data word and a data word output by the register of PU J−1 and outputs a selected data word to the register. PU J−1 for PU 0 is PU N−1. The multiplexing logic of PU 0 also receives the data word output by the register of PU (N/2)−1. The multiplexing logic of PU N/2 also receives the data word output by the register of PU N−1.
</abstract>

<claims>
1. An apparatus, comprising: a first memory that holds rows of N weight words, wherein N is at least 512; a second memory that holds rows of N data words; an array of N processing units (PUs) indexed as 0 through N−1, each of the PUs of index J having: a register; an accumulator having an output; an arithmetic unit having first, second and third inputs and that performs an operation thereon to generate a result to store in the accumulator, the first input receives the output of the accumulator, the second input receives a respective weight word output by the first memory, the third input receives a respective data word output by the register; and multiplexing logic that receives a respective data word output by the second memory and that receives a data word output by the register of PU J−1 and that outputs a selected data word to the register, wherein PU J−1 for PU 0 is PU N−1; wherein the multiplexing logic of PU 0 also receives the data word output by the register of PU (N/2)−1; and wherein the multiplexing logic of PU N/2 also receives the data word output by the register of PU N−1.
2. The apparatus of claim 1, wherein in a first mode, the multiplexing logic of PU 0 selects the data word output by the register of PU (N/2)−1, the multiplexing logic of PU N/2 selects the data word output by the register of PU N−1, and the multiplexing logic of the remaining PUs selects the data word output by the register of PU J−1.
3. The apparatus of claim 2, wherein in the first mode, the multiplexing logic alternatively selects the respective data word output by the second memory for provision to the register.
4. The apparatus of claim 2, wherein in a second mode, the multiplexing logic of the N PUs selects the data word output by the register of PU J−1.
5. The apparatus of claim 4, wherein in the second mode, the multiplexing logic alternatively selects the respective data word output by the second memory for provision to the register.
6. The apparatus of claim 4, wherein in the first mode, the multiplexing logic and register of the PUs 0 through (N/2)−1 collectively operate as a first N/2−word rotater, and the multiplexing logic and register of the PUs N/2 through N−1 collectively operate as a second N/2 word rotater; and wherein in the second mode, the multiplexing logic and register of the PUs 0 through N−1 collectively operate as an N-word rotater.
7. The apparatus of claim 2, further comprising: wherein the multiplexing logic of PU 0 also receives the data word output by the register of PU (N/4)−1; wherein the multiplexing logic of PU N/4 also receives the data word output by the register of PU (N/2)−1; wherein the multiplexing logic of PU N/2 also receives the data word output by the register of PU (3N/4)−1; wherein the multiplexing logic of PU 3N/4 also receives the data word output by the register of PU N−1; and wherein in a second mode, the multiplexing logic of PU 0 selects the data word output by the register of PU (N/4)−1, the multiplexing logic of PU N/4 selects the data word output by the register of PU (N/2)−1, the multiplexing logic of PUN/2 selects the data word output by the register of PU (3N/4)−1, the multiplexing logic of PU 3N/4 selects the data word output by the register of PU N−1, and the multiplexing logic of the remaining PUs selects the data word output by the register of PU J−1.
8. The apparatus of claim 7, wherein in the second mode, the multiplexing logic and register of the PUs 0 through (N/4)−1 collectively operate as a first N/4 -word rotater, the multiplexing logic and register of the PUs N/4 through (N/2)−1 collectively operate as a second N/4-word rotater, the multiplexing logic and register of the PUs N/2 through (3N/4)−1 collectively operate as a third N/4-word rotater, and the multiplexing logic and register of the PUs 3N/4 through N−1 collectively operate as a fourth N/4 word rotater.
9. The apparatus of claim 1, wherein the first memory holds W rows of the N weight words indexed as 0 through N−1; wherein the first memory receives an address that has log2W bits and an extra bit; each of the PUs of index J further having: a second register, wherein the second input of the arithmetic unit receives a weight word output by the second register; and second multiplexing logic that receives weight word J output by the first memory, and in the case of the PUs 0 through (N/2)−1 also receives weight word J+(N/2) output by the first memory, and that outputs a selected weight word to the second register; and wherein in a first mode: when the address extra bit is a first value, the second multiplexing logic of the PUs 0 through (N/2)−1 selects weight word J output by the first memory to output to the second register of PU J; and when the address extra bit is a second value, the second multiplexing logic of the PUs 0 through (N/2)−1 selects weight word J+(N/2) output by the first memory to output to the second register of PU J.
10. The apparatus of claim 9, for each of the PUs of index J: the second multiplexing logic, in the case of the PUs N/2 through N−1 also receives weight word J−(N/2) output by the first memory, and outputs a selected weight word to the second register; and wherein in a second mode: when the address extra bit is a first value, the second multiplexing logic of the PUs 0 through (N/2)−1 selects weight word J output by the first memory to output to the second register of PU J, and the second multiplexing logic of the PUs N/2 through N−1 selects weight word J−(N/2) output by the first memory to output to the second register of PU J; and when the address extra bit is a second value, the second multiplexing logic of the PUs 0 through (N/2)−1 selects weight word J+(N/2) output by the first memory to output to the second register of PU J, and the second multiplexing logic of the PUs N/2 through N−1 selects weight word J output by the first memory to output to the second register of PU J.
11. The apparatus of claim 9, wherein in a second mode, the second multiplexing logic of the PUs 0 through N−1 selects weight word J output by the first memory to output to the second register of PU J.
12. A method for operating an apparatus having a first memory that holds rows of N weight words, wherein N is at least 512, a second memory that holds rows of N data words, and an array of N processing units (PUs) indexed as 0 through N−1, each of the PUs of index J having a register, an accumulator having an output, an arithmetic unit having first, second and third inputs and that performs an operation thereon to generate a result to store in the accumulator, the first input receives the output of the accumulator, the second input receives a respective weight word output by the first memory, the third input receives a respective data word output by the register, and multiplexing logic that receives a respective data word output by the second memory and that receives a data word output by the register of PU J−1 and that outputs a selected data word to the register, wherein PU J−1 for PU 0 is PU N−1, wherein the multiplexing logic of PU 0 also receives the data word output by the register of PU (N/2)−1, and wherein the multiplexing logic of PU N/2 also receives the data word output by the register of PU N−1, the method comprising: in a first mode: selecting, by the multiplexing logic of PU 0, the data word output by the register of PU (N/2)−1; selecting, by the multiplexing logic of PU N/2, the data word output by the register of PUN−1; and selecting, by the multiplexing logic of the remaining PUs, the data word output by the register of PU J−1.
13. The method of claim 12, further comprising: in the first mode: alternatively selecting, by the multiplexing logic, the respective data word output by the second memory for provision to the register.
14. The method of claim 12, further comprising: in a second mode: selecting, by the multiplexing logic of the N PUs, the data word output by the register of PU J−1.
15. The method of claim 14, further comprising: in the second mode: alternatively selecting, by the multiplexing logic, the respective data word output by the second memory for provision to the register.
16. The method of claim 14, further comprising: in the first mode: collectively operating, by the multiplexing logic and register of the PUs 0 through (N/2)−1, as a first N/2-word rotater; and collectively operating, by the multiplexing logic and register of the PUs N/2 through N−1, as a second N/2 word rotater; and in the second mode: collectively operating, by the multiplexing logic and register of the PUs 0 through N−1, as an N-word rotater.
17. The method of claim 12, wherein the multiplexing logic of PU 0 also receives the data word output by the register of PU (N/4)−1, wherein the multiplexing logic of PU N/4 also receives the data word output by the register of PU (N/2)−1, wherein the multiplexing logic of PU N/2 also receives the data word output by the register of PU (3N/4)−1, and wherein the multiplexing logic of PU 3N/4 also receives the data word output by the register of PU N−1, the method further comprising: in a second mode: selecting, by the multiplexing logic of PU 0, the data word output by the register of PU (N/4)−1; selecting, by the multiplexing logic of PU N/4, the data word output by the register of PU (N/2)−1; selecting, by the multiplexing logic of PU N/2, the data word output by the register of PU (3N/4)−1; selecting, by the multiplexing logic of PU 3N/4, the data word output by the register of PU N−1; and selecting, by the multiplexing logic of the remaining PUs, the data word output by the register of PU J−1.
18. The method of claim 17, further comprising: in the second mode: collectively operating, by the multiplexing logic and register of the PUs 0 through (N/4)−1, as a first N/4-word rotater; collectively operating, by the multiplexing logic and register of the PUs N/4 through (N/2)−1, as a second N/4-word rotater; collectively operating, by the multiplexing logic and register of the PUs N/2 through (3N/4)−1, as a third N/4-word rotater; and collectively operating, by the multiplexing logic and register of the PUs 3N/4 through N−1, as a fourth N/4 word rotater.
19. The method of claim 12, wherein the first memory holds W rows of the N weight words indexed as 0 through N−1, wherein the first memory receives an address that has log2W bits and an extra bit, each of the PUs of index J further having: a second register, wherein the second input of the arithmetic unit receives a weight word output by the second register, and second multiplexing logic that receives weight word J output by the first memory, and in the case of the PUs 0 through (N/2)−1 also receives weight word J+(N/2) output by the first memory, and that outputs a selected weight word to the second register, the method further comprising: in the first mode: when the address extra bit is a first value: selecting, by the second multiplexing logic of the PUs 0 through (N/2)−1, weight word J output by the first memory to output to the second register of PU J; and when the address extra bit is a second value: selecting, by the second multiplexing logic of the PUs 0 through (N/2)−1, weight word J+(N/2) output by the first memory to output to the second register of PU J.
20. The method of claim 19, wherein for each of the PUs of index J: the second multiplexing logic, in the case of the PUs N/2 through N−1 also receives weight word J−(N/2) output by the first memory, and outputs a selected weight word to the second register, the method further comprising: in a second mode: when the address extra bit is the first value: selecting, by the second multiplexing logic of the PUs 0 through (N/2)−1, weight word J output by the first memory to output to the second register of PU J; and selecting, by the second multiplexing logic of the PUs N/2 through N−1, weight word J+(N/2) output by the first memory to output to the second register of PU J; and when the address extra bit is the second value: selecting, by the second multiplexing logic of the PUs 0 through (N/2)−1, weight word J+(N/2) output by the first memory to output to the second register of PU J; and selecting, by the second multiplexing logic of the PUs N/2 through N−1, weight word J output by the first memory to output to the second register of PU J.
21. The method of claim 19, further comprising: in a second mode: selecting, by the second multiplexing logic of the PUs 0 through N−1, weight word J output by the first memory to output to the second register of PU J.
22. A computer program product encoded in at least one non-transitory computer usable medium for use with a computing device, the computer program product comprising: computer usable program code embodied in said medium, for specifying an apparatus, the computer usable program code comprising: first program code for specifying a first memory that holds rows of N weight words, wherein N is at least 512; and second program code for specifying a second memory that holds rows of N data words; and third program code for specifying an array of N processing units (PUs) indexed as 0 through N−1, each of the PUs of index J having: a register; an accumulator having an output; an arithmetic unit having first, second and third inputs and that performs an operation thereon to generate a result to store in the accumulator, the first input receives the output of the accumulator, the second input receives a respective weight word output by the first memory, the third input receives a respective data word output by the register; and multiplexing logic that receives a respective data word output by the second memory and that receives a data word output by the register of PU J−1 and that outputs a selected data word to the register, wherein PU J−1 for PU 0 is PUN−1; wherein the multiplexing logic of PU 0 also receives the data word output by the register of PU (N/2)−1; and wherein the multiplexing logic of PU N/2 also receives the data word output by the register of PU N−1.
</claims>
</document>
