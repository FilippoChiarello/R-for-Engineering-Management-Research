<document>

<filing_date>
2019-02-01
</filing_date>

<publication_date>
2020-01-22
</publication_date>

<priority_date>
2018-07-17
</priority_date>

<ipc_classes>
H04L29/08,H04W4/00
</ipc_classes>

<assignee>
FACEBOOK
</assignee>

<inventors>
GONGUET, VINCENT
CORIGLIANO, LAURENT
DE JONGH, MARTINUS ARNOLD
LI, YING
DONOVAN, JAMES
</inventors>

<docdb_family_id>
65363055
</docdb_family_id>

<title>
DETECTING NETWORK CONGESTIONS IN A COMMUNICATION NETWORK
</title>

<abstract>
In one embodiment, the system identifies (610) geographic areas covered by a communication network. The system determines (640), for each identified geographic area, a network performance metric for the identified geographic area based on a difference between: (1) a first average network speed (620) of the communication network in the identified geographic area during prior time periods in which the communication network is busy, and (2) a second average network speed (630) of the communication network in the identified geographic area during second prior time periods in which the communication network is not busy. The system compares (660) the respective performance metrics of the geographic areas to a threshold network performance metric, which is determined (650) by a congestion-analysis machine learning, ML, model. The system identifies (670) traffic congestions in one or more of the identified geographic areas having a determined network performance metric below the threshold network performance metric.
</abstract>

<claims>
1. A computer implemented method for detecting network congestions in a communication network enabling communications between computing devices connected to the network, comprising: collecting, from one or more computing devices of a computing system, network performance data at the level of an application executed on the one or more computing devices; identifying, by one or more servers of the computing system, one or more geographic areas covered by the communication network; determining, by one or more servers of the computing system, for each identified geographic area, a network performance metric for the identified geographic area based on the collected network performance data and at least on a difference between: (1) a first average network speed of the communication network in the identified geographic area, during one or more first prior time periods in which the traffic volume or demand volume in the communication network is equal to or above a first threshold, and (2) a second average network speed of the communication network in the identified geographic area during one or more second prior time periods in which the traffic volume or demand volume in the communication network is equal to or below a second threshold, the second threshold lower than the first threshold; comparing, by one or more servers of the computing system, the respective one or more determined performance metrics of the one or more geographic areas to a threshold network performance metric, wherein the threshold network performance metric is determined by a congestion-analysis machine learning (ML) model; and identifying, by one or more servers of the computing system, one or more network traffic congestions in one or more of the identified geographic areas having a determined network performance metric below the threshold network performance metric.
2. The method of Claim 1, further comprising: sending, by one or more servers of the computing system, one or more alerts to an operator upon identifying the one or more network traffic congestions in the one or more areas; and/or sending, by one or more servers of the computing system, one or more network change requests to the one or more computing devices.
3. The method of Claim 1 or 2, wherein the network performance metric is based on a ratio of the different between the first and second average network speeds to the second average network speed; and/or
wherein the communication network has a network traffic volume being above a first or busy-hour threshold traffic volume during the one or more first prior time periods, and wherein the communication network has a second network traffic volume being below a second or non-busy-hour threshold traffic volume.
4. The method of any of Claims 1 to 3, further comprising: ranking the one or more areas based on a congestion severity indicated by the respective performance metrics of the one or more areas; and sending the one or more alerts with the one or more areas ranked based on the performance metrics.
5. The method of any of Claims 1 to 4, further comprising:
optimizing a network performance to increase a capacity of the communication network in the one or more geographic areas, wherein the network performance is optimized based on one or more performance parameters by aggregating a plurality of carriers.
6. The method of any of Claims 1 to 5, wherein the performance parameters comprise one or more of: a load balancing factor; a handover; or a throughput.
7. The method of any of Claims 1 to 6, further comprising:
determining a correlation between a network performance degradation and a network traffic status or a network traffic status change.
8. The method of any of Claims 1 to 7, further comprising: determining a correlation between a quality of experience metric and a network demand metric; and predicting a time for a future network traffic congestion in the one or more geographic areas based on the correlation of the quality of experience metric and the network demand metric; optionally, wherein the quality of experience metric comprises a network download speed and/or a network latency and/or other parameters, and wherein the network demand metric comprises a request number of download requests.
9. The method of any of Claims 1 to 8, further comprising: comparing a network traffic volume in the one or more geographic areas to an average network traffic volume in the one or more geographic areas; and determining a temporal domain anomalous event when the network traffic volume is higher than the average network traffic volume by a threshold multiplying factor.
10. The method of any of Claims 1 to 9, wherein the first and second average network speeds are based on network traffic data points per hour per each individual day of a plurality of days; and/or
wherein the first and second average network speeds are based on network traffic data points per hour aggregating all days of a plurality of days.
11. The method of any of Claims 1 to 10, wherein the first average network speed is a first mean network speed in the one or more first prior time periods based on a plurality of aggregated network speeds in the one or more first prior time periods, and wherein each aggregated speed in the one or more first prior time periods is a second mean network speed in the plurality of days; and/or wherein the first average network speed is a first median network speed in the one or more first prior time periods based on a plurality of aggregated network speeds in the one or more first prior time periods, and wherein each aggregated network speed in the one or more first prior time periods is a second median network speed in the plurality of days; and/or
wherein the first average network speed is a mean network speed in the one or more first time periods, and wherein the second average network speed is a mean network speed in one or more second time periods; and/or
wherein the first average network speed is a median network speed in the one or more first prior time periods, and wherein the second average network speed is a median network speed in one or more second prior time periods.
12. The method of any of Claims 1 to 11, wherein the threshold network performance metric is determined by a classification model or a tree model associated with the congestion-analysis machine leaning model trained by manually labeled data, and wherein the threshold network performance metric is adjusted by balancing a precision metric and a recall rate of the identified one or more network traffic congestions.
13. One or more computer-readable non-transitory storage media embodying software that is operable when executed to perform a method according to any of claims 1 to 12.
14. A system comprising: one or more processors; and at least one memory coupled to the processors and comprising instructions executable by the processors, the processors operable when executing the instructions to perform a method according to any of claims 1 to 12.
</claims>
</document>
