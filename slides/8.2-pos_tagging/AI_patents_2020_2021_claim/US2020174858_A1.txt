<document>

<filing_date>
2018-12-04
</filing_date>

<publication_date>
2020-06-04
</publication_date>

<priority_date>
2018-12-04
</priority_date>

<ipc_classes>
G06F3/00,G06F30/20,G06F8/10,G06F8/60,G06F9/445,G06F9/54
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
PANY, ANDRE
PATIL, CHATUR B.
WILDHAGEN, ANDREAS
ZEORT, SAMIR
</inventors>

<docdb_family_id>
70850842
</docdb_family_id>

<title>
Application framework for simulation engineering
</title>

<abstract>
Systems and methods for defining application preferences for one or more attributes associated with data communicated between one or more applications and one or more data sources. A first set of attributes may be associated with data communicated with a first application. At least the first application, in an application framework implemented over an abstract service layer and a real service layer, may be deployed. The abstract service layer may comprise a first set of services including at least one of a data ingestion service, a time series storage service and event handling service. The real service layer may comprise a second set of services including at least one of a local file system, a cloud-based file system, and a streaming data resource for communicating data with at least the first application via a streaming mechanism over one or more data channels.
</abstract>

<claims>
1. A computer-implemented method comprising: defining application preferences for one or more attributes associated with data communicated between one or more applications and one or more data sources, a first set of attributes being associated with data communicated with a first application; deploying at least the first application in an application framework implemented over an abstract service layer and a real service layer, the abstract service layer comprising a first set of services including at least one of a data ingestion service, a time series storage service and an event handling service, the real service layer comprising a second set of services including at least one of a local file system, a cloud-based file system, and a streaming data resource for communicating data with at least the first application via a streaming mechanism over one or more data channels; binding the first application to one or more data channels, the first application subscribing to data being published on the one or more data channels; binding, by the application framework, one or more services in the abstract service layer to one or more services in the real service layer according to the first set of attributes defining one or more operators for the first application and an order in which data is to be processed in the application framework; reading from a first set of data keys provided by the data ingestion service, in response to determining that the first application is bound to a non-streaming data source in the real service layer; and creating a runtime version of the first application in association with one or more runtime resources.
2. The computer-implemented method of claim 1, further comprising creating runtime resources for the one or more services, in the real service layer, that are bound to the first application.
3. The computer-implemented method of claim 2, further comprising running at least a first instance of the first application and synchronizing the first instance of the first application with the runtime version of the first application associated with the one or more runtime resources.
4. The computer-implemented method of claim 3, further comprising creating a first data ingestion service according to the first set of attributes to provide a means of communication between the first application and at least one of the one or more data channels bound to the first application during deployment of the first application.
5. (canceled)
6. The computer-implemented method of claim 1, further comprising reading from a second set of data keys provided by the data ingestion service, in response to determining that the first application is bound to a streaming data source in the real service layer.
7. The computer-implemented method of claim 6, further comprising loading one or more keys read from the first set of data keys or the second set of data keys and executing one or more application operators in a sequence according to the first set of attributes.
8. The computer-implemented method of claim 7, further comprising storing results generated by the one or more operators processing data inputted to the first application in accordance to the first set of attributes.
9. The computer-implemented method of claim 8, further comprising detecting one or more events triggered based on the processing of the data inputted to the first application.
10. The computer-implemented method of claim 6, the second set of data keys comprising data keys being read from a data buffer in the streaming mechanism.
11. A system comprising: at least one programmable processor; and a non-transitory machine-readable medium storing instructions that, when executed by the at least one programmable processor, cause the at least one programmable processor to perform operations comprising: defining application preferences for one or more attributes associated with data communicated between one or more applications and one or more data sources, a first set of attributes being associated with data communicated with a first application; deploying at least the first application in an application framework implemented over an abstract service layer and a real service layer, the abstract service layer comprising a first set of services including at least one of a data ingestion service, a time series storage service and an event handling service, the real service layer comprising a second set of services including at least one of a local file system, a cloud-based file system, and a streaming data resource for communicating data with at least the first application via a streaming mechanism over one or more data channels; binding the first application to one or more data channels, the first application subscribing to data being published on the one or more data channels; binding, by the application framework, one or more services in the abstract service layer to one or more services in the real service layer according to the first set of attributes; reading from a first set of data keys provided by the data ingestion service, in response to determining that the first application is bound to a non-streaming data source in the real service layer; and creating a runtime version of the first application in association with one or more runtime resources.
12. The system of claim 11, wherein one or more runtime resources are created for the one or more services, in the real service layer, that are bound to the first application.
13. The system of claim 12, wherein at least a first instance of the first application is executed and the first instance of the first application is synchronized with the runtime version of the first application associated with the one or more runtime resources.
14. The system of claim 13, wherein a first data ingestion service is created according to the first set of attributes to provide a means of communication between the first application and at least one of the one or more data channels bound to the first application during deployment of the first application.
15. (canceled)
16. A computer program product comprising a non-transitory machine-readable medium storing instructions that, when executed by at least one programmable processor, cause the at least one programmable processor to perform operations comprising: defining application preferences for one or more attributes associated with data communicated between one or more applications and one or more data sources, a first set of attributes being associated with data communicated with a first application; deploying at least the first application in an application framework implemented over an abstract service layer and a real service layer, the abstract service layer comprising a first set of services including at least one of a data ingestion service, a time series storage service and an event handling service, the real service layer comprising a second set of services including at least one of a local file system, a cloud-based file system, and a streaming data resource for communicating data with at least the first application via a streaming mechanism over one or more data channels; binding the first application to one or more data channels, the first application subscribing to data being published on the one or more data channels; binding, by the application framework, one or more services in the abstract service layer to one or more services in the real service layer according to the first set of attributes defining one or more operators for the first application and an order in which data is to be processed by the one or more operators in the application framework; and reading from a first set of data keys provided by the data ingestion service, in response to determining that the first application is bound to a non-streaming data source in the real service layer.
17. The computer program product of claim 16, wherein one or more runtime resources are created for the one or more services, in the real service layer, that are bound to the first application.
18. The computer program product of claim 17, wherein at least a first instance of the first application is executed and the first instance of the first application is synchronized with a runtime version of the first application associated with the one or more runtime resources.
19. The computer program product of claim 18, wherein a first data ingestion service is created according to the first set of attributes to provide a means of communication between the first application and at least one of the one or more data channels bound to the first application during deployment of the first application.
20. (canceled)
</claims>
</document>
