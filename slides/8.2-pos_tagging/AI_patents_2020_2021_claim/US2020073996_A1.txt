<document>

<filing_date>
2018-08-28
</filing_date>

<publication_date>
2020-03-05
</publication_date>

<priority_date>
2018-08-28
</priority_date>

<ipc_classes>
G06K9/62
</ipc_classes>

<assignee>
STITCHED.IO
</assignee>

<inventors>
HARRIS, IAN
TERPSTRA, FELIX
WRIGHT, MATT
</inventors>

<docdb_family_id>
69641229
</docdb_family_id>

<title>
Methods and Systems for Domain-Specific Disambiguation of Acronyms or Homonyms
</title>

<abstract>
A system for domain-specific disambiguation of terms, the system being implemented on one or more computers. The system comprises a plurality of machine-learned modules, wherein each machine-learned module comprises a selectively executable machine-learned classifier model corresponding to a respective one of a plurality of terms to be disambiguated, each term to be disambiguated being an acronym or homonym, and a fragment vectorizer module configured to: receive a body of text; identify one or more of said terms to be disambiguated within the received body of text; and generate context data for each of the identified terms. The system further comprises a feature generator configured to process the context data for each of the identified terms to obtain a feature vector for input into the respective machine-learned module for the identified term. Each of the machine-learned modules is configured to receive a respective feature vector and to generate one or more probabilities that the respective term to be disambiguated corresponds to one or more target outputs. The system further comprises a searchable document index builder configured to build a searchable document index based on the generated probabilities.
</abstract>

<claims>
1. A system for domain-specific disambiguation of terms, the system being implemented on one or more computers, comprising: a plurality of machine-learned modules, wherein each machine-learned module comprises a selectively executable machine-learned classifier model corresponding to a respective one of a plurality of terms to be disambiguated, each term to be disambiguated being an acronym or homonym; a fragment vectorizer module configured to: receive a body of text; identify one or more of said terms to be disambiguated within the received body of text; and generate context data for each of the identified terms; and a feature generator configured to process the context data for each of the identified terms to obtain a feature vector for input into the respective machine-learned module for the identified term; wherein each of the machine-learned modules is configured to receive a respective feature vector and to generate one or more probabilities that the respective term to be disambiguated corresponds to one or more target outputs, and wherein the system further comprises a searchable document index builder configured to build a searchable document index based on the generated probabilities.
2. The system of claim 1, wherein the system further comprises a text scanner configured to receive one or more text documents and to identify a term to be disambiguated within the one or more text documents, wherein the text scanner uses the fragment vectorizer module, feature generator module, and the machine learned module for said term to be disambiguated to obtain a probability prediction for each of the target outputs.
3. The system of claim 2, wherein the term to be disambiguated that is identified within the one or more text documents is added to the searchable document index if the probability prediction for a target output exceeds a predefined threshold.
4. The system of claim 3, wherein the term to be disambiguated that is identified within the one or more document is added to the searchable document index if the target output that exceeds the predefined threshold is included in a knowledge graph.
5. The system according to claim 1, wherein the context data is defined by a window before and/or after the identified term in the received body of text.
6. The system according to claim 5, wherein the window size is between 6 and 18 words or tokens.
7. The system of claim 1, wherein the feature vector includes one or more features defined by a bag of words representation.
8. The system of claim 1, wherein at least one of said machine-learned classifier models includes one of a random forest classifier, a gradient boosting model, and a GaussianNb model.
10. A computer-implemented machine-learning method, comprising: obtaining training data for each of a plurality of targets associated with a term to be disambiguated, wherein obtaining training data for each target comprises: performing one or more internet searches for information relating to one or more sources associated with the target; processing data derived from the results of the one or more internet searches using a fragment vectorizer module, wherein the fragment vectorizer module is configured to obtain context data for one or more instances in which the term to be disambiguated appears within the results of the one or more internet searches; generating a feature vector based on the context data; labelling the feature vector based on the target; and training a machine learning classifier model using the training data obtained for the plurality of targets, wherein the machine learning model is trained to generate one or more probabilities that the term to be disambiguated corresponds to each of the plurality of targets.
11. The method of claim 10, comprising obtaining training data sets for each of a plurality of terms to be disambiguated, and training a plurality of machine learning classifier models based on the respective training data sets.
12. The method of claim 10, wherein the machine learning classifier models comprises one of a random forest classifier, a gradient boosting model, and a GaussianNb model.
13. The method of claim 10, wherein said one or more targets are a subset of said one or more sources.
14. The method of claim 10, wherein the feature vector includes one or more features defined by a bag of words representation.
15. A computer-implemented method for domain-specific disambiguation of terms, comprising: receiving a body of text at a fragment vectorizer module, the fragment vectorizer module being configured to: identify a term to be disambiguated within the received body of text; and generate context data relating to the identified term; selecting one of a plurality of machine learned classifier models, wherein the selected machine learned classifier model has been trained for disambiguating the identified term; generating a feature vector for input into the selected machine-learned classifier model, wherein the feature vector is generated based on the context data; receiving the feature vector at the selected machine-learned classifier model; and generating, using the machine-learned classifier model, one or more probabilities that the identified term corresponds to one or more target outputs.
16. The method of claim 15, further comprising building a searchable document index based on the generated probabilities.
17. The method of claim 16, wherein the term to be disambiguated that is identified within the one or more text documents is added to the searchable document index if the probability prediction for a target output exceeds a predefined threshold.
18. The method of claim 17, wherein the term to be disambiguated that is identified within the one or more document is added to the searchable document index if the target output that exceeds the predefined threshold is included in a knowledge graph.
19. The method of claim 15, wherein the context data is defined by a window before and/or after the identified term in the received body of text.
20. The method of claim 15, wherein at least one of said machine-learned classifier models includes one of a random forest classifier, a gradient boosting model, and a GaussianNb model.
</claims>
</document>
