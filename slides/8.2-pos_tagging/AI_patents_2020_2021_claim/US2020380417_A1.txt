<document>

<filing_date>
2020-06-03
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-06-03
</priority_date>

<ipc_classes>
G06F16/25,G06F8/20,G06N20/00
</ipc_classes>

<assignee>
CEREBRI AI
</assignee>

<inventors>
BRIANCON, ALAIN CHARLES
BELANGER, JEAN JOSEPH
Karumuri, Divya
Penn, Travis Stanton
Coovrey, Chris Michael
Sotiris, Valisis
</inventors>

<docdb_family_id>
73549699
</docdb_family_id>

<title>
DISTRIBUTED AND REDUNDANT MACHINE QUALITY MANAGEMENT
</title>

<abstract>
Provided is a process including: writing modelling-object classes using object-oriented modelling of the modelling methods, the modelling-object classes being members of a set of class libraries; writing quality-management classes using object-oriented modelling of quality management, the quality-management classes being members of the set of class libraries; scanning modelling-object classes in the set of class libraries to determine modelling-object class definition information; scanning quality-management classes in the set of class libraries to determine quality-management class definition information; using the modelling-object class definition information and the quality-management class definition information to produce object manipulation functions that allow a quality management system to access methods and attributes of modelling-object classes to manipulate objects of the modelling-object classes; and using the modelling-object class definition information and the quality-management class definition information to produce access to the object manipulation functions.
</abstract>

<claims>
1. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors in a computing system effectuate operations to execute quality management of modelling methods for implementation of a machine learning design in an object-oriented modeling (OOM) framework, the operations comprising: writing, with the computing system, modelling-object classes using object-oriented modelling of the modelling methods, the modelling-object classes being members of a set of class libraries; writing, with the computing system, quality-management classes using object-oriented modelling of quality management, the quality-management classes being members of the set of class libraries; scanning, with the computing system, modelling-object classes in the set of class libraries to determine modelling-object class definition information; scanning, with the computing system, quality-management classes in the set of class libraries to determine quality-management class definition information; using, with the computing system, the modelling-object class definition information and the quality-management class definition information to produce object manipulation functions that allow a quality management system to access methods and attributes of modelling-object classes to manipulate objects of the modelling-object classes; and using, with the computing system, the modelling-object class definition information and the quality-management class definition information to produce access to the object manipulation functions.
2. The medium of claim 1, wherein: executing quality management comprises executing a process that integrates raw data ingestion, manipulation, transformation, composition, and storage for building artificial intelligence models.
3. The medium of claim 1, wherein: the modeled quality management comprises management of extract, transform, and load (ETL) phases of a machine learning model designed in the OOM framework.
4. The medium of claim 1, wherein: the modeled quality management comprises reporting of model performance of a machine learning model designed in the OOM framework.
5. The medium of claim 4, wherein: model performance is measured by recall, precision, or F1 score.
6. The medium of claim 1, wherein: the modeled quality management comprises data quality monitoring (DQM).
7. The medium of claim 6, wherein: DQM comprises monitoring data sources to detect a new or missing table or data element, data element counts, data element null count and unique counts, or datatype changes.
8. The medium of claim 1, wherein: the modeled quality management comprises model quality monitoring (MQM) of a machine learning model designed in the OOM framework.
9. The medium of claim 8, wherein: MQM comprises measuring a model-based metric and causing model retraining responsive to detecting more than a threshold amount of drift in the model-based metric.
10. The medium of claim 1, wherein: the modeled quality management comprises score quality monitoring (SQM) of a machine learning model designed in the OOM framework.
11. The medium of claim 10, wherein: SQM comprises performing a model hypothesis test.
12. The medium of claim 10, wherein: SQM comprises computing a lift table or a decile table.
13. The medium of claim 1, wherein: the modeled quality management comprises label quality monitoring (LQM) of a machine learning model designed in the OOM framework.
14. The medium of claim 13, wherein: LQM comprises determining which data sources among a plurality of data sources are more leverageable or impactful on model performance than other data sources among the plurality of data sources.
15. The medium of claim 1, wherein: the modeled quality management comprises bias quality monitoring (BQM) of a machine learning model designed in the OOM framework.
16. The medium of claim 15, wherein BQM comprises detecting information bias, selection bias, or confounding by the machine learning model designed in the OOM framework.
17. The medium of claim 1, wherein: the modeled quality management comprises privacy quality monitoring (PQM) of a machine learning model designed in the OOM framework.
18. The medium of claim 1, wherein: the modeled quality management comprises data quality monitoring (DQM) of a machine learning model designed in the object-oriented modeling (OOM) framework; DQM comprises monitoring data sources to detect a new or missing table or data element, data element counts, data element null count and unique counts, and datatype changes; the modeled quality management comprises model quality monitoring (MQM) of the machine learning model designed in the object-oriented modeling (OOM) framework; MQM comprises measuring a model-based metric and causing model retraining responsive to detecting more than a threshold amount of drift in the model-based metric; the model-based metric is indicative of an F1 score, accuracy, precision, mean error, media error, distance measure, or recall; the modeled quality management comprises score quality monitoring (SQM) of the machine learning model designed in the object-oriented modeling (OOM) framework; SQM comprises performing a model hypothesis test and computing a lift table and a decile table based on predicted probability of positive class membership, based on a cumulative distribution function of positive cases; the model hypothesis test comprises a Welch's t-test, Kolmogorov-Smirnov test, or a Mann-Whitney U-test; the modeled quality management comprises label quality monitoring (LQM) of the machine learning model designed in the object-oriented modeling (OOM) framework; LQM comprises determining which data sources among a plurality of data sources are more leverageable or impactful on model performance than other data sources among the plurality of data sources; the modeled quality management comprises bias quality monitoring (BQM) of the machine learning model designed in the object-oriented modeling (OOM) framework; BQM comprises detecting information bias, selection bias, and confounding by the machine learning model designed in the object-oriented modeling (OOM) framework; the modeled quality management comprises privacy quality monitoring (PQM) of the machine learning model designed in the OOM framework.
19. The medium of claim 1, wherein: the modeled quality management comprises a process to determine data source reliability.
20. The medium of claim 1, wherein: an attribute of a quality-management object in one of the quality-management classes comprise means for characterizing quality with the attribute of the quality-management object.
21. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors in a computing system effectuate operations to measure the quality of processing of data constructs in a pipeline using modelling methods for implementation of machine learning design in an object-oriented modeling (OOM) framework, the operations comprising: forming, with one or more processors, a first plurality of classes using object-oriented modelling of modelling methods; forming, with one or more processors, a second plurality of classes using object-oriented modelling of quality measurement methods; accessing, with one or more processors, a class library containing at least some of the first plurality of classes to determine first class definition information of a modeling method class among the first plurality of classes; accessing, with one or more processors, the class library or another class library containing at least some of the second plurality of classes to determine second class definition information of a quality measurement class among the second plurality of classes; and using, with one or more processors, the first and the second class definition information to produce object manipulation functions that allow a computing system to access methods and attributes of data construct classes to manipulate data construct objects.
22. The medium of claim 21, the operations further comprising: accessing the first and the second class definition information to produce object manipulation functions that allow the computing system to access methods and attributes of data construct classes to manipulate data constructs; and accessing second class definition information and third class definition information of the data construct classes to produce object manipulation functions that allow the computing system to access methods and attributes of data construct classes to manipulate said data constructs.
23. A tangible, non-transitory, machine-readable medium storing instructions that when executed by one or more processors in a computing system effectuate operations to measure the quality of processing of data constructs in a pipeline using modelling methods for implementation of machine learning design in an object-oriented modeling (OOM) framework, the operations comprising: writing, with the computing system, a first plurality of classes using object-oriented modelling of modelling methods; writing, with the computing system, a second plurality of classes using object-oriented modelling of quality measurement methods; scanning, with the computing system, a class library set containing a modelling method class among the first plurality of classes to determine first class definition information; scanning, with the computing system, a class library set containing a quality management class among the second plurality of classes to determine second class definition information; and invoking, with the computing system, the first class definition information of the quality management class and the second class definition information of the modeling method class to produce object manipulation functions that allow the computing system to access the methods and attributes of data classes to manipulate the modeling method class.
24. The medium of claim 23, wherein the object manipulation functions comprise operations of: adding an attribute to an object, deleting an attribute of an object, updating an attribute to an object, reading an attribute of an object, adding a reference to an object as an attribute, changing an order of attributes, using a setter, or using a getter.
25. The medium of claim 23, wherein the object manipulation functions comprise operations of: formatting an attribute, aggregating an attribute, calculating an attribute, semantically altering attributes, aggregating an attribute, contracting attribute, or expanding an attribute.
26. The medium of claim 23, wherein the object manipulation functions comprise operations of: adding an attribute to an object, deleting an attribute of an object, updating an attribute to an object, reading an attribute of an object, adding a reference to an object as an attribute, changing an order of attributes, using a setter, using a getter; formatting an attribute, aggregating an attribute, calculating an attribute, semantically altering attributes, aggregating an attribute, contracting attribute, and expanding an attribute.
27. The medium of claim 23, wherein object manipulation is conditional.
28. The medium of claim 23, wherein the quality measurement methods comprise: data quality, model quality, score quality, bias quality, and label quality.
29. The medium of claim 23, wherein: entities captured in data construct objects processed by the computing system include consumers; communications to consumers by an enterprise; communications to an enterprise by consumers; the events include purchases by consumers from the enterprise; the events include non-purchase interactions by consumers with the enterprise; and the entity logs are obtained from a customer relationship management system of the enterprise.
30. The medium of claim 23, wherein: the enterprise is a credit card issuer and a trained predictive machine learning models developed using the object-oriented modeling (OOM) framework is configured to predict whether a consumer will default; the enterprise is a lender and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will borrow; the enterprise is an insurance company and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will file a claim; the enterprise is an insurance company and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will sign-up for insurance; the enterprise is a vehicle seller and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will purchase a vehicle; the enterprise is a seller of goods and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer will file a warranty claim, or the enterprise is a wireless operator and the trained predictive machine learning model developed using the OOM framework is configured to predict whether a consumer upgrade their cellphone, or the enterprise is bank and the trained predictive machine learning model developed using the OOM framework is configured to predict the change in GDP.
</claims>
</document>
