<document>

<filing_date>
2020-03-13
</filing_date>

<publication_date>
2020-12-16
</publication_date>

<priority_date>
2019-06-10
</priority_date>

<ipc_classes>
G06F8/36,G06Q10/06
</ipc_classes>

<assignee>
HITACHI
</assignee>

<inventors>
IIJIMA, Koichiro
NAKAMURA, Hideki
WANG, Song
GUPTA, Chetan
</inventors>

<docdb_family_id>
69844426
</docdb_family_id>

<title>
A SYSTEM FOR BUILDING, MANAGING, DEPLOYING AND EXECUTING REUSABLE ANALYTICAL SOLUTION MODULES FOR INDUSTRY APPLICATIONS
</title>

<abstract>
Example implementations described herein are directed to a meta-data processing system that supports the creation and deployment of the Analytical Solution Modules 102 in development of industrial analytics. The example implementations described herein can involve a first system configured to be directed to a data scientist 101 for receiving flow and operator definitions to generate an analytics library 105, which is provided to a second system configured to be directed to a domain expert for applying the analytics library 105 to generate analytics modules 108 to be executed on data input to the second system.
</abstract>

<claims>
1. A method, comprising: providing meta-data comprising flow definitions, operator definitions, and executable code to a first system configured to generate an analytics library into a database, the analytics library comprising a flow configuration template, operator configuration template, analytics platform configuration template, and wrapper code for instantiations of the flow configuration template, the operator configuration template, and the analytics platform configuration template; executing a verification process on the executable code, wherein upon successful verification, facilitating access to the analytics library to the database in a second system; wherein the second system instantiates executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template.
2. The method of claim 1, wherein the verification process comprises: creating a testing environment from the operator definitions; conducting unit testing on input data and parameter settings to the executable code in the testing environment to generate results; for the results of the unit testing being validated against provided results, conduct function testing to the executable code in the testing environment; for the function testing being successful, indicating successful verification.
3. The method of claim 1, wherein the first system is configured to generate the wrapper code from conducting schema matching on schemas derived from the operator definitions and the flow definitions, the conducting schema matching comprising: generating a target schema array and source schema array from the schemas derived from the operator definitions and the flow definitions; parsing each of the schemas in the target schema array for a search scheme, the search scheme being one of an exact element match, a star match, a single match with multiple options, and multiple matching with multiple options; and conducting the schema matching between the target schema array and the source schema array according to the search scheme.
4. The method of claim 1, wherein the first system is configured to generate the flow configuration template, the operator configuration template, the analytics platform configuration template from specifying data to be used to generate models to be utilized in generation of the flow configuration template, the operator configuration template, and the analytics platform configuration template, the data specified according to a model hierarchy;
wherein the first system is configured to generate the wrapper code from assigning an execution flow based on the generated models.
5. The method of claim 1, wherein the second system instantiates executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template by:
generating the executable analytics modules indicated in the analytics platform configuration template as separate analytics services according to a dependency order of the separate analytics services, each of the separate analytics services defined from the flow configuration template and the operator configuration template.
6. The method of claim 1, further comprising: providing a graphical user interface (GUI) in the second system configured to provide ones of the instantiated executable analytics modules for execution based on input data types and execution mode; and upon receipt of a selection of one of the provided ones of the instantiated executable analytics modules, executing the selected one of the provided ones of the instantiated executable analytics modules on data provided to the second system.
7. A non-transitory computer readable medium, storing instructions for executing a process, the instructions comprising: providing meta-data comprising flow definitions, operator definitions, and executable code to a first system configured to generate an analytics library into a database, the analytics library comprising a flow configuration template, operator configuration template, analytics platform configuration template, and wrapper code for instantiations of the flow configuration template, the operator configuration template, and the analytics platform configuration template; executing a verification process on the executable code, wherein upon successful verification, facilitating access to the analytics library to the database in a second system; wherein the second system instantiates executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template.
8. The non-transitory computer readable medium of claim 7, wherein the verification process comprises: creating a testing environment from the operator definitions; conducting unit testing on input data and parameter settings to the executable code in the testing environment to generate results; for the results of the unit testing being validated against provided results, conduct function testing to the executable code in the testing environment; for the function testing being successful, indicating successful verification.
9. The non-transitory computer readable medium of claim 7, wherein the first system is configured to generate the wrapper code from conducting schema matching on schemas derived from the operator definitions and the flow definitions, the conducting schema matching comprising: generating a target schema array and source schema array from the schemas derived from the operator definitions and the flow definitions; parsing each of the schemas in the target schema array for a search scheme, the search scheme being one of an exact element match, a star match, a single match with multiple options, and multiple matching with multiple options; and conducting the schema matching between the target schema array and the source schema array according to the search scheme.
10. The non-transitory computer readable medium of claim 7, wherein the first system is configured to generate the flow configuration template, the operator configuration template, the analytics platform configuration template from specifying data to be used to generate models to be utilized in generation of the flow configuration template, the operator configuration template, and the analytics platform configuration template, the data specified according to a model hierarchy;
wherein the first system is configured to generate the wrapper code from assigning an execution flow based on the generated models.
11. The non-transitory computer readable medium of claim 7, wherein the second system instantiates executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template by:
generating the executable analytics modules indicated in the analytics platform configuration template as separate analytics services according to a dependency order of the separate analytics services, each of the separate analytics services defined from the flow configuration template and the operator configuration template.
12. The non-transitory computer readable medium of claim 7, the instructions further comprising: providing a graphical user interface (GUI) in the second system configured to provide ones of the instantiated executable analytics modules for execution based on input data types and execution mode; and upon receipt of a selection of one of the provided ones of the instantiated executable analytics modules, executing the selected one of the provided ones of the instantiated executable analytics modules on data provided to the second system.
13. A system, comprising: a first system comprising a first processor configured to process meta-data comprising flow definitions, operator definitions, and executable code to generate an analytics library into a database, the analytics library comprising a flow configuration template, operator configuration template, analytics platform configuration template, and wrapper code for instantiations of the flow configuration template, the operator configuration template, and the analytics platform configuration template; and execute a verification process on the executable code, wherein upon successful verification, the first processor is configured to facilitate access to the analytics library to the database in a second system; a second system comprising a second processor configured to instantiate executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template.
14. The system of claim 13, wherein the first processor is configured to conduct the verification process by: creating a testing environment from the operator definitions; conducting unit testing on input data and parameter settings to the executable code in the testing environment to generate results; for the results of the unit testing being validated against provided results, conduct function testing to the executable code in the testing environment; for the function testing being successful, indicating successful verification.
15. The system of claim 13, wherein the first processor is configured to generate the wrapper code from conducting schema matching on schemas derived from the operator definitions and the flow definitions, the conducting schema matching comprising: generating a target schema array and source schema array from the schemas derived from the operator definitions and the flow definitions; parsing each of the schemas in the target schema array for a search scheme, the search scheme being one of an exact element match, a star match, a single match with multiple options, and multiple matching with multiple options; and conducting the schema matching between the target schema array and the source schema array according to the search scheme.
16. The system of claim 13, wherein the first processor is configured to generate the flow configuration template, the operator configuration template, the analytics platform configuration template from specifying data to be used to generate models to be utilized in generation of the flow configuration template, the operator configuration template, and the analytics platform configuration template, the data specified according to a model hierarchy;
wherein the first processor is configured to generate the wrapper code from assigning an execution flow based on the generated models.
17. The system of claim 13, wherein the second processor instantiates executable analytics modules from executing the wrapper code on the flow configuration template, the operator configuration template, and the analytics platform configuration template by: generating the executable analytics modules indicated in the analytics platform configuration template as separate analytics services according to a dependency order of the separate analytics services, each of the separate analytics services defined from the flow configuration template and the operator configuration template.
18. The system of claim 13, wherein the second processor is configured to: provide a graphical user interface (GUI) configured to provide ones of the instantiated executable analytics modules for execution based on input data types and execution mode; and upon receipt of a selection of one of the provided ones of the instantiated executable analytics modules, execute the selected one of the provided ones of the instantiated executable analytics modules on data provided to the second system.
</claims>
</document>
