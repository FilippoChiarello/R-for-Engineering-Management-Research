<document>

<filing_date>
2019-07-12
</filing_date>

<publication_date>
2020-06-23
</publication_date>

<priority_date>
2018-07-13
</priority_date>

<ipc_classes>
G06F40/58,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
CARNEGIE MELLON UNIVERSITY
</assignee>

<inventors>
KUMAR, SACHIN
TSVETKOV, YULIA
</inventors>

<docdb_family_id>
69139477
</docdb_family_id>

<title>
Sequence generation using neural networks with continuous outputs
</title>

<abstract>
A machine learning system including a continuous embedding output layer is provided. Whereas traditional machine language translation or generation models utilize an output layer that include an single output for each word in the output vocabulary V, the present machine learning system includes a continuous embedding output layer that stores continuous vectors mapped to an m-dimensional vector space, where m is less than V. Accordingly, the present machine learning system processes an input string to produce an output vector and then searches for the continuous vector within the vector space that most closely corresponding to the output vector via, for example, a k-nearest neighbor algorithm. The system then outputs the output string corresponding to the determined continuous vector. The present system can be trained utilizing a cosine-based loss function.
</abstract>

<claims>
1. A computer system for mapping an input string to an output string from a set of N strings, the computer system comprising: a processor; and a memory storing: a machine learning system comprising: an encoder; a decoder; a continuous embedding output layer configured to map an output of the decoder to an m-dimensional vector space; and an output embedding table storing a plurality of continuous vectors mapped to the m-dimensional vector space; wherein m<N; and instructions that, when executed by the processor, cause the computer system to: process the input string through the encoder and the decoder to produce an output vector; determine which of the plurality of continuous vectors within the output embedding table the output vector corresponds to; and output the output string corresponding to the determined continuous vector.
2. The computer system of claim 1, wherein the encoder comprises a bidirectional encoder.
3. The computer system of claim 1, wherein the decoder comprises an attentional decoder.
4. The computer system of claim 1, wherein the input string includes a word in a first language and the set of N strings include words in a second language.
5. The computer system of claim 1, wherein the instructions are configured to cause the computer system to determine which of the plurality of continuous vectors the output vector corresponds to in the m-dimensional vector space via a k-nearest neighbor algorithm.
6. A computer system for training a machine learning system to map an input string to an output string from a set of N strings, the computer system comprising: a processor; and a memory storing: the machine learning system comprising: an encoder; a decoder; a continuous embedding output layer configured to map an output of the decoder to an m-dimensional vector space; and an output embedding table storing a plurality of continuous vectors mapped to the m-dimensional vector space; wherein m<N; and instructions that, when executed by the processor, cause the computer system to: process the input string through the encoder and the decoder to produce an output vector; determine which of the plurality of continuous vectors within the output embedding table that the output vector corresponds to; and minimize a cosine-based loss function according to the determined continuous vector compared to an expected output for the input string.
7. The computer system of claim 6, wherein the cosine-based loss function comprises a regularized log likelihood of a von Mises-Fisher (vMF) distribution.
8. The computer system of claim 6, wherein the expected output is defined by an embedding table provided to at least one of the encoder or the decoder.
9. The computer system of claim 6, wherein the encoder comprises a bidirectional encoder.
10. The computer system of claim 6, wherein the decoder comprises an attentional decoder.
11. The computer system of claim 6, wherein the input string includes a word in a first language and the set of N strings include words in a second language.
12. The computer system of claim 6, wherein the instructions are configured to cause the computer system to determine which of the plurality of continuous vectors the output vector corresponds to in the m-dimensional vector space via a k-nearest neighbor algorithm.
13. A machine learning system for mapping an input string to an output string from a set of N strings, the machine learning system comprising: an encoder; a decoder; a continuous embedding output layer configured to map an output of the decoder to an m-dimensional vector space; and an output embedding table storing a plurality of continuous vectors mapped to the m-dimensional vector space; wherein m<N; wherein the machine learning system is programmed to: process the input string through the encoder and the decoder to produce an output vector; determine which of the plurality of continuous vectors within the output embedding table that the output vector corresponds to; and output the output string corresponding to the determined continuous vector.
14. The machine learning system of claim 13, wherein the encoder comprises a bidirectional encoder.
15. The machine learning system of claim 13, wherein the decoder comprises an attentional decoder.
16. The machine learning system of claim 13, wherein the input string includes a word in a first language and the set of N strings include words in a second language.
17. The machine learning system of claim 13, wherein the machine learning system is further programmed to determine which of the plurality of continuous vectors within the output embedding table that the output vector corresponds to via a k-nearest neighbor algorithm.
</claims>
</document>
