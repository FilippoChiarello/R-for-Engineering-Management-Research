<document>

<filing_date>
2019-03-28
</filing_date>

<publication_date>
2021-01-26
</publication_date>

<priority_date>
2019-03-28
</priority_date>

<ipc_classes>
G06N20/00,G06N3/08,G06N7/00,G06T15/00,G06T15/06
</ipc_classes>

<assignee>
ADOBE
</assignee>

<inventors>
CARR, NATHAN AARON
SUN, XIN
Kuznetsov, Alexandr
</inventors>

<docdb_family_id>
72603658
</docdb_family_id>

<title>
Rendering images from deeply learned raytracing parameters
</title>

<abstract>
Images are rendered from deeply learned raytracing parameters. Active learning, via a machine learning (ML) model (e.g., implemented by a deep neural network), is used to automatically determine, infer, and/or predict optimized, or at least somewhat optimized, values for parameters used in raytracing methods. Utilizing deep learning to determine optimized, or at least somewhat optimized, values for raytracing parameters is in contrast to conventional methods, which require users to rely of heuristics for parameter value setting. In various embodiments, one or more parameters regarding the termination and splitting of traced light paths in stochastic-based (e.g., Monte Carlo) raytracing are determined via active learning. In some embodiments, one or more parameters regarding the sampling rate of shadow rays are also determined.
</abstract>

<claims>
1. A non-transitory computer-readable storage medium having instructions stored thereon, which, when executed by a processor of a computing device cause the computing device to perform actions comprising: employing a machine learning (ML) model to determine a value for at least one raytracing parameter based on a scene; generating a set of light path samples based on the determined value for the at least one raytracing parameter and the scene; generating an image of the scene based on the generated set of light path samples; updating the ML model; updating the value for the at least one raytracing parameter based on the updated ML model; and updating the image of the scene based on the updated value for the at least one raytracing parameter.
2. The computer-readable storage medium of claim 1, the actions further comprising: evaluating a loss function based on the set of light path samples; and wherein updating the ML model comprises updating a plurality of weights of the ML model based on the evaluated loss function.
3. The computer-readable storage medium of claim 2, wherein the loss function includes a first factor that is based on a computational cost associated with generating the set of light path samples and a second factor that is based on a variance corresponding to direct and indirect lighting effects in the rendered image of the scene that are associated with the set of light path samples.
4. The computer-readable storage medium of claim 2, wherein updating the plurality of weights of the ML model is in response to a determination that the plurality of weights have yet to pass a convergence test.
5. The one or more computer-readable storage media of claim 1, wherein the ML model is implemented via a fully-connected feed-forward neural network.
6. The one or more computer-readable storage media of claim 1, wherein the value for the at least one raytracing parameter indicates a number of light path samples in the set of light path samples that are generated based on tracing next ray segments.
7. The one or more computer-readable storage media of claim 1, wherein the value for the at least one raytracing parameter indicates a number of light path samples in the set of light path samples that are sampled directly from a light source included in the scene.
8. The one or more computer-readable storage media of claim 1, wherein the value for the at least one raytracing parameter is a function of a vertex of one or more light path samples included in the set of light path samples.
9. The computer-readable storage medium of claim 1, the actions further comprising: determining one or more multiple importance sampling (MIS) weights based on the value for the at least one raytracing parameter; and generating the set of light path samples based on the determined one or more MIS weights.
10. The one or more computer-readable storage media of claim 1, wherein when the value for the at least one raytracing parameter is between 0.0 and 1.0, a pseudo-random number is employed to determine when to terminate a light path sample included in the set of light path samples.
11. A method comprising: employing a neural network (NN) to determine a value for at least one raytracing parameter based on a scene; generating a set of light path samples based on the determined value for the at least one raytracing parameter and the scene; generating the image of the scene based on the generated set of light path samples updating the NN; updating the value for the at least one raytracing parameter based on the updated NN; and updating the image of the scene based on the updated value for the at least one raytracing parameter.
12. The method for claim 11, further comprising: determining a loss function based on the set of light path samples; and wherein updating the NN comprises updating a plurality of weights of the NN based on the determined loss function.
13. The method of claim 11, wherein the method further comprises: receiving a selection of a three-dimensional (3D) environment; receiving a selection of one or more objects to be positioned within the 3D environment; receiving a selection of one or more light sources to illuminate the 3D environment and the one or more virtual objects positioned within the environment; and receiving a selection of an image plane within the 3D environment that corresponds to the image of the scene.
14. The method of claim 13, wherein at least one of the 3D environment, the one or more objects, or the one or more light sources is virtual.
15. A computing system for generating an image of a scene, comprising: a processor device; and a computer-readable storage medium, coupled with the processor device, having instructions stored thereon, which, when executed by the processor device, perform actions comprising: employing a machine learning (ML) model to determine a value for at least one raytracing parameter based on the scene; generating a set of light path samples based on the determined value for the at least one raytracing parameter and the scene; generating the image of the scene based on the generated set of light path samples; updating the ML model; updating the value for the at least one raytracing parameter based on the updated ML model; and updating the image of the scene based on the updated value for the at least one raytracing parameter.
16. The computing system of claim 15, the actions further comprising: determining a loss function based on the set of light path samples; and wherein updating the ML model comprises updating a plurality of weights of the ML model based on the set of light path samples and the determined loss function.
17. The computing system of claim 16, wherein the loss function includes a first factor that is based on a computational cost associated with generating the set of light path samples and a second factor that is based on a variance corresponding to direct and indirect lighting effects in the rendered image of the scene that are associated with the set of light path samples.
18. The computing system of claim 15, wherein the ML model is implemented via a neural network.
19. The computing system of claim 15, wherein generating a set of light path samples includes employing a Monte Carlo-based raytracing algorithm.
20. The computing system of claim 15, wherein the ML model is trained for the scene via active learning.
</claims>
</document>
