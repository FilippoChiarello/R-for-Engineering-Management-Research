<document>

<filing_date>
2018-08-09
</filing_date>

<publication_date>
2020-11-17
</publication_date>

<priority_date>
2018-08-09
</priority_date>

<ipc_classes>
G06F16/901,G06F16/9535,G06K9/62,G06N20/00
</ipc_classes>

<assignee>
FACEBOOK
</assignee>

<inventors>
Garcia Garcia, Dario
Ehrenberg, Henry Richman
</inventors>

<docdb_family_id>
73264071
</docdb_family_id>

<title>
Multiple representations of a user in an embedding space
</title>

<abstract>
In one embodiment, a method includes preparing an initialized user-embedding matrix, where the user-embedding matrix includes multiple columns corresponding to a user, preparing an initialized concept-embedding matrix, constructing an interaction table representing interactions between entities, where an element (i,j) of the table indicates one or more directional interactions from an entity represented by row i to an entity represented by column j, running a training algorithm for the embeddings in the user-embedding matrix and in the concept-embedding matrix, where the training algorithm trains the embeddings such that embeddings representing entities with interactions are located nearby in the embedding space while embeddings representing entities without interactions are located far apart, and providing the embeddings in the user-embedding matrix and in the concept-embedding matrix to a downstream service.
</abstract>

<claims>
1. A method comprising: by a computing device in a social-networking system, preparing an initialized user-embedding matrix, a column of the user-embedding matrix representing an embedding for a social-networking user in a d-dimensional embedding space, wherein the user-embedding matrix comprises a plurality of columns corresponding to a user; by the computing device, preparing an initialized concept-embedding matrix, a column of the concept-embedding matrix representing an embedding for a social-networking concept in the d-dimensional embedding space; by the computing device, constructing an interaction table representing interactions between entities, wherein the entities in the interaction table comprises users in the user-embedding matrix and concepts in the concept-embedding matrix, and wherein an element (i,j) of the table indicates one or more directional interactions from an entity represented by row i to an entity represented by column j; by the computing device, running a training algorithm for the embeddings in the user-embedding matrix and in the concept-embedding matrix, wherein the training algorithm trains the embeddings such that embeddings representing entities with interactions are located nearby in the embedding space while embeddings representing entities without interactions are located far apart, wherein the interactions between entities are indicated in the interaction table, wherein the running the training algorithm comprises: selecting, for each pair of a user and an entity that have one or more interactions, k entities that do not have interactions with the user; computing a margin ranking loss for the pair, wherein the margin ranking loss comprises scores for the k pairs between the user and the selected k entities and a score for the pair of the user and the entity, wherein the scores are Max-scores, wherein a Max-score for a pair of a user and an entity is computed based on a similarity between a user embedding corresponding to the user closest to an entity embedding corresponding to the entity and the entity embedding; and adjusting parameters based on the training algorithm to minimize the margin ranking loss; and by the computing device, providing the embeddings in the user-embedding matrix and in the concept-embedding matrix to a downstream service.
2. The method of claim 1, wherein the users and the concepts are represented by nodes in a social graph.
3. The method of claim 2, wherein the preparing the initialized user-embedding matrix comprises: identifying a list of unique social-networking users by searching the social graph; and constructing an initialized user-embedding matrix based on the list of unique social-networking users.
4. The method of claim 2, wherein the preparing the initialized concept-embedding matrix comprises: identifying a list of unique social-networking concepts by searching the social graph; and constructing an initialized concept-embedding matrix based on the list of unique social-networking concepts.
5. The method of claim 2, wherein the constructing the interaction table comprises: preparing an empty table, wherein a column represents a social-networking entity and a row represents a social-networking entity, wherein a social-networking entity comprises a social-networking user or a social-networking concept; identifying interactions between entities by searching the social graph; and recording the identified interactions in the table, wherein an element (i, j) of the table indicates one or more interactions from an entity represented by row i to an entity represented by column j.
6. The method of claim 1, wherein the initialized user-embedding matrix and the initialized concept-embedding matrix are initialized with random numbers.
7. The method of claim 1, wherein the social-networking concepts comprise pages, groups, posts, or events.
8. The method of claim 1, wherein the scores are Smooth-max-scores, wherein a Smooth-max-score for a pair of a user and an entity is computed based on weighted functions of similarity between user embeddings corresponding to the user and an entity embedding corresponding to the entity.
9. The method of claim 1, wherein the providing the embeddings to the downstream service comprises: determining whether the downstream stream service is not capable of handling a plurality of embeddings for a user; and creating, in response to the determination, an embedding for a user by performing a weighted average of user embeddings corresponding to the user.
10. The method of claim 1, further comprising running one or more supervised trainings in parallel to the training for the embeddings in the user-embedding matrix and in the concept-embedding matrix.
11. The method of claim 10, wherein the one or more supervised trainings comprise a classification training.
12. The method of claim 10, wherein the one or more supervised trainings comprise a regression training.
13. One or more computer-readable non-transitory storage media embodying software that is operable when executed to: prepare an initialized user-embedding matrix, a column of the user-embedding matrix representing an embedding for a social-networking user in a d-dimensional embedding space, wherein the user-embedding matrix comprises a plurality of columns corresponding to a user; prepare an initialized concept-embedding matrix, a column of the concept-embedding matrix representing an embedding for a social-networking concept in the d-dimensional embedding space; construct an interaction table representing interactions between entities, wherein the entities in the interaction table comprises users in the user-embedding matrix and concepts in the concept-embedding matrix, and wherein an element (i, j) of the table indicates one or more directional interactions from an entity represented by row i to an entity represented by column j; run a training algorithm for the embeddings in the user-embedding matrix and in the concept-embedding matrix, wherein the training algorithm trains the embeddings such that embeddings representing entities with interactions are located nearby in the embedding space while embeddings representing entities without interactions are located far apart, wherein the interactions between entities are indicated in the interaction table, wherein the running the training algorithm comprises: selecting, for each pair of a user and an entity that have one or more interactions, k entities that do not have interactions with the user; computing a margin ranking loss for the pair, wherein the margin ranking loss comprises scores for the k pairs between the user and the selected k entities and a score for the pair of the user and the entity, wherein the scores are Max-scores, wherein a Max-score for a pair of a user and an entity is computed based on a similarity between a user embedding corresponding to the user closest to an entity embedding corresponding to the entity and the entity embedding; and adjusting parameters based on the training algorithm to minimize the margin ranking loss; and provide the embeddings in the user-embedding matrix and in the concept-embedding matrix to a downstream service.
14. The media of claim 13, wherein the users and the concepts are represented by nodes in a social graph.
15. The media of claim 14, wherein the preparing the initialized user-embedding matrix comprises: identifying a list of unique social-networking users by searching the social graph; and constructing an initialized user-embedding matrix based on the list of unique social-networking users.
16. The media of claim 14, wherein the preparing the initialized concept-embedding matrix comprises: identifying a list of unique social-networking concepts by searching the social graph; and constructing an initialized concept-embedding matrix based on the list of unique social-networking concepts.
17. The media of claim 14, wherein the constructing the interaction table comprises: preparing an empty table, wherein a column represents a social-networking entity and a row represents a social-networking entity, wherein a social-networking entity comprises a social-networking user or a social-networking concept; identifying interactions between entities by searching the social graph; and recording the identified interactions in the table, wherein an element (i, j) of the table indicates one or more interactions from an entity represented by row i to an entity represented by column j.
18. A system comprising: one or more processors; and a non-transitory memory coupled to the processors comprising instructions executable by the processors, the processors operable when executing the instructions to: prepare an initialized user-embedding matrix, a column of the user-embedding matrix representing an embedding for a social-networking user in a d-dimensional embedding space, wherein the user-embedding matrix comprises a plurality of columns corresponding to a user; prepare an initialized concept-embedding matrix, a column of the concept-embedding matrix representing an embedding for a social-networking concept in the d-dimensional embedding space; construct an interaction table representing interactions between entities, wherein the entities in the interaction table comprises users in the user-embedding matrix and concepts in the concept-embedding matrix, and wherein an element (i, j) of the table indicates one or more directional interactions from an entity represented by row i to an entity represented by column j; run a training algorithm for the embeddings in the user-embedding matrix and in the concept-embedding matrix, wherein the training algorithm trains the embeddings such that embeddings representing entities with interactions are located nearby in the embedding space while embeddings representing entities without interactions are located far apart, wherein the interactions between entities are indicated in the interaction table, wherein the running the training algorithm comprises: selecting, for each pair of a user and an entity that have one or more interactions, k entities that do not have interactions with the user; computing a margin ranking loss for the pair, wherein the margin ranking loss comprises scores for the k pairs between the user and the selected k entities and a score for the pair of the user and the entity, wherein the scores are Max-scores, wherein a Max-score for a pair of a user and an entity is computed based on a similarity between a user embedding corresponding to the user closest to an entity embedding corresponding to the entity and the entity embedding; and adjusting parameters based on the training algorithm to minimize the margin ranking loss; and provide the embeddings in the user-embedding matrix and in the concept-embedding matrix to a downstream service.
</claims>
</document>
