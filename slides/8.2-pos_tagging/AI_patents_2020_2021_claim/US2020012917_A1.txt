<document>

<filing_date>
2018-10-26
</filing_date>

<publication_date>
2020-01-09
</publication_date>

<priority_date>
2018-07-06
</priority_date>

<ipc_classes>
G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
CAPITAL ONE SERVICES
</assignee>

<inventors>
ABDI TAGHI ABAD, FARDIN
FARIVAR, REZA
GOODSITT, JEREMY
PHAM, VINCENT
TAYLOR, KENNETH
TRUONG, ANH
WALTER S. AUSTIN
WATSON, MARK
</inventors>

<docdb_family_id>
67543579
</docdb_family_id>

<title>
SYSTEMS AND METHODS TO USE NEURAL NETWORKS FOR MODEL TRANSFORMATIONS
</title>

<abstract>
Systems and methods for transforming legacy models and transforming a model into a neural network model are disclosed. In an embodiment, a method may include receiving input data comprising an input model, an input dataset, and an input command. The method may include applying the input model to the input dataset to generate model output and storing model output and at least one of input model features or a map of the input model. The method may include generating a candidate neural network models with parameters. The method may include tuning the candidate neural network models to the input model. The method may include receiving model output from the candidate neural network models and selecting a neural network model from the candidate neural network models based on the candidate model output and the model selection criteria. In some aspects, the method may include returning the selected neural network model.
</abstract>

<claims>
1. A system for transforming a model into a neural network model, the system comprising: one or more memory units for storing instructions; and one or more processors configured to execute the instructions to perform operations comprising: receiving input data comprising an input model, an input dataset, and an input command specifying one or more model selection criteria, the input model comprising input model features based on respective relationships of the input data set; applying the input model to the input dataset to generate model output; storing model output and at least one of the input model features or a map of the input model; generating a plurality of candidate neural network models comprising parameters based on the input model features; training the plurality of candidate neural network models; tuning the plurality of candidate neural network models to reproduce input model features by adjusting at least one of a number of hidden layers, a number of inputs, or a type of layer during training; receiving model output from the plurality of candidate neural network models; selecting a neural network model from the plurality of the candidate neural network models based on the candidate model output and the one or more model selection criteria; and returning the selected neural network model.
2. The system of claim 1, wherein the command further specifies one or more model parameters, and generating the plurality of neural network models is based on the model parameters.
3. The system of claim 1, the operations further comprising: generating a development instance, and wherein: applying the input model comprises sending a command to the development instance to run the input model, generating the plurality of candidate neural network models comprises sending a command to the development instance to generate the plurality of candidate neural network models, tuning the plurality of candidate neural network models comprises sending a command to the development instance to tune the plurality of candidate neural network models, and receiving the model output comprises receiving the model output from the development instance.
4. The system of claim 1, wherein the input model output comprises a modeling result and a log.
5. The system of claim 1, wherein: the input command specifies a number of candidate neural network models of a type of neural network model, and generating the plurality of candidate neural network models comprises generating the specified number of candidate neural network models of the specified type.
6. The system of claim 1, wherein generating the plurality of candidate neural network models comprises retrieving a candidate neural network model from a model storage.
7. The system of claim 1, wherein generating the plurality of candidate neural network models comprises spinning up a development instance for each candidate neural network model.
8. The system of claim 1, wherein generating a plurality of candidate neural network models comprises overfitting each of the plurality of candidate neural network models to the input model.
9. The system of claim 1, wherein the parameters of the plurality of candidate neural network models includes at least one of a number of hidden layers, a number of nodes, or a dropout rate.
10. The system of claim 1, wherein tuning the plurality of candidate neural network models comprises training the plurality of candidate neural network models, and wherein training terminates when one or more training conditions are satisfied.
11. The system of claim 10, wherein the one or more training conditions comprise at least one of a run time, a number of epochs, or an accuracy score.
12. The system of claim 1, wherein: the model output comprises a plurality of accuracy scores corresponding to the input model features, and selecting a neural network is based on the accuracy scores.
13. The system of claim 1, wherein the respective model output comprises a model run time, and selecting a neural network is based on the model run time.
14. The system of claim 1, wherein: generating the plurality of candidate neural network models comprises generating a plurality of development instances corresponding to the plurality of candidate neural network models; tuning the plurality of neural network models comprises sending a command to the plurality of development instances to tune the plurality of candidate neural network models, and receiving the model output comprises receiving the model output from the corresponding development instances.
15. The system of claim 1, wherein in the input dataset comprises synthetic data.
16. The system of claim 1, wherein tuning the plurality of neural network models comprises adjusting at least one of a number of hidden layers, a number of inputs, or a type of layer.
17. The system of claim 1, wherein tuning the plurality of neural network models comprises: selecting first model training parameters for one of the plurality of candidate neural network models; generating first candidate model output based on the one candidate neural network model and the first model training parameters; selecting second model training parameters for the one candidate neural network model; and generating second candidate model output based on the one candidate neural network model and the second model training parameters.
18. A method for transforming a model into a neural network model, the method comprising: receiving input data comprising an input model, an input dataset, and an input command specifying one or more model selection criteria, the input model comprising input model features based on respective relationships of the input data set; applying the input model to the input dataset to generate model output; storing model output and at least one of the input model features or a map of the input model; generating a plurality of candidate neural network models comprising parameters based on the input model features; training the plurality of candidate neural network models; tuning the plurality of candidate neural network models to reproduce input model features by adjusting at least one of a number of hidden layers, a number of inputs, or a type of layer during training; receiving model output from the plurality of candidate neural network models; selecting a neural network model from the plurality of the candidate neural network models based on the candidate model output and the one or more model selection criteria; and returning the selected neural network model.
19. A system for transforming a model into a neural network model, the system comprising: one or more memory units for storing instructions; and one or more processors configured to execute the instructions to perform operations comprising: receiving input data comprising an input model, an input dataset, and an input command specifying model selection criteria, the input model comprising input model features based on respective relationships of the input data set; generating a plurality of development instances; and sending instructions to each of the plurality of development instances to perform operations comprising: identifying a candidate model from a model storage based on the model selection criteria and at least one of the input model features, the candidate model being a neural network model; training the candidate model; tuning the candidate model to reproduce input model features by adjusting at least one of a number of hidden layers, a number of inputs, or a type of layer during training; generating candidate model parameters based on the training; generating a candidate modeling result; and returning the candidate model, the candidate model parameters, and the candidate modeling result; receiving a plurality of candidate models, candidate model parameters, and candidate modeling results corresponding to the plurality of development instances; selecting a candidate model from among the plurality of candidate models based on the plurality of candidate modeling results and the model selection criterion; and returning the selected candidate model.
20. The system of claim 19, wherein training the candidate model comprises iteratively performing operations comprising: selecting a first model training parameter for the candidate model; generating first candidate model output based on the first model training parameters and the input dataset; determine whether the first candidate model output satisfies a training condition; and based on the determination, perform one of: selecting second model training parameters and generating second candidate model output based on the second model training parameters; or terminating model training and returning the candidate model and the candidate model output.
</claims>
</document>
