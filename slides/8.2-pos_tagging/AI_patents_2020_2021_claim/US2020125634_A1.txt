<document>

<filing_date>
2018-10-23
</filing_date>

<publication_date>
2020-04-23
</publication_date>

<priority_date>
2018-10-23
</priority_date>

<ipc_classes>
G06N99/00
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
YANG FAN
GENTY DENISE M.
LIU SU
TZEN, BOYI
</inventors>

<docdb_family_id>
70280822
</docdb_family_id>

<title>
COGNITIVE COLLATION CONFIGURATION FOR ENHANCING MULTILINGUAL DATA GOVERNANCE AND MANAGEMENT
</title>

<abstract>
Embodiments of the present invention provide a computer-implemented method for cognitive collation configuration processing of multilingual data. The method includes parsing a multilingual input text into a plurality of collation items. The method includes detecting a language of each collation item of the plurality of collation items. The method includes storing each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers. The method includes performing a first sort operation on the plurality of sub language buffers, in which the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, in which the set of collation settings includes a language selection list. The method includes merging the content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
</abstract>

<claims>
1. A computer-implemented method of cognitive collation configuration processing of multilingual data comprising: parsing, by a system comprising one or more processors, a multilingual input text into a plurality of collation items; detecting, by the system, a language of each collation item of the plurality of collation items; storing, by the system, each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers; performing, by the system, a first sort operation on the plurality of sub language buffers, wherein the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, wherein the set of collation settings includes a language selection list; and merging, by the system, content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
2. The computer-implemented method of claim 1, wherein the collation settings further includes a locale selection list, wherein each collation item, of the plurality of collation items, includes a plurality of collation elements, wherein the method further includes: performing, by the system, a second sort operation within each sub language buffer of the plurality of sub language buffers, wherein the second sort operation of a sub language buffer includes sorting the plurality of collation elements of the sub language buffer based on the locale selection list, wherein the merging is performed subsequent to the second sort operation and the first sort operation.
3. The computer-implemented method of claim 1, wherein the plurality of collation items comprises a plurality of lines of text of the multilingual input text, wherein the plurality of collation elements of each collation item, of the plurality of collation items, comprises a plurality of characters of each line of text of the plurality of lines of text.
4. The computer-implemented method of claim 1 further comprising: prior to parsing the multilingual input text, receiving, by the system, a sorting request from a frontend system via a function call of a service API, wherein the sorting request includes the multilingual input text; and transmitting, by the system, the sorted output to the frontend system in response to the received sorting request.
5. The computer-implemented method of claim 1 further comprising: executing, by the system, a feedback daemon that is configured to monitor and learn sorting preferences of one or more users, wherein the feedback daemon is further configured to adjust the set of collation settings, in real-time, based on the learned sorting preferences.
6. A computer-implemented method of cognitive collation configuration processing of multilingual data comprising: transmitting, by a system comprising one or more processors, a sorting request to a backend system, wherein the sorting request includes a multilingual input text; wherein the backend system is configured to: parse the multilingual input text into a plurality of collation items; detect a language of each collation item of the plurality of collation items; store each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers; perform a first sort operation on the plurality of sub language buffers, wherein the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, wherein the set of collation settings includes a language selection list; and merge content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
7. The computer-implemented method of claim 6, wherein the collation settings further includes a locale selection list, wherein each collation item, of the plurality of collation items, includes a plurality of collation elements, wherein the backend system is further configured to: perform a second sort operation within each sub language buffer of the plurality of sub language buffers, wherein the second sort operation of a sub language buffer includes sorting the plurality of collation elements of the sub language buffer based on the locale selection list, wherein the merging is performed subsequent to the second sort operation and the first sort operation.
8. The computer-implemented method of claim 6, wherein the plurality of collation items comprises a plurality of lines of text of the multilingual input text, wherein the plurality of collation elements of each collation item, of the plurality of collation items, comprises a plurality of characters of each line of text of the plurality of lines of text.
9. The computer-implemented method of claim 6, wherein the sorting request is sent from the system to the backend system via a function call of a service API, wherein the backend system is further configured to transmit the sorted output to the system in response to the received sorting request.
10. The computer-implemented method of claim 6, wherein the backend system is further configured to execute a feedback daemon, wherein the feedback daemon is configured to monitor and learn sorting preferences of one or more users, wherein the feedback daemon is further configured to adjust the set of collation settings, in real-time, based on the learned sorting preferences.
11. A system for cognitive collation configuration processing of multilingual data, the system comprising one or more processors configured to perform a method comprising: parsing, by the system, a multilingual input text into a plurality of collation items; detecting, by the system, a language of each collation item of the plurality of collation items; storing, by the system, each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers; performing, by the system, a first sort operation on the plurality of sub language buffers, wherein the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, wherein the set of collation settings includes a language selection list; and merging, by the system, content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
12. The system of claim 11, wherein the collation settings further includes a locale selection list, wherein each collation item, of the plurality of collation items, includes a plurality of collation elements, wherein the method further includes: performing, by the system, a second sort operation within each sub language buffer of the plurality of sub language buffers, wherein the second sort operation of a sub language buffer includes sorting the plurality of collation elements of the sub language buffer based on the locale selection list, wherein the merging is performed subsequent to the second sort operation and the first sort operation.
13. The system of claim 11, wherein the plurality of collation items comprises a plurality of lines of text of the multilingual input text, wherein the plurality of collation elements of each collation item, of the plurality of collation items, comprises a plurality of characters of each line of text of the plurality of lines of text.
14. The system of claim 11 further comprising: prior to parsing the multilingual input text, receiving, by the system, a sorting request from a frontend system via a function call of a service API, wherein the sorting request includes the multilingual input text; and transmitting, by the system, the sorted output to the frontend system in response to the received sorting request.
15. The system of claim 11 further comprising: executing, by the system, a feedback daemon that is configured to monitor and learn sorting preferences of one or more users, wherein the feedback daemon is further configured to adjust the set of collation settings, in real-time, based on the learned sorting preferences.
16. A computer program product for cognitive collation configuration processing of multilingual data, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a backend system comprising one or more processors to cause the backend system to perform a method comprising: parsing, by the backend system, a multilingual input text into a plurality of collation items; detecting, by the backend system, a language of each collation item of the plurality of collation items; storing, by the backend system, each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers; performing, by the backend system, a first sort operation on the plurality of sub language buffers, wherein the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, wherein the set of collation settings includes a language selection list; and merging, by the backend system, content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
17. The computer program product of claim 16, wherein the collation settings further includes a locale selection list, wherein each collation item of the plurality of collation items includes a plurality of collation elements, wherein the method further includes: performing, by the backend system, a second sort operation within each sub language buffer of the plurality of sub language buffers, wherein the second sort operation of a sub language buffer includes sorting the plurality of collation elements of the sub language buffer based on the locale selection list, wherein the merging is performed subsequent to the second sort operation and the first sort operation.
18. The computer program product of claim 16, wherein the plurality of collation items comprises a plurality of lines of text of the multilingual input text, wherein the plurality of collation elements of each collation item, of the plurality of collation items, comprises a plurality of characters of each line of text of the plurality of lines of text.
19. The computer program product of claim 16 further comprising: prior to parsing the multilingual input text, receiving, by the backend system, a sorting request from a frontend system via a function call of a service API, wherein the sorting request includes the multilingual input text; and transmitting, by the backend system, the sorted output to the frontend system in response to the received sorting request.
20. The computer program product of claim 16 further comprising: executing, by the backend system, a feedback daemon that is configured to monitor and learn sorting preferences of one or more users, wherein the feedback daemon is further configured to adjust the set of collation settings, in real-time, based on the learned sorting preferences.
21. A system for cognitive collation configuration processing of multilingual data, the system comprising: one or more processors; a memory operatively coupled to the one or more processors; a frontend component; and a backend component; wherein the frontend component is configured to transmit a sorting request to the backend component, wherein the sorting request includes a multilingual input text; wherein the backend component is configured to: parse the multilingual input text into a plurality of collation items; detect a language of each collation item of the plurality of collation items; store each collation item, of the plurality of collation items, into a corresponding sub language buffer of a plurality of sub language buffers; perform a first sort operation on the plurality of sub language buffers, wherein the first sort operation includes sorting the plurality of sub language buffers based on a set of collation settings, wherein the set of collation settings includes a language selection list; and merge content of the sorted plurality of sub language buffers to form a sorted output comprising the plurality of collation items.
22. The system of claim 21, wherein the collation settings further includes a locale selection list, wherein each collation item, of the plurality of collation items, includes a plurality of collation elements, wherein the backend component is further configured to: perform a second sort operation within each sub language buffer of the plurality of sub language buffers, wherein the second sort operation of a sub language buffer includes sorting the plurality of collation elements of the sub language buffer based on the locale selection list, wherein the merging is performed subsequent to the second sort operation and the first sort operation.
23. The system of claim 21, wherein the plurality of collation items comprises a plurality of lines of text of the multilingual input text, wherein the plurality of collation elements of each collation item, of the plurality of collation items, comprises a plurality of characters of each line of text of the plurality of lines of text.
24. The system of claim 21, wherein the sorting request is sent from the frontend component to the backend component via a function call of a service API, wherein the backend component is further configured to transmit the sorted output to the frontend component in response to the received sorting request.
25. The system of claim 21, wherein the backend component is further configured to execute a feedback daemon, wherein the feedback daemon is configured to monitor and learn sorting preferences of one or more users, wherein the feedback daemon is further configured to adjust the set of collation settings, in real-time, based on the learned sorting preferences.
</claims>
</document>
