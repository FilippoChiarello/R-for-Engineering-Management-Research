<document>

<filing_date>
2019-02-08
</filing_date>

<publication_date>
2020-05-14
</publication_date>

<priority_date>
2018-11-08
</priority_date>

<ipc_classes>
G06F21/60,G06N20/10
</ipc_classes>

<assignee>
VMWARE
</assignee>

<inventors>
AMBARDEKAR, PRASHANT
BOKARE, NIKHIIL
KHANDELWAL, DARSHIKA
SARSAMKAR, PARYUSHAN
WAGH, RUSHIKESH
</inventors>

<docdb_family_id>
70549928
</docdb_family_id>

<title>
MULTI DIMENSIONAL SCALE ANALYSIS USING MACHINE LEARNING
</title>

<abstract>
The disclosure provides an approach for collecting system state data relating to whether certain system states overload a processor assigned to a controller of the system. The approach further involves using the collected data to train a regression machine learning algorithm to predict whether indented or desired system states will result in processor overload. Depending on the prediction, the approach takes one of several steps to efficiently change system state.
</abstract>

<claims>
1. A method of predicting load on one or more processors assigned to a controller of a computing system, the computing system comprising a plurality of host machines configured to implement a logical network comprising a plurality of virtual computing instances (VCIs) running on the plurality of host machines, the method comprising: obtaining historical data of the computing system, wherein the historical data comprises utilization rate of one or more processors of the plurality of host machines; training a regression tool using the historical data, wherein the regression tool is a regression machine learning algorithm; obtaining a desired change in system state; based on the desired change, determining a target system state and calculating target system state data; providing target system state data to the regression tool; obtaining, from the regression tool, a prediction of load on the one or more processors of the controller; comparing the prediction to a threshold value; and based at least in part on the comparison, changing a current system state to the target system state.
2. The method of claim 1, wherein the computing system comprises security groups, wherein each of the security groups comprises one or more VCIs of the plurality of VCIs, the method further comprising, prior to the changing the current state to the target state, performing at least one of the following options: (a) deleting unused security groups from the computing system; (b) reducing nesting level of the security groups; (c) breaking up at least some of the security groups into smaller security groups; or (d) reducing the number of dynamic security groups or the number of membership criteria of the dynamic security groups.
3. The method of claim 2, further comprising choosing among the options to perform, wherein the chosen option is determined based on simulating each option using the regression tool.
4. The method of claim 1, further comprising, prior to the changing the current state to the target state, performing at least one of: (a) allocating an additional one or more processors to the controller; (b) creating a second controller to perform at least some of the changing the current system state to the target system state; or (c) providing a warning to a user regarding load on the one or more processors.
5. The method of claim 1, wherein each host machine of the plurality of host machines comprises a hypervisor, each hypervisor comprising an instance of a distributed firewall that is distributed throughout the plurality of host machines, wherein the changing the current system state to the target system state comprises changing security settings within at least one instance of the distributed firewall.
6. The method of claim 1, wherein the obtaining historical data comprises: measuring baseline utilization the one or more processors; measuring a rate of configuration changes within the computing system; obtaining an intended change to the computing system; measuring a utilization of the one or more processors while implementing the intended change; and measuring the duration of implementing the intended change.
7. The method of claim 6, wherein the computing system comprises a plurality of security groups, wherein each of the plurality of security groups comprises one or more of the plurality of VCIs, the method further comprising: calculating (a) an average number of VCIs per security group, (b) a standard deviation of VCIs per security group, (c) an average number of security groups to which each VCI belongs, and (d) standard deviation of the number of security groups to which each VCI belongs.
8. The method of claim 1, wherein the computing system comprises a plurality of security groups, wherein each of the plurality of security groups comprises one or more of the plurality of VCIs, and wherein the desired change in system state comprises (a) an addition or removal of a VCI from at least one of the plurality of security groups, or (b) an addition or removal of a security group.
9. The method of claim 1, wherein the regression tool is a regression decision tree.
10. A non-transitory computer readable medium comprising instructions to be executed in a processor of a computer system, the instructions when executed in the processor cause the computer system to carry out a method of predicting load on one or more processors assigned to a controller of a computing system, the computing system comprising a plurality of host machines configured to implement a logical network comprising a plurality of virtual computing instances (VCIs) running on the plurality of host machines, the method comprising: obtaining historical data of the computing system, wherein the historical data comprises utilization rate of one or more processors of the plurality of host machines; training a regression tool using the historical data, wherein the regression tool is a regression machine learning algorithm; obtaining a desired change in system state; based on the desired change, determining a target system state and calculating target system state data; providing target system state data to the regression tool; obtaining, from the regression tool, a prediction of load on the one or more processors of the controller; comparing the prediction to a threshold value; and based at least in part on the comparison, changing a current system state to the target system state.
11. The non-transitory computer readable medium of claim 10, wherein the computing system comprises security groups, wherein each of the security groups comprises one or more VCIs of the plurality of VCIs, the method further comprising, prior to the changing the current state to the target state, performing at least one of the following options: (a) deleting unused security groups from the computing system; (b) reducing nesting level of the security groups; (c) breaking up at least some of the security groups into smaller security groups; or (d) reducing the number of dynamic security groups or the number of membership criteria of the dynamic security groups.
12. The non-transitory computer readable medium of claim 11, further comprising choosing among the options to perform, wherein the chosen option is determined based on simulating each option using the regression tool.
13. The non-transitory computer readable medium of claim 10, further comprising, prior to the changing the current state to the target state, performing at least one of: (a) allocating an additional one or more processors to the controller; (b) creating a second controller to perform at least some of the changing the current system state to the target system state; or (c) providing a warning to a user regarding load on the one or more processors.
14. The non-transitory computer readable medium of claim 10, wherein each host machine of the plurality of host machines comprises a hypervisor, each hypervisor comprising an instance of a distributed firewall that is distributed throughout the plurality of host machines, wherein the changing the current system state to the target system state comprises changing security settings within at least one instance of the distributed firewall.
15. The non-transitory computer readable medium of claim 10, wherein the obtaining historical data comprises: measuring baseline utilization the one or more processors; measuring a rate of configuration changes within the computing system; obtaining an intended change to the computing system; measuring a utilization of the one or more processors while implementing the intended change; and measuring the duration of implementing the intended change.
16. The non-transitory computer readable medium of claim 15, wherein the computing system comprises a plurality of security groups, wherein each of the plurality of security groups comprises one or more of the plurality of VCIs, the method further comprising: calculating (a) an average number of VCIs per security group, (b) a standard deviation of VCIs per security group, (c) an average number of security groups to which each VCI belongs, and (d) standard deviation of the number of security groups to which each VCI belongs.
17. The non-transitory computer readable medium of claim 10, wherein the computing system comprises a plurality of security groups, wherein each of the plurality of security groups comprises one or more of the plurality of VCIs, and wherein the desired change in system state comprises (a) an addition or removal of a VCI from at least one of the plurality of security groups, or (b) an addition or removal of a security group.
18. The non-transitory computer readable medium of claim 10, wherein the regression tool is a regression decision tree.
19. A computing system comprising: a controller of the computing system; a plurality of host machines configured to implement a logical network comprising a plurality of virtual computing instances (VCIs) running on the plurality of host machines; and one or more processors assigned to the controller, wherein the one or more processors is programmed to carry out a method of predicting load on the one or more processors, the method comprising: obtaining historical data of the computing system, wherein the historical data comprises utilization rate of one or more processors of the plurality of host machines; training a regression tool using the historical data, wherein the regression tool is a regression machine learning algorithm; obtaining a desired change in system state; based on the desired change, determining a target system state and calculating target system state data; providing target system state data to the regression tool; obtaining, from the regression tool, a prediction of load on the one or more processors of the controller; comparing the prediction to a threshold value; and based at least in part on the comparison, changing a current system state to the target system state.
20. The computing system of claim 19, wherein the computing system further comprises security groups, wherein each of the security groups comprises one or more VCIs of the plurality of VCIs, the method further comprising, prior to the changing the current state to the target state, performing at least one of the following options: (a) deleting unused security groups from the computing system; (b) reducing nesting level of the security groups; (c) breaking up at least some of the security groups into smaller security groups; or (d) reducing the number of dynamic security groups or the number of membership criteria of the dynamic security groups.
</claims>
</document>
