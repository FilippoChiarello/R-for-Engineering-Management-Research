<document>

<filing_date>
2019-06-28
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-06-28
</priority_date>

<ipc_classes>
G06F16/16,G06F16/18,G06F3/16,G10L25/51
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
BHATIA, NIMESH
SINGH, ANIMESH
BRAHMAROUTU, SRINIVAS R.
LU, CINDY HAN
TRAN, THAI QUOC
</inventors>

<docdb_family_id>
74043789
</docdb_family_id>

<title>
RESOLUTION OF EDIT CONFLICTS IN AUDIO-FILE DEVELOPMENT
</title>

<abstract>
A processor may store a first version of an audio file and fragment the audio file into at least a first time segment. The processor may receive a first edit to the audio file and identify a first edited version of the first time segment in the first edit. The processor may update the first version of the audio file with the first edit, resulting in a second version of the audio file comprising the first edited version of the first time segment. The processor may receive a second edit to the first version of the audio file and identify a second edited version of the first time segment in the second edit. The processor may determine, based on the second edited version, that the second edit alters an outdated version of the first time segment, resulting in an edit conflict. The processor may notify a user of the conflict.
</abstract>

<claims>
1. A method comprising: storing a first version of an audio file; fragmenting the audio file into at least a first time segment; receiving a first edit to the audio file; identifying a first edited version of the first time segment in the first edit; updating the first version of the audio file with the first edit, resulting in a second version of the audio file comprising the first edited version of the first time segment; receiving a second edit to the first version of the audio file; identifying a second edited version of the first time segment in the second edit; determining, based on the identifying the second edited version, that the second edit alters an outdated version of the first time segment, resulting in an edit conflict; and notifying a user of the edit conflict.
2. The method of claim 1, further comprising: receiving a third edit to the second version of the audio file; determining that the third edit resolves the edit conflict; and updating the second version of the audio file with the third edit, resulting in a third version of the audio file.
3. The method of claim 1, wherein the fragmenting comprises labeling each time segment with a unique meta-data tag.
4. The method of claim 1, further comprising: labeling, at the time of the fragmenting, the first time segment with a first edit timestamp; labeling, at the time of the updating, the first edited version of the first time segment with a second edit timestamp; wherein the determining that the second edit alters an outdated version of the first time segment comprises: determining that the first edited version of the first time segment in the second version of the audio file comprises the second edit timestamp; determining that the second edited version of the first time segment comprises the first edit timestamp; and determining that the first edit timestamp is older than the second edit timestamp.
5. The method of claim 1, wherein the identifying the first edited version of the first time segment comprises detecting that the first edited version of the first time segment is labeled with an edit meta-data tag.
6. The method of claim 1, further comprising: identifying a first edited version of a second time segment in the second edit; determining, based on the identifying the first edited version of the second timestamp, that the second edit alters a current version of the second time segment; and updating the second version of the audio file, resulting in a third version of the audio file comprising the first edited version of the second time segment.
7. The method of claim 1, wherein the identifying a first edited version of the first time segment comprises: identifying a first set of segments in the stored audio file; determining that the first edited version of the first time segment corresponds to an original version of the first time segment in the first version of the audio file; and detecting that the first edited version of the first time segment is not identical to the original version of the first timestamp.
8. A system comprising: a processor; and a memory in communication with the processor, the memory containing program instructions that, when executed by the processor, are configured to cause the processor to perform a method, the method comprising: receiving a first edit to an audio file; receiving a second edit to the audio file; detecting an edit conflict between the first edit and the second edit; identifying a relevant user for the audio file; analyze the preferences of the identified relevant user; and edit, based on the analyzing, the audio file to resolve the edit conflict.
9. The system of claim 8, wherein the relevant user is a musician, and the analyzing comprises analyzing the publicly available songs released by the musician.
10. The system of claim 8, wherein the relevant user is a head of the development of the audio file, and the analyzing comprises analyzing previous resolutions of edit conflicts performed by relevant user.
11. The system of claim 8, wherein the relevant user is the general public, and the analyzing comprises: identifying a set of songs that are popular with the general public; and analyzing the songs in the set of songs
12. The system of claim 11, further comprising identifying a genre of the audio file, wherein each song in the set of songs comprises the genre.
13. A computer program product, the computer program product comprising a computer readable storage medium having program instructions embodied therewith, the program instructions executable by a computer to cause the computer to: store a first version of an audio file; fragment the audio file into at least a first time segment; receive a first edit to the audio file; identify a first edited version of the first time segment in the first edit; update the first version of the audio file with the first edit, resulting in a second version of the audio file comprising the first edited version of the first time segment; receive a second edit to the first version of the audio file; identify a second edited version of the first time segment in the second edit; determine, based on the identifying the second edited version, that the second edit alters an outdated version of the first time segment, resulting in an edit conflict; and notify a user of the edit conflict.
14. The computer program product of claim 13, wherein the program instructions further cause the computer to: receive a third edit to the second version of the audio file; determine that the third edit resolves the edit conflict; and update the second version of the audio file with the third edit, resulting in a third version of the audio file.
15. The computer program product of claim 13, wherein the fragmenting comprises labeling each time segment with a unique meta-data tag.
16. The computer program product of claim 13, wherein the program instructions further cause the computer to: label, at the time of the fragmenting, the first time segment with a first edit timestamp; label, at the time of the updating, the first edited version of the first time segment with a second edit timestamp; wherein the determining that the second edit alters an outdated version of the first time segment comprises: determine that the first edited version of the first time segment in the second version of the audio file comprises the second edit timestamp; determine that the second edited version of the first time segment comprises the first edit timestamp; and determine that the first edit timestamp is older than the second edit timestamp.
17. The computer program product of claim 13, wherein the identifying the first edited version of the first time segment comprises detecting that the first edited version of the first time segment is labeled with an edit meta-data tag.
18. The computer program product of claim 13, wherein the program instructions further cause the computer to: identify a first edited version of a second time segment in the second edit; determine, based on the identifying the first edited version of the second timestamp, that the second edit alters a current version of the second time segment; and update the second version of the audio file, resulting in a third version of the audio file comprising the first edited version of the second time segment.
19. The computer program product of claim 13, wherein the identifying a first edited version of the first time segment comprises: identifying a first set of segments in the stored audio file; determining that the first edited version of the first time segment corresponds to an original version of the first time segment in the first version of the audio file; and detecting that the first edited version of the first time segment is not identical to the original version of the first timestamp.
</claims>
</document>
