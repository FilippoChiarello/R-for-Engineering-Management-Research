<document>

<filing_date>
2017-03-29
</filing_date>

<publication_date>
2020-07-07
</publication_date>

<priority_date>
2014-09-29
</priority_date>

<ipc_classes>
G06F16/00,G06F16/242,G06F16/2452,G06F16/2457,G06F16/332,G06F16/901,G06F17/11,G06F17/27,G06F17/30,G06F40/268,G06F40/289,G06N20/00,G06N5/04,G06N7/00,G06N99/00
</ipc_classes>

<assignee>
HUAWEI TECHNOLOGIES COMPANY
CHINESE ACADEMY OF SCIENCES
</assignee>

<inventors>
ZHAO JUN
ZHANG, YIBO
LIU, KANG
HE, SHIZHU
</inventors>

<docdb_family_id>
55629397
</docdb_family_id>

<title>
Method and device for parsing question in knowledge base
</title>

<abstract>
A method for parsing a question in a knowledge base includes: receiving a question entered by a user; performing phrase detection on the question to determine candidate phrases; mapping the candidate phrases to resource items in the knowledge base; further determining values of observed predicates and possible question parse spaces; performing uncertain inference on each proposition set in the possible question parse spaces according to the values of the observed predicates and values of hidden predicates, and calculating confidence; acquiring a combination of true propositions in a proposition set whose confidence satisfies a preset condition; generating a formal query statement according to the combination of true propositions.
</abstract>

<claims>
1. A method for converting a natural language question into a query statement for querying a knowledge base, comprising: receiving the question provided by a user; performing phrase detection on the question to determine a set of one or more first candidate phrases; mapping the first candidate phrases to a set of first resource items in the knowledge base, wherein the first resource items have consistent semantic meanings with the first candidate phrases; determining values of observed predicates and a possible question parse space according to the first candidate phrases and the first resource items, wherein the observed predicates represent features of the first candidate phrases, features of the first resource items, and a relationship between the first candidate phrases and the first resource items, and wherein points in the possible question parse space form multiple proposition sets, and truth or falsity of propositions in the proposition sets are represented by values of hidden predicates; performing uncertain inference on each proposition set in the possible question parse space according to the values of the observed predicates and the values of the hidden predicates, and calculating a confidence degree of each proposition set; acquiring a combination of true propositions in a proposition set whose confidence degree satisfies a preset condition, wherein the true propositions represent search phrases selected from the first candidate phrases, search resource items selected from the first resource items, and features of the selected search resource items; and generating a query statement according to the combination of true propositions for querying the knowledge base.
2. The method according to claim 1, wherein the uncertain inference is based on a Markov logic network (MLN), wherein the MLN comprises a predefined first-order formula and a weight of the first-order formula.
3. The method according to claim 2, wherein before the receiving the question provided by the user, the method further comprises: acquiring multiple natural language questions from the knowledge base; performing phrase detection on the multiple natural language questions to determine a set of second candidate phrases of the multiple natural language questions; mapping the second candidate phrases to a set of second resource items in the knowledge base, wherein the second resource items have consistent semantic meanings with the second candidate phrases; determining, according to the second candidate phrases and the second resource items, values of observed predicates corresponding to the multiple natural language questions; acquiring hand-labeled values of hidden predicates corresponding to the multiple natural language questions; and creating an undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determining the weight of the first-order formula through training.
4. The method according to claim 3, wherein the first-order formula comprises a Boolean formula and a weighted formula, a weight of the Boolean formula is +∞, a weight of the weighted formula is a weighted formula weight, and the hand-labeled values of the hidden predicates corresponding to the multiple natural language questions satisfy the Boolean formula; and wherein creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determining the weight of the first-order formula through training comprises: creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determining the weight of the weighted formula through training.
5. The method according to claim 3, wherein creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determining the weight of the first-order formula through training comprises: creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determining the weight of the first-order formula by using a margin infused relaxed algorithm (MIRA).
6. The method according to claim 2 wherein the MLN is indicated by M, the first-order formula is indicated by ϕi, the weight of the first-order formula is indicated by wi, and the proposition set is indicated by y; and wherein performing uncertain inference on each proposition set in the possible question parse spaces according to the values of the observed predicates and the values of the hidden predicates, and calculating confidence of each proposition set comprises: calculating the confidence of each proposition set according to the following formula: wherein Z is a normalization constant, Cnϕi is a sub-formula set corresponding to the first-order formula ϕi, c is a sub-formula in the sub-formula set Cnϕi, ƒcϕi is a binary feature function, and ƒcϕi(y) indicates truth or falsity of the first-order formula in the proposition set y.
7. The method according to claim 1, wherein acquiring the combination of true propositions in a proposition set whose confidence satisfies a preset condition comprises: determining a proposition set whose confidence value is largest, and acquiring a combination of true propositions in the proposition set whose confidence value is largest.
8. The method according to claim 1, wherein: the features of the first candidate phrases comprise positions of the first candidate phrases in the question, parts of speech of head words of the first candidate phrases, and tags on a dependency path between every two of the first candidate phrases; the features of the first resource items comprise types of the first resource items, a correlation value between every two of the first resource items, and a parameter matching relationship between every two of the first resource items; and the relationship between the first candidate phrases and the first resource items comprises prior matching scores between the first candidate phrases and the first resource items; wherein determining values of observed predicates according to the first candidate phrases and the first resource items comprises: determining the positions of the first candidate phrases in the question; determining the parts of speech of the head words of the first candidate phrases by using a Stanford part-of-speech tagging tool; determining the tags on the dependency path between every two of the first candidate phrases by using a Stanford dependency syntax parser tool; determining the types of the first resource items from the knowledge base, wherein the types are entity or class or relation; determining the parameter matching relationship between every two of the first resource items from the knowledge base; using a similarity coefficient between every two of the first resource items as the correlation value between every two of the first resource items; and calculating the prior matching scores between the first candidate phrases and the first resource items, wherein the prior matching scores are used to indicate probabilities that the first candidate phrases are mapped to the first resource items.
9. The method according to claim 1, wherein the query statement is a Simple Protocol and Resource Description Framework Query Language (SPARQL) statement.
10. The method according to claim 9, wherein generating the query statement according to the combination of true propositions comprises: generating the SPARQL statement according to the combination of true propositions by using a SPARQL template.
11. The method according to claim 10, wherein the SPARQL template comprises an ASK WHERE template, a SELECT COUNT(?url) WHERE template, and a SELECT ?url WHERE template; and wherein generating the SPARQL statement according to the combination of true propositions by using a SPARQL template comprises: when the question is a Yes/No question, generating the SPARQL statement according to the combination of true propositions by using the ASK WHERE template; when the question is a Normal question, generating the SPARQL statement according to the combination of true propositions by using the SELECT ?url WHERE template; and when the question is a Numeric question, generating the SPARQL statement according to the combination of true propositions by using the SELECT ?url WHERE template, or when a numeric answer cannot be obtained for the SPARQL statement generated by using the SELECT ?url WHERE template, generating the SPARQL statement by using the SELECT COUNT(?url) WHERE template.
12. The method according to claim 1, wherein performing the phrase detection on the question to determine first candidate phrases comprises: using word sequences in the question as the first candidate phrases, wherein the word sequences satisfy any one of the following: all consecutive non-stop words in the word sequence begin with a capital letter, or if all consecutive non-stop words in the word sequence do not begin with a capital letter, a length of the word sequence is less than four; a part of speech of a head word of the word sequence is jj or nn or rb or vb, wherein jj is an adjective, nn is a noun, rb is an adverb, and vb is a verb; and all words comprised in the word sequence are not stop words.
13. A device, comprising: a receiver circuit, configured to receive a natural language question entered by a user; a memory storing program instructions for execution by a processor, wherein the program instructions comprise instructions for converting the natural language question into a query statement for querying a knowledge base; and the processor, by executing the instructions, configured to: perform phrase detection on the question received by the receiving circuit to determine a set of first candidate phrases; map the first candidate phases to a set of first resource items in the knowledge base, wherein the first resource items have consistent semantic meanings with the first candidate phrases; determine values of observed predicates and possible question parse spaces according to the first candidate phrases and the first resource items, wherein the observed predicates are used to indicate features of the first candidate phrases, features of the first resource items, and a relationship between the first candidate phrases and the first resource items, and wherein points in the possible question parse spaces are proposition sets, and truth or falsity of propositions in the proposition sets are represented by values of hidden predicates; perform uncertain inference on each proposition set in the possible question parse spaces according to the values of the observed predicates and the values of the hidden predicates, and calculate confidence of each proposition set; acquire a combination of true propositions in a proposition set whose confidence satisfies a preset condition, wherein the true propositions are used to indicate search phrases selected from the first candidate phrases, search resource items selected from the first resource items, and features of the search resource items; and generate a formal query statement according to the combination of the true propositions.
14. The device according to claim 13, wherein the uncertain inference is based on a Markov logic network (MLN), wherein the MLN comprises a predefined first-order formula and a weight of the first-order formula.
15. The device according to claim 14, wherein the processor, by executing the instructions, is further configured to: acquire multiple natural language questions from the knowledge base; perform phrase detection on the multiple natural language questions to determine a set of second candidate phrases; map the second candidate phrases to a set of second resource items in the knowledge base, wherein the second resource items have consistent semantic meanings with the second candidate phrases; determine, according to the second candidate phrases and the second resource items, values of observed predicates corresponding to the multiple natural language questions; acquire hand-labeled values of hidden predicates corresponding to the multiple natural language questions; and create an undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determine the weight of the first-order formula through training.
16. The device according to claim 15, wherein the first-order formula comprises a Boolean formula and a weighted formula, a weight of the Boolean formula is +∞, a weight of the weighted formula is a weighted formula weight, and the hand-labeled values of the hidden predicates corresponding to the multiple natural language questions satisfy the Boolean formula; and wherein in creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and in determining the weight of the first-order formula through training, the processor is configured to: create the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determine the weight of the weighted formula through training.
17. The device according to claim 15, wherein in creating the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and in determining the weight of the first-order formula through training, the processor is configured to: create the undirected graph according to the values of the observed predicates corresponding to the multiple natural language questions, the values of the hidden predicates corresponding to the multiple natural language questions, and the first-order formula, and determine the weight of the first-order formula by using a margin infused relaxed algorithm (MIRA).
18. A non-transitory computer-readable storage medium storing program instructions for execution by a computer, wherein the instructions cause the computer to perform a process of converting a natural language question into a query statement for querying a knowledge base that comprises: performing phrase detection on the question entered by a user to determine a set of first candidate phrases; mapping the first candidate phrases to a set of first resource items in the knowledge base, wherein the first resource items have consistent semantic meanings with the first candidate phrases; determining values of observed predicates and possible question parse spaces according to the first candidate phrases and the first resource items, wherein the observed predicates represent features of the first candidate phrases, features of the first resource items, and a relationship between the first candidate phrases and the first resource items, and wherein points in the possible question parse spaces are proposition sets, and truth or falsity of propositions in the proposition sets are represented by values of hidden predicates; performing uncertain inference on each proposition set in the possible question parse spaces according to the values of the observed predicates and the values of the hidden predicates, and calculating confidence of each proposition set; acquiring a combination of true propositions in a proposition set and whose confidence satisfies a preset condition, wherein the true propositions are used to indicate search phrases selected from the first candidate phrases, search resource items selected from the first resource items, and features of the search resource items; and generating a formal query statement according to the combination of the true propositions.
19. The non-transitory computer-readable storage medium according to claim 18, wherein acquiring the combination of true propositions in a proposition set whose confidence satisfies a preset condition comprises: determining a proposition set whose confidence value is largest, and acquiring a combination of true propositions in the proposition set whose confidence value is largest.
20. The non-transitory computer-readable storage medium according to claim 18, wherein performing the phrase detection on the question to determine first candidate phrases comprises: using word sequences in the question as the first candidate phrases, wherein the word sequences satisfy any one of the following: all consecutive non-stop words in the word sequence begin with a capital letter, or if all consecutive non-stop words in the word sequence do not begin with a capital letter, a length of the word sequence is less than four; a part of speech of a head word of the word sequence is jj or nn or rb or vb, wherein jj is an adjective, nn is a noun, rb is an adverb, and vb is a verb; and all words comprised in the word sequence are not stop words.
</claims>
</document>
