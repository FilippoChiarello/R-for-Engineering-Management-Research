<document>

<filing_date>
2020-05-27
</filing_date>

<publication_date>
2020-12-02
</publication_date>

<priority_date>
2019-05-28
</priority_date>

<ipc_classes>
G06F9/50
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
PURUSHOTHAMAN, Arun
KOLACHALAM, Manish Sharma
SRINIVASAN, Madhan Kumar
</inventors>

<docdb_family_id>
70861272
</docdb_family_id>

<title>
MACHINE-LEARNING-BASED AGGREGATION OF ACTIVATION PRESCRIPTIONS FOR SCALABLE COMPUTING RESOURCE SCHEDULING
</title>

<abstract>
A multi-layer resource aggregation (RA) stack may generate prescriptive activation timetables for controlling activation states for computing resources. To facilitate operator control and adjustment, the RA stack may, at an aggregation engine layer, aggregate the computing resource into one or more resource aggregates. The computing resources within the resource aggregates may have similar individual activation prescription patterns. Machine learning techniques may be used by the RA stack to identify these related individual activation prescription patterns and aggregate the computing resources accordingly. Once aggregated, the RA stack may make a uniform activation determination for the aggregates as single units. Therefore, the computing resources within the aggregate may be controlled and/or adjust together. Thus, the RA stack increases the scalability of implementation of prescriptive computing resource activation state determinations.
</abstract>

<claims>
1. A system including: network interface circuitry configured to: receive historical utilization data for multiple computing resources; and receive activation schedule data for the multiple computing resources; and aggregation circuitry in data communication with the network interface circuitry, the aggregation circuitry configured to execute a resource aggregation (RA) stack, the RA stack including: a data staging layer; an input layer; a treatment layer; a metrology layer; an aggregation engine layer; a decision threshold layer; and an activation execution layer; and the RA stack executable to: parse, at the input layer, the historical utilization data to generate interval-scaled data for a selected interval; store, via a memory operation at the data staging layer, the interval-scaled data; access, at the treatment layer, the interval-scaled data using a memory resource provided by the data staging layer; generate, for each of the multiple computing resources, a set of activation determinations corresponding to multiple timeslots with a selected duration including the selected interval; store, via a memory operation at the data staging layer, the set of activation determinations for each of the multiple computing resources; access, at a metrology layer of the RA stack, the set of activation determinations using a memory resource provided by the data staging layer; at the metrology layer, generate distance metrics by comparing the sets of activation determinations to determine spacings among individual ones of the multiple computing resources; based on the distance metrics, determine a set of summary vectors detailing the spacings among the individual ones of the multiple computing resources; pass, to an aggregation engine layer of the RA stack via memory operation at the data staging layer, the distance metrics and the summary vectors; based on the distance metrics and the summary vectors, aggregate the multiple computing resources in to a selected number of resource aggregates, the selected number being less than a total number of the multiple computing resources; and for each of the resource aggregates: determine, at the decision threshold layer, a uniform activation determination for a corresponding future timeslot of the selected duration; and generate, at the activation execution layer, entries in an activation timetable configured to requisition application of the uniform activation determination uniformly to each of the multiple computing resources within the resource aggregate.
2. The system of claim 1, where the set of summary vectors characterize periods above and below an activation recommendation threshold for the multiple computing resources within the multiple timeslots.
3. The system of claim 1 or 2, where the distance metrics are based on: grouping the summary vectors into groups; and determining distances between centers for the groups.
4. The system of claim 3, where the RA stack is further executable to, at the aggregation engine layer to aggregate the multiple computing resources by selecting the resource aggregates to achieve a base least-squares value.
5. The system of any one of the preceding claims, where the RA stack is further executable to, at the aggregation engine layer, regroup the multiple computing resource into a specific number of resource aggregates after making uniform activation determinations for each of the selected number of resource aggregates, where: the specific number is different from the selected number; and the specific number is less than the total number of the multiple computing resources.
6. The system of any one of the preceding claims, where the RA stack is further executable to, at the aggregation engine layer and for each of the resource aggregates, determine the uniform activation determination based on a first aggregate activation threshold.
7. The system of claim 6, where the RA stack is further executable to, at the aggregation engine layer and for each of the resource aggregates: determine to make a uniform activation determination that activates each computing resource in the resource aggregate when a number of activation recommendations for the computing resources in the resource aggregate exceeds the first aggregate activation threshold; and determine to make a uniform activation determination that deactivates each computing resource in the resource aggregate when the number of activation recommendations for the computing resources in the resource aggregate is below the first aggregate activation threshold.
8. The system of claim 6, where the RA stack is further executable to, at the aggregation engine layer and for each of the resource aggregates, re-determine the uniform activation determination based on a second aggregate activation threshold different that the first aggregate activation threshold to simulate uniform activation determinations for multiple different activation thresholds.
9. The system of any one of the preceding claims, where the RA stack further includes a presentation layer configured to generate an RA control interface configured to accept operator selections uniform activation determination parameters.
10. The system of claim 9, where the RA control interface includes an RA-window presentation configured to display information on uniform activation determinations, uniform activation determination parameters, or both.
11. A method including: at network interface circuitry: receiving historical utilization data for multiple computing resources; and receiving activation schedule data for the multiple computing resources; and at aggregation circuitry in data communication with the network interface circuitry: parsing, at an input layer of a resource aggregation (RA) stack, the historical utilization data to generate interval-scaled data for a selected interval; storing, via a memory operation at a data staging layer of the RA stack, the interval-scaled data; accessing, at a treatment layer of the RA stack, the interval-scaled data using a memory resource provided by the data staging layer; generating, for each of the multiple computing resources, a set of activation determinations corresponding to multiple timeslots with a selected duration including the selected interval; storing, via a memory operation at the data staging layer, the set of activation determinations for each of the multiple computing resources; accessing, at a metrology layer of the RA stack, the set of activation determinations using a memory resource provided by the data staging layer; at the metrology layer, generating distance metrics by comparing the sets of activation determinations to determine spacings among individual ones of the multiple computing resources; based on the distance metrics, determine a set of summary vectors detailing the spacings among the individual ones of the multiple computing resources; passing, to an aggregation engine layer of the RA stack via memory operation at the data staging layer, the distance metrics and the summary vectors; based on the distance metrics and the summary vectors, aggregating the multiple computing resources in to a selected number of resource aggregates, the selected number being less than a total number of the multiple computing resources; and for each of the resource aggregates: determining, at a decision threshold layer of the RA stack, a uniform activation determination for a corresponding future timeslot of the selected duration; and generating, at an activation execution layer of the RA stack, entries in an activation timetable configured to requisition application of the uniform activation determination uniformly to each of the multiple computing resources within the resource aggregate.
12. The method of claim 11, where determining a uniform activation determination for each of the resource aggregates includes determining the uniform activation determination based on a first aggregate activation threshold.
13. The method of claim 12, where determining a uniform activation determination for each of the resource aggregates includes: determining to make a uniform activation determination that activates each computing resource in the resource aggregate when a number of activation recommendations for the computing resources in the resource aggregate exceeds the first aggregate activation threshold; and determining to make a uniform activation determination that deactivates each computing resource in the resource aggregate when the number of activation recommendations for the computing resources in the resource aggregate is below the first aggregate activation threshold.
14. The method of claim 12 or 13, further including:
for each of the resource aggregates, re-determining the uniform activation determination based on a second aggregate activation threshold different that the first aggregate activation threshold to simulate uniform activation determinations for multiple different activation thresholds.
15. The method of any one of claims 11 to 14, further including generating, at a presentation layer of the RA stack, an RA control interface configured to accept operator selections uniform activation determination parameters.
</claims>
</document>
