<document>

<filing_date>
2019-06-06
</filing_date>

<publication_date>
2020-12-10
</publication_date>

<priority_date>
2019-06-06
</priority_date>

<ipc_classes>
G06F9/455,G06F9/50
</ipc_classes>

<assignee>
TELEFONAKTIEBOLAGET LM ERICSSON (PUBL)
</assignee>

<inventors>
GHERBI, ABDELOUAHED
LEMIEUX, YVES
LI WUBIN
OUNIFI, Hibat Allah
LIU, Xu
</inventors>

<docdb_family_id>
67441538
</docdb_family_id>

<title>
METHOD, APPARATUS AND SYSTEM FOR HIGH PERFORMANCE PERIPHERAL COMPONENT INTERCONNECT DEVICE RESOURCE SHARING IN CLOUD ENVIRONMENTS
</title>

<abstract>
Apparatuses and methods are disclosed for virtualizing a peripheral component interconnect, PCI, device. In one embodiment, a method includes transmitting a request for use of the PCI device; and receiving an indication of an attachment of a VM server to the VM client, the VM server being associated with the PCI device. In one embodiment, a method includes receiving a request to perform at least one computing process using the PCI device; and transmitting information resulting from performance of the at least one computing process using the PCI device. In another embodiment, a method includes receiving a request to use the PCI device; selecting a VM server out of a plurality of VM servers; and transmitting an indication of an attachment of the selected VM server to a VM client, the VM server being associated with the PCI device.
</abstract>

<claims>
1. A method for a virtual machine, VM, client (20) for using a virtualized peripheral component interconnect, PCI, device (26), the method comprising:
transmitting (S100) a request for use of the PCI device (26); and
as a result of the request, receiving (S102) an indication of an attachment of a VM server (24) to the VM client (20), the VM server (24) being associated with the PCI device (26).
2. The method of Claim 1, wherein the PCI device (26) includes a graphics processing unit, GPU.
3. The method of any one of Claims 1 and 2, wherein at least one of: the VM server (24) is allowed a direct pass-through to the PCI device (26); the VM server (24) is allowed exclusive access to the PCI device (26);
the VM server (24) bypasses a hypervisor (28) associated with a virtual environment, the virtual environment including the VM client (20) and the VM server (24); and
the VM server (24) having device drivers for the PCI device (26).
4. The method of any one of Claims 1-3, further comprising:
transmitting a request to the VM server (24) to perform at least one computing process using the PCI device (26); and
receiving information resulting from performance of the at least one computing process using the PCI device (26).
5. The method of any one of Claims 1-4, further comprising:
using an application programming interface, API, associated with the VM server (24) to run at least one computing process on the VM server (24) using the PCI device (26).
6. The method of any one of Claims 1-5, further comprising: transmitting an indication of at least one requirement associated with the PCI device (26), the VM server (24) being selected based at least in part on the at least one requirement. 7. The method of any one of Claims 1-6, further comprising:
allocating the at least one computing process to the VM server (24); and as a result of receiving information resulting from performance of the at least one computing process using the PCI device (26), collecting and synchronizing the received information.
8. A method for a server selector (22) for virtualizing a physical peripheral component interconnect, PCI, device (26), the method comprising:
receiving (S104) a request to use the PCI device (26);
as a result of the request, selecting (S106) a virtual machine, VM, server out of a plurality of VM server (24)s; and
transmitting (S108) an indication of an attachment of the selected VM server (24) to a VM client (20), the VM server (24) being associated with the PCI device (26). 9. The method of Claim 8, further comprising:
receiving an indication of at least one requirement associated with the PCI device (26), the VM server (24) being selected based at least in part on the at least one requirement. 10. The method of any one of Claims 8 and 9, further comprising:
attaching the selected VM server (24) to the VM client (20).
11. The method of any one of Claims 8-10, further comprising:
obtaining application programming interface, API, information from the VM server (24).
12. The method of any one of Claims 8-11, further comprising: obtaining a status of the VM server (24); and
at least one of:
updating a status table with the obtained status of the VM server (24); and
performing an operation based on the obtained status.
13. The method of any one of Claims 8-12, wherein each of the plurality of VM servers (24) is allowed exclusive access to a single PCI device (26).
14. The method of any one of Claims 8-13, further comprising:
using machine learning to at least one of select the VM server (24) out of the plurality of VM servers (24) and manage the plurality of VM servers (24).
15. A method for a virtual machine, VM, server (24) for virtualizing a peripheral component interconnect, PCI, device (26), the method comprising:
receiving (S 110), from a VM client (20), a request to perform at least one computing process using the PCI device (26); and
transmitting (S 112) information resulting from performance of the at least one computing process using the PCI device (26).
16. The method of Claim 15, further comprising:
performing the at least one computing process by running, at the VM server (24), the at least one computing process using the PCI device (26).
17. The method of any one of Claims 15 and 16, wherein the receiving the request further comprises:
receiving the request to perform the at least one computing process via an application programming interface, API, associated with the VM server (24).
18. The method of any one of Claims 15-17, further comprising:
obtaining data on which to perform the at least one computing process; and performing the at least one computing process by running, at the VM server (24), the at least one computing process on the data using the PCI device (26).
19. The method of any one of Claims 15-18, further comprising:
providing, to a server selector, at least one of application programming interface, API, information associated with the VM server (24) and a status of the VM server (24) to the server selector.
20. The method of any one of Claims 15-19, wherein the PCI device (26) is a graphics processing unit, GPU.
21. The method of any one of Claims 15-20, further comprising:
performing the at least one computing process via at least one of:
a direct pass-through to the PCI device (26);
exclusive access to the PCI device (26);
bypassing a hypervisor (28) associated with a virtual environment, the virtual environment including the VM client (20) and the VM server (24); and
device drivers for the PCI device (26).
22. A device (32) for a virtual machine, VM, client (20) for using a virtualized peripheral component interconnect, PCI, device (26), the device (32) comprising processing circuitry (42) and memory (44), the memory (44) comprising instructions and the processing circuitry (42) configured to execute the instructions to cause the device (32) to:
transmit a request for use of the PCI device (26); and
as a result of the request, receive an indication of an attachment of a VM server (24) to the VM client (20), the VM server (24) being associated with the PCI device (26).
23. The device (32) of Claim 22, wherein the PCI device (26) includes a graphics processing unit, GPU. 24. The device of any one of Claims 22 and 23, wherein at least one of: the VM server (24) is allowed a direct pass-through to the PCI device (26); the VM server (24) is allowed exclusive access to the PCI device (26);
the VM server (24) bypasses a hypervisor (28) associated with a virtual environment, the virtual environment including the VM client (20) and the VM server (24); and
the VM server (24) having device drivers for the PCI device (26).
25. The device (32) of any one of Claims 22-24, wherein the processing circuitry (42) is further configured to execute the instructions to cause the device (32) to:
transmit a request to the VM server (24) to perform at least one computing process using the PCI device (26); and
receive information resulting from performance of the at least one computing process using the PCI device (26).
26. The device (32) of any one of Claims 22-25, wherein the processing circuitry (42) is further configured to execute the instructions to cause the device (32) to:
use an application programming interface, API, associated with the VM server (24) to run at least one computing process on the VM server (24) using the PCI device (26).
27. The device (32) of any one of Claims 22-26, wherein the processing circuitry (42) is further configured to execute the instructions to cause the device (32) to:
transmit an indication of at least one requirement associated with the PCI device (26), the VM server (24) being selected based at least in part on the at least one requirement. 28. The device (32) of any one of Claims 22-27, wherein the processing circuitry (42) is further configured to execute the instructions to cause the device (32) to:
allocate the at least one computing process to the VM server (24); and as a result of receiving information resulting from performance of the at least one computing process using the PCI device (26), collect and synchronize the received information.
29. A device (34) for a server selector (22) for virtualizing a peripheral component interconnect, PCI, device (26), the device comprising processing circuitry (52) and memory (54), the memory (54) comprising instructions and the processing circuitry (52) configured to execute the instructions to cause the device (34) to:
receive a request to use the PCI device (26);
as a result of the request, select a virtual machine, VM, server out of a plurality of VM servers (24); and
transmit an indication of an attachment of the selected VM server (24) to a VM client (20), the VM server (24) being associated with the PCI device (26).
30. The device (34) of Claim 29, wherein the processing circuitry (52) is further configured to execute the instructions to cause the device (34) to:
receive an indication of at least one requirement associated with the PCI device (26), the VM server (24) being selected based at least in part on the at least one requirement.
31. The device (34) of any one of Claims 29 and 30, wherein the processing circuitry (52) is further configured to execute the instructions to cause the device (34) to:
attach the selected VM server (24) to the VM client (20).
32. The device (34) of any one of Claims 29-31, wherein the processing circuitry (52) is further configured to execute the instructions to cause the device (34) to: obtain application programming interface, API, information from the VM server (24).
33. The device (34) of any one of Claims 29-32, wherein the processing circuitry (52) is further configured to execute the instructions to cause the device (34) to:
obtain a status of the VM server (24); and
at least one of:
update a status table with the obtained status of the VM server (24); and
perform an operation based on the obtained status.
34. The device (34) of any one of Claims 29-33, wherein each of the plurality of VM servers (24) is allowed exclusive access to a single PCI device (26).
35. The device (34) of any one of Claims 29-34, wherein the processing circuitry (52) is further configured to execute the instructions to cause the device (34) to:
use machine learning to at least one of select the VM server (24) out of the plurality of VM servers (24) and manage the plurality of VM servers (24).
36. A device (36) for a virtual machine, VM, server (24) for virtualizing a peripheral component interconnect, PCI, device (26), the device (36) comprising processing circuitry (62) and memory (64), the memory (64) comprising instructions and the processing circuitry (62) configured to execute the instructions to cause the device (36) to:
receive, from a VM client (20), a request to perform at least one computing process using the PCI device (26); and
transmit information resulting from performance of the at least one computing process using the PCI device (26). 37. The device (36) of Claim 36, wherein the processing circuitry (62) is further configured to execute the instructions to cause the device (36) to:
perform the at least one computing process by running, at the VM server (24), the at least one computing process using the PCI device (26).
38. The device (36) of any one of Claims 36 and 37, wherein the processing circuitry (62) is further configured to receive the request by being further configured to:
receive the request to perform the at least one computing process via an application programming interface, API, associated with the VM server (24).
39. The device (36) of any one of Claims 36-38, wherein the processing circuitry (62) is further configured to execute the instructions to cause the device (36) to:
obtain data on which to perform the at least one computing process; and perform the at least one computing process by running, at the VM server (24), the at least one computing process on the data using the PCI device (26).
40. The device (36) of any one of Claims 36-39, wherein the processing circuitry (62) is further configured to execute the instructions to cause the device (36) to:
provide, to a server selector, at least one of application programming interface, API, information associated with the VM server (24) and a status of the VM server (24) to the server selector.
41. The device (36) of any one of Claims 36-40, wherein the PCI device (26) is a graphics processing unit, GPU.
42. The device (36) of any one of Claims 36-41, wherein the processing circuitry (62) is further configured to execute the instructions to cause the device (36) to:
perform the at least one computing process via at least one of: a direct pass-through to the PCI device (26);
exclusive access to the PCI device (26);
bypassing a hypervisor (28) associated with a virtual environment, the virtual environment including the VM client (20) and the VM server (24); and
device drivers (30) for the PCI device (26).
43. A system for providing a virtualized peripheral component
interconnect, PCI, device (26), the system comprising:
a VM client device (32) comprising processing circuitry (42) and memory (44), the memory (44) comprising instructions and the processing circuitry (42) configured to execute the instructions to cause the VM client device (32) to:
transmit a request for use of the PCI device (26); and
as a result of the request, receive an indication of an attachment of a VM server (24) to the VM client (20), the VM server (24) being associated with the PCI device (26);
a server selector device (34) comprising processing circuitry (52) and memory (54), the memory (54) comprising instructions and the processing circuitry (52) configured to execute the instructions to cause the server selector device (34) to:
receive the request to use the PCI device (26);
as a result of the request, select the VM server (24) out of a plurality of VM servers (24); and
transmit the indication of the attachment of the selected VM server (24) to the VM client (20); and
a VM server device (36) comprising processing circuitry (62) and memory (64), the memory (64) comprising instructions and the processing circuitry (62) configured to execute the instructions to cause the VM server device (36) to:
receive, from the VM client (20), a request to perform at least one computing process using the PCI device (26); and
transmit information resulting from performance of the at least one computing process using the PCI device (26). 44. A non-transitory computer-readable storage medium storing executable program instructions that, when executed, perform any of the methods of Claims 1- 21.
</claims>
</document>
