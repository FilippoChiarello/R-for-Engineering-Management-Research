<document>

<filing_date>
2018-02-23
</filing_date>

<publication_date>
2020-01-21
</publication_date>

<priority_date>
2018-02-23
</priority_date>

<ipc_classes>
G06F11/36,G06F9/38,G06F9/44,G06T1/20
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
OULD-AHMED-VALL, ELMOUSTAPHA
VENKATESH, ABHISHEK
BURKE, DEVAN
GIERACH, JOHN
SCHLUESSLER, TRAVIS
BAR ON, TOMER
</inventors>

<docdb_family_id>
67685920
</docdb_family_id>

<title>
Dynamic instruction latency management in SIMD machines
</title>

<abstract>
In one example, an apparatus comprises processing circuitry to analyze a program at compile time to determine a set of latency parameters associated with instruction sets implemented to execute the program and select a latency management technique based at least in part on the set of latency parameters associated with instruction sets implemented to execute the program. Other examples may be described and claimed.
</abstract>

<claims>
1. An apparatus comprising: a general purpose graphic processor, comprising: an instruction cache to receive a stream of instructions generated by a graphics program; an instruction unit to execute the stream of instructions; a general-purpose graphics processing compute block comprising a plurality of graphics compute units; a plurality of registers coupled to the plurality of graphics processing compute units; a hardware unit to selectively enable the instruction unit to execute the stream of instructions out of order; and a processor communicatively coupled to the general purpose graphics processor to: select a first hardware thread count to be applied to the plurality of graphics compute units to execute the stream of instructions; analyze the graphics program to be executed on the general purpose graphics processor at compile time to determine a set of latency parameters associated with the execution of the stream of instructions at the first hardware thread count; select a latency management technique to be implemented by the general purpose graphics processor based at least in part on the set of latency parameters associated with instruction sets implemented to execute the program; determine the set of latency parameters associated with instruction sets implemented to execute the program at a current hardware thread count; determine a composite latency score for the program from the set of latency parameters at the current thread count; and compare the composite latency score at the current hardware thread count to a threshold.
2. The apparatus of claim 1, the processor to: generate an instruction for the general purpose graphics processor to select a second hardware thread count, greater than the first hardware thread count.
3. The apparatus of claim 1, the processor to: set the hardware thread count for execution of the program to the current hardware thread when the composite latency score falls beneath the threshold.
4. The apparatus of claim 1, the processor to: generate an instruction for the general purpose graphics processor to enable out-of-order instruction scheduling for hardware executing the program.
5. An electronic device, comprising: a computer readable memory: a graphics processor comprising; an instruction cache to receive a stream of instructions generated by a graphics program; an instruction unit to execute the stream of instructions; a general-purpose graphics processing compute block comprising a plurality of graphics compute units; a plurality of registers coupled to the plurality of graphics processing compute units; a hardware unit to selectively enable the instruction unit to execute the stream of instructions out of order; and a processor communicatively coupled to the general purpose graphics processor to: select a first hardware thread count to be applied to the plurality of graphics compute units to execute the stream of instructions; analyze the graphics program to be executed on the general purpose graphics processor at compile time to determine a set of latency parameters associated with the execution of the stream of instructions at the first hardware thread count; and select a latency management technique to be implemented by the general purpose graphics processor based at least in part on the set of latency parameters associated with instruction sets implemented to execute the program: determine the set of latency parameters associated with instruction count; determine a composite latency score for the program from the set of latency parameters at the current thread count; and compare the composite latency score at the current hardware thread count to a threshold.
6. The electronic device of claim 5 further comprising processing circuitry to: generate an instruction for the general purpose graphics processor to select a second hardware thread count, greater than the first hardware thread count.
7. The electronic device of claim 6 the processor to: implement an alternate latency management technique in response to a determination that the program latency cannot be adequately addressed by adjusting a thread count allocated to the instruction sets implemented to execute the program.
8. The electronic device of claim 7, the processor to: generate an instruction for the general purpose graphics processor to enable out-of-order instruction scheduling for hardware executing the program.
9. The electronic device of claim 5, the processor to: set the hardware thread count for execution of the program to the current hardware thread when the composite latency score falls beneath the threshold.
</claims>
</document>
