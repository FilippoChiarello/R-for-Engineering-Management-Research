<document>

<filing_date>
2019-06-03
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-06-03
</priority_date>

<ipc_classes>
H04L12/24,H04L12/46,H04L12/703,H04L12/715
</ipc_classes>

<assignee>
CISCO TECHNOLOGY
</assignee>

<inventors>
VASSEUR, JEAN-PHILIPPE
KOLAR, VINAY KUMAR
WULFF, SHARON SHOSHANA
Mermoud, Gr√©gory
</inventors>

<docdb_family_id>
70918206
</docdb_family_id>

<title>
ENSURING BACKUP PATH PERFORMANCE FOR PREDICTIVE ROUTING IN SD-WANs
</title>

<abstract>
In one embodiment, a device predicts a failure of a first tunnel in a software-defined wide area network (SD-WAN). The device makes a prediction as to whether a second tunnel in the SD-WAN will satisfy a service level agreement (SLA) associated with traffic on the first tunnel. The device proactively reroutes the traffic from the first tunnel onto the second tunnel, based on the prediction as to whether that the second tunnel will satisfy the SLA of the traffic. The device monitors one or more quality of service (QoS) metrics for the rerouted traffic, to ensure that the second tunnel satisfies the SLA of the traffic.
</abstract>

<claims>
1. A method comprising: predicting, by a device, a failure of a first tunnel in a software-defined wide area network (SD-WAN); making, by the device, a prediction as to whether a second tunnel in the SD-WAN will satisfy a service level agreement (SLA) associated with traffic on the first tunnel; proactively rerouting, by the device, the traffic from the first tunnel onto the second tunnel, based on the prediction as to whether that the second tunnel will satisfy the SLA of the traffic; and monitoring, by the device, one or more quality of service (QoS) metrics for the rerouted traffic, to ensure that the second tunnel satisfies the SLA of the traffic.
2. The method as in claim 1, further comprising: determining, by the device, that the SLA of the traffic is not being met on the second tunnel, based on the monitored one or more QoS metrics; and rerouting, by the device, the traffic back onto the first tunnel, based on the determination.
3. The method as in claim 2, wherein the device reroutes the traffic back onto the first tunnel, prior to a time associated with the predicted failure of the first tunnel.
4. The method as in claim 1, wherein making the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel comprises: performing a what-if test of the second tunnel by temporarily rerouting at least a portion of the traffic onto the second tunnel, prior to predicting the failure of the first tunnel; and using QoS metrics obtained from the what-if test to train a machine learning model to predict whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic.
5. The method as in claim 1, wherein the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel indicates that the second tunnel will not satisfy the SLA of the traffic, and wherein the device still reroutes the traffic onto the second tunnel based on a probability of failure associated with the predicted failure of the first tunnel.
6. The method as in claim 1, further comprising: determining that the predicted failure of the first tunnel did not occur; and rerouting the traffic back onto the first tunnel, based on the determination that the predicted failure did not occur.
7. The method as in claim 1, wherein the device is a head-end router of the first and second tunnels.
8. An apparatus, comprising: one or more network interfaces to communicate with a software-defined wide area network (SD-WAN); a processor coupled to the network interfaces and configured to execute one or more processes; and a memory configured to store a process executable by the processor, the process when executed configured to: predict a failure of a first tunnel in a software-defined wide area network (SD-WAN); make a prediction as to whether a second tunnel in the SD-WAN will satisfy a service level agreement (SLA) associated with traffic on the first tunnel; proactively reroute the traffic from the first tunnel onto the second tunnel, based on the prediction as to whether that the second tunnel will satisfy the SLA of the traffic; and monitor one or more quality of service (QoS) metrics for the rerouted traffic, to ensure that the second tunnel satisfies the SLA of the traffic.
9. The apparatus as in claim 8, wherein the process when executed is further configured to: determine that the SLA of the traffic is not being met on the second tunnel, based on the monitored one or more QoS metrics; and reroute the traffic back onto the first tunnel, based on the determination.
10. The apparatus as in claim 9, wherein the apparatus reroutes the traffic back onto the first tunnel, prior to a time associated with the predicted failure of the first tunnel.
11. The apparatus as in claim 8, wherein the apparatus makes the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel by: performing a what-if test of the second tunnel by temporarily rerouting at least a portion of the traffic onto the second tunnel, prior to predicting the failure of the first tunnel; and using QoS metrics obtained from the what-if test to train a machine learning model to predict whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic.
12. The apparatus as in claim 8, wherein the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel indicates that the second tunnel will not satisfy the SLA of the traffic, and wherein the apparatus still reroutes the traffic onto the second tunnel based on a probability of failure associated with the predicted failure of the first tunnel.
13. The apparatus as in claim 8, wherein the process when executed is further configured to: determine that the predicted failure of the first tunnel did not occur; and reroute the traffic back onto the first tunnel, based on the determination that the predicted failure did not occur.
14. The apparatus as in claim 8, wherein the apparatus comprises a head-end router of the first and second tunnels.
15. A tangible, non-transitory, computer-readable medium storing program instructions that cause a device in a software-defined wide area network (SD-WAN) to execute a process comprising: predicting, by the device, a failure of a first tunnel in the SD-WAN; making, by the device, a prediction as to whether a second tunnel in the SD-WAN will satisfy a service level agreement (SLA) associated with traffic on the first tunnel; proactively rerouting, by the device, the traffic from the first tunnel onto the second tunnel, based on the prediction as to whether that the second tunnel will satisfy the SLA of the traffic; and monitoring, by the device, one or more quality of service (QoS) metrics for the rerouted traffic, to ensure that the second tunnel satisfies the SLA of the traffic.
16. The computer-readable medium as in claim 15, wherein the process further comprises: determining, by the device, that the SLA of the traffic is not being met on the second tunnel, based on the monitored one or more QoS metrics; and rerouting, by the device, the traffic back onto the first tunnel, based on the determination.
17. The computer-readable medium as in claim 16, wherein the device reroutes the traffic back onto the first tunnel, prior to a time associated with the predicted failure of the first tunnel.
18. The computer-readable medium as in claim 15, wherein making the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel comprises: performing a what-if test of the second tunnel by temporarily rerouting at least a portion of the traffic onto the second tunnel, prior to predicting the failure of the first tunnel; and using QoS metrics obtained from the what-if test to train a machine learning model to predict whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic.
19. The computer-readable medium as in claim 15, wherein the prediction as to whether the second tunnel in the SD-WAN will satisfy the SLA associated with the traffic on the first tunnel indicates that the second tunnel will not satisfy the SLA of the traffic, and wherein the device still reroutes the traffic onto the second tunnel based on a probability of failure associated with the predicted failure of the first tunnel.
20. The computer-readable medium as in claim 15, wherein the process further comprises: determining that the predicted failure of the first tunnel did not occur; and rerouting the traffic back onto the first tunnel, based on the determination that the predicted failure did not occur.
</claims>
</document>
