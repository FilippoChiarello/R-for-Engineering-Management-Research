<document>

<filing_date>
2020-03-20
</filing_date>

<publication_date>
2020-09-24
</publication_date>

<priority_date>
2020-03-20
</priority_date>

<assignee>
FUTUREWEI TECHNOLOGIES
</assignee>

<inventors>
LI JIAN
LIU LIFENG
MAZUMDER, Sahisnu
</inventors>

<docdb_family_id>
70293102
</docdb_family_id>

<title>
SYSTEM AND METHOD FOR MULTI-TASK LIFELONG LEARNING ON PERSONAL DEVICE WITH IMPROVED USER EXPERIENCE
</title>

<abstract>
This disclosure relates to recommendations made to users based on learned behavior patterns. User behavior data is collected and grouped according labels. The grouped user behavior data is labeled and used to train a machine learning model based on features and tasks associated with the classification. User behavior is then predicted by applying the trained machine learning model to the collected user behavior data, and a task is recommended to the user.
</abstract>

<claims>
What is claimed is:
1. A computer-implemented method for providing recommendations to a user based on learned user behavior, comprising:
collecting user behavior data, from one or more sources, of a first user during a current time interval in relation to a context of a surrounding environment, the collected user behavior data enriched with associated information;
grouping the user behavior data by labels, each of the grouped user behavior data labeled with a corresponding task classification and the grouped user behavior data training a first machine learning model;
proactively predicting an expected user behavior data during a future time interval by applying the trained first machine learning model to the collected user behavior data, and recommending a task to the first user based on the expected user behavior and a threshold associated with each task classification;
obtaining feedback from the first user and continuously learning patterns in the collected user behavior data to refine the trained first machine learning model based on the feedback and changes to the user behavior data; and
storing the trained first machine learning model into a knowledge base for continued and multi-task learning.
2. The computer-implemented method of claim 1 , further comprising collecting the user behavior data of one or more second users to continuously learn patterns in the collected user behavior data in which to predict the expected user behavior data.
3. The computer-implemented method of any one of claims 1 - 2, wherein refining the trained machine learning model comprises:
continuously tracking the first user to collect additional user behavior data, storing the additional user behavior data in a data buffer, wherein the additional user behavior data is stored in a time sequence;
removing the additional user behavior data stored in the data buffer that appears earlier in the time sequence and appending the additional user behavior data stored in the data buffer that appears later in the time sequence, when the data buffer is full; and
retraining the trained first machine learning model with the first user behavior data remaining in the data buffer.
4. The computer-implemented method of any one of claims 1 - 3, wherein the threshold is adaptively learned over a period of time and provides a basis of measurement in which to ensure that the predicting satisfies a level of confidence; and
the task is recommended to the first user when the prediction satisfies the threshold.
5. The computer-implemented method of any one of claims 1 - 4, wherein detecting similarities comprises:
comparing similarity metrics between the trained first machine learning model of the first user and a trained second machine learning model of a second user for a same task; and
computing the similarity metrics for the trained first machine learning model and trained the second machine learning model.
6. The computer-implemented method of any one of claims 1 - 5, wherein detecting similarities comprises combining a set of commonly learned tasks for the first and second users to determine the similarity metrics between the first and second users based on the computed similarity metrics of learned models for the tasks in the set of commonly learned tasks.
7. The computer-implemented method of any one of claims 1 - 6, wherein detecting similarities comprises:
determining a subset of tasks from the group of tasks, the subset of tasks having a same task classification as the task to be predicted;
extracting meta-data from each of the tasks in the subset of tasks into a single document; applying an information retrieval method to measure the document similarity as the task similarity with the task to recommend;
sorting and determining the most similar task within the group of tasks to the task to recommend; and
applying the associated learned machine model for the task to recommend.
8. The computer-implemented method of any one of claims 6 and 7, wherein detecting similarities comprises:
for a new task for the first user,
determining the most similar learned machine model from the most similar second user based on the combined similarity metrics using user similarities and task similarities and using the learned model to recommend for the new task; and
recommending the new task to the first user based on applying the learned machine model.
9. The computer-implemented method of claim 1 , wherein the associated information is enrichment data collected from third party sources.
10. A personal assistant on a mobile device to provide recommendations to a user based on learned user behavior, comprising:
one or more sensors for sensing user behavior data;
a non-transitory memory storage comprising instructions; and
one or more processors in communication with the memory and the one or more sensors, wherein the one or more processors execute the instructions to:
collect user behavior data, from the one or more sensors, of a first user during a current time interval in relation to a context of a surrounding environment, the collected user behavior data enriched with associated information;
group the user behavior data by labels, each of the grouped user behavior data labeled with a corresponding task classification and the grouped user behavior data training a first machine learning model;
proactively predict an expected user behavior data during a future time interval by applying the trained first machine learning model to the collected user behavior data, and recommending a task to the first user based on the expected user behavior and a threshold associated with each task classification;
obtain feedback from the first user and continuously learning patterns in the collected user behavior data to refine the trained first machine learning model based on the feedback and changes to the user behavior data; and store the trained first machine learning model into a knowledge base for continued and multi-task learning.
1 1 . The personal assistant of claim 10, wherein the one or more processors execute the instructions to collect the user behavior data of one or more second users to continuously learn patterns in the collected user behavior data in which to predict the expected user behavior data.
12. The personal assistant of any one of claims 10 - 1 1 , wherein refining the trained machine learning model causes the one or more processors to execute the instructions to:
continuously track the first user to collect additional user behavior data, store the additional user behavior data in a data buffer, wherein the additional user behavior data is stored in a time sequence;
remove the additional user behavior data stored in the data buffer that appears earlier in the time sequence and appending the additional user behavior data stored in the data buffer that appears later in the time sequence, when the data buffer is full; and
retrain the trained first machine learning model with the first user behavior data remaining in the data buffer.
13. The personal assistant of any one of claims 1 1 - 12, wherein
the threshold is adaptively learned over a period of time and provides a basis of measurement in which to ensure that the predicting satisfies a level of confidence; and
the task is recommended to the first user when the prediction satisfies the threshold. 14. The personal assistant of any one of claims 1 1 - 13, wherein detecting similarities causes the one or more processors to execute the instructions to:
compare similarity metrics between the trained first machine learning model of the first user and a trained second machine learning model of a second user for a same task; and
compute the similarity metrics for the trained first machine learning model and trained the second machine learning model.
15. The personal assistant of any one of claims 1 1 - 14, wherein detecting similarities causes the one or more processors to execute the instructions to combine a set of commonly learned tasks for the first and second users to determine the similarity metrics between the first and second users based on the computed similarity metrics of learned models for the tasks in the set of commonly learned tasks.
16. The personal assistant of any one of claims 1 1 - 15, wherein detecting similarities causes the one or more processors to execute the instructions to:
determine a subset of tasks from the group of tasks, the subset of tasks having a same task classification as the task to be predicted;
extract meta-data from each of the tasks in the subset of tasks into a single document;
apply an information retrieval method to measure the document similarity as the task similarity with the task to recommend;
sort and determining the most similar task within the group of tasks to the task to recommend; and
apply the associated learned machine model for the task to recommend.
17. The personal assistant of any one of claims 15 and 16, wherein detecting similarities causes the one or more processors to execute the instructions to:
for a new task for the first user,
determine the most similar learned machine model from the most similar second user based on the combined similarity metrics using user similarities and task similarities and using the learned model to recommend for the new task; and recommend the new task to the first user based on applying the learned machine model.
18. The personal assistant of claim 11 , wherein the associated information is enrichment data collected from third party sources.
19. A non-transitory computer-readable medium storing computer instructions for providing recommendations to a user based on learned behavior, that when executed by one or more processors, cause the one or more processors to perform the steps of:
collecting user behavior data, from one or more sources, of a first user during a current time interval in relation to a context of a surrounding environment, the collected user behavior data enriched with associated information;
grouping the user behavior data by labels, each of the grouped user behavior data labeled with a corresponding task classification and the grouped user behavior data training a first machine learning model;
proactively predicting an expected user behavior data during a future time interval by applying the trained first machine learning model to the collected user behavior data, and recommending a task to the first user based on the expected user behavior and a threshold associated with each task classification;
obtaining feedback from the first user and continuously learning patterns in the collected user behavior data to refine the trained first machine learning model based on the feedback and changes to the user behavior data; and
storing the trained first machine learning model into a knowledge base for continued and multi-task learning.
20. The non-transitory computer-readable medium of claim 19, further causing the one or more processors to perform the steps of collecting the user behavior data of one or more second users to continuously learn patterns in the collected user behavior data in which to predict the expected user behavior data.
21. The non-transitory computer-readable medium of any one of claims 19 - 20, wherein refining the trained machine learning model causing the one or more processors to perform the steps of:
continuously tracking the first user to collect additional user behavior data, storing the additional user behavior data in a data buffer, wherein the additional user behavior data is stored in a time sequence;
removing the additional user behavior data stored in the data buffer that appears earlier in the time sequence and appending the additional user behavior data stored in the data buffer that appears later in the time sequence, when the data buffer is full; and
retraining the trained first machine learning model with the first user behavior data remaining in the data buffer.
22. The non-transitory computer-readable medium of any one of claims 19
- 21 , wherein
the threshold is adaptively learned over a period of time and provides a basis of measurement in which to ensure that the predicting satisfies a level of confidence; and
the task is recommended to the first user when the prediction satisfies the threshold.
23. The non-transitory computer-readable medium of any one of claims 19
- 22, wherein detecting similarities causing the one or more processors to perform the steps of:
comparing similarity metrics between the trained first machine learning model of the first user and a trained second machine learning model of a second user for a same task; and
computing the similarity metrics for the trained first machine learning model and trained the second machine learning model.
24. The non-transitory computer-readable medium of any one of claims 19
- 24, wherein detecting similarities causing the one or more processors to perform the steps of combining a set of commonly learned tasks for the first and second users to determine the similarity metrics between the first and second users based on the computed similarity metrics of learned models for the tasks in the set of commonly learned tasks.
25. The non-transitory computer-readable medium of any one of claims 19 - 24, wherein detecting similarities causing the one or more processors to perform the steps of:
determining a subset of tasks from the group of tasks, the subset of tasks having a same task classification as the task to be predicted;
extracting meta-data from each of the tasks in the subset of tasks into a single document;
applying an information retrieval method to measure the document similarity as the task similarity with the task to recommend;
sorting and determining the most similar task within the group of tasks to the task to recommend; and
applying the associated learned machine model for the task to recommend.
26. The non-transitory computer-readable medium of any one of claims 24 and 25, wherein detecting similarities causing the one or more processors to perform the steps of:
for a new task for the first user,
determining the most similar learned machine model from the most similar second user based on the combined similarity metrics using user similarities and task similarities and using the learned model to recommend for the new task; and
recommending the new task to the first user based on applying the learned machine model.
27. The non-transitory computer-readable medium of claim 19, wherein the associated information is enrichment data collected from third party sources.
</claims>
</document>
