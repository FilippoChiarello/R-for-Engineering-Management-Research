<document>

<filing_date>
2019-06-12
</filing_date>

<publication_date>
2020-11-10
</publication_date>

<priority_date>
2017-01-05
</priority_date>

<ipc_classes>
G06F8/30,G06F8/71,G06F9/44,G06Q10/10
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
PICKOVER CLIFFORD A.
KOZLOSKI, JAMES R.
WELDEMARIAM, KOMMINIST
</inventors>

<docdb_family_id>
62712444
</docdb_family_id>

<title>
Blockchain for program code credit and programmer contribution in a collective
</title>

<abstract>
A system for producing a computer program code collaboratively using blockchain includes a plurality of computer nodes, the plurality of computer nodes forming a distributed network for collaborative work. Each of the computer nodes communicates directly with the others, and is operated by a user in accordance with a common smart contract. Contributions of each of the users are entered into the blockchain at respective computer nodes as blocks when transactions have been completed in accordance with the following steps: writing code for inclusion in said computer software program; submitting the code for the computer software program to the distributed network to complete a transaction to add a block with the code to the blockchain of the computer software program; detecting by the distributed network of the submission of code for the computer software program; and adding the code as a block to the blockchain of the computer software program.
</abstract>

<claims>
1. A system comprising a plurality of computer nodes, each of said plurality of computer nodes having at least one processor, said plurality of computer nodes forming a distributed network for collaborative work, wherein each of said computer nodes of the plurality of computer nodes communicates directly with each of the other computer nodes of the plurality of computer nodes, each of said computer nodes being operated by a user in accordance with a common smart contract to produce a computer software program collaboratively with other users using blockchain, wherein contributions of each of said users for said computer software program are entered into the blockchain at respective computer nodes as blocks when each of said contributions has been made in accordance with the following: writing a portion of said computer software program for inclusion in said computer software program; submitting said portion for inclusion in said computer software program to said distributed network to make a contribution to add a block with said portion to said blockchain for said computer software program, said contribution including an indication of the user making the contribution, said distributed network then: detecting the submission of said portion for said computer software program; adding the portion as a block to said blockchain for said computer software program; tracking the contributions of individual users; and verifying the contributions of individual users against an instance of the computer software program by requesting an assessment of a contribution history of the instance of the computer software program, wherein a central owner of the computer software program has released an ancestral version of the computer software program into a public domain to allow blockchain-based version control to track mutations and evolution of the computer software program by different parties, and to offer bounties for successful achievement of a particular functionality, reliability, and bug-free condition.
2. The system as claimed in claim 1, further comprising: adding, by a user, one or more of the following customized parameters as a block to said blockchain: a chronicle of contributions to said computer software program through the "life", or for a period of time, T, of said computer software program and through versions of said computer software program; identification of users programming said computer software program; ratings of additions to said computer software program; one or more lines of said computer software program, debug outcomes, and quality/efficiency of said computer software program; one or more units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures; a code module, function or procedure, an entire interface, an individual method, short code fragments created by users or by white box testers during a development process; greenness of said computer software program, storage efficiency, and/or CPU efficiency; comprehensibility ratings of said computer software program, and dates of additions; role of the user programming said computer software program; coding work-items and types of work-item; updating status of a work-item/product; time spent in each stage of progress; and a multidimensional vector related to unit test outcomes, storage efficiency, assessment of comprehensibility for different cohorts /teams of coders, and code compliance parameters.
3. The system as claimed in claim 1, further comprising: sending, by a user, computer software program contribution parameters corresponding to said computer software program to one or more validation devices or modules to establish a validity of transaction, and to generate a new block to be appended to the blockchain.
4. The system as claimed in claim 1, further comprising: storing data on said computer software program in an electric tally system including a distributed network of voting/commenting features or modules in communication with one another.
5. The system as claimed in claim 1, further comprising: storing at least one of votes and ratings on the block in said blockchain, and updating tallies of said at least one of votes and ratings when they are received.
6. The system as claimed in claim 1, wherein the blockchain comprises at least one code security block, said at least one code security block including one or more of the following: coder/user location, coder/user capabilities, coding behavior of coder/user, code editor model, and contextual information related to security concerns.
7. The system as claimed in claim 1, further comprising: mining blockchains of other computer software programs related to said computer software program.
8. The system as claimed in claim 1, further comprising: mining said blockchain to determine computer software programs exhibiting, or having the potential to exhibit, erratic operating behavior.
9. The system as claimed in claim 1, wherein said plurality of computer nodes implements the common smart contract to determine that users (coders) are meeting their agreements with respect to coding by enabling users to view blockchain contributions made by other users.
10. The system as claimed in claim 1, further comprising: detecting and/or identifying activities of code workproduct, wherein detecting and/or identifying activities of code workproduct are in compliance with agreements specified by stakeholders and are based on customized analytics modules using historical code event blockchain databases.
11. The system as claimed in claim 1, wherein a determination of security and privacy (S&P) or compliance violation causes further actions depending on level of a breach or violation or a risk level due to said violation or breach.
12. The system as claimed in claim 1, further comprising selecting a graphical user interface element on a code editor shown on a computer display to trigger the addition of code content to the block.
13. The system as claimed in claim 1, wherein an audit trail is automatically established by obtaining historical block concerning a historic programmer blockchain.
14. The system as claimed in claim 1, wherein coding or software engineering skill/competence of a programmer is determined by obtaining historic contributions, aggregated credit received, current rank/rate with respect to a particular programming or software engineering skillset.
15. A method for a plurality of computer nodes, each of said plurality of computer nodes having at least one processor, said plurality of computer nodes forming a distributed network for collaborative work, wherein each of said computer nodes of the plurality of computer nodes communicates directly with each of the other computer nodes of the plurality of computer nodes, each of said computer nodes being operated by a user in accordance with a common smart contract to produce a computer software program collaboratively with other users using blockchain, wherein contributions of each of said users for said computer software program are entered into the blockchain at respective computer nodes as blocks when each of said contributions has been made in accordance with the following: writing a portion of said computer software program for inclusion in said computer software program; and submitting said portion for inclusion in said computer software program to said distributed network to make a contribution to add a block with said portion to said blockchain for said computer software program, said contribution including an indication of the user making the contribution, said method comprising: detecting, by the distributed network, the submission of said portion for said computer software program; adding the portion as a block to said blockchain for said computer software program; tracking the contributions of individual users; and verifying the contributions of individual users against an instance of the computer software program by requesting an assessment of a contribution history of the instance of the computer software program, wherein a central owner of the computer software program has released an ancestral version of the computer software program into a public domain to allow blockchain-based version control to track mutations and evolution of the computer software program by different parties, and to offer bounties for successful achievement of a particular functionality, reliability, and bug-free condition.
16. The method as claimed in claim 15, further comprising: adding, by a user, one or more of the following customized parameters as a block to said blockchain: a chronicle of contributions to said computer software program through the "life", or for a period of time, T, of said computer software program and through versions of said computer software program; identification of users programming said computer software program; ratings of additions to said computer software program; one or more lines of said computer software program, debug outcomes, and quality/efficiency of said computer software program; one or more units of source code, sets of one or more computer program modules together with associated control data, usage procedures, and operating procedures; a code module, function or procedure, an entire interface, an individual method, short code fragments created by users or by white box testers during a development process; greenness of said computer software program, storage efficiency, and/or CPU efficiency; comprehensibility ratings of said computer software program, and dates of additions; role of the user programming said computer software program; coding work-items and types of work-item; updating status of a work-item/product; time spent in each stage of progress; and a multidimensional vector related to unit test outcomes, storage efficiency, assessment of comprehensibility for different cohorts /teams of coders, and code compliance parameters.
17. The method as claimed in claim 15, further comprising: sending, by a user, computer software program contribution parameters corresponding to said computer software program to one or more validation devices or modules to establish a validity of the transaction, and to generate a new block to be appended to the blockchain.
18. The method as claimed in claim 15, further comprising: storing data on said computer software program in an electric tally system including a distributed network of voting/commenting features or modules in communication with one another.
19. The method as claimed in claim 15, further comprising: storing at least one of votes and ratings on the block in said blockchain, and updating tallies of said at least one of votes and ratings when they are received.
20. The method as claimed in claim 15, wherein the blockchain comprises at least one code security block, said at least one code security block including one or more of the following: coder/user location, coder/user capabilities, coding behavior of coder/user, code editor model, and contextual information related to security concerns.
</claims>
</document>
