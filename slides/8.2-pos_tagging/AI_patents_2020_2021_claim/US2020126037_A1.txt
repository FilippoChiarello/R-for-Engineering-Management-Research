<document>

<filing_date>
2019-09-13
</filing_date>

<publication_date>
2020-04-23
</publication_date>

<priority_date>
2018-10-19
</priority_date>

<ipc_classes>
G06F16/903,G06F16/904,G06N20/00,G06Q10/08
</ipc_classes>

<assignee>
ORACLE INTERNATIONAL CORPORATION
</assignee>

<inventors>
NUOLF, BEAT
ALBOWICZ, JOSEPH MICHAEL
TATITURI, VANKAT SAI
REZAEIAN, AMIR HOSSEIN
BRIDGES, JAMES EDWARD
RAZDAN, RAM
OKUDA, SHINTARO
</inventors>

<docdb_family_id>
70279671
</docdb_family_id>

<title>
SYSTEMS AND METHODS FOR INTELLIGENT FIELD MATCHING AND ANOMALY DETECTION
</title>

<abstract>
The present disclosure relates to systems and methods that use an artificial intelligence (AI) model to generate outputs that can be evaluated to predict which logged entry items match entry request record line items of an entry request record. Additionally, the present disclosure relates to systems and methods for intelligently detecting anomalies within data sets.
</abstract>

<claims>
1. A computer-implemented method, comprising: collecting, from one or more data sources, log entry finalization data representing one or more logged entries that an originator has proposed for finalization, the one or more logged entries, if finalized, triggering a downstream action that reassigns resources from a resource pool to the originator, each logged entry of the one or more logged entries corresponding to an entry request record that initiated the logged entry, each logged entry of the one or more logged entries including one or more logged entry items that sum to a logged entry resource request total of the logged entry, and each logged entry item of the one or more logged entry items corresponding to a resource usage that is proposed, by the originator, to be within the entry request record; collecting entry request record data from one or more additional data sources, the entry request record data representing one or more entry request records transmitted to the originator, each entry request record including one or more entry request record line items that sum to an entry request record resource request total, and each entry request record line item of the one or more entry request record line items corresponding to a resource usage proposed to be within the entry request record; receiving a particular logged entry including a plurality of particular logged entry items; inputting the particular logged entry into a trained machine-learning model, the trained machine-learning having been trained using the collected log entry finalization data and the collected entry request record data, the training of the machine-learning model including using one or more machine-learning techniques to detect one or more dependency patterns by matching at least the logged entry resource request total of a logged entry of the one or more logged entries with the entry request record resource request total of an entry request record of the one or more entry request records, and each dependency pattern of the one or more dependency patterns representing a correlation between at least one logged entry item and at least one entry request record line item; and in response to inputting the particular logged entry into the machine-learning model, generating an output that represents a prediction of an entry request record line item that is predicted to correspond to the plurality of particular logged entry items.
2. The computer-implemented method of claim 1, wherein the prediction of the entry request record is based on the trained machine-learning model detecting a dependency pattern between the collected log entry finalization data and the collected entry request record data, the detected dependency pattern indicating that the plurality of particular logged entry items has previously corresponded to the particular entry request record line item.
3. The computer-implemented method of claim 1, wherein the one or more dependency patterns are further detected when resource usage proposed to be within the entry request record data included in the particular logged entry matches the resource usage proposed to be within the entry request record data included in the predicted particular entry request record line item, and wherein the resource usage proposed to be within the entry request record data represents a resource usage proposed to be within the entry request record requested from the originator.
4. The computer-implemented method of claim 1, wherein the generation of the output that represents the prediction further includes consolidating the plurality of particular logged entry items into a single logged entry item and matching the single logged entry item with the predicted particular entry request record line item.
5. The computer-implemented method of claim 1, further comprising: displaying the generated output that represents the prediction of the entry request record line item on an interface.
6. The computer-implemented method of claim 1, wherein the one or more logged entry items included in the logged entry is provided by the originator.
7. The computer-implemented method of claim 1, wherein each dependency pattern of the one or more dependency patterns represents that a previously finalized logged entry included the at least one logged entry item, wherein the previously finalized logged entry corresponded to a previous entry request record that included the at least one entry request record line item.
8. A system, comprising: one or more data processors; and a non-transitory computer-readable storage medium containing instructions which, when executed on the one or more data processors, cause the one or more data processors to perform operations including: collecting, from one or more data sources, log entry finalization data representing one or more logged entries that an originator has proposed for finalization, the one or more logged entries, if finalized, triggering a downstream action that reassigns resources from a resource pool to the originator, each logged entry of the one or more logged entries corresponding to an entry request record that initiated the logged entry, each logged entry of the one or more logged entries including one or more logged entry items that sum to a logged entry resource request total of the logged entry, and each logged entry item of the one or more logged entry items corresponding to a resource usage that is proposed, by the originator, to be within the entry request record; collecting entry request record data from one or more additional data sources, the entry request record data representing one or more entry request records transmitted to the originator, each entry request record including one or more entry request record line items that sum to an entry request record resource request total, and each entry request record line item of the one or more entry request record line items corresponding to a resource usage proposed to be within the entry request record; receiving a particular logged entry including a plurality of particular logged entry items; inputting the particular logged entry into a trained machine-learning model, the trained machine-learning having been trained using the collected log entry finalization data and the collected entry request record data, the training of the machine-learning model including using one or more machine-learning techniques to detect one or more dependency patterns by matching at least the logged entry resource request total of a logged entry of the one or more logged entries with the entry request record resource request total of an entry request record of the one or more entry request records, and each dependency pattern of the one or more dependency patterns representing a correlation between at least one logged entry item and at least one entry request record line item; and in response to inputting the particular logged entry into the machine-learning model, generating an output that represents a prediction of an entry request record line item that is predicted to correspond to the plurality of particular logged entry items.
9. The system of claim 8, wherein the prediction of the entry request record is based on the trained machine-learning model detecting a dependency pattern between the collected log entry finalization data and the collected entry request record data, the detected dependency pattern indicating that the plurality of particular logged entry items has previously corresponded to the particular entry request record line item.
10. The system of claim 8, wherein the one or more dependency patterns are further detected when resource usage proposed to be within the entry request record data included in the particular logged entry matches the resource usage proposed to be within the entry request record data included in the predicted particular entry request record line item, and wherein the resource usage proposed to be within the entry request record data represents a resource usage proposed to be within the entry request record requested from the originator.
11. The system of claim 8, wherein the generation of the output that represents the prediction further includes consolidating the plurality of particular logged entry items into a single logged entry item and matching the single logged entry item with the predicted particular entry request record line item.
12. The system of claim 8, wherein the operations further comprise: displaying the generated output that represents the prediction of the entry request record line item on an interface.
13. The system of claim 8, wherein the one or more logged entry items included in the logged entry is provided by the originator.
14. The system of claim 8, wherein each dependency pattern of the one or more dependency patterns represents that a previously finalized logged entry included the at least one logged entry item, wherein the previously finalized logged entry corresponded to a previous entry request record that included the at least one entry request record line item.
15. A computer-program product tangibly embodied in a non-transitory machine-readable storage medium, including instructions configured to cause a data processing apparatus to perform operations including: collecting, from one or more data sources, log entry finalization data representing one or more logged entries that an originator has proposed for finalization, the one or more logged entries, if finalized, triggering a downstream action that reassigns resources from a resource pool to the originator, each logged entry of the one or more logged entries corresponding to an entry request record that initiated the logged entry, each logged entry of the one or more logged entries including one or more logged entry items that sum to a logged entry resource request total of the logged entry, and each logged entry item of the one or more logged entry items corresponding to a resource usage that is proposed, by the originator, to be within the entry request record; collecting entry request record data from one or more additional data sources, the entry request record data representing one or more entry request records transmitted to the originator, each entry request record including one or more entry request record line items that sum to an entry request record resource request total, and each entry request record line item of the one or more entry request record line items corresponding to a resource usage proposed to be within the entry request record; receiving a particular logged entry including a plurality of particular logged entry items; inputting the particular logged entry into a trained machine-learning model, the trained machine-learning having been trained using the collected log entry finalization data and the collected entry request record data, the training of the machine-learning model including using one or more machine-learning techniques to detect one or more dependency patterns by matching at least the logged entry resource request total of a logged entry of the one or more logged entries with the entry request record resource request total of an entry request record of the one or more entry request records, and each dependency pattern of the one or more dependency patterns representing a correlation between at least one logged entry item and at least one entry request record line item; and in response to inputting the particular logged entry into the machine-learning model, generating an output that represents a prediction of an entry request record line item that is predicted to correspond to the plurality of particular logged entry items.
16. The computer-program product of claim 15, wherein the prediction of the entry request record is based on the trained machine-learning model detecting a dependency pattern between the collected log entry finalization data and the collected entry request record data, the detected dependency pattern indicating that the plurality of particular logged entry items has previously corresponded to the particular entry request record line item.
17. The computer-program product of claim 15, wherein the one or more dependency patterns are further detected when resource usage proposed to be within the entry request record data included in the particular logged entry matches the resource usage proposed to be within the entry request record data included in the predicted particular entry request record line item, and wherein the resource usage proposed to be within the entry request record data represents a resource usage proposed to be within the entry request record requested from the originator.
18. The computer-program product of claim 15, wherein the generation of the output that represents the prediction further includes consolidating the plurality of particular logged entry items into a single logged entry item and matching the single logged entry item with the predicted particular entry request record line item.
19. The computer-program product of claim 15, wherein the operations further comprise: displaying the generated output that represents the prediction of the entry request record line item on an interface.
20. The computer-program product of claim 15, wherein the one or more logged entry items included in the logged entry is provided by the originator.
</claims>
</document>
