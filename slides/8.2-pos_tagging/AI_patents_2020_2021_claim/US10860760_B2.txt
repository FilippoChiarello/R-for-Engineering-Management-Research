<document>

<filing_date>
2018-03-30
</filing_date>

<publication_date>
2020-12-08
</publication_date>

<priority_date>
2017-04-21
</priority_date>

<ipc_classes>
G06F17/50,G06F30/327,G06F30/34,G06N3/04,G06N3/063,G06N3/08
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
NALLURI, VAMSI
HAH, THIAM KHEAN
SCHMIT, HERMAN HENRY
HUANG, RANDY
WEBER, SCOTT J.
</inventors>

<docdb_family_id>
63852352
</docdb_family_id>

<title>
Systems and methods for implementing learned parameter systems on a programmable integrated circuit
</title>

<abstract>
Systems and methods are included for efficiently implementing learned parameter systems (LPSs) on a programmable integrated circuit (PIC) via a computing engine. The computing engine receives an input set of learned parameters corresponding to use instances of an LPS. The computing engine reduces at least some redundancies and/or unnecessary operations using instance specific parameter values of the LPS, to generate a less redundant set of learned parameters and a corresponding less redundant LPS. The computing engine generates a netlist based on these, which may share computing resources of the PIC across multiple computations in accordance with the less redundant set of learned parameters and the corresponding less redundant LPS. The computing engine then programs the PIC with the netlist. That is, the netlist replaces use instances of at least some of the original learned parameters and its corresponding LPS and is executed instead of the original.
</abstract>

<claims>
1. A computing system for implementing a trained learned parameter system on a programmable integrated circuit, the computing system comprising: the programmable integrated circuit; and a computing engine configured to: receive an input set of trained learned parameters for an input trained learned parameter system, wherein the input set of trained learned parameters comprises stable use instances; reduce one or more redundancies in the input set of trained learned parameters to generate a less redundant set of trained learned parameters of a less redundant trained learned parameter system; generate a netlist based on the less redundant trained learned parameter system; program the netlist to the programmable integrated circuit; and execute the netlist implementing the less redundant trained learned parameter system instead of the input trained learned parameter system.
2. The computing system of claim 1, wherein the computing engine is configured to apply the less redundant trained learned parameter system instead of the input trained learned parameter system to a set of input feature maps using the netlist.
3. The computing system of claim 1, wherein the computing engine is configured to transform a set of values of each trained learned parameter of the input set of trained learned parameters into a set of scaled ternary numbers.
4. The computing system of claim 1, wherein each value of each trained learned parameter of the input set of trained learned parameters comprises a positive or negative value.
5. The computing system of claim 1, wherein each trained learned parameter of the input set of trained learned parameters comprises integer values.
6. The computing system of claim 1, wherein each trained learned parameter of the input set of trained learned parameters comprises floating point values.
7. The computing system of claim 1, wherein each trained learned parameter of the input set of trained learned parameters is a binary trained learned parameter comprising one of two possible arbitrary values.
8. The computing system of claim 1, wherein each trained learned parameter of the input set of trained learned parameters is a ternary trained learned parameter comprising one of three possible arbitrary values.
9. The computing system of claim 1, wherein the one or more redundancies comprise one or more shared values between a set of trained learned parameters of the input set of trained learned parameters and at least one other set of trained learned parameters of the input set of trained learned parameters.
10. The computing system of claim 9, wherein the set of trained learned parameter and the at least one other set of trained learned parameters operate on a same input feature map.
11. The computing system of claim 9, wherein the computing engine is configured to generate the netlist using one instance of the one or more shared values.
12. The computing system of claim 1, wherein the computing engine is configured to execute the netlist implementing the less redundant trained learned parameter system by not performing one or more calculations associated with a trained learned parameter of the input set of trained learned parameters, wherein the trained learned parameter comprises a zero value.
13. The computing system of claim 1, wherein the computing engine is configured to execute the netlist implementing the less redundant trained learned parameter system by not connecting one or more wires in the programmable integrated circuit associated with a trained learned parameter of the input set of trained learned parameters, wherein the trained learned parameter comprises a zero value.
14. The computing system of claim 1, wherein at least one less redundant trained learned parameter of the less redundant set of trained learned parameters comprises fewer values than a corresponding trained learned parameter of the input set of trained learned parameters.
15. A method for implementing a trained learned parameter system on a programmable integrated circuit, the method comprising: receiving, via a computing engine, an input set of trained learned parameters for a trained input learned parameter system, wherein the input set of trained learned parameters comprises stable use instances; reducing, via the computing engine, one or more redundancies in the input set of trained learned parameters to generate a less redundant set of trained learned parameters of a less redundant trained learned parameter system; generating, via the computing engine, a netlist based on the less redundant trained learned parameter system; programming, via the computing engine, the programmable integrated circuit using the netlist; and executing, via the computing engine, the netlist implementing the less redundant trained learned parameter system instead of the input trained learned parameter system.
16. The method of claim 15, comprising transforming, via the computing engine, the input set of trained learned parameters to a different format.
17. The method of claim 15, comprising quantizing, via the computing engine, the input set of trained learned parameters to generate a quantized input set of trained learned parameters.
18. The method of claim 17, wherein reducing, via the computing engine, the one or more redundancies in the input set of trained learned parameters comprises reducing, via the computing engine, the one or more redundancies in the quantized input set of trained learned parameters to generate the less redundant set of trained learned parameters of the less redundant trained learned parameter system.
19. Programming a circuit design comprising a trained learned parameter system in a programmable integrated circuit system to enable the programmable integrated circuit system to receive at least one input feature map and convolve the at least one input feature map with a set of weights of the trained learned parameter system to generate at least one output feature map, wherein the programmable integrated circuit system comprises: first circuitry configured to: receive an input set of trained learned parameters for an input trained learned parameter system, wherein the input set of trained learned parameters comprises stable use instances; reduce one or more redundancies in the input set of trained learned parameters to generate a less redundant set of trained learned parameters of a less redundant trained learned parameter system; and generate a netlist based on the less redundant trained learned parameter system; and second circuitry configured to execute the netlist implementing the less redundant trained learned parameter system instead of the input trained learned parameter system.
20. The programmable integrated circuit system of claim 19, wherein the input trained learned parameter system and the less redundant trained learned parameter system comprise convolutional neural networks.
21. The programmable integrated circuit system of claim 19, wherein the programmable integrated circuit comprises a field programmable gate array.
</claims>
</document>
