<document>

<filing_date>
2020-04-30
</filing_date>

<publication_date>
2020-11-05
</publication_date>

<priority_date>
2019-05-02
</priority_date>

<ipc_classes>
G06F111/02,G06F119/20,G06F30/10,G06F30/12,G06F30/27,G06N3/04,G06N3/08,G06Q10/06
</ipc_classes>

<assignee>
AUTODESK
</assignee>

<inventors>
FITZMAURICE, GEORGE
GROSSMAN, TOVI
LAFRENIERE, BENJAMIN
KIM, Juho
CHANG, Minsuk
HASSANI, Kaveh
</inventors>

<docdb_family_id>
73016461
</docdb_family_id>

<title>
TECHNIQUES FOR WORKFLOW ANALYSIS AND DESIGN TASK OPTIMIZATION
</title>

<abstract>
A W-graph system comprising a server connected with a plurality of clients via a network. Each client/user performs a design task via a design application while the server collects timestamped event data. The server generates a plurality of W-graphs for a plurality of tasks based on the collected event data. Each W-graph comprises one or more representative workflows, each representative workflow comprising at least one merged node representing nodes from different workflows for different users performing the same task. A W-graph for a task selected by the user may be viewed in a W-graph GUI. A user may also select a W-suggest function to have a current workflow for a task analyzed for optimization based on a W-graph generated for the same task. A modified current workflow is generated that highlights user techniques in the current workflow that are less efficient than user techniques in the W-graph.
</abstract>

<claims>
1. A computer-implemented method for analyzing software application workflows, the method comprising:
performing one or more operations to determine at least two nodes, wherein each node included in the at least two nodes is associated with a different user workflow for performing a first task via a design application, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions; generating a first workflow graph for the first task that graphically represents a plurality of user workflows for performing the first task, wherein the first workflow graph includes at least one representative workflow that includes a first merged node that represents the two nodes; receiving, via the user interface presented on a client device, a selection of the first task;
retrieving, from a database, the first workflow graph for the first task; and causing the first workflow graph to be displayed via the user interface.
2. The computer-implemented method of claim 1 , wherein:
the first task comprises modeling a first object; and
each node in the at least one representative workflow represents a state of the modeling of the first object.
3. The computer-implemented method of claim 1 , wherein the at least two nodes is associated with a first workflow comprising a graphical representation of a first process implemented by a first user for performing the first task and a second workflow comprising a graphical representation of a second process implemented by at least one of the first user and a second user for performing the first task.
4. The computer-implemented method of claim 1 , wherein the one or more operations includes determining that the at least two nodes similar within a threshold value.
5. The computer-implemented method of claim 1 , wherein:
the first merged node represents a first node from a first workflow and a
second node from a second workflow; and the at least one representative workflow further includes a merged edge that corresponds to the merged node, the merged edge representing a first user technique that produces the first node and a second user technique that produces the second node.
6. The computer-implemented method of claim 5, wherein the first user technique comprises a first set of invoked commands and the second user technique comprises a second set of invoked commands that is different than the first set of invoked commands.
7. The computer-implemented method of claim 1 , wherein the first workflow graph comprises a plurality of representative workflows, the method further comprising: causing graph information associated with the first workflow graph to be
displayed, at the client device, via the user interface, wherein the graph information includes at least one of a total number of representative workflows included in the plurality of representative workflows, an average time for performing one of the representative workflows included in the plurality of representative workflows, and an average number of invoked commands for one of the representative workflows included in the plurality of representative workflows.
8. The computer-implemented method of claim 1 , wherein:
the at least one representative workflow comprises a plurality of representative edges, each representative edge representing one or more distinct user techniques; and
for each representative edge in the first workflow graph displayed via the user interface, a visual appearance is based on a number of distinct user techniques represented by the representative edge.
9. The computer-implemented method of claim 1 , wherein the at least one representative workflow comprises a plurality of representative edges, each edge representing one or more user techniques, the method further comprising: receiving from the client device, via the user interface, a user selection for a first representative edge included in the at least one representative workflow;
retrieving, from a database, edge information associated with the first
representative edge; and
causing the edge information to be displayed, at the client device, via the user interface.
10. The computer-implemented method of claim 9, wherein the edge information comprises at least one of compiled metrics, command data, and a screen recording associated with the one or more user techniques represented by the first
representative edge.
11. One or more non-transitory computer-readable media including instructions that, when executed by one or more processors, cause the one or more processors to perform the steps of:
performing one or more operations to determine at least two nodes, wherein each node included in the at least two nodes is associated with a different user workflow for performing a first task via a design application, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions; generating a first workflow graph for the first task that graphically represents a plurality of user workflows for performing the first task, wherein the first workflow graph includes at least one representative workflow that includes a first merged node that represents the two nodes; receiving, via the user interface presented on a client device, a selection of the first task;
retrieving, from a database, the first workflow graph for the first task; and causing the first workflow graph to be displayed via the user interface.
12. The one or more non-transitory computer-readable media of claim 11 , wherein: the first task comprises modeling a first object; and
each node in the at least one representative workflow represents a state of the modeling of the first object.
13. The one or more non-transitory computer-readable media of claim 11 , wherein the at least two nodes is associated with a first workflow comprising a graphical representation of a first process implemented by a first user for performing the first task and a second workflow comprising a graphical representation of a second process implemented by a second user for performing the first task.
14. The one or more non-transitory computer-readable media of claim 11 , wherein the one or more operations includes determining that the at least two nodes similar within a threshold value.
15. The one or more non-transitory computer-readable media of claim 11 , wherein: the at least one representative workflow comprises a sequence of
representative edges and representative nodes;
a first representative edge represents two different user techniques
implemented by two different users; and
a first representative node corresponding to the first representative edge
represents a same state of the first task resulting from the two different user techniques.
16. The one or more non-transitory computer-readable media of claim 15, wherein the two different user techniques comprises two different sets of invoked commands.
17. The one or more non-transitory computer-readable media of claim 11 , wherein: the at least one representative workflow comprises a sequence of
representative edges and corresponding representative nodes;
each representative edge represents one or more user techniques; and the corresponding representative node for a representative edge represents a state of the task resulting from the one or more user techniques.
18. The one or more non-transitory computer-readable media of claim 11 , wherein: the at least one representative workflow comprises a plurality of representative edges, each representative edge representing one or more distinct user techniques; and for each representative edge in the first workflow graph displayed via the user interface, a visual appearance is based on a number of distinct user techniques represented by the representative edge.
19. The one or more non-transitory computer-readable media of claim 11 , wherein the at least one representative workflow comprises a plurality of representative edges, each edge representing one or more user techniques, further comprising the steps of: receiving from the client device, via the user interface, a user selection for a first representative edge included in the at least one representative workflow;
retrieving, from a database, edge information associated with the first
representative edge; and
causing the edge information to be displayed, at the client device, via the user interface.
20. A computing system comprising:
a memory that includes instructions; and
a processor that is coupled to the memory and, upon executing the
instructions, performs the steps of:
performing one or more operations to determine at least two nodes, wherein each node included in the at least two nodes is associated with a different user workflow for performing a first task via a design application, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions;
generating a first workflow graph for the first task that graphically
represents a plurality of user workflows for performing the first task, wherein the first workflow graph includes at least one representative workflow that includes a first merged node that represents the two nodes;
receiving, via the user interface presented on a client device, a selection of the first task;
retrieving, from a database, the first workflow graph for the first task; and causing the first workflow graph to be displayed via the user interface.
21. A computer-implemented method for analyzing software application workflows, the method comprising:
receiving, via a user interface presented on a client device, a selection of a first task that is performed via a design application;
performing one or more operations to determine a first edge and a second
edge, wherein the first edge is associated with a first user workflow for performing the first task, the second edge is associated with a first workflow graph that graphically represents a plurality of user workflows for performing the first task, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions;
generating a modified first user workflow based on a comparison between the first edge and the second edge; and
causing the modified first user workflow to be displayed via the user interface.
22. The computer-implemented method of claim 21 , wherein:
the first task comprises modeling a first object; and
the modified first user workflow comprises a sequence of edges and nodes, each node in the modified first user workflow representing a state of the modeling of the first object.
23. The computer-implemented method of claim 21 , wherein:
the first workflow graph comprises a plurality of representative workflows
including a primary representative workflow, the primary representative workflow having a lowest number of total invoked commands relative to all other representative workflows included in the plurality of representative workflows;
the first user workflow comprises a plurality of edges representing a plurality of user techniques; and
the modified first user workflow comprises a modified version of the first user workflow and includes a first highlighted edge that represents a first user technique that has been determined to be less efficient than all other user techniques included in the plurality of user techniques based on a comparison between the first user workflow and the primary representative workflow.
24. The computer-implemented method of claim 21 , wherein:
the first user workflow comprises a plurality of edges representing a plurality of user techniques;
the first workflow graph includes a primary representative workflow comprising a plurality of representative edges representing a plurality of user techniques, each representative edge in the primary representative workflow corresponding to an edge in the first user workflow; and the modified first user workflow comprises a modified version of the first user workflow and includes a first highlighted edge that represents a first user technique that has been determined to be less efficient than a
corresponding user technique represented by a corresponding representative edge in the primary representative workflow.
25. The computer-implemented method of claim 24, wherein:
the first workflow graph comprises a plurality of representative workflows; and the primary representative workflow has a lowest number of total invoked
commands relative to all other representative workflows included in the plurality of representative workflows.
26. The computer-implemented method of claim 24, wherein:
the first workflow graph comprises a plurality of representative workflows; and the primary representative workflow has a lowest performance time relative to all other representative workflows included in the plurality of representative workflows.
27. The computer-implemented method of claim 24, wherein the first user technique is associated with a first number of invoked commands, the corresponding representative edge is associated with a second number of invoked commands, and the first number is greater than the second number.
28. The computer-implemented method of claim 24, wherein the first user technique is associated with a first performance time, the corresponding
representative edge is associated with a second performance time, and the first performance time is greater than the second performance time.
29. The computer-implemented method of claim 21 , wherein the modified first user workflow comprises a plurality of edges, and further comprising:
receiving from the client device, via the user interface, a user selection of a first edge included in the modified first user workflow;
retrieving edge information associated with the first edge; and
causing the edge information to be displayed, at the client device, via the user interface.
30. The computer-implemented method of claim 29, wherein the edge information comprises at least one of compiled metrics, command data, and a screen recording associated with a user technique represented by the first edge.
31. One or more non-transitory computer-readable media including instructions that, when executed by one or more processors, cause the one or more processors to perform the steps of:
receiving, via a user interface presented on a client device, a selection of a first task that is performed via a design application;
performing one or more operations to determine a first edge and a second
edge, wherein the first edge is associated with a first user workflow for performing the first task, the second edge is associated with a first workflow graph that graphically represents a plurality of user workflows for performing the first task, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions;
generating a modified first user workflow based on a comparison between the first edge and the second edge; and
causing the modified first user workflow to be displayed via the user interface.
32. The one or more non-transitory computer-readable media of claim 31 , wherein: the first task comprises modeling a first object; and
the modified first user workflow comprises a sequence of edges and nodes, each node in the modified first user workflow representing a state of the modeling of the first object.
33. The one or more non-transitory computer-readable media of claim 31 , wherein: the first workflow graph comprises a plurality of representative workflows
including a primary representative workflow, the primary representative workflow having a lowest number of total invoked commands relative to all other representative workflows included in the plurality of representative workflows;
the first user workflow comprises a plurality of edges representing a plurality of user techniques; and
the modified first user workflow comprises a modified version of the first user workflow and includes a first highlighted edge that represents a first user technique that has been determined to be less efficient than all other user techniques included in the plurality of user techniques based on a comparison between the first user workflow and the primary representative workflow.
34. The one or more non-transitory computer-readable media of claim 31 , wherein: the first user workflow comprises a plurality of edges representing a plurality of user techniques;
the first workflow graph includes a primary representative workflow comprising a plurality of representative edges representing a plurality of user techniques, each representative edge in the primary representative workflow corresponding to an edge in the first user workflow; and the modified first user workflow comprises a modified version of the first user workflow and includes a first highlighted edge that represents a first user technique that has been determined to be less efficient than a corresponding user technique represented by a corresponding representative edge in the primary representative workflow.
35. The one or more non-transitory computer-readable media of claim 34, wherein: the first workflow graph comprises a plurality of representative workflows; and the primary representative workflow has a lowest number of total invoked
commands relative to all other representative workflows included in the plurality of representative workflows.
36. The one or more non-transitory computer-readable media of claim 31 , wherein: the first user workflow comprises a plurality of edges representing a plurality of user techniques; and
the modified first user workflow comprises a modified version of the first user workflow comprising a first highlighted edge determined to represent a first user technique comprising a least efficient user technique in the plurality of user techniques based on a comparison between the first workflow and the first workflow graph.
37. The one or more non-transitory computer-readable media of claim 36, wherein the first highlighted edge is determined to represent the least efficient user technique in the plurality of user techniques based on a total number of invoked commands associated with the first user technique.
38. The one or more non-transitory computer-readable media of claim 36, wherein the first highlighted edge is determined to represent the least efficient user technique in the plurality of user techniques based on a total performance time associated with the first user technique.
39. The one or more non-transitory computer-readable media of claim 31 , wherein the modified first user workflow comprises a plurality of edges, further comprising the steps of:
receiving from the client device, via the user interface, a user selection of a first edge included in the modified first user workflow;
retrieving edge information associated with the first edge; and
causing the edge information to be displayed, at the client device, via the user interface.
40. A computing system comprising:
a memory that includes instructions; and
a processor that is coupled to the memory and, upon executing the
instructions, performs the steps of:
receiving, via a user interface presented on a client device, a selection of a first task that is performed via a design application;
performing one or more operations to determine a first edge and a
second edge, wherein the first edge is associated with a first user workflow for performing the first task, the second edge is associated with a first workflow graph that graphically represents a plurality of user workflows for performing the first task, and the one or more operations are based on a similarity algorithm that implements one or more machine learning functions;
generating a modified first user workflow based on a comparison
between the first edge and the second edge; and
causing the modified first user workflow to be displayed via the user interface.
</claims>
</document>
