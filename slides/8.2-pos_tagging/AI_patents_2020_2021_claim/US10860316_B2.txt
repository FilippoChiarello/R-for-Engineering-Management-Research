<document>

<filing_date>
2018-10-26
</filing_date>

<publication_date>
2020-12-08
</publication_date>

<priority_date>
2016-04-26
</priority_date>

<ipc_classes>
G06F15/80,G06F17/16,G06F9/30,G06N3/08
</ipc_classes>

<assignee>
CAMBRICON TECHNOLOGIES COMPANY
</assignee>

<inventors>
GUO QI
LIU SHAOLI
CHEN, TIANSHI
CHEN, YUNJI
ZHI, TIAN
</inventors>

<docdb_family_id>
60160567
</docdb_family_id>

<title>
Apparatus and methods for generating dot product
</title>

<abstract>
Aspects for generating a dot product for two vectors in neural network are described herein. The aspects may include a controller unit configured to receive a vector load instruction that includes a first address of a first vector and a length of the first vector. The aspects may further include a direct memory access unit configured to retrieve the first vector from a storage device based on the first address of the first vector. Further still, the aspects may include a caching unit configured to store the first vector.
</abstract>

<claims>
We claim:
1. An apparatus for vector dot product computation in a neural network, comprising: a controller circuit configured to receive a vector dot product instruction that includes one or more register IDs that identify registers that respectively store a first address of a first vector and a second address of a second vector; and a computation circuit that includes one or more multipliers and an adder, wherein the one or more multipliers are respectively configured to multiply, in response to the vector dot product instruction, a first element of the first vector with a corresponding second element of the second vector to generate one or more multiplication results; and wherein the adder is configured to sum, in response to the vector dot product instruction, the multiplication results to generate a vector dot product computation result.
2. The apparatus of claim 1, wherein the one or more multipliers are configured to transmit the multiplication results directly to the adder.
3. The apparatus of claim 1, wherein the vector dot product instruction further includes a length of the first vector.
4. The apparatus of claim 3, wherein the vector dot product instruction further includes a length of the second vector.
5. The apparatus of claim 4, further comprising a direct memory access circuit configured to retrieve the first vector based on the first address and the length of the first vector, and retrieve the second vector based on the second address and the length of the second vector.
6. The apparatus of claim 5, further comprising an instruction register configured to store the first address of the first vector, the length of the first vector, the second address of the second vector, and the length of the second vector.
7. The apparatus of claim 1, wherein the controller circuit is further configured to: receive a vector retrieval instruction that includes the first address of the first vector and an index of an element in the first vector, receive a vector move instruction that includes a starting address in a caching circuit, a size of a data block, and a target address in the caching circuit, receive a vector store instruction that includes a first source address in the caching circuit, a first target address in the storage device, a second source address in the caching circuit, a second target address in the storage device, and the size of the data block, and receive a vector load instruction that includes the first address of the first vector and the length of the first vector.
8. The apparatus of claim 1, wherein the controller circuit comprises an instruction obtaining circuit configured to obtain the vector dot product instruction from an instruction storage device.
9. The apparatus of claim 8, wherein the controller circuit further comprises a decoding circuit configured to decode the vector dot product instruction into one or more micro-instructions.
10. The apparatus of claim 9, wherein the controller circuit further comprises an instruction queue circuit configured to temporarily store the vector dot product instruction and one or more previously received instructions, and retrieve information corresponding to operation fields in the vector dot product instruction.
11. The apparatus of claim 10, wherein the controller circuit further comprises an instruction register configured to store the information corresponding to the operation fields in the vector dot product instruction.
12. The apparatus of claim 11, wherein the controller circuit further comprises a dependency processing circuit configured to determine whether the vector dot product instruction has a dependency relationship with the one or more previously received instructions.
13. The apparatus of claim 12, wherein the controller circuit further comprises a storage queue circuit configured to store the vector dot product instruction while the dependency processing circuit is determining whether the vector dot product instruction has the dependency relationship with the one or more previously received instructions.
14. A method for vector dot product computation in a neural network, comprising: receiving, by a controller circuit, a vector dot product instruction that includes one or more register IDs that identify registers that respectively store a first address of a first vector and a second address of a second vector; respectively multiplying, by one or more multipliers of a computation circuit in response to the vector dot product instruction, a first element of the first vector with a corresponding second element of the second vector to generate one or more multiplication results; and summing, by an adder of the computation circuit in response to the vector dot product instruction, the multiplication results to generate a vector dot product computation result.
15. The method of claim 14, further comprising directly transmitting, by the one or more multipliers, the multiplication results directly to the adder.
16. The method of claim 14, wherein the vector dot product instruction further includes a length of the first vector.
17. The method of claim 16, wherein the vector dot product instruction further includes a length of the second vector.
18. The method of claim 17, further comprising: retrieving, by a direct memory access circuit, the first vector based on the first address and the length of the first vector, and retrieving, by the direct memory access circuit, the second vector based on the second address and the length of the second vector.
19. The method of claim 18, further comprising storing, by an instruction register, the first address of the first vector, the length of the first vector, the length of the second vector, and the second address of the second vector.
20. The method of claim 14, further comprising obtaining, by an instruction obtaining circuit of the controller circuit, the vector dot product instruction from an instruction storage device.
21. The method of claim 20, further comprising decoding, by a decoding circuit of the controller circuit, the vector dot product instruction into one or more micro-instructions.
22. The method of claim 21, further comprising temporarily storing, by an instruction queue circuit of the controller circuit, the vector dot product instruction and one or more previously received instructions, and retrieve information corresponding to operation fields in the vector dot product instruction.
23. The method of claim 22, further comprising storing, by an instruction register of the controller circuit, the information corresponding to the operation fields in the vector dot product instruction.
24. The method of claim 23, further comprising determining, by a dependency processing circuit of the controller circuit, whether the vector dot product instruction has a dependency relationship with the one or more previously received instructions.
25. The method of claim 24, further comprising storing, by a storage queue circuit of the controller circuit, the vector dot product instruction while the dependency processing circuits determining whether the vector dot product instruction has the dependency relationship with the one or more previously received instructions.
</claims>
</document>
