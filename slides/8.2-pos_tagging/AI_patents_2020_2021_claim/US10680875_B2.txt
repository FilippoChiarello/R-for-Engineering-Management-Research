<document>

<filing_date>
2018-08-24
</filing_date>

<publication_date>
2020-06-09
</publication_date>

<priority_date>
2015-07-15
</priority_date>

<ipc_classes>
G06N20/00,G06N7/00,G06N99/00,H04L12/24,H04W24/08,H04W24/10
</ipc_classes>

<assignee>
TUPL
</assignee>

<inventors>
TAPIA, PABLO
SANCHEZ-MEJIAS, RAFAEL
</inventors>

<docdb_family_id>
57775979
</docdb_family_id>

<title>
Automatic customer complaint resolution
</title>

<abstract>
An analytic application may automatically determine a root cause of an issue with a wireless carrier network and generate a solution for the root cause. Initially, a data management platform may receive performance data regarding user device and network components of a wireless carrier network from multiple data sources. Subsequently, the analytic application may receive an indication of an issue affecting one or more user devices that are using the wireless carrier network. The analytic application may analyze the performance data using a trained machine learning model to determine a root cause for the issue affecting the one or more user devices. The trained machine learning model may employ multiple types of machine learning algorithms to analyze the performance data. The analytic application may provide the root cause or the solution that resolves the root cause for presentation.
</abstract>

<claims>
1. One or more non-transitory computer-readable media storing computer-executable instructions that upon execution cause one or more processors to perform acts comprising: performing feature engineering on a training corpus to produce a revised training corpus, the training corpus being for generating a machine learning model that may be used to determine solutions for issues of networks or for issues of individual subscribers of networks; training a first type of machine learning algorithm using the revised training corpus to generate the machine learning model, the machine learning model being to determine a solution for an issue of a network or for an issue of an individual subscriber of the network; assigning a training error measurement a value indicating an accuracy of the machine learning model; in response to the training error measurement not being above a training error threshold, determining that training of the machine learning model is complete; and in response to the training error measurement being above the training error threshold: selecting, according to an algorithm selection rule, a second type of machine learning algorithm based on the value of the training error measurement, training the second type of machine learning algorithm using the revised training corpus to generate training results, augmenting the machine learning model using the training results from the second type of machine learning algorithm, and after augmenting the machine learning model, assigning the training error measurement a value indicating an accuracy of the machine learning model.
2. The non-transitory computer-readable media of claim 1, wherein the acts further comprise: after training the machine learning model, refining the machine learning model based on user feedback, the refining including retraining the machine learning model based on the revised training corpus as modified based on the user feedback, the algorithm selection rule as modified based on the user feedback, or both.
3. The non-transitory computer-readable media of claim 1, wherein performing feature engineering includes performing one or more selected from the group consisting of: outlier detection analysis to exclude outlier features in the training corpus from the revised training corpus; feature composition analysis to transform a plurality of features in the training corpus into a single feature in the revised training corpus; or feature relevance analysis to eliminate one or more redundant features of the training corpus from the revised training corpus.
4. The non-transitory computer-readable media of claim 3, wherein the outlier detection analysis is performed using a clustering algorithm, a k-means algorithm, a Gaussian mixture algorithm, a bisecting k-means algorithm, a streaming k-means algorithm, or combinations thereof.
5. The non-transitory computer-readable media of claim 3, wherein the feature composition analysis is performed using a Singular Value Decomposition algorithm, a Principal Component Analysis algorithm, or both.
6. The non-transitory computer-readable media of claim 3, wherein the feature relevance analysis is performed using a Principal Component Analysis algorithm, a summary statistics algorithm, a correlation algorithm, a stratified sampling algorithm, or combinations thereof.
7. The non-transitory computer-readable media of claim 1, wherein the first type of machine learning algorithm is a Bayesian algorithm, a decision tree algorithm, a Support Vector Machine algorithm, an ensembles of trees algorithm, or an isotonic regression algorithm, wherein the second type of machine learning algorithm is a Bayesian algorithm, a decision tree algorithm, a Support Vector Machine algorithm, an ensembles of trees algorithm, or an isotonic regression algorithm, and wherein the first type of machine learning algorithm is different from the second type of machine learning algorithm.
8. The non-transitory computer-readable media of claim 1, wherein selecting the second type of machine learning algorithm includes matching a plurality of ranges of the value of the training error measurement to respective specific types of machine learning algorithm.
9. The non-transitory computer-readable media of claim 1, wherein the acts further comprise: determining, using the machine learning model, a remedial action for the issue of the network or for the issue of the individual subscriber of the network; and causing the remedial action to be performed.
10. A computer-implemented method, comprising: performing feature engineering on a training corpus to produce a revised training corpus, the training corpus being for generating a machine learning model; training a first type of machine learning algorithm using the revised training corpus to generate a machine learning model; assigning a training error measurement a value indicating an accuracy of the machine learning model; in response to the training error measurement not being above a training error threshold, determining that training of the machine learning model is complete; and in response to the training error measurement being above the training error threshold: selecting, according to an algorithm selection rule, a second type of machine learning algorithm based on the value of the training error measurement, training the second type of machine learning algorithm using the revised training corpus to generate training results, augmenting the machine learning model using the training results from the second type of machine learning algorithm, and after augmenting the machine learning model, assigning the training error measurement a value indicating an accuracy of the machine learning model.
11. The method of claim 10, further comprising: after training the machine learning model, refining the machine learning model based on user feedback, the refining including retraining the machine learning model based on the revised training corpus as modified based on the user feedback, the algorithm selection rule as modified based on the user feedback, or both.
12. The method of claim 10, wherein performing feature engineering includes performing one or more selected from the group consisting of: outlier detection analysis to exclude outlier features in the training corpus from the revised training corpus; feature composition analysis to transform a plurality of features in the training corpus into a single feature in the revised training corpus; or feature relevance analysis to eliminate one or more redundant features of the training corpus from the revised training corpus.
13. The method of claim 12, wherein the outlier detection analysis is performed using a clustering algorithm, a k-means algorithm, a Gaussian mixture algorithm, a bisecting k-means algorithm, a streaming k-means algorithm, or combinations thereof.
14. The method of claim 12, wherein the feature composition analysis is performed using a Singular Value Decomposition algorithm, a Principal Component Analysis algorithm, or both; and wherein the feature relevance analysis is performed using a Principal Component Analysis algorithm, a summary statistics algorithm, a correlation algorithm, a stratified sampling algorithm, or combinations thereof.
15. The method of claim 10, further comprising: resolving trouble tickets using the machine learning model; and generating a resolution log that documents root causes and resolutions of trouble tickets resolved using the machine learning model.
16. The method of claim 10, wherein the first type of machine learning algorithm is a Bayesian algorithm, a decision tree algorithm, a Support Vector Machine algorithm, an ensembles of trees algorithm, or an isotonic regression algorithm, wherein the second type of machine learning algorithm is a Bayesian algorithm, a decision tree algorithm, a Support Vector Machine algorithm, an ensembles of trees algorithm, or an isotonic regression algorithm, and wherein the first type of machine learning algorithm is different from the second type of machine learning algorithm.
17. The method of claim 10, wherein selecting the second type of machine learning algorithm includes matching a plurality of ranges of the value of the training error measurement to respective specific types of machine learning algorithm.
18. A system, comprising: one or more processors; and memory including a plurality of computer-executable components that are executable by the one or more processors to perform a plurality of actions, the plurality of actions comprising: performing feature engineering on a training corpus to produce a revised training corpus, the training corpus being for generating a machine learning model that may be used to determine solutions for quality of service issues of networks; training a first type of machine learning algorithm using the revised training corpus to generate a machine learning model, the machine learning model being to generate a solution for a quality of service issue of a network; assigning a training error measurement a value indicating an accuracy of the machine learning model; in response to the training error measurement not being above a training error threshold, determining that training of the machine learning model is complete; and in response to the training error measurement being above the training error threshold: selecting, according to an algorithm selection rule, a second type of machine learning algorithm based on the value of the training error measurement, the second type of machine learning algorithm being different from the first type of machine learning algorithm, training the second type of machine learning algorithm using the revised training corpus to generate training results, augmenting the machine learning model using the training results from the second type of machine learning algorithm, and after augmenting the machine learning model, assigning the training error measurement a value indicating an accuracy of the machine learning model.
19. The system of claim 18, the plurality of actions further comprising: after training the machine learning model, refining the machine learning model based on user feedback, the refining including retraining the machine learning model based on the revised training corpus as modified based on the user feedback, the algorithm selection rule as modified based on the user feedback, or both.
20. The system of claim 18, wherein performing feature engineering includes performing one or more selected from the group consisting of: outlier detection analysis to exclude outlier features in the training corpus from the revised training corpus; feature composition analysis to transform a plurality of features in the training corpus into a single feature in the revised training corpus; or feature relevance analysis to eliminate one or more redundant features of the training corpus from the revised training corpus.
</claims>
</document>
