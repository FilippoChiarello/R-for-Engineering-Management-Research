<document>

<filing_date>
2019-08-23
</filing_date>

<publication_date>
2020-02-11
</publication_date>

<priority_date>
2019-04-11
</priority_date>

<ipc_classes>
G05B23/02,G06F17/14,G06N20/00
</ipc_classes>

<assignee>
SAS INSTITUTE
</assignee>

<inventors>
BIGGS, BYRON DAVIS
KAKDE, DEOVRAT VIJAY
LIAO, YUWEI
MCGUIRK, ANYA M.
</inventors>

<docdb_family_id>
69410803
</docdb_family_id>

<title>
Event monitoring system
</title>

<abstract>
A computing system detects an event. (A) A frequency spectrum of observation vectors is computed using a Fourier transform. Each observation vector includes a sensor value. (B) (A) is repeated a predefined plurality of times with successive windows of the observation vectors. Each window of the successive windows includes a subset of the observation vectors. The successive windows include successive subsets selected sequentially in time. (C) An average frequency spectrum is computed from the frequency spectrum computed the predefined plurality of times. (D) A predefined noise filter is applied to the average frequency spectrum to define a filtered frequency spectrum. (E) A distance value is computed between the filtered frequency spectrum and a predefined reference spectrum using a distance computation function. (F) When an event has occurred is determined based on a comparison between the computed distance value and a predefined distance threshold.
</abstract>

<claims>
1. A non-transitory computer-readable medium having stored thereon computer-readable instructions that when executed by a computing device cause the computing device to: (A) compute a frequency spectrum of a plurality of observation vectors using a Fourier transform, wherein each observation vector of the plurality of observation vectors includes a sensor value measured by a sensor, wherein the plurality of observation vectors includes the sensor value measured as a function of time; (B) repeat (A) a predefined plurality of times with successive windows of the plurality of observation vectors, wherein each window of the successive windows includes a subset of the plurality of observation vectors, wherein the successive windows include successive subsets selected sequentially in time; (C) compute an average frequency spectrum from the frequency spectrum computed the predefined plurality of times; (D) apply a predefined noise filter to the computed average frequency spectrum to define a filtered frequency spectrum; (E) compute a distance value between the defined filtered frequency spectrum and a predefined reference spectrum using a distance computation function; (F) determine when an event has occurred based on a comparison between the computed distance value and a predefined distance threshold; and (G) when an event has occurred based on the comparison, output an event indicator to indicate the event has occurred.
2. The non-transitory computer-readable medium of claim 1, wherein the Fourier transform is a short time Fourier transform.
3. The non-transitory computer-readable medium of claim 2, wherein the frequency spectrum is computed using the short time Fourier transform with a predefined window size that defines a number of observation vectors selected from the plurality of observation vectors for each subset and with a predefined fast Fourier transform length.
4. The non-transitory computer-readable medium of claim 3, wherein each subset includes the number of observation vectors selected from the plurality of observation vectors.
5. The non-transitory computer-readable medium of claim 4, wherein each successive subset includes an overlapping number of observation vectors selected from a previous subset in most recent time order.
6. The non-transitory computer-readable medium of claim 3, wherein the predefined window size and the predefined fast Fourier transform length are selected based on training with training observation vectors.
7. The non-transitory computer-readable medium of claim 1, wherein the predefined plurality of times is selected based on training with training observation vectors.
8. The non-transitory computer-readable medium of claim 1, wherein the predefined noise filter is a lowpass filter.
9. The non-transitory computer-readable medium of claim 8, wherein the lowpass filter is selected from the group consisting of a median filter, a Butterworth filter, a Chebyshev I filter, and a Chebyshev II filter.
10. The non-transitory computer-readable medium of claim 1, wherein the distance computation function is selected from the group consisting of a mean absolute distance computation function and a Hausdorff distance computation function.
11. The non-transitory computer-readable medium of claim 1, wherein the predefined distance threshold is selected based on training with training observation vectors.
12. The non-transitory computer-readable medium of claim 1, wherein the event indicator is a most recent observation vector of the plurality of observation vectors.
13. The non-transitory computer-readable medium of claim 1, wherein the event indicator is a notification message.
14. The non-transitory computer-readable medium of claim 1, wherein the plurality of observation vectors is selected from a stream of event block objects received by the computing device.
15. The non-transitory computer-readable medium of claim 1, wherein the event indicator is output by streaming the event indicator to a second computing device that subscribes to receive the event indicator from the computing device.
16. The non-transitory computer-readable medium of claim 1, wherein the computing device is executing an event stream processing engine that performs the computer-readable instructions.
17. The non-transitory computer-readable medium of claim 1, wherein the computer-readable instructions further cause the computing device to repeat (A) to (G) with a next observation vector.
18. A computing device comprising: a processor; and a non-transitory computer-readable medium operably coupled to the processor, the computer-readable medium having computer-readable instructions stored thereon that, when executed by the processor, cause the computing device to (A) compute a frequency spectrum of a plurality of observation vectors using a Fourier transform, wherein each observation vector of the plurality of observation vectors includes a sensor value measured by a sensor, wherein the plurality of observation vectors includes the sensor value measured as a function of time; (B) repeat (A) a predefined plurality of times with successive windows of the plurality of observation vectors, wherein each window of the successive windows includes a subset of the plurality of observation vectors, wherein the successive windows include successive subsets selected sequentially in time; (C) compute an average frequency spectrum from the frequency spectrum computed the predefined plurality of times; (D) apply a predefined noise filter to the computed average frequency spectrum to define a filtered frequency spectrum; (E) compute a distance value between the defined filtered frequency spectrum and a predefined reference spectrum using a distance computation function; (F) determine when an event has occurred based on a comparison between the computed distance value and a predefined distance threshold; and (G) when an event has occurred based on the comparison, output an event indicator to indicate the event has occurred.
19. A method of detecting an event, the method comprising: (A) computing, by a computing device, a frequency spectrum of a plurality of observation vectors using a Fourier transform, wherein each observation vector of the plurality of observation vectors includes a sensor value measured by a sensor, wherein the plurality of observation vectors includes the sensor value measured as a function of time; (B) repeating (A), by the computing device, a predefined plurality of times with successive windows of the plurality of observation vectors, wherein each window of the successive windows includes a subset of the plurality of observation vectors, wherein the successive windows include successive subsets selected sequentially in time; (C) computing, by the computing device, an average frequency spectrum from the frequency spectrum computed the predefined plurality of times; (D) applying, by the computing device, a predefined noise filter to the computed average frequency spectrum to define a filtered frequency spectrum; (E) computing, by the computing device, a distance value between the defined filtered frequency spectrum and a predefined reference spectrum using a distance computation function; (F) determining, by the computing device, when an event has occurred based on a comparison between the computed distance value and a predefined distance threshold; and (G) when an event has occurred based on the comparison, outputting, by the computing device, an event indicator to indicate the event has occurred.
20. The method of claim 19, wherein the Fourier transform is a short time Fourier transform.
21. The method of claim 20, wherein the frequency spectrum is computed using the short time Fourier transform with a predefined window size that defines a number of observation vectors selected from the plurality of observation vectors for each subset and with a predefined fast Fourier transform length.
22. The method of claim 21, wherein each subset includes the number of observation vectors selected from the plurality of observation vectors.
23. The method of claim 22, wherein each successive subset includes an overlapping number of observation vectors selected from a previous subset in most recent time order.
24. The method of claim 21, wherein the predefined window size and the predefined fast Fourier transform length are selected based on training with training observation vectors.
25. The method of claim 19, wherein the predefined noise filter is a lowpass filter.
26. The method of claim 19, wherein the distance computation function is selected from the group consisting of a mean absolute distance computation function and a Hausdorff distance computation function.
27. The method of claim 19, wherein the event indicator is a most recent observation vector of the plurality of observation vectors.
28. The method of claim 19, wherein the event indicator is a notification message.
29. The method of claim 19, wherein the plurality of observation vectors is selected from a stream of event block objects received by the computing device.
30. The method of claim 19, wherein the event indicator is output by streaming the event indicator to a second computing device that subscribes to receive the event indicator from the computing device.
</claims>
</document>
