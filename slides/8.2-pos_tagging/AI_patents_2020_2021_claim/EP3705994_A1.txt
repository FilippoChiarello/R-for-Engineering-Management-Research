<document>

<filing_date>
2016-10-28
</filing_date>

<publication_date>
2020-09-09
</publication_date>

<priority_date>
2015-10-28
</priority_date>

<ipc_classes>
G06F9/50,G06N3/04,G06N3/063,G06N3/08
</ipc_classes>

<assignee>
GOOGLE
</assignee>

<inventors>
DEAN, JEFFREY ADGATE
GHEMAWAT, SANJAY
TUCKER, PAUL
YU, YUAN
</inventors>

<docdb_family_id>
57822016
</docdb_family_id>

<title>
PROCESSING COMPUTATIONAL GRAPHS
</title>

<abstract>
Methods, systems, and apparatus, including computer programs encoded on computer storage media, for receiving a request from a client to process a computational graph The method includes obtaining data representing the computational graph, the computational graph comprising a plurality of nodes and directed edges, wherein each node represents a respective operation, wherein each directed edge connects a respective first node to a respective second node that represents an operation that receives, as input, an output of an operation represented by the respective first node. The method also includes identifying a plurality of available devices for performing the requested operation; partitioning the computational graph into a plurality of subgraphs, each subgraph comprising one or more nodes in the computational graph; and assigning, for each subgraph, the operations represented by the one or more nodes in the subgraph to a respective available device in the plurality of available devices for operation. The assigning includes determining a device to which the subgraph is assigned by estimating a maximum amount of memory to be used by any node in the subgraph.
</abstract>

<claims>
1. A computer-implemented method of performing a neural network or machine learning operation, comprising: receiving a request from a client to process a computational graph representing a neural network or machine learning model; obtaining data representing the computational graph, the computational graph comprising a plurality of nodes and directed edges representing the neural network or machine learning model, wherein each node represents a respective operation, wherein each directed edge connects a respective first node to a respective second node that represents an operation that receives, as input, an output of an operation represented by the respective first node; identifying a plurality of available devices for processing the computational graph, wherein the available devices include devices having different amounts of memory; partitioning the computational graph into a plurality of subgraphs, each subgraph comprising one or more nodes in the computational graph; and assigning, for each subgraph, the operations represented by the one or more nodes in the subgraph to a respective available device in the plurality of available devices for processing, wherein the assigning includes determining a device to which the subgraph is assigned by estimating a maximum amount of memory to be used by any node in the subgraph.
2. The method of claim 1, wherein the request from the client identifies a particular type of device to perform an operation represented by a particular node of the computational graph, and wherein assigning, for each subgraph, the operations represented by the one or more nodes in the subgraph comprises assigning a subgraph of the plurality of subgraphs and having the particular node to a device of the particular type of device specified by the request.
3. The method of claim 1, wherein assigning, for each subgraph, the operations represented by the one or more nodes in the subgraph comprises: assigning to a first device a first subgraph which contains an initial node and in which none of the nodes depend on outputs of other subgraphs; assigning to a second device a second subgraph which has a second subgraph node which requires as an input an output from the initial node, the output from the initial mode to be calculated by the device assigned to the first subgraph; and waiting to assign the second subgraph to the second device until the operation represented by the initial node in the first subgraph has been completed.
4. The method of claim 3, further comprising determining a dimension of a tensor flowing on a directed edge from the initial node to the second subgraph node, and assigning the second subgraph to the second device dependent on a dimension of the tensor.
5. The method of any preceding claim, wherein estimating the maximum amount of memory to be used by any node in the subgraph comprises traversing the subgraph to calculate a dimension of a tensor on each directed edge to and from each node of the subgraph.
6. The method of claim 5 wherein the assigning comprises assigning the subgraph to a device which has memory capable of storing a largest tensor flowing in the subgraph as indicated by the dimension of the tensor.
7. The method of any preceding claim, wherein the request identifies an output from a respective node in the computational graph, and wherein the method further comprising: for each of the devices to which a subgraph was assigned, causing the device to perform the operations represented by the nodes of the subgraph assigned to the device; and after a final node of the subgraph assigned to the device performs operations, providing the output to the client.
8. The method of any preceding claim, further comprising: determining an initial assignment of subgraphs to devices; monitoring the devices to determine statistics; adjusting the initial assignment using the statistics; and reassigning the subgraphs to the devices based on the adjusted initial assignment.
9. The method of any preceding claim, wherein the computational graph represents operations corresponding to executing a neural network comprising a plurality of layers, each layer associated with one or more operations, and wherein the plurality of subgraphs each comprise at least one operation corresponding to a respective layer of the plurality of layers.
10. The method of any preceding claim, further comprising processing a model input using the neural network or machine learning operation.
11. A computer-readable medium having instructions stored thereon, which, when executed by one or more computers, cause the one or more computers to perform the method of any preceding claim.
12. A system comprising one or more computers and the computer-readable medium of claim 11.
</claims>
</document>
