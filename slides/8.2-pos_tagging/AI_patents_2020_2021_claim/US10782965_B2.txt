<document>

<filing_date>
2018-03-26
</filing_date>

<publication_date>
2020-09-22
</publication_date>

<priority_date>
2017-04-02
</priority_date>

<ipc_classes>
G06F16/00,G06F8/77,G06Q30/02
</ipc_classes>

<assignee>
SAFEDK MOBILE
</assignee>

<inventors>
CATTAN, ARIEL
MANDIL, IDAN
MONETA, ELDAD
LENTZITZKY, ORI
SHOAVI, ORLY
STERNBERG, RONNIE
MOGRABI-LAPINER, MAYA
</inventors>

<docdb_family_id>
63713348
</docdb_family_id>

<title>
Monitoring of media displayed by third-party components
</title>

<abstract>
System, method and products for monitoring media displayed by third-party components. A runtime component monitors execution of a program on the user device. The runtime component identifies an attempt by a third-party component that is integrated with the program to display media. The runtime component obtains obtain data associated with the media, determines a fingerprint of the media and transmits to a server the data and the fingerprint. In response to a request received from the server or lack thereof, the runtime component determines whether to drop the media or transmit the media to the server. The server is provided with aggregated data about different medias displayed by third-party components by different instances of the program executed by different user devices.
</abstract>

<claims>
1. A computer program product comprising: a non-transitory computer readable medium retaining program instructions of a runtime component; wherein a developer of a program integrated the runtime component with the program, whereby the runtime component is operatively coupled with the program; wherein the program instructions, when executed by a user device, cause the user device to: monitor execution of the program on the user device; identify an attempt by a component of the program to display media to a user of the user device, wherein the component is a third-party component developed by a different developer than the developer and integrated with the program by the developer; obtain runtime data associated with the media, wherein the runtime data is obtained during execution of the program; determine a fingerprint of the media; transmit to a server the runtime data and the fingerprint, whereby transmitting lightweight data to the server; determine, based on blocking rules, whether to allow the media to be displayed, wherein the blocking rules are determined by the developer, whereby the developer selectively blocking a portion of medias served by third-party component and in response to a request received from the server or lack thereof, determine whether to drop the media or transmit the media to the server; whereby providing the server with aggregated data about different medias displayed by third-party components by different instances of the program executed by different user devices.
2. The computer program product of claim 1, wherein the third-party component is a Software Development Kit (SDK) that is compiled into the program by the developer.
3. The computer program product of claim 2, wherein the SDK is an advertisement SDK configured to serve advertisements to users of the program, wherein the media is an advertisement.
4. The computer program product of claim 3, wherein the advertisement is selected from a group consisting of: a static image, a dynamic image, a video, and an interactive advertisement.
5. The computer program product of claim 1, wherein the runtime component is configured to heuristically verify that the media is an advertisement based on the media being displayed by Software Development Kits (SDK) and not by the program.
6. The computer program product of claim 1, wherein the runtime component is configured to heuristically verify that the media is an advertisement based on the media being displayed by an Advertisement Software Development Kit (SDK) and not by the program or by other SDKs.
7. The computer program product of claim 1, wherein the determination of the fingerprint comprises computing a perceptual hashing of the media.
8. The computer program product of claim 7, wherein the program instructions, when executed, are configured to cause the user device to compute the perceptual hashing a multiplicity of times to obtain multiple hashing values; and to compare the multiple hashing values to determine whether the media is static or dynamic.
9. The computer program product of claim 1, wherein the determination of the fingerprint comprises obtaining a Uniform Resource Locator (URL) from which the media is played, wherein the fingerprint is the URL.
10. The computer program product of claim 1 wherein the program instructions, when executed, are configured to cause the user device to verify that the media is an advertisement, wherein the verification comprises comparing aspect ratio of the media with a set of aspect ratios used by advertisements for a device having a displayed aspect ratio as of the user device.
11. The computer program product of claim 10, wherein in response to the verification, the runtime component is configured to notify the server that the component is potentially an Advertisement Software Development Kit (SDK), whereby automatically identifying Advertisement SDKs.
12. The computer program product of claim 1, wherein the runtime component is configured, in response to a second request received from the server, temporarily retaining the media on the user device until the request is received.
13. The computer program product of claim 1, wherein the monitoring of execution comprises: scanning, periodically, visual objects of the program during runtime to identify visual objects associated with an Advertisement Software Development Kit (SDK).
14. The computer program product of claim 1, wherein said monitoring of execution comprises: scanning visual objects of the program during runtime; for each visual object, determining a component responsible for the visual object, wherein said determining comprises performing stack trace analysis to identify the component; and comparing the component with predetermined set of Software Development Kits (SDKs).
15. The computer program product of claim 1, wherein in response to identification of the attempt to display the media, the runtime component is configured to render the media in a resolution lower than a resolution in which the media is to be displayed by the program, whereby down-sampling the media to obtain a lightweight representation thereof.
16. The computer program product of claim 1, wherein the component is an Advertisement Software Development Kit (SDK), wherein the media is an advertisement, whereby the developer selectively blocking a portion of advertisements served by the Advertisement SDK, thereby potentially reducing generated revenue for the developer from the program.
17. The computer program product of claim 1, wherein the developer integrated the runtime component with the program by compiling the runtime component with the program, by statically linking the runtime component with the program, or by causing the program to dynamically link to the runtime component during execution.
18. The computer program product of claim 1, wherein the runtime component is a Software Development Kit (SDK) provided by a provider different than the third-party and the developer, wherein the developer included the SDK in the program.
</claims>
</document>
