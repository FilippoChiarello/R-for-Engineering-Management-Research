<document>

<filing_date>
2018-10-08
</filing_date>

<publication_date>
2020-04-09
</publication_date>

<priority_date>
2018-10-08
</priority_date>

<ipc_classes>
G06F11/36,G06F8/72,G06F8/77,G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
PANDIT, SUSHAIN
WELDEMARIAM, KOMMINIST
DIRIYE, ABDIGANI
KRYSTEK, PAUL
KWATRA, SHIKHAR
</inventors>

<docdb_family_id>
70052037
</docdb_family_id>

<title>
PREDICTIVE CODE CLEARANCE BY A COGNITIVE COMPUTING SYSTEM
</title>

<abstract>
An exemplary method includes obtaining a training set of code data that includes deprecated code; training a multi-layer neural network on the training set of code data to predict usage events for the deprecated code; predicting usage events for the deprecated code, in a first set of code data, using the trained multi-layer neural network; estimating a value of risk associated with the deprecated code in response to the predicted usage events; comparing the estimated value of risk to a threshold; and, in response to the estimated value of risk exceeding the threshold, implementing an ameliorative action regarding the deprecated code.
</abstract>

<claims>
1. A method comprising: obtaining a training set of code data that includes deprecated code; training a multi-layer neural network model on the training set of code data to predict usage events for the deprecated code; predicting usage events for the deprecated code, in a first set of code data, using the trained multi-layer neural network model; estimating a value of risk associated with the deprecated code in response to the prediction of usage events; comparing the estimated value of risk to a threshold; and in response to the estimated value of risk exceeding the threshold, implementing an ameliorative action regarding the deprecated code.
2. The method of claim 1 wherein the ameliorative action includes deleting the deprecated code from the first set of code data.
3. The method of claim 1 wherein the ameliorative action includes replacing the deprecated code with approved code.
4. The method of claim 1 wherein the first set of code data includes data aggregated from crowdsource coding platforms.
5. The method of claim 1 further comprising: obtaining a training data set that includes application code, deprecated code, and ameliorative actions that were performed on the application code in response to presence of the deprecated code within the application code; learning model weights in a supervised fashion in response to the training data set; performing an ameliorative action in response to an input code data set that includes deprecated code; gathering user feedback regarding the ameliorative action; and improving effectiveness of future ameliorative actions by retraining the model weights.
6. The method of claim 5 wherein ameliorative actions are annotated with priorities and are annotated as mutually exclusive, and performing an ameliorative action includes selecting only a higher-priority action to perform.
7. The method of claim 6 wherein improving effectiveness of future ameliorative actions also includes updating the annotations of ameliorative actions in response to the user feedback.
8. A non-transitory computer readable medium embodying computer executable instructions which when executed by a computer cause the computer to facilitate the method of: obtaining a training set of code data that includes deprecated code; training a multi-layer neural network model on the training set of code data to predict usage events for the deprecated code; predicting usage events for the deprecated code, in a first set of code data, using the trained multi-layer neural network model; estimating a value of risk associated with the deprecated code in response to the prediction of usage events; comparing the estimated value of risk to a threshold; and in response to the estimated value of risk exceeding the threshold, implementing an ameliorative action regarding the deprecated code.
9. The computer readable medium of claim 8 wherein the ameliorative action includes deleting the deprecated code from the first set of code data.
10. The computer readable medium of claim 8 wherein the ameliorative action includes replacing the deprecated code with approved code.
11. The computer readable medium of claim 8 wherein the first set of code data includes data aggregated from crowdsource coding platforms.
12. The computer readable medium of claim 8, the method further comprising: obtaining a training data set that includes application code, deprecated code, and ameliorative actions that were performed on the application code in response to presence of the deprecated code within the application code; learning model weights in a supervised fashion in response to the training data set; performing an ameliorative action in response to an input code data set that includes deprecated code; gathering user feedback regarding the ameliorative action; and improving effectiveness of future ameliorative actions by retraining the model weights.
13. The computer readable medium of claim 12 wherein ameliorative actions are annotated with priorities and are annotated as mutually exclusive, and performing an ameliorative action includes selecting only a higher-priority action to perform.
14. The computer readable medium of claim 13 wherein improving effectiveness of future ameliorative actions also includes updating the annotations of ameliorative actions in response to the user feedback.
15. An apparatus comprising: a memory embodying computer executable instructions; and at least one processor, coupled to the memory, and operative by the computer executable instructions to facilitate a method of: obtaining a training set of code data that includes deprecated code; training a multi-layer neural network model on the training set of code data to predict usage events for the deprecated code; predicting usage events for the deprecated code, in a first set of code data, using the trained multi-layer neural network model; estimating a value of risk associated with the deprecated code in response to the prediction of usage events; comparing the estimated value of risk to a threshold; and in response to the estimated value of risk exceeding the threshold, implementing an ameliorative action regarding the deprecated code.
16. The apparatus of claim 15 wherein the ameliorative action includes deleting the deprecated code from the first set of code data.
17. The apparatus of claim 15 wherein the ameliorative action includes replacing the deprecated code with approved code.
18. The apparatus of claim 15 wherein the first set of code data includes data aggregated from crowdsource coding platforms.
19. The apparatus of claim 15, the method further comprising: obtaining a training data set that includes application code, deprecated code, and ameliorative actions that were performed on the application code in response to presence of the deprecated code within the application code; learning model weights in a supervised fashion in response to the training data set; performing an ameliorative action in response to an input code data set that includes deprecated code; gathering user feedback regarding the ameliorative action; and improving effectiveness of future ameliorative actions by retraining the model weights.
20. The apparatus of claim 19 wherein ameliorative actions are annotated with priorities and are annotated as mutually exclusive, and performing an ameliorative action includes selecting only a higher-priority action to perform.
</claims>
</document>
