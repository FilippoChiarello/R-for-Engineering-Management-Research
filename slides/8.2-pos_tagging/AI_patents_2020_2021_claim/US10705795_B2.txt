<document>

<filing_date>
2017-12-18
</filing_date>

<publication_date>
2020-07-07
</publication_date>

<priority_date>
2016-12-19
</priority_date>

<ipc_classes>
G06F11/00,G06F7/02,G06N3/04,G06Q10/06
</ipc_classes>

<assignee>
ACCENTURE GLOBAL SOLUTIONS
</assignee>

<inventors>
SENGUPTA SHUBHASHIS
PODDER, SANJAY
DESHMUKH, JAYATI
DUBASH, NEVILLE
K M, ANNERVAZ
</inventors>

<docdb_family_id>
62562525
</docdb_family_id>

<title>
Duplicate and similar bug report detection and retrieval using neural networks
</title>

<abstract>
A device may receive information associated with first and second bug reports to be classified as duplicate or non-duplicate bug reports. The device may identify first and second descriptions associated with the first and second bug reports, respectively. The first and second descriptions may be different descriptions having a shared description type. The device may identify a neural network for encoding the first and second descriptions, based on the shared description type. The device may encode the first description into a first vector using the neural network, and may encode the second description into a second vector using the neural network. The device may classify the first and second bug reports as duplicate or non-duplicate bug reports based on the first vector and the second vector. The device may perform an action based on classifying the first and second bug reports as duplicate or non-duplicate bug reports.
</abstract>

<claims>
1. A device, comprising: one or more hardware processors to: receive information associated with a first bug report and a second bug report to be classified as duplicate bug reports or non-duplicate bug reports; identify a first description, associated with the first bug report, and a second description associated with the second bug report, the first description and the second description being different descriptions having a shared description type; identify a neural network, of a plurality of different types of neural networks, for encoding the first description and the second description, based on the shared description type; encode the first description into a first vector using the neural network; encode the second description into a second vector using the neural network; classify the first bug report and the second bug report as duplicate bug reports or non-duplicate bug reports based on the first vector and the second vector; and perform an action based on classifying the first bug report and the second bug report as duplicate bug reports or non-duplicate bug reports.
2. The device of claim 1, where the one or more hardware processors, when performing the action, are to: retrieve one or more bug reports that share a threshold degree of similarity with the first bug report or the second bug report; and output information associated with the one or more bug reports.
3. The device of claim 1, where the shared description type is an unstructured data type; and where the one or more hardware processors, when identifying the neural network, are to: identify the neural network based on the shared description type being the unstructured data type.
4. The device of claim 1, where the shared description type is a short description type indicating a description length less than or equal to a threshold length; and where the one or more hardware processors, when identifying the neural network, are to: identify a bi-directional long short-term memory neural network based on the shared description type being the short description type.
5. The device of claim 1, where the shared description type is a long description type indicating a description length greater than or equal to a threshold length; and where the one or more hardware processors, when identifying the neural network, are to: identify a convolutional neural network based on the shared description type being the long description type.
6. The device of claim 1, where the shared description type is a structured description type; and where the one or more hardware processors, when identifying the neural network, are to: identify a single-layer neural network based on the shared description type being the structured description type.
7. The device of claim 1, where the one or more hardware processors, when classifying the first bug report and the second bug report, are to: classify the first bug report and the second bug report as duplicate bug reports; and where the one or more hardware processors, when performing the action, are to: determine that the first bug report has been resolved; and mark the second bug report as resolved based on determining that the first bug report has been resolved and classifying the first bug report and the second bug report as duplicate bug reports.
8. A method, comprising: receiving, by a device, information associated with a first entity and a second entity to be classified as duplicate entities or non-duplicate entities; identifying, by the device, a first set of descriptions, associated with the first entity, and a second set of descriptions associated with the second entity, each description, included in the first set of descriptions, sharing a description type with a corresponding description included in the second set of descriptions; encoding, by the device, the first set of description into a first set of vectors using a corresponding set of neural networks, each neural network, of the corresponding set of neural networks, operating on a different description type; encoding, by the device, the second set of descriptions into a second set of vectors using the corresponding set of neural networks; classifying, by the device, the first entity and the second entity as duplicate entities or non-duplicate entities based on the first set of vectors and the second set of vectors; and performing, by the device, an action based on classifying the first entity and the second entity as duplicate entities or non-duplicate entities.
9. The method of claim 8, where a first description, included in the first set of descriptions, and a second description, included in the second set of descriptions, share a short description type indicating a description length less than or equal to a threshold length; where encoding the first set of descriptions comprises: encoding the first description using a bi-directional long short-term memory neural network based on the first description and the second description sharing the short description type; and where encoding the second set of descriptions comprises: encoding the second description using the bi-directional long short-term memory neural network based on the first description and the second description sharing the short description type.
10. The method of claim 8, where a first description, included in the first set of descriptions, and a second description, included in the second set of descriptions, share a long description type indicating a description length greater than or equal to a threshold length; where encoding the first set of descriptions comprises: encoding the first description using a convolutional neural network based on the first description and the second description sharing the long description type; and where encoding the second set of descriptions comprises: encoding the second description using the convolutional neural network based on the first description and the second description sharing the long description type.
11. The method of claim 8, where a first description, included in the first set of descriptions, and a second description, included in the second set of descriptions, share a structured description type; where encoding the first set of descriptions comprises: encoding the first description using a single-layer neural network based on the first description and the second description sharing the structured description type; and where encoding the second set of descriptions comprises: encoding the second description using the single-layer neural network based on the first description and the second description sharing the structured description type.
12. The method of claim 8, where the first set of descriptions includes a first description that shares a first description type with a second description included in the second set of descriptions; where the first set of descriptions includes a third description that shares a second description type with a fourth description included in the second set of descriptions; and where encoding the first set of descriptions and the second set of descriptions comprises: encoding the first description and the second description using a first neural network that corresponds to the first description type; and encoding the third description and the fourth description using a second neural network that corresponds to the second description type.
13. The method of claim 8, where performing the action comprises: outputting an indication of whether the first entity and the second entity are duplicate entities or non-duplicate entities.
14. The method of claim 8, where the first entity includes a first bug report and the second entity includes a second bug report; and where classifying the first entity and the second entity as duplicate entities or non-duplicate entities comprises: classifying the first bug report and the second bug report as duplicate bug reports or non-duplicate bug reports.
15. A non-transitory computer-readable medium storing instructions, the instructions comprising: one or more instructions that, when executed by one or more processors, cause the one or more processors to: receive information associated with a first entity and a second entity to be classified as duplicate entities or non-duplicate entities; identify a first description associated with the first entity and a second description associated with the second entity, the first description and the second description having a first description type; identify a third description associated with the first entity and a fourth description associated with the second entity, the third description and the fourth description having a second description type that is different from the first description type, the third description being different from the first description, and the fourth description being different from the second description; encode the first description into a first vector using a first neural network; encode the second description into a second vector using the first neural network; encode the third description into a third vector using a second neural network; encode the fourth description into a fourth vector using the second neural network; classify the first entity and the second entity as duplicate entities or non-duplicate entities based on the first vector, the second vector, the third vector, and the fourth vector; and perform an action based on classifying the first entity and the second entity as duplicate entities or non-duplicate entities.
16. The non-transitory computer-readable medium of claim 15, where the first description type is a short description type indicating a description length less than or equal to a threshold length; where the one or more instructions, that cause the one or more processors to encode the first description and to encode the second description, cause the one or more processors to: encode the first description and the second description using a bi-directional long short-term memory neural network based on the first description type being the short description type.
17. The non-transitory computer-readable medium of claim 15, where the first description type is a long description type indicating a description length greater than or equal to a threshold length; where the one or more instructions, that cause the one or more processors to encode the first description and to encode the second description, cause the one or more processors to: encode the first description and the second description using a convolutional neural network based on the first description type being the long description type.
18. The non-transitory computer-readable medium of claim 15, where the one or more instructions, that cause the one or more processors to perform the action, cause the one or more processors to: generate a list of duplicate entities or non-duplicate entities.
19. The non-transitory computer-readable medium of claim 18, where the one or more instructions, that cause the one or more processors to perform the action, cause the one or more processors to: prioritize the list based on a quantity of duplicate entities.
20. The non-transitory computer-readable medium of claim 15, where the one or more instructions, that cause the one or more processors to perform the action, cause the one or more processors to: retrieve one or more bug reports that share a threshold degree of similarity with the first entity or the second entity; and output information associated with the one or more bug reports.
</claims>
</document>
