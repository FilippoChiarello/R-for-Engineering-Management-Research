<document>

<filing_date>
2019-04-25
</filing_date>

<publication_date>
2020-10-21
</publication_date>

<priority_date>
2018-04-28
</priority_date>

<ipc_classes>
G06F9/445
</ipc_classes>

<assignee>
GUANGDONG OPPO MOBILE TELECOMMUNICATIONS CORPORATION
</assignee>

<inventors>
HUANG, Su
</inventors>

<docdb_family_id>
63748633
</docdb_family_id>

<title>
APPLICATION PROGRAM PRE-LOADING METHOD AND APPARATUS, AND STORAGE MEDIUM AND TERMINAL
</title>

<abstract>
A method and an apparatus for preloading an application, a storage medium, and a terminal are provided. The method comprises the following. Target information of a preset application is acquired in response to detecting that the preset application is running in a foreground, where the preset application includes a social application, and the target information is associated with interaction of the preset application. An application to be preloaded is determined according to the target information. The application to be preloaded is preloaded.
</abstract>

<claims>
1. A method for preloading an application, comprising: acquiring target information of a preset application in response to detecting that the preset application is running in a foreground, wherein the preset application comprises a social application, and the target information is associated with interaction of the preset application; determining, according to the target information, an application to be preloaded; and preloading the application to be preloaded.
2. The method of claim 1, wherein the target information comprises an interactive object, and determining, according to the target information, the application to be preloaded comprises: obtaining a first application prediction model by training according to a regularity of applications opened during interaction with the interactive object via the preset application within a first preset historical period; inputting the interactive object into the first application prediction model; and determining, according to an output of the first application prediction model, the application to be preloaded.
3. The method of claim 1, wherein the target information comprises interactive content, and determining, according to the target information, the application to be preloaded comprises one of: identifying the interactive content for a preset keyword and determining the application to be preloaded according to the identified preset keyword, wherein the preset keyword is associated with an application name or an application function; or obtaining a second application prediction model by training according to a regularity of applications opened after the interactive content appears during interaction with another user via the preset application within a second preset historical period, inputting the interactive content into the second application prediction model, and determining, according to an output of the second application prediction model, the application to be preloaded.
4. The method of claim 1, wherein the target information comprises an interactive object and interactive content, and determining, according to the target information, the application to be preloaded comprises: obtaining a third application prediction model by training according to a regularity of applications opened after the interactive content appears during interaction with the interactive object via the preset application within a third preset historical period; inputting the interactive object and the interactive content into the third application prediction model; and determining, according to an output of the third application prediction model, the application to be preloaded.
5. The method of any of claims 1 to 4, further comprising after preloading the application to be preloaded: providing a user with a quick launch entry for a preloaded application; and launching the preloaded application when the quick launch entry is triggered by the user in a preset manner.
6. The method of claim 1, wherein preloading the application to be preloaded comprises:
preloading, according to a pre-established active-window stack for preloading, an application interface of the application to be preloaded, wherein the active-window stack for preloading has boundary coordinates out of a coordinate range of a display screen.
7. The method of claim 6, wherein preloading, according to the pre-established active-window stack for preloading, the application interface of the application to be preloaded comprises: determining existence of the pre-established active-window stack for preloading; establishing the active-window stack for preloading according to a preset principle based on a determination that the pre-established active-window stack for preloading is absent; and preloading, according to the established active-window stack for preloading, the application interface of the application to be preloaded.
8. The method of claim 6, wherein preloading the application interface of the application to be preloaded according to the pre-established active-window stack for preloading comprises: establishing a target process for the application to be preloaded; establishing a task stack for the application to be preloaded in the pre-established active-window stack for preloading; launching, according to the target process, an active-window corresponding to the application to be preloaded in the task stack; and graphing and displaying the application interface of the application to be preloaded according to the active-window launched.
9. The method of claim 6, further comprising:
migrating an application interface of a preloaded application comprised in the active-window stack for preloading to the display screen for display.
10. The method of claim 9, wherein migrating the application interface of the preloaded application comprised in the pre-established active-window stack for preloading to the display screen for display comprises: migrating a task stack for the preloaded application comprised in the pre-established active-window stack for preloading to the top of an application active-window stack; and displaying the application interface of the preloaded application on the display screen by updating size information, configuration information, and visibility of the task stack.
11. The method of claim 1, further comprising: predicting a target application interface required by a user according to the target information; and migrating the target application interface to a display screen for display in response to receiving an instruction for launching the application to be preloaded.
12. The method of claim 1, wherein determining, according to the target information, the application to be preloaded comprises: determining the application to be preloaded according to the target information and current status feature information; wherein the status feature information comprises at least one of: time information, date type, on/off status of a mobile data network, connection status of a wireless hotspot, identity information of a connected wireless hotspot, a previous foreground application, a plug status of an earphone jack, a charging status, power information of a battery, a display duration of a display screen, a motion status of a mobile terminal, location information, connection status of Bluetooth, or last screen-off duration.
13. The method of claim 12, wherein the target information comprises an interactive object and interactive content; and determining the application to be preloaded according to the target information and the current status feature information comprises: acquiring a fourth application prediction model by training according to a regularity of applications opened after the interactive content appears during an interaction via the preset application with the interactive object within a fourth preset historical period, and status feature information when the applications are launched; inputting the interactive object and the current status feature information into the fourth application prediction model; and determining, according to an output of the fourth application prediction model, the application to be preloaded.
14. The method of claim 1, further comprising: acquiring an identity of an application currently running in the foreground; determining whether the application is a preset social application according to the identity; and proceeding to the acquiring of the target information of the application based on a determination that the application is the preset social application.
15. The method of claim 14, further comprising:
returning to the acquiring of the identity of the application currently running in the foreground based on a determination that the application is not the preset social application.
16. The method of claim 1, further comprising:
sending a notification for forging a focus to the application to be preloaded, and according to the notification for forging a focus, maintaining continuous drawing and display update of the application interface of the application to be preloaded within a preset time period.
17. An apparatus for preloading an application, comprising: a foreground application detecting module configured to detect whether a preset application is running in a foreground, the preset application comprising a social application; a target information acquiring module configured to acquiring target information of the preset application in response to detecting that the preset application is running in the foreground, the target information being associated with interaction of the preset application; and a preloading module configured to determine, according to the target information, an application to be preloaded, and preload the application to be preloaded.
18. The apparatus of claim 17, further comprising: a launch entry providing module configured to provide a user with a quick launch entry for a preloaded application after the application to be preloaded is preloaded; a launching module configured to launch the preloaded application when the quick launch entry is triggered by the user in a preset manner.
19. A computer-readable storage medium storing computer programs which, when executed by a processor, are operable with the processor to execute the method for preloading an application of any of claims 1-16.
20. A terminal comprising a memory, a processor, and computer programs which are stored in the memory, which, when executed by the processor, are operable with the processor to execute the method for preloading an application of any of claims 1-16.
</claims>
</document>
