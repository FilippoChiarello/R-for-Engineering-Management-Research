<document>

<filing_date>
2018-03-19
</filing_date>

<publication_date>
2021-01-19
</publication_date>

<priority_date>
2018-03-19
</priority_date>

<ipc_classes>
G06F16/21,G06F16/23,G06F16/25,G06F9/54,H04L12/24,H04L29/06,H04L29/08
</ipc_classes>

<assignee>
SECURE-24
</assignee>

<inventors>
BARTUSEK, PETER ANTHONY
DEPERRO, CHRISTOPHER TODD
DOVE, STEVEN JOSEPH
ILITCH, NICK
STREETER, BRETT RYAN
DENYER, JACOB ANTHONY
</inventors>

<docdb_family_id>
67906273
</docdb_family_id>

<title>
Discovery and migration planning techniques optimized by environmental analysis and criticality
</title>

<abstract>
Systems and methods for discovery of and planning migration for computing nodes are provided. At least one collector node is deployed at a source location network to discover data associated with computing nodes of a source infrastructure. The data is transmitted to a staging API. A migration processing API receives the discovered data from the staging API after satisfying an access control measure and writes the discovered data to a migration database. A migration planning API analyzes the discovered data written to the migration database by applying a criticality algorithm to determine a criticality parameter associated with each of the computing nodes. The criticality parameter identifies a potential impact that each computing node has to migration. The migration planning API automatically groups the computing nodes into migration pods, prioritizes the migration pods based on the criticality parameters, and generates a plan for migrating the migration pods to a target infrastructure.
</abstract>

<claims>
1. A computer-implemented method for discovery of computing nodes of a source infrastructure at a source location and for planning migration of the computing nodes to a target infrastructure at a target destination, the method comprising: deploying a collector node at a network of the source location; discovering, with the collector node, data associated with computing nodes of the source infrastructure; transmitting, with the collector node, the discovered data from the network of the source location to a staging application programming interface (API) at a remote server; receiving, with the staging API, the discovered data transmitted by the collector node; applying, with the staging API, an access control measure to the discovered data; satisfying, with a migration processing API, the access control measure applied by the staging API; retrieving, with the migration processing API, the discovered data from the staging API after satisfying the access control measure; writing, with the migration processing API, the discovered data to a migration database; analyzing, with a migration planning API, the discovered data written to the migration database by: filtering, with the migration planning API, the discovered data stored in the migration database to filter out common connection data from the discovered data, the common connection data including data relating to at least one of infrastructure services, link local IP addresses, or self-traffic, and applying, with the migration planning API, a criticality algorithm to the discovered data to determine a criticality parameter associated with each of the discovered computing nodes based on a number of occurrences of the computing node, a number of systems that depend on the computing node according to the filtered discovered data, and a user-entered weight assigned to the computing node that indicates a relative importance of the computing node, wherein the criticality parameter identifies a potential impact that each discovered computing node has to migration; automatically grouping, with the migration planning API, the discovered computing nodes of the source infrastructure into migration pods based on dependency of the computing nodes according to the filtered discovered data, the criticality parameters associated with the computing nodes, and predictive analytics based on past discovered data associated with computing nodes from past planned migrations that are similar to the discovered computing nodes that suggest one or more of the discovered computing nodes to include in one of the migration pods and suggest one or more of the discovered computing nodes to exclude from one of the migration pods, and with each migration pod defining a group of discovered computing nodes that depend on one another for network communication at the source infrastructure; prioritizing, with the migration planning API, the migration pods based on the criticality parameters of the discovered computing nodes of each migration pod; and generating, with the migration planning API, a plan for migrating the migration pods to the target infrastructure based on the prioritization of the migration pods.
2. The computer-implemented method of claim 1, wherein deploying the collector node is an agentless process comprising deploying the collector node as a virtual appliance at the network of the source location such that no agent is installed at the network of the source location.
3. The computer-implemented method of claim 1, further comprising the collector node: periodically scanning the computing nodes of the source infrastructure for modifications after initially discovering data associated with the computing nodes; identifying one or more of the computing nodes that have been modified; and re-discovering data associated with modified computing nodes.
4. The computer-implemented method of claim 1, further comprising the collector node executing an adaptation algorithm wherein the collector node performs the steps of: determining whether a computing node is reachable over the network; identifying an operating system utilized by the computing node; selecting one of a plurality of network protocols, the selected network protocol corresponding to the identified operating system; and executing, over the selected network protocol, a network statistics process for discovering data associated with the computing node.
5. The computer-implemented method of claim 1, further comprising: linking a credential manager to the collector node; inputting into the collector node, from the credential manager, credentials data for the computing nodes of the source infrastructure; validating, with the collector node, the computing nodes of the source infrastructure based on the credentials data; and wherein discovering, with the collector node, data associated with computing nodes of the source infrastructure occurs only for computing nodes of the source infrastructure that have been validated based on the credentials data.
6. The computer-implemented method of claim 1, wherein the discovered data is provided in a plurality of different source formats, and further comprising the migration processing API: normalizing the discovered data by applying a set of rules to the discovered data to transform the discovered data from the plurality of different source formats into a single target format; and writing the normalized discovered data to the migration database.
7. The computer-implemented method of claim 1, wherein: transmitting, with the collector node, the discovered data from the network of the source location to the staging API further comprises transmitting a JSON file and metadata related to the discovered data; receiving, with the staging API, the discovered data transmitted by the collector node further comprises receiving the JSON file and metadata; and further comprising the staging API: sending the JSON file to a shared folder; and sending the metadata to a service bus; and further comprising the migration processing API: reading the JSON file from the shared folder; and reading the metadata from the service bus to consume a message defining properties for processing of the discovered data by the migration processing API.
8. The computer-implemented method of claim 1, wherein automatically grouping is further defined by the migration planning API linking the computing nodes of each migration pod to require collective migration of the computing nodes of each migration pod and to prohibit individual migration of any computing node of each migration pod.
9. The computer-implemented method of claim 1, further comprising the migration planning API: applying the criticality algorithm to the discovered data to determine a complexity parameter associated with each migration pod, wherein the complexity parameter identifies complexity of dependency of the group of discovered computing nodes of each migration pod; and prioritizing the migration pods based on the complexity parameters of the migration pods.
10. The computer-implemented method of claim 1, further comprising the migration planning API: applying the criticality algorithm to determine the criticality parameter associated with each of the discovered computing nodes by modeling and querying heuristics to identify or predict security risks associated with one or more of the discovered computing nodes; and automatically grouping one or more of the discovered computing nodes having security risks associated therewith into migration pods to minimize risk to other discovered computing nodes having no security risks associated therewith.
11. The computer-implemented method of claim 1, further comprising the migration planning API utilizing predictive analytics in conjunction with applying the criticality algorithm by analyzing past discovered data associated with computing nodes from past planned migrations that are similar to the discovered computing nodes to make a predictive determination regarding the criticality parameters of the discovered computing nodes.
12. The computer-implemented method of claim 11, further comprising the migration planning API predictively determining dependency between discovered computing nodes based on predictive analysis of the past discovered data.
13. The computer-implemented method of claim 11, further comprising the migration planning API automatically grouping the discovered computing nodes of the source infrastructure into migration pods by predictively determining a latency impact that two or more discovered computing nodes will have on planned migration if separated into different migration pods based on predictive analysis of the past discovered data.
14. The computer-implemented method of claim 11, further comprising the migration planning API automatically grouping the discovered computing nodes of the source infrastructure into migration pods by predictively determining a likelihood of migration failure if two or more of the discovered computing nodes are included in a same migration pod based on predictive analysis of the past discovered data.
15. The computer-implemented method of claim 1, wherein generating the plan for migrating the migration pods to the target infrastructure further comprises the migration planning API identifying applications installed on the discovered computing nodes, analyzing relevance of the identified applications with respect to the target infrastructure, and suggesting removal of one or more of the identified applications at the target infrastructure based on the analyzed relevance.
16. The computer-implemented method of claim 1, wherein generating the plan for migrating the migration pods to the target infrastructure further comprises the migration planning API automatically suggesting security recommendations, firewall rules, system sizing requirements, and cost estimations for the discovered computing nodes to be migrated to the target infrastructure.
17. The computer-implemented method of claim 1, wherein generating the migration plan further comprises the migration planning API generating a topology visualization displayable with a graphical user interface wherein the topology visualization illustrates planned topology of the computing nodes at the target infrastructure as a result of migration.
18. The computer-implement method of claim 3, further comprising the collector node: initially discovering the data associated with the computing nodes using a bulk scan; and periodically scanning a subset of the computing nodes of the source infrastructure predicted to change based on predictive analysis of the past discovered data for modifications after the initial discovery, wherein the identified one or more computing nodes that have been modified are part of the subset of the computing nodes.
19. The computer-implemented method of claim 10, further comprising the migration planning API excluding one or more of the discovered computing nodes from one of the migration pods to minimize risk to one or more other of the discovered computing nodes included in the one of the migration pods.
20. A computer-implemented system for discovery of computing nodes of a source infrastructure at a source location and for planning migration of the computing nodes to a target infrastructure at a target destination, the system comprising: a collector node configured for deployment at a network of the source location and being configured to discover data associated with computing nodes of the source infrastructure and to transmit the discovered data from the network of the source location; a staging application programming interface (API) configured to receive the discovered data transmitted by the collector node and apply an access control measure to the discovered data; a migration database; a migration processing API being configured to satisfy the access control measure applied by the staging API, retrieve the discovered data from the staging API after satisfying the access control measure, and write the discovered data to the migration database; and a migration planning API being configured to: analyze the discovered data written to the migration database; filter the discovered data stored in the migration database to filter out common connection data from the discovered data, the common connection data including data relating to at least one of infrastructure services, link local IP addresses, or self-traffic; implement a criticality algorithm to the discovered data to determine a criticality parameter associated with each of the discovered computing nodes based on a number of occurrences of the computing node, a number of systems that depend on the computing node according to the filtered discovered data, and a user-entered weight assigned to the computing node that indicates a relative importance of the computing node, wherein the criticality parameter identifies a potential impact that each discovered computing node has to migration; automatically group the discovered computing nodes of the source infrastructure into migration pods based on dependency of the computing nodes according to the filtered discovered data, the criticality parameters associated with the computing nodes, and predictive analytics based on past discovered data associated with computing nodes from past planned migrations that are similar to the discovered computing nodes that suggest one or more of the discovered computing nodes to include in one of the migration pods and suggest one or more of the discovered computing nodes to exclude from one of the migration pods, and with each migration pod defining a group of discovered computing nodes that depend on one another for network communication at the source infrastructure; prioritize the migration pods based on the criticality parameters of the discovered computing nodes of each migration pod; and generate a plan for migrating the migration pods to the target infrastructure based on the prioritization of the migration pods.
</claims>
</document>
