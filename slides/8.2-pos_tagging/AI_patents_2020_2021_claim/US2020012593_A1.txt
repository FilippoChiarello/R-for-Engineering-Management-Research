<document>

<filing_date>
2019-09-16
</filing_date>

<publication_date>
2020-01-09
</publication_date>

<priority_date>
2015-09-14
</priority_date>

<ipc_classes>
G06F11/07,G06F11/36
</ipc_classes>

<assignee>
PALANTIR TECHNOLOGIES
</assignee>

<inventors>
MAAG, PETER
ALBERTSON, JACOB
NEWMAN, JARED
NORDLING, VIKTOR
ALBIN, MACIEJ
LYNCH, MATTHEW
</inventors>

<docdb_family_id>
59386695
</docdb_family_id>

<title>
PLUGGABLE FAULT DETECTION TESTS FOR DATA PIPELINES
</title>

<abstract>
Discussed herein are embodiments of methods and systems which allow engineers or administrators to create modular plugins which represent the logic for various fault detection tests that can be performed on data pipelines and shared among different software deployments. In some cases, the modular plugins each define a particular test to be executed against data received from the pipeline in addition to one or more configuration points. The configuration points represent configurable arguments, such as variables and/or functions, referenced by the instructions which implement the tests and that can be set according to the specific operation environment of the monitored pipeline.
</abstract>

<claims>
1. A method for detecting faults related to a data pipeline system, the method comprising: at one or more computing devices comprising one or more processors and memory storing one or more computer programs executed by the one or more processors to perform the method, performing operations comprising: receiving a plugin comprising one or more instructions representing a test to perform on the data pipeline system and one or more configuration points; wherein the data pipeline system is configured to receive source data from one or more data sources and configured to apply one or more transformations to the source data to produce transformed data before storage of the transformed data in one or more data sinks; receiving test data from the data pipeline system; determining to run the test defined by the plugin on the data pipeline system including executing the one or more instructions of the plugin based the test data, wherein a result of executing the one or more instructions includes at least a test result status indicator; and causing display of a graphical user interface that presents at least the test result status indicator.
2. The method of claim 1, wherein the test data received from the data pipeline system comprises a metric reflecting an amount of the transformed data after the one or more transformations.
3. The method of claim 1, wherein receiving the one or more instructions representing a test to perform on the data pipeline system comprises receiving a plugin comprising the one or more instructions.
4. A fault detection system for detecting faults related to a data pipeline system, the fault detection system comprising: storage media; one or more processors; and one or more programs stored in the storage media and configured for execution by the one or more processors, the one or more programs comprising instructions for: receiving a) one or more instructions representing a test to perform on data processed by the data pipeline system and b) one or more configuration points, wherein the data pipeline system is configured to receive source data from one or more data sources and configured to apply one or more transformations to the source data to produce transformed data before storage of the transformed data in one or more data sinks; and receiving test data from the data pipeline system; determining to run the test on the data pipeline system including executing the one or more instructions based on one or more settings for the one or more configuration points and the test data, wherein a result of executing the one or more instructions includes at least a test result status indicator; wherein the test result status indicator is based, at least in part, on the result of executing the one or more instructions including determining: (a) whether a sample contains a correct number of columns according to a schema for the transformed data, (b) whether data in each column of the sample adheres to a data type of the column as specified in a schema for the transformed data, (c) whether data in each column of the sample improperly contains NULL values according to a schema for the transformed data, or any combination of (a), (b), or (c); and causing display of a graphical user interface that visibly presents at least the test result status indicator.
5. The fault detection system of claim 4, wherein determining to run the test is performed based on a configuration point of the one or more configuration points that defines a time interval for periodically executing the test.
6. The fault detection system of claim 4, wherein the test is performed by training a classifier based on a historical sample of the transformed data and, after the classifier has been trained, using the classifier to predict a test result status indicator based on the test data.
7. The fault detection system of claim 6, wherein the classifier is implemented using an artificial neural network.
8. The fault detection system of claim 4, wherein the test result status indicator is one of a plurality of test result status indicators that include at least a test result status representing that a fault occurred with the data pipeline system, a test result status representing that a fault has potentially occurred with the data pipeline system, and a test result status representing that no fault has occurred with the data pipeline system.
9. The fault detection system of claim 4, wherein the data pipeline system includes a plurality of pipelines and the graphical user interface displays a plurality of test result status indicators, each test result status indicator of the plurality of test result status indicators relating to a plurality of tests performed on a particular pipeline during a particular time period.
10. The fault detection system of claim 9, wherein each test result status indicator of the plurality of test result status indicators is generated by using a worst test result status indicator among test result status indicators for the plurality of tests performed on the particular pipeline during the particular time period.
11. The fault detection system of claim 10, wherein each particular test result status indicator of the plurality of test result status indicators is displayed as or in relation to a widget which, when selected, causes display of a third graphical user interface that presents the plurality of tests for the particular pipeline during the particular time period.
12. The fault detection system of claim 11, wherein each particular test of the plurality of tests is displayed in the third graphical user interface as or in relation to a widget which, when selected, causes display of a fourth graphical user interface that presents detailed information for the particular test.
13. The fault detection system of claim 12, wherein the detailed information for the particular test is displayed in relation to a widget which, when selected, causes a test result status indicator of the particular test to be treated as though no fault was detected.
14. The fault detection system of claim 4, wherein the one or more configuration points include one or more of: variables referenced by the one or more instructions or functions referenced by the one or more instructions.
15. The fault detection system of claim 4, wherein the one or more instructions perform the test by inspecting log data generated by the data pipeline system for one or more results of the data pipeline system executing one or more checks for faults involving the data pipeline system.
16. The fault detection system of claim 4, wherein the graphical user interface is displayed via a client application.
17. The fault detection system of claim 16, wherein the fault detection system receives the one or more instructions via the client application.
18. The fault detection system of claim 4, wherein the test data comprises a sample of the source data before the one or more transformations.
19. The fault detection system of claim 18, wherein the one or more configuration points specify collection of the sample of the source data from the one or more data sources.
20. The fault detection system of claim 18, wherein the test result status indicator is based, at least in part, on the result of executing the one or more instructions including determining: (a) whether the sample of the source data contains a correct number of columns according to a schema for the source data, (b) whether data in each column of the sample of the source data adheres to a data type of the column as specified in a schema for the source data, (c) whether data in each column of the sample of the source data improperly contains NULL values according to a schema for the source data, or any combination of (a), (b), or (c).
</claims>
</document>
