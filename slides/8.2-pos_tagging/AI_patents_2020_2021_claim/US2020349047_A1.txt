<document>

<filing_date>
2019-04-30
</filing_date>

<publication_date>
2020-11-05
</publication_date>

<priority_date>
2019-04-30
</priority_date>

<ipc_classes>
G06F11/32,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
EMC IP HOLDING COMPANY
</assignee>

<inventors>
ARMANGAU; PHILIPPE
FAIBISH, SORIN
PEDONE, JR., JAMES M.
</inventors>

<docdb_family_id>
73015925
</docdb_family_id>

<title>
USING MACHINE LEARNING TO DETECT SYSTEM CHANGES
</title>

<abstract>
Techniques for detecting state changes in a system may include receiving a first neural network that is trained to detect when the system transitions into a first resulting state, wherein the system transitions into at least a first intermediate state prior to transitioning into the final resulting state; training the first neural network using a first plurality of inputs denoting the system in the first intermediate state; obtaining a plurality of sets of internal state information of the first neural network, each set of the plurality of sets denoting an internal state of the first neural network at a different point in time after the first neural network has processed at least a portion of the first plurality of inputs; and training a second neural network, using the plurality of sets of internal state information, to detect the first intermediate state.
</abstract>

<claims>
1. A method of detecting state changes in a system comprising: receiving a first neural network that is trained to detect when the system transitions into a first resulting state, wherein the system transitions into at least a first intermediate state prior to transitioning into the final resulting state; training the first neural network using a first plurality of inputs denoting the system in the first intermediate state; obtaining a plurality of sets of internal state information of the first neural network, each set of the plurality of sets denoting an internal state of the first neural network at a different point in time after the first neural network has processed at least a portion of the first plurality of inputs; and training a second neural network, using the plurality of sets of internal state information, to detect the first intermediate state.
2. The method of claim 1, wherein each set of the plurality of sets of internal state information include weights that are applied to inputs of neurons of one or more hidden layers of the first neural network.
3. The method of claim 2, wherein each set of the plurality of sets of internal state information include weights that are applied to inputs of neurons of an output layer of the first neural network.
4. The method of claim 3, wherein the plurality of sets of internal state information include a plurality of images, wherein each of the plurality of images represents weights applied to inputs of neurons of the first neural network.
5. The method of claim 4, wherein each of the plurality of images is a bitmap image.
6. The method of claim 1, wherein the first neural network is a convolutional neural network.
7. The method of claim 1, wherein the second neural network is a convolutional neural network.
8. The method of claim 5, further comprising: providing a visual representation of the plurality of images on a user interface.
9. The method of claim 1, further comprising: providing a first input to the first neural network while the first neural network is in training mode, wherein the first input denotes the system in the first intermediate state; obtaining a first set of internal state information of the first neural network, the first set denoting an internal state of the first neural network after the first neural network has processed the first input; and subsequent to said training the second neural network to detect the first intermediate state, providing the first set of internal state information to the first neural network; detecting, by the second neural network in response to the first set of internal state information, the first intermediate state; and generating an output by the second neural network indicating the first intermediate state denoted by the first input.
10. The method of claim 9, further comprising: providing a visual representation of the first set of internal state information of the first network on a user interface.
11. The method of claim 9, further comprising: responsive to detecting the first intermediate state denoted by the first input, taking a responsive action.
12. The method of claim 11, wherein the first resulting state denotes a failed, malfunctioning, defective or unhealthy component of the system, and wherein the first intermediate state denotes a lesser severity of failure, malfunctioning, defectiveness or unhealthiness than the first resulting state.
13. The method of claim 12, wherein the responsive action includes an action that remediates or corrects the component prior to the component transitioning into the first resulting state.
14. The method of claim 12, wherein the responsive action includes an action that is a recovery operation to be completed prior to an expected future point in time when the component is estimated to transition to the first resulting state.
15. The method of claim 1, wherein the system transitions into a second intermediate state prior to transitioning into the final resulting state and wherein the system transitions into the second intermediate state after the first intermediate state.
16. The method of claim 15, further comprising: training the first neural network using a second plurality of inputs denoting the system in the second intermediate state; obtaining a second plurality of sets of internal state information of the first neural network, each set of the second plurality of sets of internal state information denoting an internal state of the first neural network at a different point in time after the first neural network has processed at least a portion of the second plurality of inputs; and training the second neural network, using the second plurality of sets of internal state information, to detect the second intermediate state.
17. The method of claim 16, wherein each set of the second plurality of sets of internal state information includes adjusted weights that are applied to inputs of neurons of layers of the first neural network after the first neural network has processed at least a portion of the second plurality of inputs.
18. The method of claim 17, wherein the second plurality of sets of internal state information include a plurality of images, wherein each of the plurality of images represents adjusted weights applied to inputs of neurons of the first neural network after the first neural network has processed at least a portion of the second plurality of inputs.
19. A system comprising: a processor; and a memory comprising code stored thereon that, when executed, performs a method of detecting state changes in a system comprising: receiving a first neural network that is trained to detect when the system transitions into a first resulting state, wherein the system transitions into at least a first intermediate state prior to transitioning into the final resulting state; train the first neural network using a first plurality of inputs denoting the system in the first intermediate state; obtaining a plurality of sets of internal state information of the first neural network, each set of the plurality of sets denoting an internal state of the first neural network at a different point in time after the first neural network has processed at least a portion of the first plurality of inputs; and training a second neural network, using the plurality of sets of internal state information, to detect the first intermediate state.
20. A computer readable medium comprising code stored thereon that, when executed, performs a method of detecting state changes in a system comprising: receiving a first neural network that is trained to detect when the system transitions into a first resulting state, wherein the system transitions into at least a first intermediate state prior to transitioning into the final resulting state; training the first neural network using a first plurality of inputs denoting the system in the first intermediate state; obtaining a plurality of sets of internal state information of the first neural network, each set of the plurality of sets denoting an internal state of the first neural network at a different point in time after the first neural network has processed at least a portion of the first plurality of inputs; and training a second neural network, using the plurality of sets of internal state information, to detect the first intermediate state.
</claims>
</document>
