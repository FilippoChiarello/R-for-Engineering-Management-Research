<document>

<filing_date>
2019-07-25
</filing_date>

<publication_date>
2021-01-28
</publication_date>

<priority_date>
2019-07-25
</priority_date>

<ipc_classes>
G06F11/00,G06F11/32,G06F11/34,G06N20/20
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
Sevakula, Rahul Kumar K
Mhatre, Parag Sanjay
</inventors>

<docdb_family_id>
74190420
</docdb_family_id>

<title>
MACHINE LEARNING FOR FAILURE EVENT IDENTIFICATION & PREDICTION
</title>

<abstract>
Techniques for failure prediction are provided. A plurality of event indications is received, where each respective event indication corresponds to a respective failure in a computing system. A plurality of machine learning (ML) models is trained based on combinations of event indications in the plurality of event indications, and the ML models are evaluated to generate a respective quality score for each respective ML model. An ensemble of ML models is defined from the plurality of ML models, based on identifying ML models of the plurality of ML models with corresponding quality scores exceeding a predefined threshold. Current data logs from the computing system are processed using the ensemble of ML models, and upon determining that any ML model of the ensemble of ML models predicted a failure based on the current data logs, an alert is generated.
</abstract>

<claims>
1. A method comprising: receiving a plurality of event indications, wherein each respective event indication of the plurality of event indications corresponds to a respective failure in a computing system; training a plurality of machine learning (ML) models based on combinations of event indications in the plurality of event indications; evaluating the plurality of ML models to generate a respective quality score for each respective ML model of the plurality of ML models; defining an ensemble of ML models from the plurality of ML models, based on identifying ML models of the plurality of ML models with corresponding quality scores exceeding a predefined threshold; processing current data logs from the computing system using the ensemble of ML models; and upon determining that any ML model of the ensemble of ML models predicted a failure based on the current data logs, generating an alert.
2. The method of claim 1, the method further comprising, prior to processing the current data logs using the ensemble of ML models: normalizing the current data logs based on a common timestamp and common sampling rate.
3. The method of claim 1, wherein training the plurality of ML models comprises training a separate ML model for each possible combination of event indications, wherein training a first ML model of the plurality of ML models comprises: generating training data for a first event indication of the plurality of event indications by: retrieving a plurality of historic data logs for the computing system; labeling a first historic data log of the plurality of historic data logs with a one, based on determining that the first historic data log was recorded during a first event corresponding to the first event indication; and labeling a second historic data log of the plurality of historic data logs with a zero, based on determining that the second historic data log was not recorded during the first event; and training the first ML model using the first and second historic data logs as input and corresponding labels as target output.
4. The method of claim 1, wherein evaluating the plurality of ML models to generate the respective quality score for each respective ML model comprises, for each respective ML model of the plurality of ML models: determining training performance of the respective ML model with respect to a square root of sensitivity and specificity of the respective ML model; and determining a comprehensiveness of the respective ML model to identify events that remaining ML models of the plurality of ML models do not identify.
5. The method of claim 1, wherein training the plurality of ML models comprises: training a first ML model based on a first combination of event indication of the plurality of event indications; and upon determining that training accuracy of the first ML model is below a predefined threshold: training a second ML model based on a subset of the first combination of event indication of the plurality of event indications.
6. The method of claim 1, wherein training the plurality of ML models comprises: training a first ML model based on a first, second, and third event indication of the plurality of event indications; evaluating a training accuracy of the first ML model; upon determining that the training accuracy of the first ML model is below a predefined threshold: training a second ML model based on the first and second event indications; training a third ML model based on the first and third event indications; training a fourth ML model based on the second and third event indications; evaluating training accuracies of the second, third, and fourth ML models; and upon determining that the training accuracy of the second ML model is below a predefined threshold: training a fifth ML model based only on the first event indication; and training a sixth ML model based only on the second event indication.
7. The method of claim 1, wherein training the plurality of ML models comprises: training a first ML model based only on a first event indication of the plurality of event indications; training a second ML model based only on a second event indication of the plurality of event indications; and upon determining that (i) the first ML model recognizes the second event indication and (ii) the second ML model recognizes the first event indication: training a third ML model based on both the first and second event indications.
8. A computer-readable storage medium having computer-readable program code embodied therewith, the computer-readable program code executable by one or more computer processors to perform an operation comprising receiving a plurality of event indications, wherein each respective event indication of the plurality of event indications corresponds to a respective failure in a computing system; training a plurality of machine learning (ML) models based on combinations of event indications in the plurality of event indications; evaluating the plurality of ML models to generate a respective quality score for each respective ML model of the plurality of ML models; defining an ensemble of ML models from the plurality of ML models, based on identifying ML models of the plurality of ML models with corresponding quality scores exceeding a predefined threshold; processing current data logs from the computing system using the ensemble of ML models; and upon determining that any ML model of the ensemble of ML models predicted a failure based on the current data logs, generating an alert.
9. The computer-readable storage medium of claim 8, the operation further comprising, prior to processing the current data logs using the ensemble of ML models: normalizing the current data logs based on a common timestamp and common sampling rate.
10. The computer-readable storage medium of claim 8, wherein training the plurality of ML models comprises training a separate ML model for each possible combination of event indications, wherein training a first ML model of the plurality of ML models comprises: generating training data for a first event indication of the plurality of event indications by: retrieving a plurality of historic data logs for the computing system; labeling a first historic data log of the plurality of historic data logs with a one, based on determining that the first historic data log was recorded during a first event corresponding to the first event indication; and labeling a second historic data log of the plurality of historic data logs with a zero, based on determining that the second historic data log was not recorded during the first event; and training the first ML model using the first and second historic data logs as input and corresponding labels as target output.
11. The computer-readable storage medium of claim 8, wherein evaluating the plurality of ML models to generate the respective quality score for each respective ML model comprises, for each respective ML model of the plurality of ML models: determining training performance of the respective ML model with respect to a square root of sensitivity and specificity of the respective ML model; and determining a comprehensiveness of the respective ML model to identify events that remaining ML models of the plurality of ML models do not identify.
12. The computer-readable storage medium of claim 8, wherein training the plurality of ML models comprises: training a first ML model based on a first combination of event indication of the plurality of event indications; and upon determining that training accuracy of the first ML model is below a predefined threshold: training a second ML model based on a subset of the first combination of event indication of the plurality of event indications.
13. The computer-readable storage medium of claim 8, wherein training the plurality of ML models comprises: training a first ML model based on a first, second, and third event indication of the plurality of event indications; evaluating a training accuracy of the first ML model; upon determining that the training accuracy of the first ML model is below a predefined threshold: training a second ML model based on the first and second event indications; training a third ML model based on the first and third event indications; training a fourth ML model based on the second and third event indications; evaluating training accuracies of the second, third, and fourth ML models; and upon determining that the training accuracy of the second ML model is below a predefined threshold: training a fifth ML model based only on the first event indication; and training a sixth ML model based only on the second event indication.
14. The computer-readable storage medium of claim 8, wherein training the plurality of ML models comprises: training a first ML model based only on a first event indication of the plurality of event indications; training a second ML model based only on a second event indication of the plurality of event indications; and upon determining that (i) the first ML model recognizes the second event indication and (ii) the second ML model recognizes the first event indication: training a third ML model based on both the first and second event indications.
15. A system comprising: one or more computer processors; and a memory containing a program which when executed by the one or more computer processors performs an operation, the operation comprising: receiving a plurality of event indications, wherein each respective event indication of the plurality of event indications corresponds to a respective failure in a computing system; training a plurality of machine learning (ML) models based on combinations of event indications in the plurality of event indications; evaluating the plurality of ML models to generate a respective quality score for each respective ML model of the plurality of ML models; defining an ensemble of ML models from the plurality of ML models, based on identifying ML models of the plurality of ML models with corresponding quality scores exceeding a predefined threshold; processing current data logs from the computing system using the ensemble of ML models; and upon determining that any ML model of the ensemble of ML models predicted a failure based on the current data logs, generating an alert.
16. The system of claim 15, wherein training the plurality of ML models comprises training a separate ML model for each possible combination of event indications, wherein training a first ML model of the plurality of ML models comprises: generating training data for a first event indication of the plurality of event indications by: retrieving a plurality of historic data logs for the computing system; labeling a first historic data log of the plurality of historic data logs with a one, based on determining that the first historic data log was recorded during a first event corresponding to the first event indication; and labeling a second historic data log of the plurality of historic data logs with a zero, based on determining that the second historic data log was not recorded during the first event; and training the first ML model using the first and second historic data logs as input and corresponding labels as target output.
17. The system of claim 15, wherein evaluating the plurality of ML models to generate the respective quality score for each respective ML model comprises, for each respective ML model of the plurality of ML models: determining training performance of the respective ML model with respect to a square root of sensitivity and specificity of the respective ML model; and determining a comprehensiveness of the respective ML model to identify events that remaining ML models of the plurality of ML models do not identify.
18. The system of claim 15, wherein training the plurality of ML models comprises: training a first ML model based on a first combination of event indication of the plurality of event indications; and upon determining that training accuracy of the first ML model is below a predefined threshold: training a second ML model based on a subset of the first combination of event indication of the plurality of event indications.
19. The system of claim 15, wherein training the plurality of ML models comprises: training a first ML model based on a first, second, and third event indication of the plurality of event indications; evaluating a training accuracy of the first ML model; upon determining that the training accuracy of the first ML model is below a predefined threshold: training a second ML model based on the first and second event indications; training a third ML model based on the first and third event indications; training a fourth ML model based on the second and third event indications; evaluating training accuracies of the second, third, and fourth ML models; and upon determining that the training accuracy of the second ML model is below a predefined threshold: training a fifth ML model based only on the first event indication; and training a sixth ML model based only on the second event indication.
20. The system of claim 15, wherein training the plurality of ML models comprises: training a first ML model based only on a first event indication of the plurality of event indications; training a second ML model based only on a second event indication of the plurality of event indications; and upon determining that (i) the first ML model recognizes the second event indication and (ii) the second ML model recognizes the first event indication: training a third ML model based on both the first and second event indications.
</claims>
</document>
