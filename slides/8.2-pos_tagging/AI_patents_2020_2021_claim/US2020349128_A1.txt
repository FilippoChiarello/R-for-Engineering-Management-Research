<document>

<filing_date>
2019-04-30
</filing_date>

<publication_date>
2020-11-05
</publication_date>

<priority_date>
2019-04-30
</priority_date>

<ipc_classes>
G06F16/21,G06F16/28,G06F16/907
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
SAGGAU, VOLKER
PORTISCH, JAN
BRACHOLDT, SANDRA
Pantel, Bj√∂rn
</inventors>

<docdb_family_id>
73017529
</docdb_family_id>

<title>
CLUSTERING WITHIN DATABASE DATA MODELS
</title>

<abstract>
A method for data model clustering is provided herein. A first representation of a data model may be received. Edge betweenness values may be determined for respective nodes in the first representation. At least one node in the first representation may be identified as a linking node based on the respective edge betweenness values. One or more linking nodes may be removed from the first representation, thereby forming at least a first cluster and a second cluster. Degrees for the respective remaining nodes may be calculated. Respective hub nodes may be identified for the respective clusters based on the respective degrees in the clusters. Respective descriptions may be generated for the respective clusters based on the respective hub nodes. A clustered representation of the first representation may be stored with the clusters and their respective descriptions.
</abstract>

<claims>
1. A method, implemented by one or more computing devices comprising at least one hardware processor and one or more tangible memories coupled to the at least one hardware processor, for arranging database objects in a database model into clusters, the method comprising: receiving a first representation of the database model, wherein the first representation comprises a plurality of nodes and edges between the nodes, wherein at least a portion of the nodes of the plurality of nodes represent database tables and at least a portion of the edges between nodes of the plurality of nodes represent foreign key relationships; determining edge betweenness values for the respective nodes in the plurality of nodes in the first representation, wherein determining a given edge betweenness value for a given node of the plurality of nodes comprises: for all pairs of nodes that do not include the given node, determining a number of shortest paths between the nodes of the pairs of nodes that comprise the given node; for all pairs of nodes that do not include the given node, determining a number of shortest paths between the nodes of the pairs of nodes; summing the ratio of the number of shortest paths that include the given node to the number of shortest paths for all the pairs of nodes that do not include the given node; identifying a least one node of the plurality of nodes as a linking node, wherein the linking node has the highest edge betweenness value of the plurality of nodes and connects a first subset of nodes of the plurality of nodes to a second subset of nodes of the plurality of nodes; remove one or more linking nodes from the plurality of nodes, wherein the first subset of nodes forms a first cluster and the second subset of nodes forms a second cluster; calculate a plurality of degrees for the respective remaining nodes, wherein a given degree is a number of nodes connected to the given node; identifying a first hub node for the first cluster, wherein the first hub node has the highest degree of the nodes within the first cluster; identifying a second hub node for the second cluster, wherein the second hub node has the highest degree of the nodes within the second cluster; generating a first name for the first cluster based on the first hub node; generating a second name for the second cluster based on the second hub node; and storing a clustered representation of the first representation comprising the first cluster, the second cluster, the first name, and the second name.
2. The method of claim 1, further comprising: mapping the clustered representation to a second database representation, wherein the mapping comprises matching the first cluster to one or more first objects in the second database representation and matching the second cluster to one or more second objects in the second database representation.
3. The method of claim 1, further comprising, in a distributed database system comprising a plurality of servers: identifying a first table of a database represented by the first representation, wherein the first table is associated with the first cluster; identifying a second table of the database represented by the first representation, wherein the second table is associated with the first cluster; storing the first table and the second table on a first server of the plurality of servers based on the first cluster.
4. The method of claim 1, further comprising: providing the clustered representation to a user; receiving a command to store the clustered representation or to repeat the method using the clustered representation.
5. The method of claim 1, further comprising: repeating the method with the clustered representation to generate a second clustered representation; providing the clustered representation and the second clustered representation to a user; receiving a command to store the clustered representation, the second clustered representation, or to repeat the method using the second clustered representation.
6. The method of claim 1, further comprising: providing the first representation to a user; receiving a selection of a linking node, wherein the linking node is of the plurality of nodes; repeating the method using successively generated clustered representations until the selected linking node is identified as a linking node.
7. The method of claim 1, further comprising: providing the first representation to a user; receiving a selection of a hub node, wherein the hub node is of the plurality of nodes; repeating the method using successively generated clustered representations until the selected hub node is identified as a hub node.
8. The method of claim 1, wherein the edge betweenness values are calculated and identified linking nodes are removed iteratively until a stopping criterion is met.
9. One or more non-transitory computer-readable storage media storing computer-executable instructions for causing a computing system to perform a method for generating clusters in a database model, the method comprising: receiving a first representation of the database model, wherein the first representation comprises a plurality of nodes and edges between the nodes; determining edge betweenness values for the respective nodes in the plurality of nodes in the first representation, wherein determining a given edge betweenness value for a given node of the plurality of nodes is based on a number of shortest paths between other nodes which include the given node; identifying at least one node of the plurality of nodes as a linking node based on the edge betweenness values of the plurality of nodes, wherein the linking node connects a first subset of nodes of the plurality of nodes to a second subset of nodes of the plurality of nodes; removing one or more linking nodes from the plurality of nodes, wherein the first subset of nodes forms a first cluster and the second subset of nodes forms a second cluster; calculating a plurality of degrees for the respective remaining nodes, wherein a given degree is a number of nodes connected to the given node; identifying a first hub node for the first cluster, wherein the first hub node has the highest degree of the nodes within the first cluster; identifying a second hub node for the second cluster, wherein the second hub node has the highest degree of the nodes within the second cluster; generating a first description for the first cluster based on the first hub node; generating a second description for the second cluster based on the second hub node; and storing a clustered representation of the first representation comprising the first cluster, the second cluster, the first description, and the second description.
10. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising: mapping the clustered representation to a second database representation, wherein the mapping comprises matching the first cluster to one or more first objects in the second database representation and matching the second cluster to one or more second objects in the second database representation.
11. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising, in a distributed database system comprising a plurality of servers: identifying a first table of a database represented by the first representation, wherein the first table is associated with the first cluster; identifying a second table of the database represented by the first representation, wherein the second table is associated with the first cluster; storing the first table and the second table on a first server of the plurality of servers based on the first cluster.
12. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising: providing the clustered representation to a user, wherein providing the clustered representation comprises displaying the clustered representation using the first description for displaying the first cluster and the second description for displaying the second cluster; receiving a command to store the clustered representation or to repeat the method using the clustered representation.
13. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising: repeating the method with the clustered representation to generate a second clustered representation; providing the clustered representation and the second clustered representation to a user, wherein providing the clustered representation and the second clustered representation respectively comprise displaying their respective descriptions; receiving a command to store the clustered representation, the second clustered representation, or to repeat the method using the second clustered representation.
14. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising: providing the first representation to a user; receiving a selection of a linking node or a hub node, wherein the linking node or the hub node is of the plurality of nodes; repeating the method using successively generated clustered representations until the selected linking node is identified as a linking node or the selected hub node is identified as a hub node.
15. The one or more non-transitory computer-readable storage media of claim 9, wherein storing the clustered representation comprises: storing the clustered representation in a metadata structure or a metadata schema for data object mapping.
16. The one or more non-transitory computer-readable storage media of claim 9, the method further comprising: displaying the clustered representation, wherein the first cluster is displayed at least in part via the first description and the second cluster is displayed at least in part via the second description.
17. A system for data model clustering, the system comprising: one or more memories; one or more processing units coupled to the one or more memories; and one or more computer-readable storage media storing instructions that, when loaded into the one or more memories, cause the one or more processing units to perform data object clustering operations comprising: receiving a first graph of a data model, wherein the first graph comprises a plurality of nodes and edges between the nodes; determining edge betweenness values for the respective nodes in the plurality of nodes in the first graph, wherein a given edge betweenness value for a given node is based on a number of shortest paths between other nodes which include the given node; identifying a linking node of the plurality of nodes based on the edge betweenness values of the plurality of nodes; removing the linking node from the plurality of nodes to form a first cluster of nodes and a second cluster of nodes; calculating a plurality of degrees for the respective remaining nodes, wherein a given degree is a number of nodes connected to the given node; identifying respective hub nodes for the respective first cluster and second cluster, wherein a given hub node has the highest degree of the nodes within the respective cluster; generating respective descriptions for the respective clusters based on their respective hub nodes; and storing a clustered graph of the first graph comprising the first cluster, the second cluster, and their respective descriptions.
18. The system of claim 17, the operations further comprising: mapping the clustered graph to a second graph, wherein the mapping comprises matching the first cluster to one or more first nodes in the second graph and matching the second cluster to one or more second nodes in the second graph.
19. The system of claim 17, the operations further comprising: identifying a first table of a database represented as a node in the first graph, wherein the first table is associated with the first cluster; identifying a second table of the database represented as a node in the first graph, wherein the second table is associated with the first cluster; storing the first table and the second table on a first server based on the first cluster.
20. The system of claim 17, wherein the edge betweenness values are calculated and identified linking nodes are removed iteratively until a stopping criterion is met.
</claims>
</document>
