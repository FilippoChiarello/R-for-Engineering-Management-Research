<document>

<filing_date>
2018-10-15
</filing_date>

<publication_date>
2021-01-05
</publication_date>

<priority_date>
2018-10-15
</priority_date>

<ipc_classes>
G06F13/16,G06F13/28,G06N20/00
</ipc_classes>

<assignee>
INTEL CORPORATION
</assignee>

<inventors>
KRISHNAMURTHY, RAM
YOUNG, IAN
LEE, VICTOR W.
MANIPATRUNI, SASIKANTH
KUMAR, RAGHAVAN
KNAG, PHIL
SUMBUL, HUSEYIN E.
CHEN, GREGORY
MATHURIYA, AMRITA
SHARMA, ABHISHEK
</inventors>

<docdb_family_id>
65361209
</docdb_family_id>

<title>
Pipeline circuit architecture to provide in-memory computation functionality
</title>

<abstract>
Techniques and mechanisms for performing in-memory computations with circuitry having a pipeline architecture. In an embodiment, various stages of a pipeline each include a respective input interface and a respective output interface, distinct from said input interface, to couple to different respective circuitry. These stages each further include a respective array of memory cells and circuitry to perform operations based on data stored by said array. A result of one such in-memory computation may be communicated from one pipeline stage to a respective next pipeline stage for use in further in-memory computations. Control circuitry, interconnect circuitry, configuration circuitry or other logic of the pipeline precludes operation of the pipeline as a monolithic, general-purpose memory device. In other embodiments, stages of the pipeline each provide a different respective layer of a neural network.
</abstract>

<claims>
1. A pipeline circuit for performing an in-memory computation, the pipeline circuit comprising: a first stage of multiple stages of the pipeline circuit, the multiple stages arranged in an in-series configuration, the first stage comprising: a first interface to receive first data from a controller circuit coupled to the pipeline circuit; a first memory array to store the first data; and first circuitry coupled to the first memory array, the first circuitry to perform a first read of the first data from the first memory array, to perform a first computation based on the first read of the first data, and to store a first result of the first computation at the first memory array, wherein the first computation comprises a first operation on first operands which are each read from a respective addressable location of the first memory array; an interconnect coupled to receive from the first stage second data which is based on the first result, wherein any communication between the interconnect and the controller circuit is to be via one or more of the multiple stages; a second stage of the multiple stages, the second stage comprising: a second interface to receive the second data from the interconnect; a second memory array to store the second data; and second circuitry to perform a second read of the second data from the second memory array, to perform a second computation based on the second read of the second data, and to store a second result of the second computation at the second memory array, wherein the second computation comprises a second operation on second operands which are each read from a respective addressable location of the second memory array.
2. The pipeline circuit of claim 1, wherein the first circuitry to perform the first computation comprises the first circuitry to automatically perform multiple accesses to the first memory array according to a sequence which is predefined at the first stage.
3. The pipeline circuit of claim 1, wherein the first stage and the second stage are to automatically communicate the second data independent of any explicit command from the controller circuit to communicate the second data.
4. The pipeline circuit of claim 1, wherein the second stage is further to: receive third data from the first stage; and pass the third data through to a respective subsequent stage of the pipeline circuit, wherein any storage of the third data at a memory array is external to the second stage.
5. The pipeline circuit of claim 1, wherein the first stage is further to: receive a feedback from a respective subsequent stage of the multiple stages; and perform, based on the feedback, a next recursion of a recursive data processing with the pipeline circuit.
6. The pipeline circuit of claim 1, wherein the pipeline circuit is to receive the first data via another interconnect which is coupled between the pipeline circuit and the controller circuit, wherein a portion of the other interconnect is further coupled between the controller circuit and a cache memory.
7. The pipeline circuit of claim 6, wherein a processor comprises the cache memory and the pipeline circuit.
8. The pipeline circuit of claim 7, wherein a core of the processor comprises the cache memory.
9. The pipeline circuit of claim 1, wherein a multi-core processor comprises the pipeline circuit.
10. The pipeline circuit of claim 1, wherein the first memory array and the second memory array comprise static random access memory cells.
11. The pipeline circuit of claim 1, wherein the first circuitry to perform the first computation or the second circuitry to perform the second computation comprises one of the first circuitry or the second circuitry to perform a bit-serial computation.
12. A processor for performing an in-memory computation, the processor comprising: a processor core comprising a controller circuit; a pipeline circuit coupled the controller circuit, the pipeline circuit comprising: a first stage of multiple stages of the pipeline circuit, the multiple stages arranged in an in-series configuration, the first stage comprising: a first memory array to store first data provided by the controller circuit; and first circuitry coupled to perform a first in-memory computation based on a read of the first data from the first memory array, wherein the first computation comprises a first operation on first operands which are each read from a respective addressable location of the first memory array, wherein the first circuitry is further to store a first result of the first in-memory computation to the first memory array; an interconnect coupled to receive from the first stage second data which is based on the first result, wherein any communication between the interconnect and the controller circuit is to be via one or more of the multiple stages; a second stage of the multiple stages, the second stage comprising: a second memory array to receive and store the second data; and second circuitry coupled to access the second memory array, and to perform a second in-memory computation based on a read of the second data from the second memory array, wherein the second circuitry is to store a second result of the second in-memory computation to the second memory array, wherein the second computation comprises a second operation on second operands which are each read from a respective addressable location of the second memory array.
13. The processor of claim 12, wherein the first circuitry to perform the first in-memory computation comprises the first circuitry to automatically perform multiple accesses to the first memory array according to a sequence which is predefined at the first stage.
14. The processor of claim 12, further comprising a cache memory, wherein the pipeline circuit is to receive the first data via another interconnect which is coupled between the pipeline circuit and the controller circuit, wherein a portion of the other interconnect is further coupled between the controller circuit and a cache memory.
15. The processor of claim 12, further comprising one or more other processor cores, wherein the pipeline circuit is further coupled to received respective data from each of the one or more other processor cores.
16. A method at a pipeline circuit for performing in-memory computations, the method comprising: receiving first data from a controller circuit coupled to the pipeline circuit, wherein the pipeline circuit comprises multiple stages arranged in an in-series configuration, the multiple stages comprising a first stage and a second stage; storing the first data at a first memory array of the first stage; performing at the first stage a first computation based on a read of the first data from the first memory array, wherein the first computation comprises a first operation on first operands which are each read from a respective addressable location of the first memory array; storing a first result of the first computation at the first memory array; communicating second data from the first stage to the second stage via a first interconnect of the pipeline circuit, wherein the second data is based on the first result, wherein any signal communication between the first interconnect and the controller circuit is to be via one or more stages of the multiple stages; storing the second data at a second memory array of the second stage; performing at the second stage a second computation based on a read of the second data from the second memory array, wherein the second computation comprises a second operation on second operands which are each read from a respective addressable location of the second memory array; and storing a second result of second computation at the second memory array.
17. The method of claim 16, wherein performing the first computation comprises automatically performing multiple accesses to the first memory array according to a sequence which is predefined at the first stage.
18. The method of claim 16, wherein communicating the second data comprises automatically communicating with the first stage and the second stage independent of any explicit command from the controller circuit to communicate the second data.
19. The method of claim 16, further comprising: at the first stage, receiving a feedback from a respective subsequent stage of the multiple stages; and based on the feedback, performing a next recursion of a recursive data processing with the pipeline circuit.
20. A system comprising a pipeline circuit for performing an in-memory computation, the pipeline circuit comprising: a first stage of multiple stages of the pipeline circuit, the multiple stages arranged in an in-series configuration, the first stage comprising: a first interface to receive first data from a controller circuit coupled to the pipeline circuit; a first memory array to store the first data; and first circuitry coupled to the first memory array, the first circuitry to perform a first read of the first data from the first memory array, to perform a first computation based on the first read of the first data, and to store a first result of the first computation at the first memory array, wherein the first computation comprises a first operation on first operands which are each read from a respective addressable location of the first memory array; an interconnect coupled to receive from the first stage second data which is based on the first result, wherein any communication between the interconnect and the controller circuit is to be via one or more of the multiple stages; a second stage of the multiple stages, the second stage comprising: a second interface to receive the second data from the interconnect; a second memory array to store the second data; and second circuitry to perform a second read of the second data from the second memory array, to perform a second computation based on the second read of the second data, and to store a second result of the second computation at the second memory array, wherein the second computation comprises a second operation on second operands which are each read from a respective addressable location of the second memory array; and a display device coupled to the pipeline circuit, the display device to display an image based on a signal communicated with the pipeline circuit, the signal based on the second computation.
21. The system of claim 20, wherein the first circuitry to perform the first computation comprises the first circuitry to automatically perform multiple accesses to the first memory array according to a sequence which is predefined at the first stage.
22. The system of claim 20, wherein the first stage and the second stage are to automatically communicate the second data independent of any explicit command from the controller circuit to communicate the second data.
23. The system of claim 20, wherein the second stage is further to: receive third data from the first stage; and pass the third data through to a respective subsequent stage of the pipeline circuit, wherein any storage of the third data at a memory array is external to the second stage.
</claims>
</document>
