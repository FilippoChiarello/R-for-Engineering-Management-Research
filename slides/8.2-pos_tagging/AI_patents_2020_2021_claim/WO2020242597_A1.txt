<document>

<filing_date>
2020-04-02
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-05-31
</priority_date>

<ipc_classes>
G06F9/50,G06Q30/06
</ipc_classes>

<assignee>
MICROSOFT TECHNOLOGY LICENSING
</assignee>

<inventors>
ARORA, PANKAJ
KALHAN, AJAY
NARASAYYA, VIVEK
OSLAKE, JOHN M.
XU, SHIZE
LIU, Jiaqi
DONG, Junfeng
KÃ–NIG, Arnd Christian
SYAMALA, Manoj
LI, Changsong
</inventors>

<docdb_family_id>
70739148
</docdb_family_id>

<title>
MEMORY MANAGEMENT FOR MULTIPLE PROCESS INSTANCES
</title>

<abstract>
Intelligent memory brokering for multiple process instances, such as relational databases (e.g., SQL servers), reclaims memory based on value, thereby minimizing cost across instances. An exemplary solution includes: based at least on a trigger event, determining a memory profile for each of a plurality of process instances at a computing node; determining an aggregate memory profile, the aggregate memory profile indicating a memory unit cost for each of a plurality of memory units; determining a count of memory units to be reclaimed; identifying, based at least on the aggregate memory profile and the count of memory units to be reclaimed, a count of memory units to be reclaimed within each process instance so that a total cost is minimized to reclaim the determined count; and communicating, to each process instance having identified memory units to be reclaimed, a count of memory units to be reclaimed within the process instance.
</abstract>

<claims>
1. A system for memory management for multiple database process instances, the system comprising:
a processor; and
a computer-readable medium storing instructions that are operative when executed by the processor to:
based at least on a trigger event, determine a memory profile for each of a plurality of process instances at a computing node, wherein each of the plurality of process instances comprises a relational database server process;
determine, based at least on the plurality of memory profiles, an aggregate memory profile, the aggregate memory profile indicating a memory unit cost for each of a plurality of memory units;
determine a count of memory units to be reclaimed;
identify, based at least on the aggregate memory profile and the count of memory units to be reclaimed, a count of memory units to be reclaimed within each process instance so that a total cost is minimized to reclaim the determined count of memory units to be reclaimed;
communicate, to each process instance having identified memory units to be reclaimed, a count of memory units to be reclaimed within the process instance; and reclaim the identified memory units, wherein reclaiming the identified memory units comprises releasing reclaimable memory.
2. The system of claim 1, wherein the relational database server processes comprise structured query language (SQL) servers.
3. The system of claim 1, wherein determining the aggregate memory profile comprises scaling, based at least on a value of a process instance, memory unit cost of the memory profile for the process instance.
4. The system of claim 1, wherein the aggregate memory profile comprises a histogram of memory unit costs, and wherein the memory profile for each of the plurality of process instances comprises histograms of memory unit costs.
5. The system of claim 1, wherein the memory unit cost comprises a cost for a cache unit, and wherein a cache unit comprises a page.
6. The system of claim 1, wherein the memory profiles for the plurality of process instances indicate memory unit costs for reclaimable memory, and wherein the
reclaimable memory comprises buffer pool memory.
7. The system of claim 1, wherein the instructions are further operative to calculate memory unit cost based at least on a predictive model.
8. A method of memory management for multiple database process instances, the method comprising:
based at least on a trigger event, determining a memory profile for each of a plurality of process instances at a computing node, wherein each of the plurality of process instances comprises a relational database server process;
determining, based at least on the plurality of memory profiles, an aggregate memory profile, the aggregate memory profile indicating a memory unit cost for each of a plurality of memory units;
determining a count of memory units to be reclaimed;
identifying, based at least on the aggregate memory profile and the count of memory units to be reclaimed, a count of memory units to be reclaimed within each process instance so that a total cost is minimized to reclaim the determined count of memory units to be reclaimed; and
communicating, to each process instance having identified memory units to be reclaimed, a count of memory units to be reclaimed within the process instance.
9. The method of claim 8, wherein the relational database server processes comprise SQL servers.
10. The method of claim 8, wherein determining the aggregate memory profile comprises scaling, based at least on a value of a process instance, a memory unit cost of the memory profile for the process instance.
11. The method of claim 8, wherein the aggregate memory profile comprises a histogram of memory unit costs, and wherein the memory profile for each of the plurality of process instances comprises histograms of memory unit costs.
12. The method of claim 8, wherein the memory unit cost comprises a cost for a cache unit, and wherein a cache unit comprises a page.
13. The method of claim 8, wherein the memory profiles for the plurality of process instances indicate memory unit costs for reclaimable memory, and wherein the
reclaimable memory comprises buffer pool memory.
14. The method of claim 8, further comprising:
calculating memory unit cost based at least on historical data; or
calculating memory unit cost based at least on a predictive model.
15. One or more computer storage devices having computer-executable instructions stored thereon for memory management for multiple relational database server process instances, which, on execution by a computer, cause the computer to perform operations comprising:
based at least on a trigger event, requesting a memory profile from each of a plurality of process instances at a computing node, wherein each of the plurality of process instances comprises a relational database server process;
for each process instance in the plurality of process instances, calculating memory unit cost based at least on historical data, predictive data, or both;
receiving the plurality of memory profiles from the plurality of process instances; determining, based at least on the plurality of memory profiles, an aggregate memory profile, the aggregate memory profile indicating a memory unit cost for each of a plurality of memory units, wherein determining the aggregate memory profile comprises scaling, based at least on a value of a process instance, a memory unit cost of the memory profile for the process instance, wherein the aggregate memory profile comprises a histogram of memory unit costs, wherein the memory profile for each of the plurality of process instances comprises histograms of memory unit costs, wherein the memory unit cost comprises a cost for a cache unit, wherein a cache unit comprises a page, wherein the memory profiles for the plurality of process instances indicate memory unit costs for reclaimable memory, and wherein the reclaimable memory comprises buffer pool memory;
determining a count of memory units to be reclaimed;
identifying, based at least on the aggregate memory profile and the count of memory units to be reclaimed, a count of memory units to be reclaimed within each process instance so that a total cost is minimized to reclaim the determined count; and communicating, to each process instance having identified memory units to be reclaimed, a count of memory units to be reclaimed within the process instance.
</claims>
</document>
