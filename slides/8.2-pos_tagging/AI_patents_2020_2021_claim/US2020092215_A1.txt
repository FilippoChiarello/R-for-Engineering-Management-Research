<document>

<filing_date>
2019-11-20
</filing_date>

<publication_date>
2020-03-19
</publication_date>

<priority_date>
2017-07-06
</priority_date>

<ipc_classes>
H04L12/805,H04W28/06
</ipc_classes>

<assignee>
T-MOBILE USA
</assignee>

<inventors>
CAGLE, DAMON
</inventors>

<docdb_family_id>
64902997
</docdb_family_id>

<title>
FEEDBACK LOOP FOR FRAME MAXIMIZATION
</title>

<abstract>
The present disclosure describes a method for characterizing a maximum frame size in a network data transmission with a feedback loop. A source device transmits a set of current frames with an initial frame size to a designation device, and receives returning frames from the designation device via a loopback interface. The frame size of subsequent frames to be transmitted is adjusted in bytes. The adjustment of the frame size may be based on a predetermined condition related to the returning frames. The maximum value of the frame size satisfied with the predetermined condition may be designated as the maximum frame size. A plurality of algorithms and machine learning may be used to project the frame size of the subsequent frames and obtain a precise value of the maximum frame size in a network route.
</abstract>

<claims>
1. A method, comprising: initiating a data transmission in which one or more frames bearing a pattern are transmitted between a source device and a designation device, wherein each frame of the one or more frames is formatted with an initial frame size in bytes; and modifying a frame size for each frame of subsequent frames to be transmitted in response to an existence of a predetermined frame-loss condition.
2. The method of claim 1, wherein the initial frame size is based on dependency information associated with a network of the data transmission between the source device and the designation device.
3. The method of claim 1, further comprising: receiving the initial frame size from a user.
4. The method of claim 1, further comprising: receiving the initial frame size from one or more applications.
5. The method of claim 1, further comprising: collecting dependency information of a plurality of maximum frame sizes associated with a plurality of test components respectively in the data transmission.
6. The method of claim 1, wherein the modifying of the frame size is based on machine learning.
7. The method of claim 1, wherein the predetermined frame-loss condition comprises: no frame loss; no greater than a frame of the one or more frames being dropped; or less than a maximum threshold of a drop rate related to the one or more frames being dropped.
8. An apparatus, comprising: one or more processors; a memory storing computer-executable instructions that upon execution cause the one or more processors to perform acts comprising: receiving a set of test components; creating one or more frames having an initial frame size and bearing one of the plurality of patterns, each frame of the one or more frames comprising a data packet; transmitting the one or more frames to a designation device in response to a frame transmit trigger configured to start the transmitting of the one or more frames; receiving one or more loopback frames from the designation device; and adjusting a size of the data packet in a next set of frames to be transmitted in response to an existence of a plurality of frame-loss conditions related to the one or more loopback frames; a buffer configured to store the one or more loopback frames; a poller configured to determine whether the buffer receives the one or more loopback frames; an event handler configured to call for the one or more processors to determine a drop rate of the one or more loopback frames in the buffer, wherein the determining of the drop rate is triggered by the poller in response to all of the one or more loopback frames being received in the buffer; and a reporter configured to report a plurality of maximum frame sizes associated with the set of test components respectively.
9. The apparatus of claim 8, wherein the initial frame size is based on dependency information associated with a network of the transmission of the one or more frames.
10. The apparatus of claim 8, wherein the acts further comprise: receiving the initial frame size from a user.
11. The apparatus of claim 8, wherein the acts further comprise: receiving the initial frame size from one or more applications.
12. The apparatus of claim 8, wherein the acts further comprise: collecting dependency information of a plurality of maximum frame sizes associated with a plurality of test components respectively in the transmission of the one or more frames.
13. The apparatus of claim 8, wherein the modifying of the frame size is based on machine learning.
14. The apparatus of claim 8, wherein the plurality of frame-loss conditions comprise: no frame loss; no greater than a frame of the one or more frames being dropped; or less than a maximum threshold of a drop rate related to the one or more frames being dropped.
15. An apparatus, comprising: one or more processors; a loopback interface configured to swap a source media access control (MAC) address of a source device and a designation MAC address of a designation device in each frame of one or more frames received from the source device; and a memory storing computer-executable instructions, wherein execution of the instructions by the one or more processors causes the one or more processors to perform acts comprising: receiving the one or more frames from the source device; and transmitting the one or more frames back to the source device as one or more loopback frames.
16. The apparatus of claim 15, wherein the loopback interface is configured to swap a source media access control (MAC) address of the source device and a designation MAC address of the designation device in the one or more frames received from the source device.
17. The apparatus of claim 15, wherein the loopback interface is implemented as a software loop
18. The apparatus of claim 15, wherein the loopback interface is implemented as a hardware loop in a physical connection between the source device and the designation device.
19. The apparatus of claim 18, wherein the loopback interface is implemented as a software loop that includes protocols that emulate functions of the hardware loop.
20. The apparatus of claim 15, wherein the loopback interface is implemented as a virtual loop.
</claims>
</document>
