<document>

<filing_date>
2020-07-08
</filing_date>

<publication_date>
2020-10-29
</publication_date>

<priority_date>
2019-03-14
</priority_date>

<ipc_classes>
G01S13/02,G01S7/282,G01S7/295,G06N3/063,G06N3/08,G06N5/04
</ipc_classes>

<assignee>
INFINEON TECHNOLOGIES
</assignee>

<inventors>
PERNKOPF, FRANZ
MEISSNER, PAUL
TOTH, MATE ANDRAS
ROTH, Wolfgang
ROCK, Johanna
</inventors>

<docdb_family_id>
72921392
</docdb_family_id>

<title>
FMCW RADAR WITH INTERFERENCE SIGNAL SUPPRESSION USING ARTIFICIAL NEURAL NETWORK
</title>

<abstract>
A radar device may include a radar receiver to receive a radio frequency (RF) radar signal and generate a digital signal based on the RF radar signal. The digital signal may comprise a plurality of signal segments. The radar device may include a neural network comprising a plurality of layers to process the plurality of signal segments. Each layer of the plurality of layers may have one or more neurons. The plurality of layers may process the plurality of signal segments using weighting factors having values selected from a predetermined set of discrete values. At least one neuron in an output layer of the plurality of layers may provide an output value that indicates whether a respective signal segment or a sample, associated with the at least one neuron, is overlaid with an interfering signal.
</abstract>

<claims>
1. A radar device, comprising: a radar receiver to: receive a radio frequency (RF) radar signal, and generate a digital signal based on the RF radar signal, the digital signal comprising a plurality of signal segments; and a neural network comprising a plurality of layers to process the plurality of signal segments, each layer of the plurality of layers having one or more neurons, wherein the plurality of layers is to process the plurality of signal segments using weighting factors having values selected from a predetermined set of discrete values, and wherein at least one neuron in an output layer of the plurality of layers is to provide an output value that indicates whether a respective signal segment or a sample, associated with the at least one neuron, is overlaid with an interfering signal.
2. The radar device of claim 1, wherein the weighting factors have values selected exclusively from the predetermined set of discrete values.
3. The radar device of claim 1, wherein the predetermined set of discrete values is a ternary set of values.
4. The radar device of claim 1, wherein the predetermined set of discrete values include −1, 0, 1.
5. The radar device of claim 1, wherein the predetermined set of discrete values includes not more than 65537 values.
6. The radar device of claim 1, wherein the neural network is trained using weighting distributions over the predetermined set of discrete values.
7. The radar device of claim 1, wherein the neural network is trained based on quantizing real-valued auxiliary weighting factors to have values from the predetermined set of discrete values.
8. A radar device, comprising: a radar transmitter to output a radio frequency (RF) transmission signal that comprises a plurality of frequency-modulated chirps, a radar receiver to: receive an RF radar signal, and generate a dataset including a set of digital values, the dataset being associated with one or more frequency-modulated chirps of the plurality of frequency-modulated chirps; and a convolutional neural network to filter the dataset to reduce an interfering signal included in the dataset, wherein the convolutional neural network is to filter the dataset using weighting factors having values from a predetermined set of discrete values.
9. The radar device of claim 8, wherein the predetermined set of discrete values is a ternary set of values.
10. The radar device of claim 8, wherein the predetermined set of discrete values include −1, 0, 1.
11. The radar device of claim 8, wherein the predetermined set of discrete values includes not more than 65537 values.
12. The radar device of claim 8, wherein the convolutional neural network is trained using weight distributions over the predetermined set of discrete values.
13. The radar device of claim 8, wherein the convolutional neural network is trained based on quantizing real-valued auxiliary weighting factors to have values from the predetermined set of discrete values.
14. A method of training a neural network, comprising: initializing weighting factors of the neural network as weight distributions over a predetermined set of discrete values; propagating a subset of training data, from a set of training data, through the neural network, a result of propagating the subset of training data through the neural network being a prediction associated with the subset of training data; computing a value of a loss function based on the prediction associated with the subset of training data and a target associated with the subset of training data, the loss function is defined with respect to an expectation of the weight distributions; backpropagating the value of the loss function through the neural network, wherein the backpropagating comprises: computing loss function gradients with respect to parameters of the weight distributions, and updating, based on the loss function gradients, the parameters of the weight distributions to determine updated weight distributions; and updating the weighting factors of the neural network by sampling the updated weight distributions or by identifying most probable weights from the updated weight distributions, the updated weighting factors having values from the predetermined set of discrete values.
15. The method of claim 14, wherein, during the propagating of the subset of training data through the neural network, a reparameterization is performed after an activation function is applied, wherein the activation function maps to quantized outputs.
16. The method of claim 14, wherein, during the propagating of the subset of training data through the neural network, a reparameterization is performed before an activation function is applied, wherein the activation function maps to real-valued outputs.
17. The method of claim 14, wherein the predetermined set of discrete values is a ternary set of values.
18. The method of claim 14, wherein the predetermined set of discrete values include −1, 0, 1.
19. The method of claim 14, wherein the predetermined set of discrete values includes not more than 65537 values.
20. A method of training a neural network, comprising: applying a quantization function to auxiliary real-valued weighting factors of the neural network to determine quantized weighting factors, the quantized weighting factors having values from a predetermined set of discrete values; propagating a subset of training data, from a set of training data, through the neural network, a result of propagating the subset of training data through the neural network being a prediction associated with the subset of training data; computing a value of a loss function based on the prediction associated with the subset of training data and a target associated with the subset of training data; and backpropagating the value of the loss function through the neural network, wherein the backpropagating comprises: computing loss function gradients with respect to the auxiliary real-valued weighting factors, wherein a gradient of the quantization function is assumed to be non-zero during the computing of the loss function gradients, and updating the auxiliary real-valued weighting factors of the neural network based on the loss function gradients.
21. The method of claim 20, wherein the predetermined set of discrete values is a ternary set of values.
22. The method of claim 20, wherein the predetermined set of discrete values include −1, 0, 1.
23. The method of claim 20, wherein the predetermined set of discrete values includes not more than 65537 values.
</claims>
</document>
