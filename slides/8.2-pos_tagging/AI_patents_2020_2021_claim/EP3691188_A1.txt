<document>

<filing_date>
2020-01-03
</filing_date>

<publication_date>
2020-08-05
</publication_date>

<priority_date>
2019-01-29
</priority_date>

<ipc_classes>
G06N3/04,H04L12/24
</ipc_classes>

<assignee>
AMADEUS
</assignee>

<inventors>
VADÁSZ, DÉNES
</inventors>

<docdb_family_id>
67262488
</docdb_family_id>

<title>
ROOT CAUSE DETERMINATION IN COMPUTER NETWORKS
</title>

<abstract>
A method of determining a root cause of a fault in a computer network is provided. An error-propagation model is mapped to a neural network model or to a network of computational operators comprising sum operators and sigmoid operators, based on interdependencies of system components of the computer network. Error messages indicative of the fault are analyzed based on the error-propagation model using the neural network. A probability that an error message is actually issued in the case of a fault of a monitored network component and the probability that an error actually propagates to a dependent network component from other network components the dependent network component depends on is considered in the analysis. The probability is determined by at least one of (i) experiments and (ii) expert knowledge. By the analysis, probable root-cause fault candidates are determined. The determined candidates for the root cause are presented.
</abstract>

<claims>
1. A method of determining a root cause (11) of a plurality of simultaneous errors in a computer network (100), the method comprising: creating an error-propagation model, which is based on interdependencies of a plurality of network components (8) of the computer network; mapping the error-propagation model (1) to a neural network (7) or to a network of computational operators (14) comprising sum operators (3) and sigmoid operators (2); receiving a plurality of error messages (5) generated by a monitoring system (9) indicative of the activated fault; analyzing the error messages (5) based on the underlying error-propagation model (1) using the neural network (7) or the network of operators (14) comprising sum operators (3) and sigmoid operators (2), wherein the probability (20) that an error propagates to a dependent network component from other network components the dependent network component depends on and the probability that the monitoring system (9) detects the error and issues error messages are considered in the analysis, the probability (20) that an error propagates to a dependent network component from other network components the dependent network component depends on being determined by at least one of (i) experiments (21) and (ii) expert knowledge (22); determining, by the analysis, probable root-cause fault candidates (30); outputting the determined candidates for the root cause (30).
2. The method of claim 1, wherein the error-propagation model (1), is built from topology information (102) of the computer network (100) and error propagation rules (101) applicable to the computer network components and wherein the error-propagation model (1) comprises a error-propagation graph (1'), being a directed graph comprising vertices and directed edges, and the monitoring system (9) comprises a plurality of sensors (S1...S5), wherein each network component (8) and each sensor (S1...S5) of the monitoring system (9) are represented by a vertex of the error-propagation graph (1') and each directed edge of the graph indicates that the presence of an error in the network component (8) represented by a vertex at the tail of the edge implies the presence of an error or the violation of the conditions monitored by a sensor in another network component (8) with a certain propagation probability, wherein the network component (8) or sensor is represented by a vertex at the head of the edge.
3. The method of claims 1 or 2, wherein parameters of the neural network or the network of operators comprising sum operators (3) and sigmoid operators (2) are determined based on (i) the probability (20) that the error actually propagates to a dependent component or sensor and an error message (5) is actually issued by a sensor of the monitoring system (9) in the case of an error being present in a network component (8) and (ii) heuristics (71).
4. The method of any one of claims 1 to 3, wherein the neural network (7) or the network of operators comprising sum operators (3) and sigmoid operators (2), receives error messages (5) from the monitoring system (9) translated to real numbers as an input, wherein the error messages (5) are issued by the sensors (S1 ... S5).
5. The method of any one of claims 1 to 4, wherein the sigmoid operators (2) couple an input potential to an output potential by a monotonously rising sigmoid function (2').
6. The method of any one of claims 1 to 5, wherein the network of operators comprising sum operators (3) and sigmoid operators (2), is constructed by creating a sum operator (3) for each vertex and creating an sigmoid operator (2) for each edge of the error-propagation model and connecting the input of each sigmoid operator (2) to an output of the sum operator (3) created for the vertex at the head of the edge for which the sigmoid operator (2) stands, and connecting the output of each sigmoid operator (2) to an input of the sum operator (3) created for the vertex at the tail of the edge, wherein the sum operator (3) works by adding up real numbers presented to its inputs plus a bias value and presenting the result to its output and wherein the sigmoid operator (2) works by applying a sigmoid function (2') to the real number presented on its input and presenting the result on the output of the sigmoid operator (2).
7. The method of claim 6, wherein for an error propagation model defining the same propagation probability for each outgoing edge of a given vertex, the bias and the sigmoid function (2') are chosen so that in an error-free state of the computer network, the activation function is at its lower bound and swings from its lower bound to its upper bound already after activation of the number of inputs that can be expected from the propagation probabilities of the outgoing edges.
8. The method of claim 7, wherein for an error propagation model defining the same propagation probability P for each outgoing edge of a given vertex and wherein the sigmoid function (2') is defined by where n is the number of edges through which the error propagates wherein E is the input value of the sigmoid operator and wherein P is said propagation probability for each outgoing edge of a given vertex, and Emax is a heuristic factor to scale the sigmoid function, set so that
9. The method of any one of claims 6 to 8, wherein the bias value b is defined by: wherein Emax is a heuristic factor and is the ith input of the summer (3) under the condition that the computer network is error-free and the bias value of all the sum operators directly or indirectly feeding into the current one are set by this rule.
10. The method of any one of claims 1 to 5, wherein the neural network is constructed by creating a processing unit (12) for each vertex and creating a weighting operator (13) for each edge of the error-propagation model and connecting the input of each weighting operator (13) to the output of the processing unit (12) created for the vertex at the head of the edge for which the weighting operator (13) stands, and connecting the output of each weighting operator (13) to an input of the processing unit (12) created for the vertex at the tail of the edge, wherein the processing unit (12) works by adding up the real numbers presented to its inputs plus a bias value and applying to the sum a sigmoid function (2') such that the difference between the upper and lower bounds of the sigmoid function (2') is 1 and presenting the result to its output and wherein the weighting operator (13) works by multiplying the real number presented on its input with a constant weight parameter and presenting the result on its output.
11. The method of claim 10, wherein the sigmoid function (2') of the processing unit is defined by a logistic function with the output of the summer as input.
12. The method of claim 10 or 11, wherein the bias value b is defined by: wherein P0 is the prior probability of the component or sensor mapped to the vertex being in the error status; n is the number of outgoing edges in the vertex associated with the processing unit; Pi is the propagation probability of the error via the ith outgoing edge of the vertex; Qi is the prior probability of an error being present at the component mapped to the vertex at the head of the ith outgoing edge of the vertex associated with the processing unit; ni is the number of incoming edges at the vertex at the ith outgoing edge.
13. The method of any one of claims 10 to 12, wherein the constant weight parameter is based on the probability that there is no prior error present at the component mapped to the vertex at the head of the ith outgoing edge or an error propagates via the ith outgoing edge of the vertex reduced by the probability that there an error present at the component mapped to the vertex at the head of the ith outgoing edge or that the error does not propagate via the ith outgoing edge of the vertex.
14. The method of any one of claims 10 to 13, wherein the constant weight parameter is defined by: wherein the meanings of Pi, Qi and ni are defined as claim 11.
15. The method of any one of claims 1 to 14, wherein the values of the processing units (12) are sorted by descending output values and displayed, the processing units (12) with the highest output values being the candidates for the root cause (30) and wherein the outputting of the determined candidates for the root cause (30) causes a network operator to start an error handler operator, inspect the network component identified as a candidate for the root cause (30), reboot or exchange the network component, or initiate a failover function.
16. A computer network, the computer network comprising: at least two network components (8), a monitoring system for identifying a fault in the computer network (100) an inference engine (10) for determining a root cause (11) of a fault in a computer network, the inference engine (10) being programmed to create an error-propagation model, which is based on interdependencies of a plurality of network components (8) of the computer network map an error-propagation model (1) to a neural network model (2) or to a network of computational operators (14) comprising sum operators (3) and sigmoid operators (2); receive a plurality of error messages (5) generated by a monitoring system (9) indicative of the fault; analyze the error messages (5) based on the underlying error-propagation model (1) using the neural network (7) or the network of operators (14) comprising sum operators (3) and sigmoid operators (2), wherein the probability (20), that an error actually propagates to a dependent network component from other network components the dependent network component depends on and the probability that the monitoring system (9) actually detects the error and issues error messages are considered in the analysis, the probability (20) that an error propagates to a dependent network component from other network components the dependent network component depends on being determined by at least one of (i) experiments (21) and (ii) expert knowledge (22); determine, by the analysis, probable root-cause fault candidates (30); output the determined candidates for the root cause (30).
17. The computer network of claim 16, comprising an inference engine being programmed to perform any of the activities of claims 2 to 15.
</claims>
</document>
