<document>

<filing_date>
2018-11-19
</filing_date>

<publication_date>
2020-05-20
</publication_date>

<priority_date>
2018-11-19
</priority_date>

<ipc_classes>
G06N3/04,G06N3/08
</ipc_classes>

<assignee>
SIEMENS
</assignee>

<inventors>
GU, JINDONG
</inventors>

<docdb_family_id>
64362391
</docdb_family_id>

<title>
VERIFICATION OF CLASSIFICATION DECISIONS IN CONVOLUTIONAL NEURAL NETWORKS
</title>

<abstract>
In one aspect the invention relates to a computer-implemented method for providing a computer-implemented method for verifying a visual classification architecture of a convolutional neural network (CNN) and its decisions The method comprises to access (S1) a memory (MEM) with a convolutional neural network (CNN), being trained for a visual classification task into a set of target classes (tc); to use (S2) the convolutional neural network (CNN) for an input image (12) and after a forward pass of the convolutional neural network (CNN), in a backward pass: to apply (S3) a contrastive layer-wise relevance propagation algorithm (CLRP) or to apply (S4) a Bottom Up Attention pattern (BUAP), which is implicitly learned by the convolutional neural network (CNN) for providing (S5) a verification signal (vs).
</abstract>

<claims>
1. Computer-implemented method for verifying a visual classification architecture of a convolutional neural network (CNN), comprising the method steps of: - Accessing (S1) a memory (MEM) with a convolutional neural network (CNN), being trained for a visual classification task into a set of target classes (tc); - Using (S2) the convolutional neural network (CNN) for an input image (12) and after a forward pass of the convolutional neural network (CNN), in a backward pass; - Applying (S3) a contrastive layer-wise relevance propagation algorithm (CLRP) or - Applying (S4) an implicitly learned Bottom Up Attention pattern (BUAP), to verify a classification ability of the convolutional neural network (CNN) for providing (S5) a verification signal (vs).
2. Method according to claim 1, wherein the verification signal (vs) is provided as a saliency map for each feature on each layer of the convolutional neural network (CNN).
3. Method according to any of the preceding claims, wherein by applying (S3) the contrastive layer-wise relevance propagation algorithm (CLRP) class discriminative and instance-specific saliency maps are generated.
4. Method according to any of the preceding claims, wherein for applying (S4) an implicitly learned Bottom Up Attention pattern (BUAP), a deconvolutional CNN algorithm, a gradient backpropagation algorithm or a layer-wise backpropagation algorithm are amended in order to generate saliency maps for features and not for classes.
5. Method according to any of the preceding claims, wherein the CLRP algorithm (S3) comprises, the steps of: - Generating (S31) a first saliency map for each target class (tc) of the classification task by means of a backpropagation algorithm; - Calculating (S32) a set of virtual classes for each target class (tc), being opposite of the respective target class (tc); - Generating (S33) a second saliency map for the set of virtual classes by means of a backpropagation algorithm; - Computing (S34) the differences between the first and the second saliency map for computing a final saliency map.
6. Method according to the directly preceding claim, wherein calculating the virtual class for a specific target class (tc) is executed by: - defining any other of the set of target classes as virtual class or by - defining all other target classes of the set of target classes as virtual class or by - constructing the virtual class by generating an additional class and connecting it with a last layer using weights, wherein the weights are the inverted weights of the forward pass.
7. Method according to any of the preceding claims, wherein applying (S4) the Bottom Up Attention pattern (BUAP) comprises: - Collecting and storing all features of the CNN, wherein a feature comprises all activations in a respective layer of the CNN for the input image; - Creating a saliency map for each of the features.
8. Method according to any of the preceding claims, wherein the visual classification task is a medical classification task in medical images in order to detect anomalies.
9. Method according to any of the preceding claims, wherein application of the convolutional neural network (CNN) is only approved, if the provided verification signal (vs) is above a pre-configurable confidence threshold.
10. Method according to any of the preceding claims, wherein when applying a Bottom Up Attention pattern for generating a saliency map a guided backpropagation algorithm is used.
11. Method according to any of the preceding claims, wherein the generated saliency maps are post processed and/or may be refined and/or an averaging and/or a thresholding may be applied.
12. A verification unit (V) which is configured for verifying a visual classification architecture of a convolutional neural network (CNN), comprising: - A memory (MEM) with a convolutional neural network (CNN), being trained for a visual classification task into a set of target classes (tc); - A processor (P) which is configured for using the convolutional neural network (CNN) and wherein the processor (P) is configured after a forward pass of the CNN, in a backward pass: - to apply a contrastive layer-wise relevance propagation algorithm (CLRP) or - to apply a Bottom Up Attention pattern (BUAP), which is implicitly learned by the CNN - for generating a saliency map for each of the target classes (tc).
13. A computer program product comprising program elements which induce a computer to carry out the steps of the method for verifying a visual classification architecture of a convolutional neural network (CNN) according to one of the preceding method claims, when the program elements are loaded into a memory of the computer.
14. A computer-readable medium (MEM) on which a convolutional neural network (CNN) and program elements are stored that can be read and executed by a computer in order to perform steps of the method for verifying a visual classification architecture of the convolutional neural network (CNN) according to one of the preceding method claims, when the program elements are executed by the computer.
</claims>
</document>
