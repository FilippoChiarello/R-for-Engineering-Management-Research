<document>

<filing_date>
2019-12-06
</filing_date>

<publication_date>
2020-10-22
</publication_date>

<priority_date>
2019-04-18
</priority_date>

<ipc_classes>
G06F16/242,G06F16/2452,G06N3/08
</ipc_classes>

<assignee>
SAP
</assignee>

<inventors>
LEE, DONG JUN
</inventors>

<docdb_family_id>
72832507
</docdb_family_id>

<title>
CLAUSE-WISE TEXT-TO-SQL GENERATION
</title>

<abstract>
Provided is a system and method for generating an SQL operation from a natural language input using neural networks which works on data from a database that has not been seen before by the neural networks. In one example, the method may include receiving a natural language input, determining, via a first predictive module, a data structure of a SQL operation based on text included in the natural language input, filling in, via a second predictive module, one or more empty slots of the data structure of the SQL operation with text based on column names of a database and the text included in the natural language input, and storing the filled-in data structure of the SQL operation in a storage.
</abstract>

<claims>
1. A computing system comprising: a processor configured to receive a natural language input, determine, via a first predictive module, a data structure of a structured query language (SQL) operation based on text included in the natural language input, and fill in, via a second predictive module, one or more empty slots of the data structure of the SQL operation with text based on column names from a database and the text included in the natural language input; and a memory configured to store the filled-in data structure of the SQL operation.
2. The computing system of claim 1, wherein the processor is configured to predict a number of expressions included in each of a plurality of SQL clauses of the data structure of the SQL operation via a long short-term memory (LSTM) neural network.
3. The computing system of claim 1, wherein the processor is configured to fill in empty slots corresponding to expressions in the data structure of the SQL operation with column names of the database via an encoder-decoder neural network.
4. The computing system of claim 1, wherein the processor is configured to convert, via the second predictive module, the column names of the database into vectors and perform a similarity comparison with a vector generated from the natural language input.
5. The computing system of claim 1, wherein the processor is further configured to predict, via a third predictive module, one or more operators included within an SQL clause of the data structure of the SQL operation based on the one or more filled-in slots of the data structure of the SQL operation.
6. The computing system of claim 1, wherein the processor is further configured to predict, via a sub-module of the first predictive module, whether or not an ORDER BY clause of the data structure of the SQL operation is ascending or descending based on the text included in the natural language input.
7. The computing system of claim 1, wherein the processor is further configured to predict, via a sub-module of the first predictive module, whether or not the data structure of the SQL operation includes a limit variable based on the text included in the natural language input.
8. The computing system of claim 1, wherein the processor is further configured to predict, via a sub-module of the first predictive module, whether or not the data structure of the SQL operation includes one or more of an INTERSECT, a UNION, and an EXCEPT operator, based on the text included in the natural language input.
9. The computing system of claim 1, wherein the processor is further configured to predict, via a fourth predictive module, whether the data structure of the SQL operation includes a nested query.
10. A method comprising: receiving a natural language input; determining, via a first predictive module, a data structure of a structured query language (SQL) operation based on text included in the natural language input; filling in, via a second predictive module, one or more empty slots of the data structure of the SQL operation with text based on column names of a database and the text included in the natural language input; and storing the filled-in data structure of the SQL operation in a storage.
11. The method of claim 10, wherein the determining comprises predicting a number of expressions included in each of a plurality of SQL clauses of the data structure of the SQL operation via a long short-term memory (LSTM) neural network.
12. The method of claim 10, wherein the filling in comprises filling in empty slots corresponding to expressions in the data structure of the SQL operation with column names of the database via an encoder-decoder neural network.
13. The method of claim 10, wherein the filling in comprises converting, via the second predictive module, the column names of the database into vectors and performing a similarity comparison with a vector generated from the natural language input.
14. The method of claim 10, further comprising predicting, via a third predictive module, one or more operators included within an SQL clause of the data structure of the SQL operation based on the one or more filled-in slots of the data structure of the SQL operation.
15. The method of claim 10, wherein the determining comprises predicting, via a sub-module of the first predictive module, whether or not an ORDER BY clause of the data structure of the SQL operation is ascending or descending based on the text included in the natural language input.
16. The method of claim 10, wherein the determining comprises predicting, via a sub-module of the first predictive module, whether or not the data structure of the SQL operation includes a limit variable based on the text included in the natural language input.
17. The method of claim 10, wherein the determining comprises predicting, via a sub-module of the first predictive module, whether or not the data structure of the SQL operation includes one or more of an INTERSECT, a UNION, and an EXCEPT operator, based on the text included in the natural language input.
18. The method of claim 10, wherein the determining comprises predicting, via a fourth predictive module, whether the data structure of the SQL operation includes a nested query.
19. A non-transitory computer-readable medium comprising instructions which when executed by a processor cause a computer to perform a method comprising: receiving a natural language input; determining, via a first predictive module, a data structure of a structured query language (SQL) operation based on text included in the natural language input; filling in, via a second predictive module, one or more empty slots of the data structure of the SQL operation with text based on column names of a database and the text included in the natural language input; and storing the filled-in data structure of the SQL operation in a storage.
20. The non-transitory computer-readable medium of claim 19, wherein the determining comprises predicting a number of expressions included in each of a plurality of SQL clauses of the data structure of the SQL operation via a long short-term memory (LSTM) neural network.
</claims>
</document>
