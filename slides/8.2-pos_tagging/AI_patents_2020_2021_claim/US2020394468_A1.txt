<document>

<filing_date>
2020-08-28
</filing_date>

<publication_date>
2020-12-17
</publication_date>

<priority_date>
2018-12-20
</priority_date>

<ipc_classes>
G06K9/62,G06N3/04,G06N3/08
</ipc_classes>

<assignee>
AMD (ADVANCED MICRO DEVICES)
</assignee>

<inventors>
ZHANG HUA
YU MIN
ZHANG, SONG
LIU, JIANTAN
</inventors>

<docdb_family_id>
71096868
</docdb_family_id>

<title>
TILING FORMAT FOR CONVOLUTIONAL NEURAL NETWORKS
</title>

<abstract>
Systems, apparatuses, and methods for converting data to a tiling format when implementing convolutional neural networks are disclosed. A system includes at least a memory, a cache, a processor, and a plurality of compute units. The memory stores a first buffer and a second buffer in a linear format, where the first buffer stores convolutional filter data and the second buffer stores image data. The processor converts the first and second buffers from the linear format to third and fourth buffers, respectively, in a tiling format. The plurality of compute units load the tiling-formatted data from the third and fourth buffers in memory to the cache and then perform a convolutional filter operation on the tiling-formatted data. The system generates a classification of a first dataset based on a result of the convolutional filter operation.
</abstract>

<claims>
1. A system comprising: a memory storing a first buffer and a second buffer in a linear format, wherein the first buffer stores convolutional filter data and the second buffer stores image data; a cache; a processor configured to: convert the convolutional filter data in the first buffer from the linear format to a tiling format and store in a third buffer; and convert the image data in the second buffer from the linear format to the tiling format and store in a fourth buffer; and a plurality of compute units, wherein the plurality of compute units are configured to: load data elements of the third buffer and the fourth buffer from the memory to the cache; and perform a convolutional filter operation on the data elements of the third buffer and the fourth buffer to generate a result in the tiling format; wherein the system is configured to generate a classification of a first dataset based on the result from the convolutional filter operation.
2. The system as recited in claim 1, wherein the cache comprises a plurality of channels, wherein the plurality of compute units are configured to load convolutional filter data elements from the third buffer on the plurality of channels in parallel in a single clock cycle.
3. The system as recited in claim 1, wherein the cache comprises a plurality of channels, wherein the plurality of compute units are configured to load image data elements from the fourth buffer on the plurality of channels in parallel in a single clock cycle.
4. The system as recited in claim 1, wherein converting the first buffer from the linear format to the third buffer in the tiling format comprises: reading values from sequential locations of the first buffer in the memory; and stepping through the third buffer with a stride equal to a sum of a first number of input channels and a second number of convolutional filters while writing the values to the third buffer.
5. The system as recited in claim 1, wherein converting the second buffer from the linear format to the fourth buffer in the tiling format comprises: reading values from sequential locations of the second buffer in the memory; and stepping through the fourth buffer with a stride equal to a number of pixel channels while writing the values to the fourth buffer.
6. The system as recited in claim 1, wherein the convolutional filter data comprises a plurality of convolutional filters, wherein each convolutional filter of the plurality of convolutional filters has three rows and three columns.
7. The system as recited in claim 1, wherein the classification of the first dataset is generated during execution of a machine learning engine application.
8. A method comprising: storing, by a memory, a first buffer and a second buffer in a linear format, wherein the first buffer stores convolutional filter data and the second buffer stores image data; converting, by a processor, the convolutional filter data in the first buffer from the linear format to a tiling format and store in a third buffer; converting, by a processor, the image data in the second buffer from the linear format to the tiling format and store in a fourth buffer; loading, by a plurality of compute units, data elements of the third buffer and the fourth buffer from the memory to a cache; performing, by a plurality of compute units, a convolutional filter operation on the data elements of the third buffer and the fourth buffer to generate a result in the tiling format; and generating a classification of a first dataset based on the result from the convolutional filter operation.
9. The method as recited in claim 8, wherein the cache comprises a plurality of channels, and wherein the method further comprising loading, by the plurality of compute units, convolutional filter data from the third buffer on the plurality of channels in parallel in a single clock cycle.
10. The method as recited in claim 8, wherein the cache comprises a plurality of channels, and wherein the method further comprising loading, by the plurality of compute units, image data from the fourth buffer on the plurality of channels in parallel in a single clock cycle.
11. The method as recited in claim 8, wherein converting the first buffer from the linear format to the third buffer in the tiling format comprises: reading values from sequential locations of the first buffer in the memory; and stepping through the third buffer with a stride equal to a sum of a first number of input channels and a second number of convolutional filters while writing the values to the third buffer.
12. The method as recited in claim 8, wherein converting the second buffer from the linear format to the fourth buffer in the tiling format comprises: reading values from sequential locations of the second buffer in the memory; and stepping through the fourth buffer with a stride equal to a number of pixel channels while writing the values to the fourth buffer.
13. The method as recited in claim 8, wherein the convolutional filter data comprises a plurality of convolutional filters, wherein each convolutional filter of the plurality of convolutional filters has three rows and three columns.
14. The method as recited in claim 8, further comprising generating the classification of the first dataset during execution of a machine learning engine application.
15. An apparatus comprising: a memory storing a first buffer and a second buffer in a linear format, wherein the first buffer stores convolutional filter data and the second buffer stores image data; and a processor configured to: convert the convolutional filter data in the first buffer from the linear format to a tiling format and store in a third buffer; and convert the image data in the second buffer from the linear format to the tiling format and store in a fourth buffer; and generate a classification of a first dataset based on a result from a convolutional filter operation performed on data elements stored in the tiling format in the third buffer and the fourth buffer.
16. The apparatus as recited in claim 15, further comprising a cache, wherein the cache comprises a plurality of channels, and wherein the apparatus is further configured to load convolutional filter data from the third buffer on the plurality of channels in parallel in a single clock cycle.
17. The apparatus as recited in claim 15, further comprising a cache, wherein the cache comprises a plurality of channels, and wherein the apparatus is further configured to load image data from the fourth buffer on the plurality of channels in parallel in a single clock cycle.
18. The apparatus as recited in claim 15, wherein converting the first buffer from the linear format to the third buffer in the tiling format comprises: reading values from sequential locations of the first buffer in the memory; and stepping through the third buffer with a stride equal to a sum of a first number of input channels and a second number of convolutional filters while writing the values to the third buffer.
19. The apparatus as recited in claim 15, wherein converting the second buffer from the linear format to the fourth buffer in the tiling format comprises: reading values from sequential locations of the second buffer in the memory; and stepping through the fourth buffer with a stride equal to a number of pixel channels while writing the values to the fourth buffer.
20. The apparatus as recited in claim 15, wherein the classification of the first dataset is generated during execution of a machine learning engine application.
</claims>
</document>
