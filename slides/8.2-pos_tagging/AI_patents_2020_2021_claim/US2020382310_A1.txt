<document>

<filing_date>
2019-05-29
</filing_date>

<publication_date>
2020-12-03
</publication_date>

<priority_date>
2019-05-29
</priority_date>

<ipc_classes>
G06N20/00,H04L9/32
</ipc_classes>

<assignee>
IBM (INTERNATIONAL BUSINESS MACHINES CORPORATION)
</assignee>

<inventors>
JAYACHANDRAN, PRAVEEN
</inventors>

<docdb_family_id>
73549673
</docdb_family_id>

<title>
REDUCED-STEP BLOCKCHAIN VERIFICATION OF MEDIA FILE
</title>

<abstract>
An example operation may include one or more of storing a full-step hash of a data file and a reduced-step hash of the data file within a data block of a hash-linked chain of blocks of a blockchain, receiving a request from a client application to verify the data file, determining whether to provide the full-step hash of the data file or the reduced-step hash of the data file based on the request, and in response to determining to provide the reduced-hash, transmitting the reduced-step hash of the data file to the client application.
</abstract>

<claims>
1. A computing system comprising: a storage configured to store a full-step hash of a data file and a reduced-step hash of the data file within a data block of a hash-linked chain of blocks of a blockchain; a network interface configured to receive a request from a client application to verify the data file; and a processor configured to determine whether to provide the full-step hash of the data file or the reduced-step hash of the data file based on the request, and, in response to a determination to provide the reduced-step hash, control the network interface to transmit the reduced-step hash of the data file to the client application.
2. The computing system of claim 1, wherein the data file comprises one or more of an audio file, a video file, a document, an image, and a multi-media file.
3. The computing system of claim 1, wherein the processor is further configured to store a copy of the data file within an off-chain storage, and store a reduced-hash of the data file and metadata which identifies a location of the off-chain storage within the data block of the hash-linked chain of blocks.
4. The computing system of claim 1, wherein the full-step hash of the data file is generated by repeated performance of a function on the data file a first predetermined number of times, and the reduced-step hash of the data file is generated by repeated performance of the function on the data file a second predetermined number of times that is less than the first predetermined number of times.
5. The computing system of claim 1, wherein the processor determines to provide the reduced-step hash of the data file based on one or more of a predetermined policy of the blockchain and a notification element within the received request.
6. The computing system of claim 1, wherein the full-step hash of the data file and the reduced-step hash of the data file are received by the network interface from a different client application than the client application that submitted the request.
7. A method comprising: storing a full-step hash of a data file and a reduced-step hash of the data file within a data block of a hash-linked chain of blocks of a blockchain; receiving a request from a client application to verify the data file; determining whether to provide the full-step hash of the data file or the reduced-step hash of the data file based on the request; and in response to determining to provide the reduced-hash, transmitting the reduced-step hash of the data file to the client application.
8. The method of claim 7, wherein the data file comprises one or more of an audio file, a video file, a document, an image, and a multi-media file.
9. The method of claim 7, further comprising storing a copy of the data file within an off-chain storage, and storing a reduced-hash of the data file and metadata which identifies a location of the off-chain storage within the data block of the hash-linked chain of blocks.
10. The method of claim 7, wherein the full-step hash of the data file is generated by repeated performance of a function on the data file a first predetermined number of times, and the reduced-step hash of the data file is generated by repeated performance of the function on the data file a second predetermined number of times that is less than the first predetermined number of times.
11. The method of claim 7, wherein the determining to provide the reduced-step hash of the data file is based on one or more of a predetermined policy of the blockchain and a notification element within the received request.
12. The method of claim 7, wherein the full-step hash of the data file and the reduced-step hash of the data file are received from a different client application than the client application that submitted the request.
13. A non-transitory computer readable medium comprising instructions, that when read by a processor, cause the processor to perform a method comprising: storing a full-step hash of a data file and a reduced-step hash of the data file within a data block of a hash-linked chain of blocks of a blockchain; receiving a request from a client application to verify the data file; determining whether to provide the full-step hash of the data file or the reduced-step hash of the data file based on the request; and in response to determining to provide the reduced-step hash, transmitting the reduced-hash of the data file to the client application.
14. A computing system comprising: a network interface configured to receive a hashed data file from a blockchain peer node, where data of the hashed data file is previously stored within a hash-linked chain of blocks on a blockchain; and a processor configured to detect whether the hashed data file has been hashed via a full-step hash or a reduced-step hash, and in response to a detection that that the hashed data file is hashed via the reduced-step hash, determine whether the hashed data file has been tampered with through an approximate hash verification of the hashed data file.
15. The computing system of claim 14, wherein the hashed data file comprises a hash of one or more of an audio file, a video file, a document, an image, and a multi-media file.
16. The computing system of claim 14, wherein the full-step hash comprises repeated performance of a function on the data file a first predetermined number of times, and the reduced-step hash comprises repeated performance of the function on the data file a second predetermined number of times that is less than the first predetermined number of times.
17. The computing system of claim 14, wherein a length of a data value created by the reduced-step hash applied to the data file is equal to a length of a data value created by the full-step hash applied to the data file.
18. The computing system of claim 14, wherein the processor is configured to generate a reduced-step hash of a local copy of the data file and verify the retrieved hashed data file based on the reduced-step hash of the local copy of the data file.
19. The computing system of claim 14, wherein the data file comprises a media file that is stored off-chain while a hash result of the hashed data file is stored within a data block among the hash-linked chain of blocks.
20. A method comprising: receiving a hashed data file from a blockchain peer node, where data of the hashed data file is previously stored within a hash-linked chain of blocks on a blockchain; detecting whether the hashed data file has been hashed using a full-step hash or a reduced-step hash; and in response to a detecting that the hashed data file is hashed using the reduced-step hash, determining whether the hashed data file has been tampered with through an approximate hash verification of the hashed data file.
21. The method of claim 20, wherein the hashed data file comprises a hash of one or more of an audio file, a video file, a document, an image, and a multi-media file.
22. The method of claim 20, wherein the full-step hash comprises repeated performance of a function on the data file a first predetermined number of times, and the reduced-step hash comprises repeated performance of the function on the data file a second predetermined number of times that is less than the first predetermined number of times.
23. The method of claim 20, wherein a length of a data value created by the reduced-step hash applied to the data file is equal to a length of a data value created by the full-step hash applied to the data file.
24. The method of claim 20, wherein the determining comprises generating a reduced-step hash of a local copy of the data file and verifying the retrieved hashed data file based on the reduced-step hash of the local copy of the data file.
25. The method of claim 20, wherein the data file comprises a media file that is stored off-chain while a hash result of the hashed data file is stored within a data block among the hash-linked chain of blocks.
</claims>
</document>
