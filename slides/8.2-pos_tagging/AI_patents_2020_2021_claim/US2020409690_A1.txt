<document>

<filing_date>
2020-07-24
</filing_date>

<publication_date>
2020-12-31
</publication_date>

<priority_date>
2019-06-27
</priority_date>

<ipc_classes>
G06F21/57,G06F8/654,G06F8/71,G16Y30/00,H04L29/08,H04L9/06,H04L9/32
</ipc_classes>

<assignee>
Phosphorus Cybersecurity Inc.
</assignee>

<inventors>
ADY, Earle W.
ALTMAN, Trent
ROULAND, Christopher J.
</inventors>

<docdb_family_id>
74043148
</docdb_family_id>

<title>
DEEP IDENTIFICATION OF IOT DEVICES
</title>

<abstract>
A process for management of Internet-of-Things (IoT) devices includes a management system for identifying, interrogating, and updating devices connected to one or more networks. The management system can include a data store for storing various data related to the devices and the various processes of the management system. The management system can include a controller for executing processes such as interrogation processes, firmware change processes, credential change processes, and other processes. The controller can determine versions of firmware and other configuration properties of a device and generate various profiles for updating the firmware and other configuration properties. The controller can determine upgrade paths for updating the firmware and other configuration properties from a first version to a second version, the upgrade paths including one or more intermediary versions for facilitating the upgrade path. The management system can update devices individually, on a device family basis, or on a system-wide basis.
</abstract>

<claims>
1. A system comprising, a data store; and at least one computing device in communication with the data store, the at least one computing device being configured to at least: receive a plurality of network addresses corresponding to a plurality of internet of things (IoT) devices for a particular network; identify a plurality of IoT device families individually associated with at least one of the plurality of IoT devices; determine a plurality of interrogation profiles individually associated with each of the plurality of IoT device families; and interrogate the plurality of IoT devices over the network according to a corresponding interrogation profile of the plurality of interrogation profiles to determine respective device data for each of the plurality of IoT devices.
2. The system of claim 1, wherein interrogating the plurality of IoT devices comprises determining a respective list of open network ports for each of the plurality of IoT devices.
3. The system of claim 1, wherein interrogating the plurality of IoT devices comprises determining available configuration properties for each of the plurality of IoT device families and querying IoT devices associated with each of the plurality of IoT device families to obtain a current value for each of the available configuration properties.
4. The system of claim 1, wherein interrogating the plurality of IoT devices over the network comprises interrogating at least one IoT device of a first IoT device family using a first application programming interface (API) and interrogating at least one second IoT device of a second IoT device family using a second API, where the first API differs from the second API.
5. The system of claim 1, wherein the at least one computing device is further configured to: determine a plurality of default credentials associated with the plurality of device families; perform an authentication with each of the plurality of IoT devices using a respective one of the plurality of default credentials; determine a plurality of second interrogation profiles individually associated with each of the plurality of device families; and interrogate the plurality of IoT devices over the network based on a respective one of the plurality of second interrogation profiles and the authentication to determine respective authenticated device data for each of the plurality of IoT devices.
6. The system of claim 1, wherein the at least one computing device is further configured to generate a respective device profile for each of the plurality of IoT devices; and store the respective device profile for each of the plurality of IoT devices in the data store.
7. The system of claim 1, wherein the respective device data for each of the plurality of IoT devices comprises a plurality of configuration options.
8. The system of claim 1, wherein the plurality of IoT devices comprise at least one of a printer, a camera, a speaker, a thermostat, a smoke detector, a medical sensor, a microphone, a vehicle, a shopping cart, a lock, an appliance, or a robotic device.
9. A method comprising, receiving, via at least one computing device, a plurality of network addresses corresponding to a plurality of internet of things (IoT) devices for a particular network; identifying, via the at least one computing device, a plurality of IoT device families individually associated with at least one of the plurality of IoT devices; determining, via the at least one computing device, a plurality of interrogation profiles individually associated with each of the plurality of device families; and interrogating, via the at least one computing device, the plurality of IoT devices over the network according to a corresponding interrogation profile of the plurality of interrogation profiles to determine respective device data for each of the plurality of IoT devices.
10. The method of claim 9, wherein interrogating the plurality of IoT devices comprises determining available configuration properties for each of the plurality of IoT device families and querying IoT devices associated with each of the plurality of IoT device families to obtain a current value for each of the available configuration properties.
11. The method of claim 9, wherein interrogating the plurality of IoT devices over the network comprises interrogating at least one IoT device of a first IoT device family using a first application programming interface (API) and interrogating at least one second IoT device of a second IoT device family using a second API, where the first API differs from the second API.
12. The method of claim 9, further comprising: determining, via the at least one computing device, a plurality of default credentials associated with the plurality of device families; performing, via the at least one computing device, an authentication with each of the plurality of IoT devices using a respective one of the plurality of default credentials; determining, via the at least one computing device, a plurality of second interrogation profiles individually associated with each of the plurality of device families; and interrogating, via the at least one computing device, the plurality of IoT devices over the network based on a respective one of the plurality of second interrogation profiles and the authentication to determine respective authenticated device data for each of the plurality of IoT devices.
13. The method of claim 9, further comprising: generating, via the at least one computing device, a respective device profile for each of the plurality of IoT devices; and storing, via the at least one computing device, the respective device profile for each of the plurality of IoT devices in a data store.
14. The method of claim 9, wherein the respective device data for each of the plurality of IoT devices comprises a plurality of configuration options.
15. A non-transitory computer-readable medium embodying a program that, when executed by at least one computing device, causes the at least one computing device to at least: receive a plurality of network addresses corresponding to a plurality of internet of things (IoT) devices for a particular network; identify a plurality of IoT device families individually associated with at least one of the plurality of IoT devices; determine a plurality of interrogation profiles individually associated with each of the plurality of device families; and interrogate the plurality of IoT devices over the network according to a corresponding interrogation profile of the plurality of interrogation profiles to determine respective device data for each of the plurality of IoT devices.
16. The non-transitory computer-readable medium of claim 15, wherein interrogating the plurality of IoT devices comprises determining a respective list of open network ports for each of the plurality of IoT devices.
17. The non-transitory computer-readable medium of claim 15, wherein interrogating the plurality of IoT devices comprises determining available configuration properties for each of the plurality of IoT device families and querying IoT devices associated with each of the plurality of IoT device families to obtain a current value for each of the available configuration properties.
18. The non-transitory computer-readable medium of claim 15, wherein interrogating the plurality of IoT devices over the network comprises interrogating at least one IoT device of a first IoT device family using a first application programming interface (API) and interrogating at least one second IoT device of a second IoT device family using a second API, where the first API differs from the second API.
19. The non-transitory computer-readable medium of claim 15, wherein program further causes the at least one computing device to: determine a plurality of default credentials associated with the plurality of device families; perform an authentication with each of the plurality of IoT devices using a respective one of the plurality of default credentials; determine a plurality of second interrogation profiles individually associated with each of the plurality of device families; and interrogate the plurality of IoT devices over the network based on a respective one of the plurality of second interrogation profiles and the authentication to determine respective authenticated device data for each of the plurality of IoT devices.
20. The non-transitory computer-readable medium of claim 15, wherein the program further causes the at least one computing device to generate a respective device profile for each of the plurality of IoT devices; and store the respective device profile for each of the plurality of IoT devices in a data store.
</claims>
</document>
